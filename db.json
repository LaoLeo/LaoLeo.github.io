{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32.ico","path":"images/favicon-32x32.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume/index.html","path":"resume/index.html","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css","path":"resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css.map","path":"resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/js/app.6988a4e594558078f560.js","path":"resume/static/js/app.6988a4e594558078f560.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/js/app.6988a4e594558078f560.js.map","path":"resume/static/js/app.6988a4e594558078f560.js.map","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/js/manifest.027b4dbe286fae6ac3f6.js","path":"resume/static/js/manifest.027b4dbe286fae6ac3f6.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/js/manifest.027b4dbe286fae6ac3f6.js.map","path":"resume/static/js/manifest.027b4dbe286fae6ac3f6.js.map","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/js/vendor.1cc61fe7e59cf8353384.js","path":"resume/static/js/vendor.1cc61fe7e59cf8353384.js","modified":0,"renderable":1},{"_id":"themes/next/source/resume/static/js/vendor.1cc61fe7e59cf8353384.js.map","path":"resume/static/js/vendor.1cc61fe7e59cf8353384.js.map","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/archives/index.md","hash":"7dbc0d7033a03601c3d50b886e1a35d19cfa89cd","modified":1670340638871},{"_id":"source/_posts/01-搭建mock层.md","hash":"790892afd0ff8ecebb339ceb4ec2e432bf700e6c","modified":1670340637602},{"_id":"source/_posts/02-代码规范-整理凌乱代码的有效姿势.md","hash":"533493d611801e5a1ca4866b886ece82f859b35e","modified":1670340637604},{"_id":"source/_posts/04-不得不懂的工作流优化技能.md","hash":"d8e0b0dddf40b04f9ac192b0184afee6e568811e","modified":1670340637611},{"_id":"source/_posts/03-使用console输出网站logo彩蛋.md","hash":"d76d2cedd283af8ed302320fe5a21829811fa5b7","modified":1670340637608},{"_id":"source/_posts/CSS3实现3D轮播图.md","hash":"b172926a24b6c09ea56b296d98e432ed6ca3e665","modified":1670340637617},{"_id":"source/_posts/05-散乱知识汇集.md","hash":"2d3e6acfa3bd49cd9df89f301243cd44b3198e7a","modified":1670340637614},{"_id":"source/_posts/CSS3饼状loading效果.md","hash":"c4424a1f646458600c9908fecd2789c4521d2f08","modified":1670340637619},{"_id":"source/_posts/JS之cookie.md","hash":"c05b934ae2a8a4b221af33b4a49b3d7c37cf0799","modified":1670340637623},{"_id":"source/_posts/JS之事件详情（1）.md","hash":"f4335b5878d46fecbcc3a0c3d6ff69067d83086c","modified":1670340637626},{"_id":"source/_posts/JS之事件详解（2）.md","hash":"3c2db947bca69f63653fae8ae6ceab73012ea6d1","modified":1670340637628},{"_id":"source/_posts/JS之默认行为.md","hash":"dad5f2288947bb5e1b9c4e7c65358a0a3cc9c4ed","modified":1670340637631},{"_id":"source/_posts/MVVM框架双向数据绑定的实现原理.md","hash":"637e6be0f4feb8894a306bdf6e4e12834102c49d","modified":1670340637634},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）.md","hash":"3869dd2e7fd2225175662d0ac1d87a17739166c5","modified":1671285143608},{"_id":"source/_posts/RenderTexture特效系统实现原理.md","hash":"df5b26abcc6e571f7012748f74dae5091a10d0f8","modified":1670420053149},{"_id":"source/_posts/SQLite替换lua配置表方案实现.md","hash":"a6bff732c7b43671230166a26d5324959d1b51a1","modified":1671285848684},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇.md","hash":"6943d53b2d97c07a96aa9c3d731ba24716afa137","modified":1670420227617},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2.md","hash":"fca49fb5892e64d31417069a2718af4b18951f73","modified":1670420222710},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化.md","hash":"7d8545bbefb0941fd28f6d87b218a2c3c5c0b0c4","modified":1670420121071},{"_id":"source/_posts/UIParticle组件的使用问题.md","hash":"fe88cb8f473b17fc743f65b931eb9918f73db76d","modified":1671285411561},{"_id":"source/_posts/UIParticle@4.0.0研究.md","hash":"587e0415a00ae446ef561917c5dcdd0d62ba5445","modified":1671285378010},{"_id":"source/_posts/UnityAddressable.md","hash":"e360240a6e8f6864781726f93ba3eac8dad91983","modified":1670340638413},{"_id":"source/_posts/js控制运动框架animation.md","hash":"35f30f7cec0304b628fde3e9f1ead7efd037f7d6","modified":1670340638466},{"_id":"source/_posts/github使用心得.md","hash":"6ea8349e127e82f91e28e57d1bd588f399d99c94","modified":1670340638462},{"_id":"source/_posts/js系列之BOM基础.md","hash":"68205bb800d8e4a591810617a2fd1bf584889d73","modified":1670340638469},{"_id":"source/_posts/js系列之DOM基础.md","hash":"8d8ddcc4b8f1aadc2a825ee767265f82efd44dd8","modified":1670340638472},{"_id":"source/_posts/mongoDB常用知识整理.md","hash":"c9b101898fd4754bf677eb66bca299b4ecd68e5d","modified":1670340638476},{"_id":"source/_posts/js面向对象编程之继承.md","hash":"e428e5305d6732a919fe0e130abe5958e1f0dc36","modified":1670340638474},{"_id":"source/_posts/node开发公众号踩过的坑.md","hash":"9544a77101f8329c2fa941d8e096e0a4794f469b","modified":1670340638478},{"_id":"source/_posts/node开发微信公众号.md","hash":"66b3f86fba11d966a9df047b9995d4cbed2d173b","modified":1670340638480},{"_id":"source/_posts/source map小知识.md","hash":"a98acee18fe186b618312efd87d3088ac4f459c4","modified":1670340638482},{"_id":"source/_posts/webpack引入eslint.md","hash":"33ae6dba936a0601f040ffedbc72e7c3078b79b6","modified":1670340638486},{"_id":"source/_posts/web离线应用.md","hash":"baa3bc6420759eb713e82caad910017d0673aef2","modified":1670340638489},{"_id":"source/_posts/《代码整洁之道》读书笔记.md","hash":"00eeb073da8a9e3a3c645c6fa2f2dd92d9b5cdeb","modified":1670340638492},{"_id":"source/_posts/【VueSSR系列一】构建流程源码解读.md","hash":"4d4dc96fa61982e2e8b24168397e6c26fc18b71a","modified":1670340638495},{"_id":"source/_posts/【VueSSR系列二】clientManifest与bundle的处理流程解读.md","hash":"22937945cb6d8fdf5f101906b96d21597673991b","modified":1670340638498},{"_id":"source/_posts/使用javascript实现常见的排序算法.md","hash":"1f4a91d40b3547ac548541f37e3d5562ab5a8e36","modified":1670340638502},{"_id":"source/_posts/关于高效找工作的几条建议.md","hash":"1ca0b305d11fbd38ae277b1e75cfe6f673de8efe","modified":1670340638506},{"_id":"source/_posts/前端单元测试.md","hash":"5d4701e3a22f028fe20d75c945bb1f2817ae375a","modified":1670340638509},{"_id":"source/_posts/前端编码规范.md","hash":"4b137fcb95c400527e39d88b81db86bbcfbcaf35","modified":1670340638512},{"_id":"source/_posts/场景控制流程解读.md","hash":"9bb1118ea88aff46c4f40c765c0f3d5dfeac0f5d","modified":1670340638518},{"_id":"source/_posts/基于Express4.0开发web.md","hash":"2440aab85c8e0119ec744123997c03ef401c2f1b","modified":1670340638576},{"_id":"source/_posts/射箭小游戏.md","hash":"52bb72275c7f806e000abb4f0d3c17ae18d492ec","modified":1670420147417},{"_id":"source/_posts/新手引导系统.md","hash":"4c926fa07c67478ddf8f247c108f6c11af5e96d4","modified":1670420139593},{"_id":"source/_posts/有趣的鼠标悬浮效果.md","hash":"97c3bc84fb9f5a2fcd9c6bd64631677dff4c30cb","modified":1670340638637},{"_id":"source/_posts/海外版本diff工具.md","hash":"c7aaa1d53a3a65f67370aaa698cb20ba55c420d0","modified":1670420129622},{"_id":"source/_posts/游戏中特效加载原理和优化方法.md","hash":"ffd9da1548cdf9cf56d9c031b75709a653149cba","modified":1670420067932},{"_id":"source/_posts/游戏热更新.md","hash":"5aae224f310c66cc575df35ee63a70d75390dab1","modified":1670420155741},{"_id":"source/_posts/网络层.md","hash":"79b29f19d9a4b911d4dfa50fc659217479cec7d3","modified":1671285209951},{"_id":"source/_posts/聊聊git的分支和rebase命令.md","hash":"af96ac4d7764159ed79101466653541d95d76dcd","modified":1670340638833},{"_id":"source/_posts/自定义的checkbox,radio样式.md","hash":"08fccd81fdace4948e5942d88aba73f941d03c9a","modified":1670340638843},{"_id":"source/_posts/腾讯外包面试经历总结.md","hash":"4bc976339efff2233e2c9629a224c477c241dfd4","modified":1670340638838},{"_id":"source/_posts/资源打包策略.md","hash":"fd5acf3cbf8eb7c607a4aba14a44cfb33e65433b","modified":1670420346616},{"_id":"source/_posts/踏平windows下安装fabric遇到的坑s.md","hash":"8324f3481972a615521330e5a8c2f24572914d30","modified":1670340638860},{"_id":"source/_posts/音乐播放器WebApp.md","hash":"929b9a09eade4932adc40b87eccda15f3c25dd1d","modified":1670340638863},{"_id":"source/_posts/调用定时器的正确姿势.md","hash":"867b11a2ded323baef4fc0b6d4292ccd6fe4410e","modified":1670340638847},{"_id":"source/tags/index.md","hash":"b5ea2db2d71c05cf5b878d7c0d61cde600e359aa","modified":1670340638887},{"_id":"source/categories/index.md","hash":"dca246dc74a88bb9c889298228395f8fa417f60a","modified":1670340638877},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_-AleO20bJE.png","hash":"8e543e53e4c499d32825226388909982febb74d3","modified":1670340637654},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_0FbXJEVpBZ.png","hash":"afbaf0cc2411294813a599c1df55d0333d6d9097","modified":1670340637663},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_2vkN8DyEOU.png","hash":"c7ccb05b202e460d1bd496f0dafa437e0b250fb6","modified":1670340637678},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_Lq8cKHXJpH.png","hash":"271af93eced8422c0458e95498dd511a6c1652c1","modified":1670340637708},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_ckbsiwRhQu.png","hash":"33d7691016798e8569a31a223ae9a9a58f534f73","modified":1670340637738},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_dlKUVIURur.png","hash":"a44e06ceecc3ea8f4cbd184da80bccd41d1a9a96","modified":1670340637755},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_oZQEU2PqwI.png","hash":"286bace68c382a381f5874796da815e12888c9ce","modified":1670340637762},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_tWZrP03QQ1.png","hash":"9f07f91dd7161ca42fd90f0072b61f9b2985a995","modified":1670340637770},{"_id":"source/_posts/RenderTexture特效系统实现原理/image.png","hash":"efbf88645c1f0654780a7b825b221dc5fb30d88a","modified":1670340637810},{"_id":"source/_posts/RenderTexture特效系统实现原理/image_1.png","hash":"13c1f0a0506f859c8d8d068305755dfd09653752","modified":1670340637818},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_DulaDCWifu.png","hash":"f65adfbc4e9da1d1e924104f05c41fff07e1a4bf","modified":1670340637838},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_S_dTSQElWB.png","hash":"7e8a7caabf74f1ea607e3765d8e5391a08ec5b77","modified":1670340637890},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_gp3VMdO0Er.png","hash":"5da7f9d0990829a8a44ca849fde6f12851aa44b4","modified":1670340637903},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_iqXG1maoM7.png","hash":"e3bf5f18b575591d21f7aeb9d74ba2fbda7ebc64","modified":1670340637914},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/EmojiSpriteAsset_m_7Wcnb4Es.cs","hash":"8a935d9b066b537d72c4b3b481fa721d1a97270a","modified":1670340637937},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/UIGraphicTextSpritesMgr_VeAnnPQruV.cs","hash":"f5ac61bb6712454b2d22ba8b3af4741d0fcc2971","modified":1670340637948},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/UIGraphicTextSprites_SJ0ts213El.cs","hash":"2e919bfae4afc3b82983655969fc2e71f98aac44","modified":1670340637956},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/UIGraphicText__lKh67xRzm.cs","hash":"21148b8df12dd58ae415bd55dc29cf40de892720","modified":1670340637965},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_0ifY5wkaqd.png","hash":"525c2df4475efad51b59ce0a7565c5ca5d3fa8f8","modified":1670340637976},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_7M009fCb6d.png","hash":"f4953c188c5d6fff2a3f9e9a2c25b495445ff7d9","modified":1670340637986},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_TwT2GLPl7b.png","hash":"66e4a99a201634a77c5f059579f7602f1dee714f","modified":1670340638007},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image__hVtRDjd_h.png","hash":"199bd197041208d5180c677c0b742cb857b42f0a","modified":1670340638017},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_hn-XI1mBjn.png","hash":"0ab90bd5ce7e5e971cd3332a3db4527f08a61ae1","modified":1670340638026},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_n9LveM62tZ.png","hash":"288061c7c70b39a6f4e85ca71060bccc40da30d4","modified":1670340638036},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/1b068870d1847acdd585381f49f9127c.tmp","hash":"2dc1b3ec21cecfb9c946f07d762a2714a61ca19f","modified":1670340638100},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/35ae882a0e5fee85b1b7a102ba20976f.tmp","hash":"a0af10ecbf6d709068d0f440ff3060dc4d460ee5","modified":1670340638120},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/620aa9915773654e87c2ed8201b32736.png","hash":"047fbeb660987c66220861a6947a5f146561ec7c","modified":1670340638139},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/78a230605169741abf7b42ea9cf32942.tmp","hash":"a2312755aac893a2d4a4bcff1e135eddfb464f14","modified":1670340638145},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/7975d77768f66dd5b45d9ef03f066e45.tmp","hash":"d48860db66942166c389b2a88ae73acded5dad29","modified":1670340638148},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/83146e7e3d81e80b54edf6131d3203e2.tmp","hash":"b4acfba4eecf2c901c14f831f0ab93c62dc80a17","modified":1670340638150},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/b1ea6bccc642c35685b0dd0f5671b303.tmp","hash":"8ceff054343c0fb21f51e457b466f06bae715449","modified":1670340638161},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/c9e62ff06615ff8ab9ab1b914721f146.tmp","hash":"0239a9975ad9ecf920db202ed15ec9f909fbc0fd","modified":1670340638164},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/1b068870d1847acdd585381f49f9127c.tmp","hash":"2dc1b3ec21cecfb9c946f07d762a2714a61ca19f","modified":1670340638196},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/35ae882a0e5fee85b1b7a102ba20976f.tmp","hash":"a0af10ecbf6d709068d0f440ff3060dc4d460ee5","modified":1670340638205},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/620aa9915773654e87c2ed8201b32736.png","hash":"047fbeb660987c66220861a6947a5f146561ec7c","modified":1670340638224},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/78a230605169741abf7b42ea9cf32942.tmp","hash":"a2312755aac893a2d4a4bcff1e135eddfb464f14","modified":1670340638229},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/7975d77768f66dd5b45d9ef03f066e45.tmp","hash":"d48860db66942166c389b2a88ae73acded5dad29","modified":1670340638232},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/83146e7e3d81e80b54edf6131d3203e2.tmp","hash":"b4acfba4eecf2c901c14f831f0ab93c62dc80a17","modified":1670340638235},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/b1ea6bccc642c35685b0dd0f5671b303.tmp","hash":"8ceff054343c0fb21f51e457b466f06bae715449","modified":1670340638244},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/c9e62ff06615ff8ab9ab1b914721f146.tmp","hash":"0239a9975ad9ecf920db202ed15ec9f909fbc0fd","modified":1670340638247},{"_id":"source/_posts/UnityAddressable/image.png","hash":"b593e54494bba768dd99a31e3423951bf38a2989","modified":1670340638421},{"_id":"source/_posts/UnityAddressable/image_1.png","hash":"68dcba281d2c9360575e4bf9bdebdd9673531ad0","modified":1670340638428},{"_id":"source/_posts/UnityAddressable/image_3.png","hash":"76b53c2cab1ca3371006b4f51430d58f5b345b9c","modified":1670340638443},{"_id":"source/_posts/UnityAddressable/image_4.png","hash":"4dcfd323438077dbe6e5a3bbc786fc025cd59992","modified":1670340638449},{"_id":"source/_posts/UIParticle组件的使用问题/image_67GP1vl5zt.png","hash":"57808c34b49817e998217ad20eaec4ca45fb0756","modified":1670340638314},{"_id":"source/_posts/UIParticle组件的使用问题/image_NcuDmPJzjI.png","hash":"f991392366b69c6a531e579de9e75740e33afcfa","modified":1670340638320},{"_id":"source/_posts/UIParticle组件的使用问题/image_db_KmLvzYS.png","hash":"64a29103b559dab0b90a18bfcc9e9592d20d8b07","modified":1670340638332},{"_id":"source/_posts/UIParticle组件的使用问题/image_ywMcu33ZPf.png","hash":"d532845571b1c8915e3b2dd304dec181218ecfe8","modified":1670340638338},{"_id":"source/_posts/场景控制流程解读/image_3NDenmx_Of.png","hash":"64bda00bca99a608c7dd9a6cce91adce8d87e6e4","modified":1670340638533},{"_id":"source/_posts/场景控制流程解读/image_YlLPrr-tq-.png","hash":"c2204a2149f92cce496e9a982954037c7e7d71b7","modified":1670340638566},{"_id":"source/_posts/场景控制流程解读/image_SqQ7dNS1Cb.png","hash":"e6d0294019ea34b7eff6fdaba71a75db8e4e3e8e","modified":1670340638551},{"_id":"source/_posts/场景控制流程解读/image_xvaTyll7c-.png","hash":"d2709394118ea32d769f958c45b8c90dec11db66","modified":1670340638573},{"_id":"source/_posts/射箭小游戏/image_9kEuPrkNrd.png","hash":"c8b8f6616c5b738b8fd054afd1c6263790bada76","modified":1670340638598},{"_id":"source/_posts/射箭小游戏/image_eBJv4Og4HY.png","hash":"02b42e758c84f894776d08adcbc3a4c714334d82","modified":1670340638614},{"_id":"source/_posts/射箭小游戏/image_fNhLsjLAng.png","hash":"e563147acd9032fe830bfdfe2e9f269d1efa1285","modified":1670340638620},{"_id":"source/_posts/射箭小游戏/image_jB99fdiEFy.png","hash":"3f375d7a5b87ffe138474a75e13052c872e692c7","modified":1670340638626},{"_id":"source/_posts/新手引导系统/image_BXoVzPQBan.png","hash":"7b893caad075a334d14ae652510ba48ea17426bb","modified":1670340638635},{"_id":"source/_posts/海外版本diff工具/LanguageDiffWindow_xSMzWdHsMs.cs","hash":"d53e705e11f186e3829f3e4c8bc06d9b960ed7e6","modified":1670340638661},{"_id":"source/_posts/海外版本diff工具/diff_7U8prTz5se.sh","hash":"6a19ddc346b80cc673112e20d7a9fe3fe7c5b2d3","modified":1670340638667},{"_id":"source/_posts/海外版本diff工具/image_lch2ake5uD.png","hash":"f949cfeced33a4e5570c80baa5f92547db892179","modified":1670340638673},{"_id":"source/_posts/海外版本diff工具/image_y5ou7bMrqO.png","hash":"c3a4899e28f67af6d41547b4328646eebc900e57","modified":1670340638678},{"_id":"source/_posts/游戏热更新/BreakpointTransferZip.cs","hash":"9836599859718baa2e38a95ced3ba30ad2878f80","modified":1670340638704},{"_id":"source/_posts/游戏热更新/image.png","hash":"4dc084daa28f331aac8d9eaf714d78c86b9886e7","modified":1670340638712},{"_id":"source/_posts/游戏热更新/DownloadThread.cs","hash":"0743e47abaf9352ede0fcfae1d7c5c7649bb593f","modified":1670340638708},{"_id":"source/_posts/游戏热更新/image_2.png","hash":"53f44e0a3deb206d153e4c399730bb13d90b1bff","modified":1670340638724},{"_id":"source/_posts/游戏热更新/image_3.png","hash":"6c1fe355b29a4af32482fb6b4c92856c5a41440b","modified":1670340638730},{"_id":"source/_posts/游戏热更新/image_4.png","hash":"ae2e58ac07bdcbb8601ef2bc679ec74405ae2ff3","modified":1670340638740},{"_id":"source/_posts/游戏热更新/image_6.png","hash":"9b47bc017fc9cf51664a590058d3e6f77d4e1f61","modified":1670340638757},{"_id":"source/_posts/网络层/image_FgCmH2uIWr.png","hash":"e9f2598948b4d37f385e0d9dcd3dd551ae712007","modified":1670340638803},{"_id":"source/_posts/网络层/image_skRP8CouhK.png","hash":"921f7b66a0c58a8f834010aa181c21e5a79ba0b3","modified":1670340638828},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_2gDEMoHZdN.png","hash":"a83a82cf4b3ab7d5ad1ff1d6fc80dfac409afb12","modified":1670340637670},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_4Tro4aIdsT.png","hash":"d0ff8eb1c0912b52653d10db2d6a980c3cf4f1cc","modified":1670340637688},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_CVmGras3MP.png","hash":"7504581b59903a2cdc8bafb3594e55bd2d78883b","modified":1670340637699},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_TKk-_imcnM.png","hash":"65a20322c21b0c237c2624989523d4347fe72d82","modified":1670340637728},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_S5b-ACEJZV.png","hash":"afad1776cfa394d2e1d2247f0ad20aad0b5bff26","modified":1670340637717},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_dd56kuGgSY.png","hash":"b21219fb2c0c2dd3b1052657dff7ffeb1690dc2b","modified":1670340637746},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_tl8asSvA18.png","hash":"62338c53d13f814667e51adb71497ac1c9f22d20","modified":1670340637779},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_SUK4XBL1kd.png","hash":"bb9f6679d1c2ae6a64e276ad5df9a3984cf4da21","modified":1670340637849},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_OTeaUItO0F.png","hash":"cfe14c8f82ba44814e95bd6add4b4e8f3bd41683","modified":1670340637996},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_rVuWhoO_3B.png","hash":"19719997c1f1c1d14d31c82a126e6b78418cd3d7","modified":1670340638043},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/03742e0b64e62e87941c5ff8441ee88a.tmp","hash":"a45ca69241c6a9c1b35a74a30d79b509649fbe61","modified":1670340638072},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/10e1096586b53ed9f944e9d5101c4241.tmp","hash":"ecf33aac36bb784da6fc238d6e3425dadd348bfe","modified":1670340638091},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/1ed8f3c55e63efc72047784eb2d715ec.tmp","hash":"ddd4a00492242745a2000ade9d499e9f95de75b5","modified":1670340638113},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/1b0894421887907ac78332cb31b81eca.tmp","hash":"6da64e3c49eea38e2e081f69c08448bb003a30b5","modified":1670340638107},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/3dbde81dd90a3504f493adc0aeb348f5.tmp","hash":"1f8da8729629523b51d386c16503f9954c26b1e4","modified":1670340638124},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/4c1118d6cb20ce80f3105b95502455c3.tmp","hash":"44efc052ff1e7887d03b006f489268311f81cfc2","modified":1670340638127},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/584310e308f30ee963734e6004db68f7.tmp","hash":"d7577c9a69e2c903eacb6d31a84b848ecf9bd1e3","modified":1670340638134},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/889d57042c9cc1a988458e23e9617d0d.tmp","hash":"998ac15994c0dc8af4c6c7689d73895ca353e6c4","modified":1670340638154},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/949ad5756a5f0697641e2267e54b6a2a.tmp","hash":"94aebe6c67d9ba374fdf7fbf8d8b7bbb44c3ec4c","modified":1670340638157},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","hash":"2fb1cc9ccb18a2cf43d2fdb0b1ba98ba38645a49","modified":1670340638167},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/ebee4d8b9fab274fef93b95923e20796.tmp","hash":"b731d92922e0415fd07202cb2d59377673a076a0","modified":1670340638177},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/03742e0b64e62e87941c5ff8441ee88a.tmp","hash":"a45ca69241c6a9c1b35a74a30d79b509649fbe61","modified":1670340638189},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/10e1096586b53ed9f944e9d5101c4241.tmp","hash":"ecf33aac36bb784da6fc238d6e3425dadd348bfe","modified":1670340638194},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/1b0894421887907ac78332cb31b81eca.tmp","hash":"6da64e3c49eea38e2e081f69c08448bb003a30b5","modified":1670340638200},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/1ed8f3c55e63efc72047784eb2d715ec.tmp","hash":"ddd4a00492242745a2000ade9d499e9f95de75b5","modified":1670340638202},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/3dbde81dd90a3504f493adc0aeb348f5.tmp","hash":"1f8da8729629523b51d386c16503f9954c26b1e4","modified":1670340638208},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/4c1118d6cb20ce80f3105b95502455c3.tmp","hash":"44efc052ff1e7887d03b006f489268311f81cfc2","modified":1670340638211},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/584310e308f30ee963734e6004db68f7.tmp","hash":"d7577c9a69e2c903eacb6d31a84b848ecf9bd1e3","modified":1670340638218},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/889d57042c9cc1a988458e23e9617d0d.tmp","hash":"998ac15994c0dc8af4c6c7689d73895ca353e6c4","modified":1670340638238},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/949ad5756a5f0697641e2267e54b6a2a.tmp","hash":"94aebe6c67d9ba374fdf7fbf8d8b7bbb44c3ec4c","modified":1670340638241},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","hash":"2fb1cc9ccb18a2cf43d2fdb0b1ba98ba38645a49","modified":1670340638250},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/ebee4d8b9fab274fef93b95923e20796.tmp","hash":"b731d92922e0415fd07202cb2d59377673a076a0","modified":1670340638259},{"_id":"source/_posts/UnityAddressable/image_2.png","hash":"d42cda1211dc426ff1ec506b82809b40cec2f20a","modified":1670340638435},{"_id":"source/_posts/UnityAddressable/image_5.png","hash":"22605b6e130132d8e11794c61ba8e17c4d8cc663","modified":1670340638459},{"_id":"source/_posts/UIParticle组件的使用问题/image_Uj6XZU2I6p.png","hash":"d95c42eea482c4d4a8c6337b06d0d2e462a6397c","modified":1670340638325},{"_id":"source/_posts/射箭小游戏/image_0xirtCNbHW.png","hash":"9d14ae127441c5a0dc526d163dabc71131bc5eef","modified":1670340638590},{"_id":"source/_posts/游戏热更新/image_1.png","hash":"12d4078e5bc1dac268c7a79bdd343de1e6270686","modified":1670340638718},{"_id":"source/_posts/游戏热更新/image_5.png","hash":"3603d32163205b13b4f180668d4f42fdbcd304d8","modified":1670340638748},{"_id":"source/_posts/游戏热更新/image_7.png","hash":"b952999c3c4928393c3e9e4dbca184de162365cb","modified":1670340638768},{"_id":"source/_posts/网络层/image_Dxda6OJqZV.png","hash":"b27e547ded75cfe5855461eab8d65e982176594f","modified":1670340638793},{"_id":"source/_posts/网络层/image_UuuQAgKiON.png","hash":"6af59f45e01c2f5d2ec3c82d9452f79490433be4","modified":1670340638816},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_yhRARumho4.png","hash":"7e11a9a27bd8eb5aec380d01130fadc37d098e36","modified":1670340638052},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/4e5d287689f65ab1fab2db8cc848f218.tmp","hash":"9b1243d32f8fd6f53ed1d1902dee6f5507b26b7b","modified":1670340638215},{"_id":"source/_posts/UIParticle组件的使用问题/anim5_GKfO5IVVAN.gif","hash":"f4672bc46a59f3e250250b9ac3477bc96029cf66","modified":1670340638302},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/4e5d287689f65ab1fab2db8cc848f218.tmp","hash":"9b1243d32f8fd6f53ed1d1902dee6f5507b26b7b","modified":1670340638131},{"_id":"source/_posts/UIParticle组件的使用问题/anim4_tx9hVKst4O.gif","hash":"3eadaa2a5aa1a89cea677023085b5689799895cd","modified":1670340638296},{"_id":"source/_posts/UIParticle组件的使用问题/anim6_MAvMAv1XJM.gif","hash":"46aa04b2ccde5a4e1a3b79f4b4e51213d38ba047","modified":1670340638308},{"_id":"themes/next/README.md","hash":"de109b73e09826f6bccceae60c618739a794f8f7","modified":499162500000},{"_id":"themes/next/_config.yml","hash":"745bad1ea4e984d67097e1f11533260b719fd166","modified":1671550587395},{"_id":"themes/next/_vendors.yml","hash":"052a445b2a3d6eeda84fc13878c1836d7bead288","modified":1671354138924},{"_id":"themes/next/package.json","hash":"c790201ba9b2e017b0216be4d72ff5531879e1aa","modified":1671264123439},{"_id":"themes/next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":499162500000},{"_id":"themes/next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":499162500000},{"_id":"themes/next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":499162500000},{"_id":"themes/next/languages/ar.yml","hash":"7a62243ec54196e3d1bea7364f05aded490bc234","modified":499162500000},{"_id":"themes/next/languages/de.yml","hash":"dc448f724c7d436233e9567711a09e0d56e60e3b","modified":499162500000},{"_id":"themes/next/languages/en.yml","hash":"48a76170d70ef7c1fac96720bc5064b43061708d","modified":499162500000},{"_id":"themes/next/languages/es.yml","hash":"c3506dfaa771e827ae6adb322477c6e835cd0f09","modified":499162500000},{"_id":"themes/next/languages/fa.yml","hash":"649823297167b902455c0aec8ddebb462df71c7d","modified":499162500000},{"_id":"themes/next/languages/id.yml","hash":"ac018805190bc4bdc06091f5a6444e612fc700b0","modified":499162500000},{"_id":"themes/next/languages/fr.yml","hash":"8ddfe98e7847ee8f1eaba9119f9fbdc42d7ec120","modified":499162500000},{"_id":"themes/next/languages/it.yml","hash":"82a93c32b3fcf6517441cdc73f75bc6173beb392","modified":499162500000},{"_id":"themes/next/languages/ja.yml","hash":"99f6f84f5cb6631b7ae0b5594af2ea2940c3558e","modified":499162500000},{"_id":"themes/next/languages/ko.yml","hash":"8342df2f4190ba4ee004b70d1d6ccd341033dbe7","modified":499162500000},{"_id":"themes/next/languages/nl.yml","hash":"0d3b56613197cb190900311507535db41daec7d4","modified":499162500000},{"_id":"themes/next/languages/pt-BR.yml","hash":"47daeaa23c4db073e77761c9a6f62d3932af06ec","modified":499162500000},{"_id":"themes/next/languages/pt.yml","hash":"e0e2675261e2e80f7ce7d19c945c08217b068d81","modified":499162500000},{"_id":"themes/next/languages/ru.yml","hash":"fdf5c623890db24cb56ab5ffe0c49db3542477c8","modified":499162500000},{"_id":"themes/next/languages/si.yml","hash":"0afecef3d81b880cc19769062968d8562a1cd93b","modified":499162500000},{"_id":"themes/next/languages/tr.yml","hash":"54de3d8d85e3c7b14b163c3d322411b7301a09b3","modified":499162500000},{"_id":"themes/next/languages/uk.yml","hash":"1c9a0b8d8160c77cc62064207d57f460f365cae9","modified":499162500000},{"_id":"themes/next/languages/vi.yml","hash":"1f9657b58e11db21f93eb895c90123b8f91751a7","modified":499162500000},{"_id":"themes/next/languages/zh-CN.yml","hash":"6f7c742316c96d5b71da50fddfb060ff7ec1ea99","modified":499162500000},{"_id":"themes/next/languages/zh-HK.yml","hash":"38b99be8cea1cfd79f36deca13be665dedfad9c5","modified":499162500000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8d6f8d90aedcc5c844da93e196bfde0c0161385b","modified":499162500000},{"_id":"themes/next/layout/_layout.njk","hash":"23a4f9b0b768b04e66e60079f107471163f2e567","modified":499162500000},{"_id":"themes/next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":499162500000},{"_id":"themes/next/layout/index.njk","hash":"37ec3d1bcd20b8ac1d18e0d68f990450890b46cd","modified":499162500000},{"_id":"themes/next/layout/category.njk","hash":"0a590e87af50e57b15fc37695c9a3bf4a97c3d92","modified":499162500000},{"_id":"themes/next/layout/page.njk","hash":"60bc943fc708c3b2a19fc4fe0a15af86529d1fcd","modified":499162500000},{"_id":"themes/next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":499162500000},{"_id":"themes/next/layout/tag.njk","hash":"6cd707f846bfd6becbcfb060c26958bb4015c31f","modified":499162500000},{"_id":"themes/next/docs/ru/README.md","hash":"63df0665005063108e1bc19df3cf8c4e46facb95","modified":499162500000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":499162500000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"8ee5ca39ac4a372a5c0f16e344bbe578af4aeae4","modified":499162500000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"9abd8473985f2bf1557b1aac31b436c92d5450a7","modified":499162500000},{"_id":"themes/next/layout/_macro/post.njk","hash":"b5dd3bf172cd242b93f5461b989e97a7efc0ac89","modified":499162500000},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":499162500000},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"cbf838ca59646f128c9111bb28921c1d04d8dcaf","modified":499162500000},{"_id":"themes/next/layout/_partials/comments.njk","hash":"334e8d8117a46c8c097788811322a62627952219","modified":499162500000},{"_id":"themes/next/layout/_partials/footer.njk","hash":"d16fdaf94d66efc0242b0c26ed539017e3b4f795","modified":499162500000},{"_id":"themes/next/layout/_partials/languages.njk","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":499162500000},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":499162500000},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"dfd91d64ebc06b5b139ee97424f4f93e66938e34","modified":499162500000},{"_id":"themes/next/layout/_scripts/index.njk","hash":"6f0433940680c0f9db37542ca36f76e4bb1c1d50","modified":499162500000},{"_id":"themes/next/layout/_scripts/noscript.njk","hash":"4f250d0bf80be06dd2c95c1d4c2ba2624b59cf2a","modified":499162500000},{"_id":"themes/next/layout/_scripts/pjax.njk","hash":"28a3bcb1ce50924a5a48b0f3756ac3a8736867f1","modified":499162500000},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"bada07da2a47ed6de6081796367b19dd9e906cfb","modified":499162500000},{"_id":"themes/next/layout/_third-party/index.njk","hash":"467b45a4912369bcba77908151e76a3f3ad0fed2","modified":499162500000},{"_id":"themes/next/layout/_third-party/nprogress.njk","hash":"271139c3896a6d294f46f767cb21b2e848050841","modified":499162500000},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"294b7f6a4fa566e369d8be0ce7b28f35b6c14563","modified":499162500000},{"_id":"themes/next/layout/_third-party/rating.njk","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":499162500000},{"_id":"themes/next/scripts/events/index.js","hash":"89091bc943cd8b8c63b8af3d26fb0a027048e9ba","modified":499162500000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":499162500000},{"_id":"themes/next/scripts/filters/locals.js","hash":"fa1e558f058f93455acdd553ab1be30b26f137e4","modified":499162500000},{"_id":"themes/next/scripts/filters/minify.js","hash":"be0574c64a38210e449c99d38a760452015060a3","modified":499162500000},{"_id":"themes/next/scripts/filters/post.js","hash":"bac5646993153f9f6a630c9f0052bb17fa760a9c","modified":499162500000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"682a8e16b5182c123c96b04222d967407e1fd6d6","modified":499162500000},{"_id":"themes/next/scripts/helpers/font.js","hash":"480e483fe12393f72c5a759b6ac281e000f23e21","modified":499162500000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"413c51fa3caa87fe95d1d8f95e6023f096515632","modified":499162500000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"577c510374cf9bcfa8d3a1027e42411a9324805e","modified":499162500000},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":499162500000},{"_id":"themes/next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":499162500000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":499162500000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":499162500000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"79102d9e9bccff6224e77a77c4d2d363094ae3df","modified":499162500000},{"_id":"themes/next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":499162500000},{"_id":"themes/next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":499162500000},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"9e2c58d1a4d1dd84fa86144e5b4576b2fd10a37f","modified":499162500000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"464effc08e757ce8e1bb094707d06ad829af9d62","modified":499162500000},{"_id":"themes/next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":499162500000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":499162500000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"2bf00d56b3b289a7dd27e9b5820430a2457a19f3","modified":499162500000},{"_id":"themes/next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":499162500000},{"_id":"themes/next/source/css/_colors.styl","hash":"b37f9847d2f95632e911df670b51921a7d748068","modified":499162500000},{"_id":"themes/next/source/css/_mixins.styl","hash":"6bca0a5dc96fea392a0da53e0566ec2a113ec382","modified":499162500000},{"_id":"themes/next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":499162500000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":499162500000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":499162500000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":499162500000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":499162500000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":499162500000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":499162500000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":499162500000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":499162500000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":499162500000},{"_id":"themes/next/source/images/favicon-32x32.ico","hash":"87437f8f393893466be096152c200337b583ffd3","modified":1671271790351},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":499162500000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1670340640061},{"_id":"themes/next/source/js/bookmark.js","hash":"e45e1fbb7c6d645e9c410759486216e570d02bef","modified":499162500000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":499162500000},{"_id":"themes/next/source/js/algolia-search.js","hash":"a360423984cdd915d04365c51bcab440e52d7223","modified":499162500000},{"_id":"themes/next/source/images/wechatpay.png","hash":"2aad9ba11dff5d94ba81443de69ee61fce228216","modified":1670340640065},{"_id":"themes/next/source/js/local-search.js","hash":"da2051e7cab184ae4aa64457c5db7476b4645fdc","modified":499162500000},{"_id":"themes/next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":499162500000},{"_id":"themes/next/source/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":499162500000},{"_id":"themes/next/source/js/utils.js","hash":"97cb0ac75f354119caf75365456ae1806be1c0c9","modified":499162500000},{"_id":"themes/next/source/js/next-boot.js","hash":"c2a04055d8edec03dc74e1c45d83bd3b51467de0","modified":499162500000},{"_id":"themes/next/source/resume/index.html","hash":"aeb2f4c2bc0433bc661b764935bf715b14fa0437","modified":1670340640153},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"37bdf020591feb0cf72327c9efd755bf78a0afd6","modified":499162500000},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"4e84370d2a7edcbee7a0fd3791ab800e625114f6","modified":1671270194614},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"ffb6c69a9c90793cbe9bf0544b55f7a41c016d8f","modified":499162500000},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"53895b3af95667edc5bf5d7356f8a2b4fe091447","modified":499162500000},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":499162500000},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"c9390824b57f23b7c8a5c23a9834514123673766","modified":499162500000},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":499162500000},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":499162500000},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":499162500000},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":499162500000},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"9d650333160ad1977fe42d9770869ff1660a95fe","modified":499162500000},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":499162500000},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":499162500000},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":499162500000},{"_id":"themes/next/layout/_partials/post/post-footer.njk","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":499162500000},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"1410fad73e0a08a45166e4a055ba150fd06e8636","modified":499162500000},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"815dce2a300eeed96689151ee0df4563a0d8885c","modified":1671549052858},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":499162500000},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":499162500000},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":499162500000},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":499162500000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"8dc1cebc8954160ad9b914df14dabdabd50529fa","modified":1671288318577},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":499162500000},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":499162500000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"ad197fd728dd7ac90f910fdf80ce848eab3ff187","modified":499162500000},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":499162500000},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"2d36a481a70d5f450f1f166dc556ac1218b18537","modified":499162500000},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":499162500000},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":499162500000},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"5c2cd9b6f02bcb6248d3f18638a58e329fe8c0d1","modified":499162500000},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"cc1450d62d76e59968bdd25836694b8339207384","modified":499162500000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"54eab4840443262432ec7c47e56e9859ace2a902","modified":499162500000},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"c1ccd5ec907dffc2b4aeec81b0762ea1cc0d4505","modified":499162500000},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"c1bf0753fc4bc5f21d61eaffbcc915a462c7d830","modified":499162500000},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"6252b0353c6a36d03c68ebec1073293442221bd1","modified":499162500000},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"7a07bbfb09ddf70b919f0ebe1b00942c96152389","modified":499162500000},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"47a982aec8830c2f9711b2aff59ff83f09deb09e","modified":499162500000},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"b6746dfad32cc8a46ff8f4194a7a16ca41744803","modified":499162500000},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"f4fd63b9f9230dadd1190f79d59313751925ed90","modified":499162500000},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"97035261aa85c7d39c6ce1211cdefc6248c0446d","modified":499162500000},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":499162500000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":499162500000},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"0ff61346dc1327054ea2c211ba6fb654cdcdfd8d","modified":499162500000},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":499162500000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"811a3ad58c0a15550100bdc199bef8add1ad526c","modified":499162500000},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"007da98b913a62946c03a87f8fa25b3db856caa1","modified":499162500000},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"b6241ebbb091ef18b3d06cba08ac2e04e3f67a7d","modified":499162500000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"09b58494e9d9d25542d1d218f2d0ffc4d2da9f30","modified":499162500000},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":499162500000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"7b0ea8d28ced63977dc6539920eb044b1098adcb","modified":499162500000},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"b281be775b693f9bf32766c8f6ef703c72ac9b00","modified":499162500000},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"1668084cbbc507c9d6d5af12d40c4fc4eac7a7d8","modified":1671264514706},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"ecc93ba67af26b6715fc75001fa0c3131b726241","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"cc1e2d5921c6990f94f3cf11b1ff7533a21da9b7","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"32a1d9ad50621a78d0243e176c8b05ff7866fd5b","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"7c0533bac4400689a0d5ab3a188ce42b9375de46","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"60be56c9ba590e5bcb80d1607ca7eeedde9fdfaa","modified":499162500000},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":499162500000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":499162500000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":499162500000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":499162500000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":499162500000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"32a1b73944561655087d80f025208a84e012b3cf","modified":499162500000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"9d15d0d6a58b1df74827288f117af22b4b6aafe5","modified":499162500000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d4809783ded05625675b1b4bbd9e99d7f5f7d7f9","modified":499162500000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ece860218125bdb2578f373ed4f5040c9670e4b1","modified":499162500000},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"3c7ae405dd30b9b46494a6b9a6cb1b7ec6138ba9","modified":499162500000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"ee8fb8348aa76a9b346927ba4cae5666d8d777f7","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"0c9f72ad98807521cbdcee7b5bbe2e884311db39","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"9f88d350df8115d26c6adbc2025a27ef9a42d7ff","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"33c47f5827ab11454778f3c28d35d202497743fe","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"41cba8c4c5637a6b8f1b62e67673b33676f5d734","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"87e163de866938c668ec33e6ff8972b7a968e0af","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"be5c46b983df08b9dbac1b4749b1a101b54b6b50","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"dc68f16eceaa006e9735d7ff7821af7f4ef50979","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"2d337a12c5c668ee64447bda5a9ed64eaed5b29e","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":499162500000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":499162500000},{"_id":"themes/next/source/resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css","hash":"2bde48b4b33c3ea736aad832f5b75e56beead8ae","modified":1670340640160},{"_id":"themes/next/source/resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css.map","hash":"856571563b718b67fca2732826507974ea6d12d4","modified":1670340640164},{"_id":"themes/next/source/resume/static/js/app.6988a4e594558078f560.js","hash":"effdde22e87463983e5e9e1bd3058019acdfee67","modified":1670340640170},{"_id":"themes/next/source/resume/static/js/app.6988a4e594558078f560.js.map","hash":"33528febc619e687799e2ede66619f5cb2bba814","modified":1670340640178},{"_id":"themes/next/source/resume/static/js/manifest.027b4dbe286fae6ac3f6.js","hash":"f1dac8a3ae8414b6192849487102db22f6c042a7","modified":1670340640184},{"_id":"themes/next/source/resume/static/js/manifest.027b4dbe286fae6ac3f6.js.map","hash":"091998bffb228c7a6437fdff693901e75447f753","modified":1670340640196},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":499162500000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":499162500000},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":499162500000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"b3fa752f72ca1413289b76c56fbd33a00e3d25d7","modified":499162500000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"5d61dedb3bec1021d52894f9b379e4d0953f6a35","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"76d0dfb3a8b873a6180604ac6daecf38b6a963a2","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"967021e5483495bdefac9e0b3e1c84c366c657fd","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"b1181c5f12a70b8bf710586fcb0d7959841ee512","modified":499162500000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":499162500000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"7102f8e819b62cf7d121fd063dc663fd068feaa6","modified":499162500000},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"b457756758f0632767e8a560e3033059cbe4a67b","modified":499162500000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"83c6588c51cd418336f4945813410a100ddfe2a4","modified":499162500000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"2c534d2b2dbc932ad65d335a720a7ba9612bac04","modified":499162500000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"2896840ab8ac8ab2a7f76d18df893f290ac31625","modified":499162500000},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"bf88d9c585d7b00463c46352402cfea415c29493","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"d6d60f02b5e9f89dbfce180b3884030898022664","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"f11dca93e334b68a29e792f7abe682993fab7568","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"cf194bea1c9e67fde871a04de3bc81df72c54277","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"f1778d2c56974b96dae429456d5c55be325c4946","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"9a47c9045e443b8d20932f9c564a3a05fa4c6b51","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"9c8abc55c9d94d384a245013951aba5ecca2f4fe","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"d180871d4440090241fc988736c1f3a7efb4b1ba","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"faa1621613a50bdc94d6da276f9a3f06549bdab4","modified":1671288713944},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1671288704970},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"ab715dbf2b98bfeb5e7b7c43e92e5c02496cc2ea","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f7ff85fe6c4efb8ff036fab2c3277b7d8bed69a8","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"6394340c28a21f6aa90e786f3bfe24fb26595653","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"432e73bc4f99322af6af1852e0ea6e674919c31a","modified":499162500000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"69eb1c282a8fd5dbab606cc09c34c5dc8e44e753","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"08e79881d58d01afab6dbed37ab4f52356564d7e","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"15a5e273a8137550c93c8d2a60f9fcf86e04a89e","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"79ffcf92771cd48f4a686f9d8d7d610f39e9fc1f","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"cef4e779473daa3761709958243c6b8a57bbd814","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"f53e6c12bd4805888f696386d00668f23cd335e7","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"3c029a003e9bf747e1b9cc7c0c127f6028374876","modified":499162500000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"50b00218e854200c4ec0573a841e226d49c45cba","modified":499162500000},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/dc44a3625ccf585467173a0f9a8e574f.tmp","hash":"810358f65b9ecffa8d6231678384210be11470d4","modified":1670340638172},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/dc44a3625ccf585467173a0f9a8e574f.tmp","hash":"810358f65b9ecffa8d6231678384210be11470d4","modified":1670340638256},{"_id":"themes/next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":499162500000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":499162500000},{"_id":"themes/next/source/images/avatar.jpg","hash":"bb4391ba9f6a97c8f3240684441f2adc9cda2097","modified":1670340640011},{"_id":"themes/next/source/images/favicon.ico","hash":"9ce3dec035012dfb44844770c06f99a91c1fd1cb","modified":1670340639987},{"_id":"source/_posts/射箭小游戏/image_bPic0MSA86.png","hash":"09af866ac1c4e961095453136e2f4f1aab2caf52","modified":1670340638608},{"_id":"themes/next/source/resume/static/js/vendor.1cc61fe7e59cf8353384.js","hash":"156c3abc419ccae6dc107178a1a43d653683ab09","modified":1670340640203},{"_id":"source/_posts/UIParticle组件的使用问题/anim3__eYFZGZolQ.gif","hash":"f9c8c3bb97660bccb305cc01ee609d65e4bd27a5","modified":1670340638288},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/uiparticle_wQzXgIMX6n.gif","hash":"2c0e39fe68c0af74f62e2a2c9e2a0c04a0c380a6","modified":1670340637792},{"_id":"themes/next/source/resume/static/js/vendor.1cc61fe7e59cf8353384.js.map","hash":"7d9086b3495e8904892f7a1a50171d6894fc2c30","modified":1670340640216},{"_id":"source/_posts/UIParticle组件的使用问题/anim2_ocvF-p7l04.gif","hash":"1636ffeee206fece762c41961119c5a72c99963a","modified":1670340638281},{"_id":"source/_posts/UIParticle组件的使用问题/uiparticleCompare.gif","hash":"4198dc194b900bc0e442a46415e8721078530e59","modified":1670340638403},{"_id":"public/atom.xml","hash":"91e6cd417332a180083661eea84e33ac9650d40d","modified":1671549823829},{"_id":"public/search.xml","hash":"1c653c22487eb5cfbe9693bb94cbf90bb8cd4c73","modified":1671549823829},{"_id":"public/archives/index.html","hash":"d7db9ad5588813f4c05ba99c40ddf3135c31b022","modified":1671549823829},{"_id":"public/categories/index.html","hash":"b140be3a4fc287f9bc2ec0ac5ac7baba7f4519a7","modified":1671549823829},{"_id":"public/tags/index.html","hash":"adc8e3a9748476d7a01daaee6b90bedf56607730","modified":1671549823829},{"_id":"public/2022/09/30/SQLite替换lua配置表方案实现/index.html","hash":"4d2294766d988f47a2a8ade81ecd15822fcda4d6","modified":1671550599008},{"_id":"public/2022/05/15/网络层/index.html","hash":"4a5e130e599272355ec1e7605728f74ebc1a0b5f","modified":1671550599008},{"_id":"public/2022/03/18/UIParticle@4.0.0研究/index.html","hash":"6a75b6e8ce4f2d42b4f8557ee9a8650c33fffcfe","modified":1671550599008},{"_id":"public/2022/03/05/UIParticle组件的使用问题/index.html","hash":"970561de4eb8b5c6606408c6576c15fc023e2014","modified":1671550599008},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/index.html","hash":"a53dcbdf7f49cd3ca9e6b5b7414f6a27aea5328b","modified":1671550599008},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/index.html","hash":"c5ce00373adea01093d8ad2ff4b62a0782d9c8b5","modified":1671550599008},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/index.html","hash":"175a5ff46aff981c709304115f17b9b4e6110f75","modified":1671550599008},{"_id":"public/2021/09/10/游戏热更新/index.html","hash":"50bf50dae9702a2a1006032ad469c97009598bbb","modified":1671550599008},{"_id":"public/2021/06/22/射箭小游戏/index.html","hash":"e2f171dedb4da23519115d26727b17abdb1a6107","modified":1671550599008},{"_id":"public/2021/04/09/新手引导系统/index.html","hash":"e1ab01858f4da62ec165a95466d5d18c3697895c","modified":1671550599008},{"_id":"public/2021/03/18/海外版本diff工具/index.html","hash":"e503cd23a784ddee6cdbdcc92bf18ef888e2f496","modified":1671550599008},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/index.html","hash":"4cfc34e0c5fcff82c287006ba3dbe9b206c48e0d","modified":1671550599008},{"_id":"public/2021/01/25/游戏中特效加载原理和优化方法/index.html","hash":"fa2356d1f8d8ddfefa1e219fee5010dd2e8eabe5","modified":1671550599008},{"_id":"public/2021/01/20/RenderTexture特效系统实现原理/index.html","hash":"22b3f6c8d48a17b87b34a5e9178236e58bb562d0","modified":1671550599008},{"_id":"public/2021/01/15/UnityAddressable/index.html","hash":"a76ce289c403a90628fc8110a9fb73368fec1060","modified":1671550599008},{"_id":"public/2020/12/05/资源打包策略/index.html","hash":"266898eed85c801fc82322aaa92f6d8e3eb1140c","modified":1671550599008},{"_id":"public/2020/11/01/场景控制流程解读/index.html","hash":"e5b7bb4bc9b0b503c175a3da1c64753ad45574cb","modified":1671550599008},{"_id":"public/2020/03/26/05-散乱知识汇集/index.html","hash":"eccac4d8c216f29ef78be4c3488d70f3b9ccf61b","modified":1671550599008},{"_id":"public/2019/12/20/04-不得不懂的工作流优化技能/index.html","hash":"b98c20c85584a09678f436640041a5b29434c4fe","modified":1671550599008},{"_id":"public/2019/11/18/03-使用console输出网站logo彩蛋/index.html","hash":"6fe2bab4db1e93aa7f9443d8b4e80bb1dcb7cb7b","modified":1671550599008},{"_id":"public/2019/10/16/02-代码规范-整理凌乱代码的有效姿势/index.html","hash":"7fffa71e82ebe907eec8695d551f8c5088a36cfa","modified":1671550599008},{"_id":"public/2019/09/10/01-搭建mock层/index.html","hash":"e33c077cfe94b2f97795da1180e5070f9765ff30","modified":1671550599008},{"_id":"public/2019/08/15/前端单元测试/index.html","hash":"69a8f452cb56249edd1d96ed43309976847502b7","modified":1671550599008},{"_id":"public/2019/07/20/【VueSSR系列二】clientManifest与bundle的处理流程解读/index.html","hash":"319ce442411613737b1305991c2eb3d66d645c6a","modified":1671550599008},{"_id":"public/2019/06/13/【VueSSR系列一】构建流程源码解读/index.html","hash":"56bca36d80926fc4c86e456a7d1f161c0c0a3640","modified":1671550599008},{"_id":"public/2019/03/21/关于高效找工作的几条建议/index.html","hash":"e70f9575c30742785e993417f640efbe3d128190","modified":1671550599008},{"_id":"public/2018/10/07/前端编码规范/index.html","hash":"fee0abfea674d33581d34a72e2d6bc98fbffb123","modified":1671550599008},{"_id":"public/2018/09/02/使用javascript实现常见的排序算法/index.html","hash":"9be33b9e4e51271f881a8e03e6ea97cb6185e8e3","modified":1671550599008},{"_id":"public/2018/08/16/腾讯外包面试经历总结/index.html","hash":"8a398c1d0a63b6d1812c016ca72a8bb516a53218","modified":1671550599008},{"_id":"public/2018/04/20/《代码整洁之道》读书笔记/index.html","hash":"f77ffa976310e8a1c00ac79bcb78a6c0bd075a37","modified":1671550599008},{"_id":"public/2018/04/15/踏平windows下安装fabric遇到的坑s/index.html","hash":"54bf2e3a1c8f2111c71c956a460483d46985453d","modified":1671550599008},{"_id":"public/2018/04/09/source map小知识/index.html","hash":"6cee4c7efc7cecea43d5fa0eeb46bac0c3c84ab6","modified":1671550599008},{"_id":"public/2018/04/08/webpack引入eslint/index.html","hash":"ef831eb011298419d8b5789ef39857b6651e4556","modified":1671550599008},{"_id":"public/2018/04/02/聊聊git的分支和rebase命令/index.html","hash":"88a75fa1fb92f69c5efe0169bfa75c5470740ab8","modified":1671550599008},{"_id":"public/2018/03/06/MVVM框架双向数据绑定的实现原理/index.html","hash":"6322614b3cbee5061ec462e97dac69b6dd426689","modified":1671550599008},{"_id":"public/2017/09/25/CSS3实现3D轮播图/index.html","hash":"743b4ab1f71ad6fcee4a543dda25321dcd48290e","modified":1671550599008},{"_id":"public/2017/09/20/CSS3饼状loading效果/index.html","hash":"39817749f394996a557db557c34860fae6fb0860","modified":1671550599008},{"_id":"public/2017/07/20/js控制运动框架animation/index.html","hash":"80e0cb2764903bf23ed16924e8d728ed9e42585a","modified":1671550599008},{"_id":"public/2017/07/10/mongoDB常用知识整理/index.html","hash":"34d8065a3b96fe6b2a09b86e1f0589e1f716b108","modified":1671550599008},{"_id":"public/2017/06/25/基于Express4.0开发web/index.html","hash":"9133fcb45cbd83a190ae8b93843f59fcc48a4cf8","modified":1671550599008},{"_id":"public/2017/06/13/node开发公众号踩过的坑/index.html","hash":"7b7bf4178f3dd2bd46873f936eb1e6cc42f7fb73","modified":1671550599008},{"_id":"public/2017/06/13/web离线应用/index.html","hash":"067792bcb5c47ee8fdc7b0006ee88d0b00eed424","modified":1671550599008},{"_id":"public/2017/06/13/node开发微信公众号/index.html","hash":"9d41209de6b58946ab44c79bb07b86451d0dc982","modified":1671550599008},{"_id":"public/2017/05/01/音乐播放器WebApp/index.html","hash":"cfe76dc47ddc6ed0691de501b527c732d8fdec51","modified":1671550599008},{"_id":"public/2017/03/07/有趣的鼠标悬浮效果/index.html","hash":"dc7364ced310103d65d31aaf35fba0607df8be71","modified":1671550599008},{"_id":"public/2017/02/15/自定义的checkbox,radio样式/index.html","hash":"ddff08c8d532e974634d3519009fa770624c21a5","modified":1671550599008},{"_id":"public/2017/02/10/调用定时器的正确姿势/index.html","hash":"1639b546b83b2ed15d0e114b34f862201a5ba0ec","modified":1671550599008},{"_id":"public/2016/06/02/JS之cookie/index.html","hash":"c9a73012eadcd7577defff6d57004cc23d40c372","modified":1671550599008},{"_id":"public/2016/05/29/js面向对象编程之继承/index.html","hash":"2aeb28e9de162cc6781ee3a084e0dabe9e3252df","modified":1671550599008},{"_id":"public/2016/05/20/js系列之BOM基础/index.html","hash":"cd5e88154e49286e83d528e91a32368af12c80b8","modified":1671550599008},{"_id":"public/2016/05/19/JS之事件详情（1）/index.html","hash":"10a3fb5086a6c6d09af2ed831e2195dc7a55119d","modified":1671550599008},{"_id":"public/2016/05/19/JS之事件详解（2）/index.html","hash":"30440ec183b78cfcc33529d8f5f3a84e70099d4c","modified":1671550599008},{"_id":"public/2016/05/19/JS之默认行为/index.html","hash":"c9092bcc956d0b11fbad72240042f709bdf440b7","modified":1671550599008},{"_id":"public/2016/05/10/github使用心得/index.html","hash":"0a354228222c9916ebd4117e65a197fef0f81550","modified":1671550599008},{"_id":"public/2016/04/23/js系列之DOM基础/index.html","hash":"7cccedfe21b23b74bcc238178b482ce5ef00e86a","modified":1671550599008},{"_id":"public/categories/前端/index.html","hash":"3414381ca36490eca17a80ed80e4d2ec6b9af214","modified":1671549823829},{"_id":"public/categories/前端/工作日记/index.html","hash":"387369d3b4b8681bba5e52ece0ca502e4fdc50f2","modified":1671549823829},{"_id":"public/categories/工具/index.html","hash":"a039d50254b2b9f6b02795eee07d2edf6c83b36d","modified":1671549823829},{"_id":"public/categories/前端框架/index.html","hash":"0cda58cb337a114bc503ff9040a81cb2830e1920","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/index.html","hash":"5ae655bea3de3280a067bf2e7b03e5e0051d650a","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/page/2/index.html","hash":"b21789a90085f0905dcff1a702d1555e9e569635","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/Unity/index.html","hash":"9c3d3fa4f57d747f5829cc91c5fce977e3993176","modified":1671549823829},{"_id":"public/categories/js/index.html","hash":"9dc4f19e2edccd2b8765568efe71fb812ac90336","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/业务系统/index.html","hash":"1a65dc6ee822a18047949da0bd6290f75f898410","modified":1671549823829},{"_id":"public/categories/总结/index.html","hash":"219ee24d4b69d9a2ad4fe7ad01b827ab091ba8a6","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/基础系统/index.html","hash":"34b04f00b59b1c24d8f0ae080f23149bb9b402c9","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/Unity/特效/index.html","hash":"d1d4454da4f52ab8c9782416d953323830daf5ea","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/业务系统/图文混排/index.html","hash":"5bfd79e8746c45c7f9abaf84144defd014ddf57c","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/Unity/资源管理/index.html","hash":"e59b870819a5849a3fd0cfdb9674fb9912f0b47c","modified":1671549823829},{"_id":"public/categories/Unity游戏开发/业务系统/小游戏/index.html","hash":"5ee3666b6c2eaaa7325b65befb37e7671d2c4714","modified":1671549823829},{"_id":"public/archives/page/2/index.html","hash":"d76916565bc00e45b9bb73bc867da26ae9ad21d8","modified":1671549823829},{"_id":"public/archives/2016/index.html","hash":"3dea8cfda11c2a2d31769cfb4cd49b32a91d7e83","modified":1671549823829},{"_id":"public/archives/2016/04/index.html","hash":"0b094b61c8945f5d4c55d9c192f2c250d20f8554","modified":1671549823829},{"_id":"public/archives/2016/05/index.html","hash":"c07ca5a9c7a85c286a8d91fc4fe20cc834829a28","modified":1671549823829},{"_id":"public/archives/2016/06/index.html","hash":"7b21c7fa59c2f7c02ef89dadacea7670e62706ea","modified":1671549823829},{"_id":"public/archives/2017/index.html","hash":"3d49832491103181a1bf580d69839750b986961a","modified":1671549823829},{"_id":"public/archives/2017/02/index.html","hash":"9e68a6fbc8763e1685af38039d9b4571d39ce79f","modified":1671549823829},{"_id":"public/archives/2017/03/index.html","hash":"d5debf0664158d95dc489483e308f98b9f7d676d","modified":1671549823829},{"_id":"public/archives/2017/05/index.html","hash":"f3fb00765a5fdcca6d0268a3191275bd63b3bf6c","modified":1671549823829},{"_id":"public/archives/2017/06/index.html","hash":"16ad5c9f0feb32e7c702f9e914cd4a8a72d20b3d","modified":1671549823829},{"_id":"public/archives/2017/07/index.html","hash":"8172c46e8e83af9bb169aefa8e71c2a1cd5dc49f","modified":1671549823829},{"_id":"public/archives/2017/09/index.html","hash":"4818bd29aaea22e0935f434163e7804c01b4663b","modified":1671549823829},{"_id":"public/archives/2018/index.html","hash":"2fb74bdb8cfa3108f5ec9e2f71fa6d6d58501540","modified":1671549823829},{"_id":"public/archives/2018/03/index.html","hash":"4bfc8e6efbcec9f9293ac3e8d59cfb0e2344910f","modified":1671549823829},{"_id":"public/archives/2018/04/index.html","hash":"8c48900c22c99cdf9f0e17a22d467fff036a9aeb","modified":1671549823829},{"_id":"public/archives/2018/08/index.html","hash":"5e60880762afef004200251f8c8ab6a0fe8eea61","modified":1671549823829},{"_id":"public/archives/2018/09/index.html","hash":"9b8317ada34daef1f124d03cf0efff4b7e3db93d","modified":1671549823829},{"_id":"public/archives/2018/10/index.html","hash":"867cb21f5c6cbf7f21c0df8b86cfc83a0a0c5383","modified":1671549823829},{"_id":"public/archives/2019/index.html","hash":"85c5c56cb3920fa6d0dd5dcab2bdb37650b702e6","modified":1671549823829},{"_id":"public/archives/2019/03/index.html","hash":"ae5ae70f2d4115a05596647d96a41c3fa00f2682","modified":1671549823829},{"_id":"public/archives/2019/06/index.html","hash":"943cf5f26a32db394aaf52b80bb067a71132b796","modified":1671549823829},{"_id":"public/archives/2019/07/index.html","hash":"5303c381d81810702ee9d421b48cfc17be8f7f98","modified":1671549823829},{"_id":"public/archives/2019/08/index.html","hash":"519fcac05d37fd2a9880d55ea9397b313d3b89fb","modified":1671549823829},{"_id":"public/archives/2019/09/index.html","hash":"39c2bfae57b2ee88a4cda321e9659a52c2936ed9","modified":1671549823829},{"_id":"public/archives/2019/10/index.html","hash":"e2a2590cb797b19c046decdcdf41f918f91b40c6","modified":1671549823829},{"_id":"public/archives/2019/11/index.html","hash":"7657fbd5c017c312bb94c1f1f1a3441a2aa4b584","modified":1671549823829},{"_id":"public/archives/2019/12/index.html","hash":"e1b465c00c8dda9dec8f845166923f0200e60518","modified":1671549823829},{"_id":"public/archives/2020/index.html","hash":"ea9456f0c1b3d1a7e78b1733c039dfcf00894490","modified":1671549823829},{"_id":"public/archives/2020/03/index.html","hash":"97a23f284acf3371253457a13d8f9e211a051190","modified":1671549823829},{"_id":"public/archives/2020/11/index.html","hash":"313c2c938f93ff2947d471ae3fdad8c25cecf240","modified":1671549823829},{"_id":"public/archives/2020/12/index.html","hash":"4938079ba3e90287794e2362e9af03b707d500a9","modified":1671549823829},{"_id":"public/archives/2021/index.html","hash":"dc7e2ba58ac3201557b3ddff074335b1fffe8d99","modified":1671549823829},{"_id":"public/archives/2021/01/index.html","hash":"16494aa5a5bbf45d862c412ca16af3e7ff7996f3","modified":1671549823829},{"_id":"public/archives/2021/02/index.html","hash":"601374b34823fa1c9e9b898be89965f4659cd94c","modified":1671549823829},{"_id":"public/archives/2021/03/index.html","hash":"228c0a606f5a238a0626c15376d6131ff3faa802","modified":1671549823829},{"_id":"public/archives/2021/04/index.html","hash":"55c7e4964c1d53078471ccb4371b23f85f39789d","modified":1671549823829},{"_id":"public/archives/2021/06/index.html","hash":"bec7a07c97f5553666afcfe95755f92668eb1818","modified":1671549823829},{"_id":"public/archives/2021/09/index.html","hash":"3662c33e0f6c88e4a829eacbfb8de11a300f061d","modified":1671549823829},{"_id":"public/archives/2021/11/index.html","hash":"a23e4ba3e4a010a06175ea37279d85ea9e99e9b1","modified":1671549823829},{"_id":"public/archives/2021/12/index.html","hash":"7eea0720dcd1880e53a43c41bd11c698b3ef6e3a","modified":1671549823829},{"_id":"public/archives/2022/index.html","hash":"ac2214e5d83f19564435b3c97a9ff025681f8edd","modified":1671549823829},{"_id":"public/archives/2022/01/index.html","hash":"140ea5f6d9e267ce5a07d05c595a531df407ad4e","modified":1671549823829},{"_id":"public/archives/2022/03/index.html","hash":"130aacb0c620084e6de02610985287d7f091c80e","modified":1671549823829},{"_id":"public/archives/2022/05/index.html","hash":"dbec7750647e3cc0dca49b5c26038db41815b01f","modified":1671549823829},{"_id":"public/archives/2022/09/index.html","hash":"7d22ac819a5df6ac1218fa0c960698cfee28f6b6","modified":1671549823829},{"_id":"public/index.html","hash":"0fb24cb82bf85e508562a7294a0451fa11e59e9c","modified":1671549823829},{"_id":"public/page/2/index.html","hash":"847d1de177f92f4c739e92762d290d97e7d727ef","modified":1671549823829},{"_id":"public/page/3/index.html","hash":"7e22b4e74662cc81203fef99abab06a61946fb0e","modified":1671549823829},{"_id":"public/page/4/index.html","hash":"bc43afd29c50c1828354367e7bf91ebd95fdcb55","modified":1671549823829},{"_id":"public/page/5/index.html","hash":"584f3fbfe78d201be1c965eb964d17f5bb00aeab","modified":1671549823829},{"_id":"public/page/6/index.html","hash":"ac9fc3facca4101f7df8b685f80467c52903bfd8","modified":1671549823829},{"_id":"public/page/7/index.html","hash":"f428318b4327c453078e90963d67f5224d74a64d","modified":1671549823829},{"_id":"public/page/8/index.html","hash":"4a33ab6c240d39dce785bd662cd14fa155d25f39","modified":1671549823829},{"_id":"public/page/9/index.html","hash":"ebe5833a0f7133dd4685184f0e3391b3c385a091","modified":1671549823829},{"_id":"public/page/10/index.html","hash":"36d40b11d5a3366d18681774f8786f3f65797706","modified":1671549823829},{"_id":"public/page/11/index.html","hash":"85d94ef37cb13b4f191410383379cc00ebf41a0b","modified":1671549823829},{"_id":"public/tags/html5/index.html","hash":"f91d6f8283dbdd09a3552bb3fd3b3bc126905312","modified":1671549823829},{"_id":"public/tags/css3/index.html","hash":"a42612521464b14dfc0c49558adcf8c912fc212d","modified":1671549823829},{"_id":"public/tags/git/index.html","hash":"ff9fcfa7267efabb8187736c4fa0ca90d9188b09","modified":1671549823829},{"_id":"public/tags/protobuf/index.html","hash":"441653af823b2b2eb4c4ed0b516bbfbc777f59a9","modified":1671549823829},{"_id":"public/tags/Protocol-Buffer/index.html","hash":"4a6ee671b36ba313e845794aae01c8fedd4add4d","modified":1671549823829},{"_id":"public/tags/make/index.html","hash":"93b4c3bf83b5d678b27d556c6cab81ffebad7a8d","modified":1671549823829},{"_id":"public/tags/js/index.html","hash":"6efaefbe8e723b2491cbb85d45ce37eb9717502e","modified":1671549823829},{"_id":"public/tags/编程/index.html","hash":"25c9e2ac3c9e9df92476d8fa4f30e3023bfb302d","modified":1671549823829},{"_id":"public/tags/javacript/index.html","hash":"bad1753153b902fdf762872a26726677fd259805","modified":1671549823829},{"_id":"public/tags/MVVM/index.html","hash":"946f9e11833f99bc76446e5e2026db86df136359","modified":1671549823829},{"_id":"public/tags/UIParticle/index.html","hash":"7873612eaabaf33440342f8a1ddd3804a8d754b7","modified":1671549823829},{"_id":"public/tags/特效/index.html","hash":"01497c6273910f35a5f9873c5e6a866667d50156","modified":1671549823829},{"_id":"public/tags/RT/index.html","hash":"e3cd214e8c64a559106ada980d2b1818f4fb7a53","modified":1671549823829},{"_id":"public/tags/RenderTexture/index.html","hash":"b7925d1413114586f00607960c2a427fcf813238","modified":1671549823829},{"_id":"public/tags/emoji/index.html","hash":"55091d38a37b10fbe0254fa38ec38dd2c9f77656","modified":1671549823829},{"_id":"public/tags/图文混排/index.html","hash":"cf1c4cea9c2fdd2288a2d423bbf9d5cb82f33e48","modified":1671549823829},{"_id":"public/tags/UGUI/index.html","hash":"33872e4f8f7ae5355560ff08c32cf36161cca5c3","modified":1671549823829},{"_id":"public/tags/Addressable/index.html","hash":"740892d9c54c6709e5ffe0bc8d871486326dd969","modified":1671549823829},{"_id":"public/tags/github/index.html","hash":"11e56b1fd34e9d6fa5193f1c456d4d3906cb401d","modified":1671549823829},{"_id":"public/tags/基础/index.html","hash":"4188aefe96c74f236c14218ce32f4edf151b5d93","modified":1671549823829},{"_id":"public/tags/css/index.html","hash":"cbafd006988f3894de455bb5ce9e61cbd6e7aec1","modified":1671549823829},{"_id":"public/tags/animation/index.html","hash":"a6a7136dbd0288d7ce868e5e87d1fc4afac556a5","modified":1671549823829},{"_id":"public/tags/BOM/index.html","hash":"3e85abdd82beb3e7a4fbc15b0b807918f06ad038","modified":1671549823829},{"_id":"public/tags/DOM/index.html","hash":"664e7b7132a7c88d26501b68856eddda3315e476","modified":1671549823829},{"_id":"public/tags/继承/index.html","hash":"1277648c0532691c5b51a7980d43812254368a15","modified":1671549823829},{"_id":"public/tags/mongoDB/index.html","hash":"8adef896928167ce03580699b9caad82a8f53afb","modified":1671549823829},{"_id":"public/tags/nodejs/index.html","hash":"2395038d9c05900911a5bb91b0828636c704f412","modified":1671549823829},{"_id":"public/tags/bug/index.html","hash":"baf8c0bb272155be6a77cfdbbbcef6291d751546","modified":1671549823829},{"_id":"public/tags/webpack/index.html","hash":"623fa8da10fedd007de7030889062a55e8d8e791","modified":1671549823829},{"_id":"public/tags/sourceMap/index.html","hash":"2f00a839edf4117b9d7530061c35cc5de977f139","modified":1671549823829},{"_id":"public/tags/eslint/index.html","hash":"6c0e2df14c6e19657fba815713047948203d13de","modified":1671549823829},{"_id":"public/tags/ApplicationCache/index.html","hash":"df2b69bb5b7bd68ba8bad1cd5603c0a16b4fc9d6","modified":1671549823829},{"_id":"public/tags/localStorage/index.html","hash":"eba181d5562ad518f1a4eeb4a48f5fee8b2b9e9c","modified":1671549823829},{"_id":"public/tags/webSQL/index.html","hash":"62e704e4d53e12f5a127008501744711dcb50a45","modified":1671549823829},{"_id":"public/tags/闭包/index.html","hash":"2be07352ecb84c41c932ac8682668cc68bd91bcb","modified":1671549823829},{"_id":"public/tags/vue/index.html","hash":"309bc98aa6b8fe67a9e211329ac8bbf1f943a7a0","modified":1671549823829},{"_id":"public/tags/算法/index.html","hash":"5c069105c9d248af03c486285bc11cf263173496","modified":1671549823829},{"_id":"public/tags/总结/index.html","hash":"a29b79c5218580e39fca395f32949f57e7aa8365","modified":1671549823829},{"_id":"public/tags/测试/index.html","hash":"b7a94b73927ea4d6b46554fb4276444e51f424e8","modified":1671549823829},{"_id":"public/tags/规范/index.html","hash":"fa7e9bed9ab866f0b94adc30e59c4ace3e5c830b","modified":1671549823829},{"_id":"public/tags/场景/index.html","hash":"3485257b4e6bd5fb6a595fcd97122e3f22504f55","modified":1671549823829},{"_id":"public/tags/Scene/index.html","hash":"c2efe4751eb5ae9de6e6473b4afc809a02cf6c9f","modified":1671549823829},{"_id":"public/tags/express/index.html","hash":"d7f12aa55539e09804708d2ce703d8e88330b84a","modified":1671549823829},{"_id":"public/tags/grunt/index.html","hash":"a05ab1097411a759a5010f9a95d8491c89413569","modified":1671549823829},{"_id":"public/tags/router/index.html","hash":"ca128fb8fe5ce1da05d2b7ceac6f247e18262a3e","modified":1671549823829},{"_id":"public/tags/MVC/index.html","hash":"531f1d7527c6f0d847bd6aebb4e010cc91a6d538","modified":1671549823829},{"_id":"public/tags/jade/index.html","hash":"3ab78a376d86f0b1fe8eca74c1ac69cf1036216f","modified":1671549823829},{"_id":"public/tags/小游戏/index.html","hash":"c5627045dcbce31489aaf1a4ffbcce92b38e5caf","modified":1671549823829},{"_id":"public/tags/新手引导/index.html","hash":"656bdafd1d80b9204896924fb87099b64e1dd748","modified":1671549823829},{"_id":"public/tags/多语言/index.html","hash":"d894c2334a9f4799a53b9a24e62f47b1cdd0c1ae","modified":1671549823829},{"_id":"public/tags/海外/index.html","hash":"a3a55ac7ebb7515937609f8a0ea6e87c3e223c52","modified":1671549823829},{"_id":"public/tags/热更新/index.html","hash":"f8f5d7a1c0006061503ed68aafef93c310ec4f85","modified":1671549823829},{"_id":"public/tags/打包/index.html","hash":"97c787a16c7daff42f7fc99785473ebafa4d3e68","modified":1671549823829},{"_id":"public/tags/fabric/index.html","hash":"f02c978c7bc6178961dc7a3a4c376d3230181c93","modified":1671549823829},{"_id":"public/tags/layout/index.html","hash":"a136b486ec07c2d797b53409262f009c83523233","modified":1671549823829},{"_id":"public/tags/clear/index.html","hash":"0680150d4fbadb0c15d23ce5f683c981520846f4","modified":1671549823829},{"_id":"public/tags/audio/index.html","hash":"4f4d733e79c9c79ce86f0a91114d7e766056eb99","modified":1671549823829},{"_id":"public/tags/进度条/index.html","hash":"eb51e6f74cf2896ec8b1c11a485dc8f55381a7b9","modified":1671549823829},{"_id":"public/tags/播放按钮/index.html","hash":"bab827e92e4d9f790f9e31b31bd897a9b67e9d4c","modified":1671549823829},{"_id":"public/tags/QQ音乐API/index.html","hash":"665b0f26cf61b825ea7ac462717af6ce96f8ec05","modified":1671549823829},{"_id":"public/tags/network/index.html","hash":"f7ffccdb563222d236380d7737da87607c4e01fa","modified":1671549823829},{"_id":"public/tags/SQLite/index.html","hash":"066a856a5a07f8d9b44efcfbb4de2c1fb05e55e6","modified":1671549823829},{"_id":"public/tags/配置表/index.html","hash":"fc948da685c7febe95a8ac031cb78964604bc8ff","modified":1671549823829},{"_id":"public/tags/微信公众号/index.html","hash":"6ba9632c7f0cf6db2236afe1cf1fb0abf87d3f0b","modified":1671549823829},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1671549823829},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1671549823829},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1671549823829},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1671549823829},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1671549823829},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1671549823829},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1671549823829},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1671549823829},{"_id":"public/images/favicon-32x32.ico","hash":"87437f8f393893466be096152c200337b583ffd3","modified":1671549823829},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1671549823829},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1671549823829},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1671549823829},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1671549823829},{"_id":"public/images/wechatpay.png","hash":"2aad9ba11dff5d94ba81443de69ee61fce228216","modified":1671549823829},{"_id":"public/resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css.map","hash":"856571563b718b67fca2732826507974ea6d12d4","modified":1671549823829},{"_id":"public/resume/static/js/app.6988a4e594558078f560.js.map","hash":"33528febc619e687799e2ede66619f5cb2bba814","modified":1671549823829},{"_id":"public/resume/static/js/manifest.027b4dbe286fae6ac3f6.js.map","hash":"091998bffb228c7a6437fdff693901e75447f753","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_-AleO20bJE.png","hash":"8e543e53e4c499d32825226388909982febb74d3","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_0FbXJEVpBZ.png","hash":"afbaf0cc2411294813a599c1df55d0333d6d9097","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_2vkN8DyEOU.png","hash":"c7ccb05b202e460d1bd496f0dafa437e0b250fb6","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_ckbsiwRhQu.png","hash":"33d7691016798e8569a31a223ae9a9a58f534f73","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_Lq8cKHXJpH.png","hash":"271af93eced8422c0458e95498dd511a6c1652c1","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_dlKUVIURur.png","hash":"a44e06ceecc3ea8f4cbd184da80bccd41d1a9a96","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_oZQEU2PqwI.png","hash":"286bace68c382a381f5874796da815e12888c9ce","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_tWZrP03QQ1.png","hash":"9f07f91dd7161ca42fd90f0072b61f9b2985a995","modified":1671549823829},{"_id":"public/2021/01/20/RenderTexture特效系统实现原理/image_1.png","hash":"13c1f0a0506f859c8d8d068305755dfd09653752","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/EmojiSpriteAsset_m_7Wcnb4Es.cs","hash":"8a935d9b066b537d72c4b3b481fa721d1a97270a","modified":1671549823829},{"_id":"public/2021/01/20/RenderTexture特效系统实现原理/image.png","hash":"efbf88645c1f0654780a7b825b221dc5fb30d88a","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_0ifY5wkaqd.png","hash":"525c2df4475efad51b59ce0a7565c5ca5d3fa8f8","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_7M009fCb6d.png","hash":"f4953c188c5d6fff2a3f9e9a2c25b495445ff7d9","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_hn-XI1mBjn.png","hash":"0ab90bd5ce7e5e971cd3332a3db4527f08a61ae1","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_n9LveM62tZ.png","hash":"288061c7c70b39a6f4e85ca71060bccc40da30d4","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_TwT2GLPl7b.png","hash":"66e4a99a201634a77c5f059579f7602f1dee714f","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/UIGraphicTextSpritesMgr_VeAnnPQruV.cs","hash":"f5ac61bb6712454b2d22ba8b3af4741d0fcc2971","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image__hVtRDjd_h.png","hash":"199bd197041208d5180c677c0b742cb857b42f0a","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/UIGraphicText__lKh67xRzm.cs","hash":"21148b8df12dd58ae415bd55dc29cf40de892720","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/UIGraphicTextSprites_SJ0ts213El.cs","hash":"2e919bfae4afc3b82983655969fc2e71f98aac44","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/1b068870d1847acdd585381f49f9127c.tmp","hash":"2dc1b3ec21cecfb9c946f07d762a2714a61ca19f","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/35ae882a0e5fee85b1b7a102ba20976f.tmp","hash":"a0af10ecbf6d709068d0f440ff3060dc4d460ee5","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/78a230605169741abf7b42ea9cf32942.tmp","hash":"a2312755aac893a2d4a4bcff1e135eddfb464f14","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/83146e7e3d81e80b54edf6131d3203e2.tmp","hash":"b4acfba4eecf2c901c14f831f0ab93c62dc80a17","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/7975d77768f66dd5b45d9ef03f066e45.tmp","hash":"d48860db66942166c389b2a88ae73acded5dad29","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/b1ea6bccc642c35685b0dd0f5671b303.tmp","hash":"8ceff054343c0fb21f51e457b466f06bae715449","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/620aa9915773654e87c2ed8201b32736.png","hash":"047fbeb660987c66220861a6947a5f146561ec7c","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/c9e62ff06615ff8ab9ab1b914721f146.tmp","hash":"0239a9975ad9ecf920db202ed15ec9f909fbc0fd","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/1b068870d1847acdd585381f49f9127c.tmp","hash":"2dc1b3ec21cecfb9c946f07d762a2714a61ca19f","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/35ae882a0e5fee85b1b7a102ba20976f.tmp","hash":"a0af10ecbf6d709068d0f440ff3060dc4d460ee5","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/620aa9915773654e87c2ed8201b32736.png","hash":"047fbeb660987c66220861a6947a5f146561ec7c","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/78a230605169741abf7b42ea9cf32942.tmp","hash":"a2312755aac893a2d4a4bcff1e135eddfb464f14","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/7975d77768f66dd5b45d9ef03f066e45.tmp","hash":"d48860db66942166c389b2a88ae73acded5dad29","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/83146e7e3d81e80b54edf6131d3203e2.tmp","hash":"b4acfba4eecf2c901c14f831f0ab93c62dc80a17","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/b1ea6bccc642c35685b0dd0f5671b303.tmp","hash":"8ceff054343c0fb21f51e457b466f06bae715449","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/c9e62ff06615ff8ab9ab1b914721f146.tmp","hash":"0239a9975ad9ecf920db202ed15ec9f909fbc0fd","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/image_67GP1vl5zt.png","hash":"57808c34b49817e998217ad20eaec4ca45fb0756","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/image_NcuDmPJzjI.png","hash":"f991392366b69c6a531e579de9e75740e33afcfa","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/image_db_KmLvzYS.png","hash":"64a29103b559dab0b90a18bfcc9e9592d20d8b07","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/image_ywMcu33ZPf.png","hash":"d532845571b1c8915e3b2dd304dec181218ecfe8","modified":1671549823829},{"_id":"public/2021/01/15/UnityAddressable/image.png","hash":"b593e54494bba768dd99a31e3423951bf38a2989","modified":1671549823829},{"_id":"public/2021/01/15/UnityAddressable/image_3.png","hash":"76b53c2cab1ca3371006b4f51430d58f5b345b9c","modified":1671549823829},{"_id":"public/2021/01/15/UnityAddressable/image_1.png","hash":"68dcba281d2c9360575e4bf9bdebdd9673531ad0","modified":1671549823829},{"_id":"public/2021/01/15/UnityAddressable/image_4.png","hash":"4dcfd323438077dbe6e5a3bbc786fc025cd59992","modified":1671549823829},{"_id":"public/2020/11/01/场景控制流程解读/image_xvaTyll7c-.png","hash":"d2709394118ea32d769f958c45b8c90dec11db66","modified":1671549823829},{"_id":"public/2020/11/01/场景控制流程解读/image_SqQ7dNS1Cb.png","hash":"e6d0294019ea34b7eff6fdaba71a75db8e4e3e8e","modified":1671549823829},{"_id":"public/2020/11/01/场景控制流程解读/image_3NDenmx_Of.png","hash":"64bda00bca99a608c7dd9a6cce91adce8d87e6e4","modified":1671549823829},{"_id":"public/2020/11/01/场景控制流程解读/image_YlLPrr-tq-.png","hash":"c2204a2149f92cce496e9a982954037c7e7d71b7","modified":1671549823829},{"_id":"public/2021/06/22/射箭小游戏/image_9kEuPrkNrd.png","hash":"c8b8f6616c5b738b8fd054afd1c6263790bada76","modified":1671549823829},{"_id":"public/2021/06/22/射箭小游戏/image_eBJv4Og4HY.png","hash":"02b42e758c84f894776d08adcbc3a4c714334d82","modified":1671549823829},{"_id":"public/2021/04/09/新手引导系统/image_BXoVzPQBan.png","hash":"7b893caad075a334d14ae652510ba48ea17426bb","modified":1671549823829},{"_id":"public/2021/03/18/海外版本diff工具/diff_7U8prTz5se.sh","hash":"6a19ddc346b80cc673112e20d7a9fe3fe7c5b2d3","modified":1671549823829},{"_id":"public/2021/03/18/海外版本diff工具/image_lch2ake5uD.png","hash":"f949cfeced33a4e5570c80baa5f92547db892179","modified":1671549823829},{"_id":"public/2021/06/22/射箭小游戏/image_jB99fdiEFy.png","hash":"3f375d7a5b87ffe138474a75e13052c872e692c7","modified":1671549823829},{"_id":"public/2021/06/22/射箭小游戏/image_fNhLsjLAng.png","hash":"e563147acd9032fe830bfdfe2e9f269d1efa1285","modified":1671549823829},{"_id":"public/2021/03/18/海外版本diff工具/image_y5ou7bMrqO.png","hash":"c3a4899e28f67af6d41547b4328646eebc900e57","modified":1671549823829},{"_id":"public/2021/03/18/海外版本diff工具/LanguageDiffWindow_xSMzWdHsMs.cs","hash":"d53e705e11f186e3829f3e4c8bc06d9b960ed7e6","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/BreakpointTransferZip.cs","hash":"9836599859718baa2e38a95ced3ba30ad2878f80","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image.png","hash":"4dc084daa28f331aac8d9eaf714d78c86b9886e7","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image_2.png","hash":"53f44e0a3deb206d153e4c399730bb13d90b1bff","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/DownloadThread.cs","hash":"0743e47abaf9352ede0fcfae1d7c5c7649bb593f","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image_3.png","hash":"6c1fe355b29a4af32482fb6b4c92856c5a41440b","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image_4.png","hash":"ae2e58ac07bdcbb8601ef2bc679ec74405ae2ff3","modified":1671549823829},{"_id":"public/2022/05/15/网络层/image_FgCmH2uIWr.png","hash":"e9f2598948b4d37f385e0d9dcd3dd551ae712007","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image_6.png","hash":"9b47bc017fc9cf51664a590058d3e6f77d4e1f61","modified":1671549823829},{"_id":"public/2022/05/15/网络层/image_skRP8CouhK.png","hash":"921f7b66a0c58a8f834010aa181c21e5a79ba0b3","modified":1671549823829},{"_id":"public/2022/09/30/SQLite替换lua配置表方案实现/image_DulaDCWifu.png","hash":"f65adfbc4e9da1d1e924104f05c41fff07e1a4bf","modified":1671549823829},{"_id":"public/2022/09/30/SQLite替换lua配置表方案实现/image_gp3VMdO0Er.png","hash":"5da7f9d0990829a8a44ca849fde6f12851aa44b4","modified":1671549823829},{"_id":"public/2022/09/30/SQLite替换lua配置表方案实现/image_iqXG1maoM7.png","hash":"e3bf5f18b575591d21f7aeb9d74ba2fbda7ebc64","modified":1671549823829},{"_id":"public/2022/09/30/SQLite替换lua配置表方案实现/image_S_dTSQElWB.png","hash":"7e8a7caabf74f1ea607e3765d8e5391a08ec5b77","modified":1671549823829},{"_id":"public/images/avatar.jpg","hash":"bb4391ba9f6a97c8f3240684441f2adc9cda2097","modified":1671549823829},{"_id":"public/images/favicon.ico","hash":"9ce3dec035012dfb44844770c06f99a91c1fd1cb","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_2gDEMoHZdN.png","hash":"a83a82cf4b3ab7d5ad1ff1d6fc80dfac409afb12","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_4Tro4aIdsT.png","hash":"d0ff8eb1c0912b52653d10db2d6a980c3cf4f1cc","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_dd56kuGgSY.png","hash":"b21219fb2c0c2dd3b1052657dff7ffeb1690dc2b","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_CVmGras3MP.png","hash":"7504581b59903a2cdc8bafb3594e55bd2d78883b","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_S5b-ACEJZV.png","hash":"afad1776cfa394d2e1d2247f0ad20aad0b5bff26","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_TKk-_imcnM.png","hash":"65a20322c21b0c237c2624989523d4347fe72d82","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/image_tl8asSvA18.png","hash":"62338c53d13f814667e51adb71497ac1c9f22d20","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_rVuWhoO_3B.png","hash":"19719997c1f1c1d14d31c82a126e6b78418cd3d7","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_OTeaUItO0F.png","hash":"cfe14c8f82ba44814e95bd6add4b4e8f3bd41683","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/03742e0b64e62e87941c5ff8441ee88a.tmp","hash":"a45ca69241c6a9c1b35a74a30d79b509649fbe61","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/10e1096586b53ed9f944e9d5101c4241.tmp","hash":"ecf33aac36bb784da6fc238d6e3425dadd348bfe","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/1b0894421887907ac78332cb31b81eca.tmp","hash":"6da64e3c49eea38e2e081f69c08448bb003a30b5","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/1ed8f3c55e63efc72047784eb2d715ec.tmp","hash":"ddd4a00492242745a2000ade9d499e9f95de75b5","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/3dbde81dd90a3504f493adc0aeb348f5.tmp","hash":"1f8da8729629523b51d386c16503f9954c26b1e4","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/4c1118d6cb20ce80f3105b95502455c3.tmp","hash":"44efc052ff1e7887d03b006f489268311f81cfc2","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/584310e308f30ee963734e6004db68f7.tmp","hash":"d7577c9a69e2c903eacb6d31a84b848ecf9bd1e3","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/949ad5756a5f0697641e2267e54b6a2a.tmp","hash":"94aebe6c67d9ba374fdf7fbf8d8b7bbb44c3ec4c","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/889d57042c9cc1a988458e23e9617d0d.tmp","hash":"998ac15994c0dc8af4c6c7689d73895ca353e6c4","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","hash":"2fb1cc9ccb18a2cf43d2fdb0b1ba98ba38645a49","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/03742e0b64e62e87941c5ff8441ee88a.tmp","hash":"a45ca69241c6a9c1b35a74a30d79b509649fbe61","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/ebee4d8b9fab274fef93b95923e20796.tmp","hash":"b731d92922e0415fd07202cb2d59377673a076a0","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/1b0894421887907ac78332cb31b81eca.tmp","hash":"6da64e3c49eea38e2e081f69c08448bb003a30b5","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/10e1096586b53ed9f944e9d5101c4241.tmp","hash":"ecf33aac36bb784da6fc238d6e3425dadd348bfe","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/1ed8f3c55e63efc72047784eb2d715ec.tmp","hash":"ddd4a00492242745a2000ade9d499e9f95de75b5","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/3dbde81dd90a3504f493adc0aeb348f5.tmp","hash":"1f8da8729629523b51d386c16503f9954c26b1e4","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/584310e308f30ee963734e6004db68f7.tmp","hash":"d7577c9a69e2c903eacb6d31a84b848ecf9bd1e3","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/4c1118d6cb20ce80f3105b95502455c3.tmp","hash":"44efc052ff1e7887d03b006f489268311f81cfc2","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/889d57042c9cc1a988458e23e9617d0d.tmp","hash":"998ac15994c0dc8af4c6c7689d73895ca353e6c4","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/949ad5756a5f0697641e2267e54b6a2a.tmp","hash":"94aebe6c67d9ba374fdf7fbf8d8b7bbb44c3ec4c","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","hash":"2fb1cc9ccb18a2cf43d2fdb0b1ba98ba38645a49","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/ebee4d8b9fab274fef93b95923e20796.tmp","hash":"b731d92922e0415fd07202cb2d59377673a076a0","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/image_Uj6XZU2I6p.png","hash":"d95c42eea482c4d4a8c6337b06d0d2e462a6397c","modified":1671549823829},{"_id":"public/2021/01/15/UnityAddressable/image_2.png","hash":"d42cda1211dc426ff1ec506b82809b40cec2f20a","modified":1671549823829},{"_id":"public/2021/01/15/UnityAddressable/image_5.png","hash":"22605b6e130132d8e11794c61ba8e17c4d8cc663","modified":1671549823829},{"_id":"public/2021/06/22/射箭小游戏/image_0xirtCNbHW.png","hash":"9d14ae127441c5a0dc526d163dabc71131bc5eef","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image_1.png","hash":"12d4078e5bc1dac268c7a79bdd343de1e6270686","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image_5.png","hash":"3603d32163205b13b4f180668d4f42fdbcd304d8","modified":1671549823829},{"_id":"public/2022/05/15/网络层/image_Dxda6OJqZV.png","hash":"b27e547ded75cfe5855461eab8d65e982176594f","modified":1671549823829},{"_id":"public/2022/09/30/SQLite替换lua配置表方案实现/image_SUK4XBL1kd.png","hash":"bb9f6679d1c2ae6a64e276ad5df9a3984cf4da21","modified":1671549823829},{"_id":"public/2021/09/10/游戏热更新/image_7.png","hash":"b952999c3c4928393c3e9e4dbca184de162365cb","modified":1671549823829},{"_id":"public/2022/05/15/网络层/image_UuuQAgKiON.png","hash":"6af59f45e01c2f5d2ec3c82d9452f79490433be4","modified":1671549823829},{"_id":"public/css/main.css","hash":"93b02561c616247e4323bd2b0f9fdf5f7e88cd98","modified":1671549823829},{"_id":"public/js/algolia-search.js","hash":"a360423984cdd915d04365c51bcab440e52d7223","modified":1671549823829},{"_id":"public/js/bookmark.js","hash":"e45e1fbb7c6d645e9c410759486216e570d02bef","modified":1671549823829},{"_id":"public/js/local-search.js","hash":"da2051e7cab184ae4aa64457c5db7476b4645fdc","modified":1671549823829},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1671549823829},{"_id":"public/js/next-boot.js","hash":"c2a04055d8edec03dc74e1c45d83bd3b51467de0","modified":1671549823829},{"_id":"public/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":1671549823829},{"_id":"public/js/utils.js","hash":"97cb0ac75f354119caf75365456ae1806be1c0c9","modified":1671549823829},{"_id":"public/resume/index.html","hash":"aeb2f4c2bc0433bc661b764935bf715b14fa0437","modified":1671549823829},{"_id":"public/js/schemes/muse.js","hash":"9d15d0d6a58b1df74827288f117af22b4b6aafe5","modified":1671549823829},{"_id":"public/resume/static/css/app.09714b061e6de3675d5c962b02cb6910.css","hash":"2bde48b4b33c3ea736aad832f5b75e56beead8ae","modified":1671549823829},{"_id":"public/resume/static/js/app.6988a4e594558078f560.js","hash":"effdde22e87463983e5e9e1bd3058019acdfee67","modified":1671549823829},{"_id":"public/resume/static/js/manifest.027b4dbe286fae6ac3f6.js","hash":"f1dac8a3ae8414b6192849487102db22f6c042a7","modified":1671549823829},{"_id":"public/2021/12/27/UGUIText组件实现图文混排——原理篇/image_yhRARumho4.png","hash":"7e11a9a27bd8eb5aec380d01130fadc37d098e36","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/4e5d287689f65ab1fab2db8cc848f218.tmp","hash":"9b1243d32f8fd6f53ed1d1902dee6f5507b26b7b","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/4e5d287689f65ab1fab2db8cc848f218.tmp","hash":"9b1243d32f8fd6f53ed1d1902dee6f5507b26b7b","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/anim4_tx9hVKst4O.gif","hash":"3eadaa2a5aa1a89cea677023085b5689799895cd","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/anim5_GKfO5IVVAN.gif","hash":"f4672bc46a59f3e250250b9ac3477bc96029cf66","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/anim6_MAvMAv1XJM.gif","hash":"46aa04b2ccde5a4e1a3b79f4b4e51213d38ba047","modified":1671549823829},{"_id":"public/2021/02/25/UGUIText组件实现图文混排——项目优化/dc44a3625ccf585467173a0f9a8e574f.tmp","hash":"810358f65b9ecffa8d6231678384210be11470d4","modified":1671549823829},{"_id":"public/2021/11/11/UGUIText组件实现图文混排——项目优化2/dc44a3625ccf585467173a0f9a8e574f.tmp","hash":"810358f65b9ecffa8d6231678384210be11470d4","modified":1671549823829},{"_id":"public/resume/static/js/vendor.1cc61fe7e59cf8353384.js","hash":"156c3abc419ccae6dc107178a1a43d653683ab09","modified":1671549823829},{"_id":"public/2021/06/22/射箭小游戏/image_bPic0MSA86.png","hash":"09af866ac1c4e961095453136e2f4f1aab2caf52","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/anim3__eYFZGZolQ.gif","hash":"f9c8c3bb97660bccb305cc01ee609d65e4bd27a5","modified":1671549823829},{"_id":"public/resume/static/js/vendor.1cc61fe7e59cf8353384.js.map","hash":"7d9086b3495e8904892f7a1a50171d6894fc2c30","modified":1671549823829},{"_id":"public/2022/01/10/ParticleEffectForUGUI（UIParticle）/uiparticle_wQzXgIMX6n.gif","hash":"2c0e39fe68c0af74f62e2a2c9e2a0c04a0c380a6","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/anim2_ocvF-p7l04.gif","hash":"1636ffeee206fece762c41961119c5a72c99963a","modified":1671549823829},{"_id":"public/2022/03/05/UIParticle组件的使用问题/uiparticleCompare.gif","hash":"4198dc194b900bc0e442a46415e8721078530e59","modified":1671549823829},{"_id":"themes/next/source/images/wechatpay.jpg","hash":"75b519ad75104f271355d349dbe609e1cfba8a2b","modified":1671550521189},{"_id":"public/images/wechatpay.jpg","hash":"75b519ad75104f271355d349dbe609e1cfba8a2b","modified":1671550599008}],"Category":[{"name":"前端","_id":"clbwdlv3r0004mcq01fgwdxzp"},{"name":"工作日记","parent":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv3y000hmcq0dnpx3sak"},{"name":"工具","_id":"clbwdlv41000qmcq041rz9hav"},{"name":"前端框架","_id":"clbwdlv450017mcq0a9fmaxm5"},{"name":"Unity游戏开发","_id":"clbwdlv46001fmcq01frac354"},{"name":"Unity","parent":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4j002smcq0gd51gkho"},{"name":"js","_id":"clbwdlv4l002zmcq0f7l64elk"},{"name":"业务系统","parent":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4n003amcq09f6l9fu4"},{"name":"总结","_id":"clbwdlv4r003xmcq0hb0u5ubt"},{"name":"基础系统","parent":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4s0048mcq0exn19nwg"},{"name":"特效","parent":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv4t004amcq04n7yfkrv"},{"name":"图文混排","parent":"clbwdlv4n003amcq09f6l9fu4","_id":"clbwdlv4v0052mcq0gd7lasxh"},{"name":"资源管理","parent":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv4x005imcq02bw9c141"},{"name":"小游戏","parent":"clbwdlv4n003amcq09f6l9fu4","_id":"clbwdlv500066mcq0djzd8b5y"}],"Data":[],"Page":[{"title":"archives","date":"2017-06-13T09:01:56.000Z","type":"archives","comments":0,"_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2017-06-13 17:01:56\ntype: \"archives\"\ncomments: false\n---\n","updated":"2022-12-06T15:30:38.871Z","path":"archives/index.html","layout":"page","_id":"clbwdlv3m0000mcq06fy0ekjz","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2017-10-15T05:52:41.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-10-15 13:52:41\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-12-06T15:30:38.877Z","path":"categories/index.html","layout":"page","_id":"clbwdlv3q0002mcq0hx5e7qpi","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-06-13T08:54:19.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-06-13 16:54:19\ntype: \"tags\"\ncomments: false\n---\n","updated":"2022-12-06T15:30:38.887Z","path":"tags/index.html","layout":"page","_id":"clbwdlv3s0005mcq07dtpcxcu","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"搭建mock层【工作日记01】","date":"2019-09-09T16:00:00.000Z","_content":"\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029eda4cc75.jpg)\n\n<!-- more -->\n\n> 什么是mock？mock指的是模拟。\n\n在软件工程中当开发工作不同步情况下为了不断工作链，而模拟其中一环节让工作得以持续下去，符合这种情况的工作我们就叫mock。当然我们常说的mock是指模拟网络请求前后端通讯。\n\n前端和后端的协同工作中，为了不串行工作流加快开发效率，往往需要制定协议，而前端只需要后端提供数据接口，所以这份协议就是接口协议。根据这份协议前端就可以mock模仿数据，达到前后端并行开发。\n\nmock可以分为以下几种方式：\n1. 侵入业务代码，设置开关\n2. 利用webpack构建工具拦截请求\n3. 搭建mock服务层代理响应\n4. 利用浏览器插件拦截请求\n\n\ncms-web是由vue-cli3脚手架搭建的项目，依赖webpack打包工具，可以利用devServer.defore api对请求拦截处理，返回mock数据，引入mock层。\n\n所以选择上面第二种方式，原因总结为：**无侵入，简单快捷易上手**。\n\n## mockjs\n借助mockjs实现mock数据逻辑，以下是最简单的实现：\n```  \nvar Mock = require('mockjs');\n...\nbefore(app, server) {\n    app.get('/api/action/game/list', function (req, res, next) {\n      var data = Mock.mock({\n        code: 0,\n        data: {\n          'totalCount|1-100': 1,\n          'datas|1-10': [{\n            'id|+1': 1,\n            'dataName|1-5': 'name',\n            'dataType|1-2': 1,\n            'dataScope': '1,100',\n            'defaultValue|1-5': 'value',\n            'dataStatus|0-1': 0,\n            'remark|1-5': 'str',\n            'record|0-1': 0,\n            'series|1-3': [{\n              'id|+1': 1,\n              'type|1-2': 2,\n              'name|1-2': '小云熊奇妙故事',\n              'mark': null,\n              'status': 0\n            }]\n          }]\n        }\n      })\n    \n      res.json(data)\n    })\n}\n```\n\n这里我们简单介绍一下mockjs的使用规范，详细移至[mockjs文档](https://github.com/nuysoft/Mock/wiki/Syntax-Specification)\n\n数据模板中属性主要由三个部分构成：属性名，生成规则和属性值\n```\n'属性名|生成规则': 属性值\n```\n以'dataName|1-5': 'name'为例，dataName是属性值，name是属性值，1-5是生成规则，对应String类型属性代表重复随机次数1到5次，假如对应Number类型代表生成随机数的最小值1和最大值5。'id|+1': 1表示id值会从开始叠加。\n\n## 优化mock层\n话题回来mock层搭建的迭代优化，首先分析上面实现存在的问题：\n- 所有的请求都会经过这一层，mock层匹配到请求就会被拦截，需要设置开关\n- 配置的请求和数据模板会越来越多，逻辑与配置混合会导致代码越来越臃肿，逻辑和配置要分离\n\n把mock层从before函数中抽离，并设置开关机制：\n```\nvar Mock = require('mockjs');\n\nclass MockHandler {\n  constructor() {}\n  \n  handle(app, server) {\n    app.get('/api/action/game/list', function (req, res, next) {\n      if (!!process.env.mock || !!req.query._is_mock) {\n        var data = Mock.mock({\n          code: 0,\n          data: {\n            'totalCount|1-100': 1,\n            'datas|1-10': [{\n              'id|+1': 1,\n              'dataName|1-5': 'name',\n              'dataType|1-2': 1,\n              'dataScope': '1,100',\n              'defaultValue|1-5': 'value',\n              'dataStatus|0-1': 0,\n              'remark|1-5': 'str',\n              'record|0-1': 0,\n              'series|1-3': [{\n                'id|+1': 1,\n                'type|1-2': 2,\n                'name|1-2': '小云熊奇妙故事',\n                'mark': null,\n                'status': 0\n              }]\n            }]\n          }\n        });\n        res.json(data);\n      } else {\n        next();\n      }\n    })\n  }\n}\n\nmodule.exports = new MockHandler(config);\n```\n设置了两个并联开关，分别设置环境变量mock或者往请求查询参数加入_is_mock变量都可以通过验证。\n\n逻辑与配置分离：\n```\nconst config = {\n    '/api/action/game/list': {\n      code: 0,\n      data: {\n        'totalCount|1-100': 1,\n        'datas|1-10': [{\n          'id|+1': 1,\n          'dataName|1-5': 'name',\n          'dataType|1-2': 1,\n          'dataScope': '1,100',\n          'defaultValue|1-5': 'value',\n          'dataStatus|0-1': 0,\n          'remark|1-5': 'str',\n          'record|0-1': 0,\n          'series|1-3': [{\n            'id|+1': 1,\n            'type|1-2': 2,\n            'name|1-2': '小云熊奇妙故事',\n            'mark': null,\n            'status': 0\n          }]\n        }]\n      }\n    }\n}\n\nclass MockHandler {\n  constructor(config) {\n      this.config = config\n  }\n  \n  handle(app, server) {\n    Object.keys(this.config).forEach(route => {\n        app.get(route, function (req, res, next) {\n            if (!!process.env.mock || !!req.query._is_mock) {\n                var data = Mock.mock({\n                  code: 0,\n                  data: {\n                    'totalCount|1-100': 1,\n                    'datas|1-10': [{\n                      'id|+1': 1,\n                      'dataName|1-5': 'name',\n                      'dataType|1-2': 1,\n                      'dataScope': '1,100',\n                      'defaultValue|1-5': 'value',\n                      'dataStatus|0-1': 0,\n                      'remark|1-5': 'str',\n                      'record|0-1': 0,\n                      'series|1-3': [{\n                        'id|+1': 1,\n                        'type|1-2': 2,\n                        'name|1-2': '小云熊奇妙故事',\n                        'mark': null,\n                        'status': 0\n                      }]\n                    }]\n                  }\n                })\n                res.json(data);\n            } else {\n                next();\n            }\n        })\n    })\n  }\n}\n```\n革命尚未成功，旧的问题的解决了，但同时又出现的新的问题：\n- 只支持get请求，不支持post请求\n- get方法的回调函数中重复了很多次对mock开关条件的判断，需要提取出来\n\n针对第一个问题，只需要将get/post请求方法配置到route就好了，本身属于配置逻辑的范围之内。而第二个问题，可以提炼函数，利用函数式编程，利用高阶函数返回回调函数，这样代码会简洁很多，具体优化如下：\n```\nconst config = {\n    'GET /api/action/game/list': {\n      code: 0,\n      data: {\n        'totalCount|1-100': 1,\n        'datas|1-10': [{\n          'id|+1': 1,\n          'dataName|1-5': 'name',\n          'dataType|1-2': 1,\n          'dataScope': '1,100',\n          'defaultValue|1-5': 'value',\n          'dataStatus|0-1': 0,\n          'remark|1-5': 'str',\n          'record|0-1': 0,\n          'series|1-3': [{\n            'id|+1': 1,\n            'type|1-2': 2,\n            'name|1-2': '小云熊奇妙故事',\n            'mark': null,\n            'status': 0\n          }]\n        }]\n      }\n    }\n}\n\nclass MockHandler {\n  constructor(config) {\n    this.init(config);\n\n    this.config = config;\n  }\n  init(config) {\n    Object.keys(config).forEach(route => {\n      const model = config[route];\n\n      function callbackWarpper(model) {\n        return function (req, res, next) {\n          if (isMock || !!req.query._is_mock) {\n            var data = Mock.mock({\n              code: 0,\n              data: model\n            });\n            res.json(data);\n          } else {\n            next();\n          }\n        };\n      }\n      config[route] = callbackWarpper(model);\n    });\n  }\n  handle(app, server) {\n    for (let route in this.config) {\n      let [method, path] = route.split(' ')\n      let reg = new RegExp(path);\n      let callback = this.config[route];\n      app[method.toLowerCase()](reg, callback);\n    }\n  }\n}\n```\n\n写到这里本以为自己写出了一手漂亮的代码，但是突然想起，app实例上有个use()可以用来忽略请求方法get/post，然后在内部对请求做匹配处理，这样代码会更加的精简和容易被理解：\n```\nconst isMock = !!process.env.mock;\nconst config = {\n    '/api/action/game/list': {\n      code: 0,\n      data: {\n        'totalCount|1-100': 1,\n        'datas|1-10': [{\n          'id|+1': 1,\n          'dataName|1-5': 'name',\n          'dataType|1-2': 1,\n          'dataScope': '1,100',\n          'defaultValue|1-5': 'value',\n          'dataStatus|0-1': 0,\n          'remark|1-5': 'str',\n          'record|0-1': 0,\n          'series|1-3': [{\n            'id|+1': 1,\n            'type|1-2': 2,\n            'name|1-2': '小云熊奇妙故事',\n            'mark': null,\n            'status': 0\n          }]\n        }]\n      }\n    }\n}\n\nclass MockHandler {\n  constructor(config) {\n    this.config = config;\n  }\n  handle(app, server) {\n    app.use((req, res, next) => {\n      if (isMock || !!req.query._is_mock) {\n        Object.keys(this.config).forEach(route => {\n          const reg = new RegExp(route)\n          const model = this.config[route]\n          if (reg.test(req.path)) {\n            var data = Mock.mock({\n              code: 0,\n              data: model\n            });\n            return res.json(data);\n          }\n        })\n        next()\n      } else {\n        next()\n      }\n    })\n  }\n}\n```\n\n这个方案原理是利用webpack devServer在发送请求时候做了一层拦截，请求并没有经过真实的网络环境，但是利用webpack devServer其实有个弊端，当我想增加一条记录时，需要再次重启webpack，本身属于对webpack配置的修改，除利用node watch功能监听文件改动运行脚本重启的方法外，几乎想不出有更好的方法了，这个痛点用一个名词来形容就是不支持热插拔。\n\n## 浏览器插件\n有没有不涉及到编程的mock方案呢？有，**利用浏览器插件拦截请求或篡改响应。**\n\n这种方案属于利用工具，不用在代码层面引入mock层也可以拦击请求，好处是相对前面介绍的方案，更加的具有普适性，可以让测试小伙伴在后端接口发生异常的情况下依然畅通无阻的测试前端功能。\n\n这样的插件我推荐： **Ajax Interceptor** [下载](https://chrome.google.com/webstore/detail/ajax-interceptor/nhpjggchkhnlbgdfcbgpdpkifemomkpg) [源代码](https://github.com/YGYOOO/ajax-interceptor)\n\n## 工具\n不想用浏览器插件还有其他的工具吗？当然有，就是我们熟悉的postman，详细请参考下面文章：\n\n[Postman高级应用（11）：可以开始对接了吗——Mock服务](https://blog.csdn.net/qq598535550/article/details/87924629)\n\n","source":"_posts/01-搭建mock层.md","raw":"---\ntitle: 搭建mock层【工作日记01】\ndate: 2019-9-10\ntags: []\ncategories: [前端,工作日记]\n---\n\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029eda4cc75.jpg)\n\n<!-- more -->\n\n> 什么是mock？mock指的是模拟。\n\n在软件工程中当开发工作不同步情况下为了不断工作链，而模拟其中一环节让工作得以持续下去，符合这种情况的工作我们就叫mock。当然我们常说的mock是指模拟网络请求前后端通讯。\n\n前端和后端的协同工作中，为了不串行工作流加快开发效率，往往需要制定协议，而前端只需要后端提供数据接口，所以这份协议就是接口协议。根据这份协议前端就可以mock模仿数据，达到前后端并行开发。\n\nmock可以分为以下几种方式：\n1. 侵入业务代码，设置开关\n2. 利用webpack构建工具拦截请求\n3. 搭建mock服务层代理响应\n4. 利用浏览器插件拦截请求\n\n\ncms-web是由vue-cli3脚手架搭建的项目，依赖webpack打包工具，可以利用devServer.defore api对请求拦截处理，返回mock数据，引入mock层。\n\n所以选择上面第二种方式，原因总结为：**无侵入，简单快捷易上手**。\n\n## mockjs\n借助mockjs实现mock数据逻辑，以下是最简单的实现：\n```  \nvar Mock = require('mockjs');\n...\nbefore(app, server) {\n    app.get('/api/action/game/list', function (req, res, next) {\n      var data = Mock.mock({\n        code: 0,\n        data: {\n          'totalCount|1-100': 1,\n          'datas|1-10': [{\n            'id|+1': 1,\n            'dataName|1-5': 'name',\n            'dataType|1-2': 1,\n            'dataScope': '1,100',\n            'defaultValue|1-5': 'value',\n            'dataStatus|0-1': 0,\n            'remark|1-5': 'str',\n            'record|0-1': 0,\n            'series|1-3': [{\n              'id|+1': 1,\n              'type|1-2': 2,\n              'name|1-2': '小云熊奇妙故事',\n              'mark': null,\n              'status': 0\n            }]\n          }]\n        }\n      })\n    \n      res.json(data)\n    })\n}\n```\n\n这里我们简单介绍一下mockjs的使用规范，详细移至[mockjs文档](https://github.com/nuysoft/Mock/wiki/Syntax-Specification)\n\n数据模板中属性主要由三个部分构成：属性名，生成规则和属性值\n```\n'属性名|生成规则': 属性值\n```\n以'dataName|1-5': 'name'为例，dataName是属性值，name是属性值，1-5是生成规则，对应String类型属性代表重复随机次数1到5次，假如对应Number类型代表生成随机数的最小值1和最大值5。'id|+1': 1表示id值会从开始叠加。\n\n## 优化mock层\n话题回来mock层搭建的迭代优化，首先分析上面实现存在的问题：\n- 所有的请求都会经过这一层，mock层匹配到请求就会被拦截，需要设置开关\n- 配置的请求和数据模板会越来越多，逻辑与配置混合会导致代码越来越臃肿，逻辑和配置要分离\n\n把mock层从before函数中抽离，并设置开关机制：\n```\nvar Mock = require('mockjs');\n\nclass MockHandler {\n  constructor() {}\n  \n  handle(app, server) {\n    app.get('/api/action/game/list', function (req, res, next) {\n      if (!!process.env.mock || !!req.query._is_mock) {\n        var data = Mock.mock({\n          code: 0,\n          data: {\n            'totalCount|1-100': 1,\n            'datas|1-10': [{\n              'id|+1': 1,\n              'dataName|1-5': 'name',\n              'dataType|1-2': 1,\n              'dataScope': '1,100',\n              'defaultValue|1-5': 'value',\n              'dataStatus|0-1': 0,\n              'remark|1-5': 'str',\n              'record|0-1': 0,\n              'series|1-3': [{\n                'id|+1': 1,\n                'type|1-2': 2,\n                'name|1-2': '小云熊奇妙故事',\n                'mark': null,\n                'status': 0\n              }]\n            }]\n          }\n        });\n        res.json(data);\n      } else {\n        next();\n      }\n    })\n  }\n}\n\nmodule.exports = new MockHandler(config);\n```\n设置了两个并联开关，分别设置环境变量mock或者往请求查询参数加入_is_mock变量都可以通过验证。\n\n逻辑与配置分离：\n```\nconst config = {\n    '/api/action/game/list': {\n      code: 0,\n      data: {\n        'totalCount|1-100': 1,\n        'datas|1-10': [{\n          'id|+1': 1,\n          'dataName|1-5': 'name',\n          'dataType|1-2': 1,\n          'dataScope': '1,100',\n          'defaultValue|1-5': 'value',\n          'dataStatus|0-1': 0,\n          'remark|1-5': 'str',\n          'record|0-1': 0,\n          'series|1-3': [{\n            'id|+1': 1,\n            'type|1-2': 2,\n            'name|1-2': '小云熊奇妙故事',\n            'mark': null,\n            'status': 0\n          }]\n        }]\n      }\n    }\n}\n\nclass MockHandler {\n  constructor(config) {\n      this.config = config\n  }\n  \n  handle(app, server) {\n    Object.keys(this.config).forEach(route => {\n        app.get(route, function (req, res, next) {\n            if (!!process.env.mock || !!req.query._is_mock) {\n                var data = Mock.mock({\n                  code: 0,\n                  data: {\n                    'totalCount|1-100': 1,\n                    'datas|1-10': [{\n                      'id|+1': 1,\n                      'dataName|1-5': 'name',\n                      'dataType|1-2': 1,\n                      'dataScope': '1,100',\n                      'defaultValue|1-5': 'value',\n                      'dataStatus|0-1': 0,\n                      'remark|1-5': 'str',\n                      'record|0-1': 0,\n                      'series|1-3': [{\n                        'id|+1': 1,\n                        'type|1-2': 2,\n                        'name|1-2': '小云熊奇妙故事',\n                        'mark': null,\n                        'status': 0\n                      }]\n                    }]\n                  }\n                })\n                res.json(data);\n            } else {\n                next();\n            }\n        })\n    })\n  }\n}\n```\n革命尚未成功，旧的问题的解决了，但同时又出现的新的问题：\n- 只支持get请求，不支持post请求\n- get方法的回调函数中重复了很多次对mock开关条件的判断，需要提取出来\n\n针对第一个问题，只需要将get/post请求方法配置到route就好了，本身属于配置逻辑的范围之内。而第二个问题，可以提炼函数，利用函数式编程，利用高阶函数返回回调函数，这样代码会简洁很多，具体优化如下：\n```\nconst config = {\n    'GET /api/action/game/list': {\n      code: 0,\n      data: {\n        'totalCount|1-100': 1,\n        'datas|1-10': [{\n          'id|+1': 1,\n          'dataName|1-5': 'name',\n          'dataType|1-2': 1,\n          'dataScope': '1,100',\n          'defaultValue|1-5': 'value',\n          'dataStatus|0-1': 0,\n          'remark|1-5': 'str',\n          'record|0-1': 0,\n          'series|1-3': [{\n            'id|+1': 1,\n            'type|1-2': 2,\n            'name|1-2': '小云熊奇妙故事',\n            'mark': null,\n            'status': 0\n          }]\n        }]\n      }\n    }\n}\n\nclass MockHandler {\n  constructor(config) {\n    this.init(config);\n\n    this.config = config;\n  }\n  init(config) {\n    Object.keys(config).forEach(route => {\n      const model = config[route];\n\n      function callbackWarpper(model) {\n        return function (req, res, next) {\n          if (isMock || !!req.query._is_mock) {\n            var data = Mock.mock({\n              code: 0,\n              data: model\n            });\n            res.json(data);\n          } else {\n            next();\n          }\n        };\n      }\n      config[route] = callbackWarpper(model);\n    });\n  }\n  handle(app, server) {\n    for (let route in this.config) {\n      let [method, path] = route.split(' ')\n      let reg = new RegExp(path);\n      let callback = this.config[route];\n      app[method.toLowerCase()](reg, callback);\n    }\n  }\n}\n```\n\n写到这里本以为自己写出了一手漂亮的代码，但是突然想起，app实例上有个use()可以用来忽略请求方法get/post，然后在内部对请求做匹配处理，这样代码会更加的精简和容易被理解：\n```\nconst isMock = !!process.env.mock;\nconst config = {\n    '/api/action/game/list': {\n      code: 0,\n      data: {\n        'totalCount|1-100': 1,\n        'datas|1-10': [{\n          'id|+1': 1,\n          'dataName|1-5': 'name',\n          'dataType|1-2': 1,\n          'dataScope': '1,100',\n          'defaultValue|1-5': 'value',\n          'dataStatus|0-1': 0,\n          'remark|1-5': 'str',\n          'record|0-1': 0,\n          'series|1-3': [{\n            'id|+1': 1,\n            'type|1-2': 2,\n            'name|1-2': '小云熊奇妙故事',\n            'mark': null,\n            'status': 0\n          }]\n        }]\n      }\n    }\n}\n\nclass MockHandler {\n  constructor(config) {\n    this.config = config;\n  }\n  handle(app, server) {\n    app.use((req, res, next) => {\n      if (isMock || !!req.query._is_mock) {\n        Object.keys(this.config).forEach(route => {\n          const reg = new RegExp(route)\n          const model = this.config[route]\n          if (reg.test(req.path)) {\n            var data = Mock.mock({\n              code: 0,\n              data: model\n            });\n            return res.json(data);\n          }\n        })\n        next()\n      } else {\n        next()\n      }\n    })\n  }\n}\n```\n\n这个方案原理是利用webpack devServer在发送请求时候做了一层拦截，请求并没有经过真实的网络环境，但是利用webpack devServer其实有个弊端，当我想增加一条记录时，需要再次重启webpack，本身属于对webpack配置的修改，除利用node watch功能监听文件改动运行脚本重启的方法外，几乎想不出有更好的方法了，这个痛点用一个名词来形容就是不支持热插拔。\n\n## 浏览器插件\n有没有不涉及到编程的mock方案呢？有，**利用浏览器插件拦截请求或篡改响应。**\n\n这种方案属于利用工具，不用在代码层面引入mock层也可以拦击请求，好处是相对前面介绍的方案，更加的具有普适性，可以让测试小伙伴在后端接口发生异常的情况下依然畅通无阻的测试前端功能。\n\n这样的插件我推荐： **Ajax Interceptor** [下载](https://chrome.google.com/webstore/detail/ajax-interceptor/nhpjggchkhnlbgdfcbgpdpkifemomkpg) [源代码](https://github.com/YGYOOO/ajax-interceptor)\n\n## 工具\n不想用浏览器插件还有其他的工具吗？当然有，就是我们熟悉的postman，详细请参考下面文章：\n\n[Postman高级应用（11）：可以开始对接了吗——Mock服务](https://blog.csdn.net/qq598535550/article/details/87924629)\n\n","slug":"01-搭建mock层","published":1,"updated":"2022-12-06T15:30:37.602Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3o0001mcq033jo57cx","content":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029eda4cc75.jpg\" alt=\"我是图片\"></p>\n<span id=\"more\"></span>\n<blockquote>\n<p>什么是mock？mock指的是模拟。</p>\n</blockquote>\n<p>在软件工程中当开发工作不同步情况下为了不断工作链，而模拟其中一环节让工作得以持续下去，符合这种情况的工作我们就叫mock。当然我们常说的mock是指模拟网络请求前后端通讯。</p>\n<p>前端和后端的协同工作中，为了不串行工作流加快开发效率，往往需要制定协议，而前端只需要后端提供数据接口，所以这份协议就是接口协议。根据这份协议前端就可以mock模仿数据，达到前后端并行开发。</p>\n<p>mock可以分为以下几种方式：</p>\n<ol>\n<li>侵入业务代码，设置开关</li>\n<li>利用webpack构建工具拦截请求</li>\n<li>搭建mock服务层代理响应</li>\n<li>利用浏览器插件拦截请求</li>\n</ol>\n<p>cms-web是由vue-cli3脚手架搭建的项目，依赖webpack打包工具，可以利用devServer.defore api对请求拦截处理，返回mock数据，引入mock层。</p>\n<p>所以选择上面第二种方式，原因总结为：<strong>无侵入，简单快捷易上手</strong>。</p>\n<h2 id=\"mockjs\"><a href=\"#mockjs\" class=\"headerlink\" title=\"mockjs\"></a>mockjs</h2><p>借助mockjs实现mock数据逻辑，以下是最简单的实现：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Mock</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mockjs&#x27;</span>);</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"title function_\">before</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/api/action/game/list&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">              <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">            &#125;]</span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">      res.<span class=\"title function_\">json</span>(data)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里我们简单介绍一下mockjs的使用规范，详细移至<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/nuysoft/Mock/wiki/Syntax-Specification\">mockjs文档</a></p>\n<p>数据模板中属性主要由三个部分构成：属性名，生成规则和属性值<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;属性名|生成规则&#x27;: 属性值</span><br></pre></td></tr></table></figure><br>以’dataName|1-5’: ‘name’为例，dataName是属性值，name是属性值，1-5是生成规则，对应String类型属性代表重复随机次数1到5次，假如对应Number类型代表生成随机数的最小值1和最大值5。’id|+1’: 1表示id值会从开始叠加。</p>\n<h2 id=\"优化mock层\"><a href=\"#优化mock层\" class=\"headerlink\" title=\"优化mock层\"></a>优化mock层</h2><p>话题回来mock层搭建的迭代优化，首先分析上面实现存在的问题：</p>\n<ul>\n<li>所有的请求都会经过这一层，mock层匹配到请求就会被拦截，需要设置开关</li>\n<li>配置的请求和数据模板会越来越多，逻辑与配置混合会导致代码越来越臃肿，逻辑和配置要分离</li>\n</ul>\n<p>把mock层从before函数中抽离，并设置开关机制：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Mock</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mockjs&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">handle</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/api/action/game/list&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!!process.<span class=\"property\">env</span>.<span class=\"property\">mock</span> || !!req.<span class=\"property\">query</span>.<span class=\"property\">_is_mock</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">              <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            &#125;]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        res.<span class=\"title function_\">json</span>(data);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">next</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">MockHandler</span>(config);</span><br></pre></td></tr></table></figure><br>设置了两个并联开关，分别设置环境变量mock或者往请求查询参数加入_is_mock变量都可以通过验证。</p>\n<p>逻辑与配置分离：<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;/api/action/game/list&#x27;</span>: &#123;</span><br><span class=\"line\">      code: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"keyword\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(config) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.config = config</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  handle(app, server) &#123;</span><br><span class=\"line\">    Object.keys(<span class=\"keyword\">this</span>.config).forEach(route =&gt; &#123;</span><br><span class=\"line\">        app.<span class=\"keyword\">get</span>(route, function (req, res, next) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!!process.env.mock || !!req.query._is_mock) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> <span class=\"keyword\">data</span> = Mock.mock(&#123;</span><br><span class=\"line\">                  code: <span class=\"number\">0</span>,</span><br><span class=\"line\">                  <span class=\"keyword\">data</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">                      <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">                        <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                      &#125;]</span><br><span class=\"line\">                    &#125;]</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                res.json(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                next();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>革命尚未成功，旧的问题的解决了，但同时又出现的新的问题：</p>\n<ul>\n<li>只支持get请求，不支持post请求</li>\n<li>get方法的回调函数中重复了很多次对mock开关条件的判断，需要提取出来</li>\n</ul>\n<p>针对第一个问题，只需要将get/post请求方法配置到route就好了，本身属于配置逻辑的范围之内。而第二个问题，可以提炼函数，利用函数式编程，利用高阶函数返回回调函数，这样代码会简洁很多，具体优化如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;GET /api/action/game/list&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">config</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">init</span>(config);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">config</span> = config;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\">config</span>) &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(config).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">route</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> model = config[route];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">function</span> <span class=\"title function_\">callbackWarpper</span>(<span class=\"params\">model</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (isMock || !!req.<span class=\"property\">query</span>.<span class=\"property\">_is_mock</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"attr\">data</span>: model</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            res.<span class=\"title function_\">json</span>(data);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      config[route] = <span class=\"title function_\">callbackWarpper</span>(model);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">handle</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> route <span class=\"keyword\">in</span> <span class=\"variable language_\">this</span>.<span class=\"property\">config</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> [method, path] = route.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(path);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> callback = <span class=\"variable language_\">this</span>.<span class=\"property\">config</span>[route];</span><br><span class=\"line\">      app[method.<span class=\"title function_\">toLowerCase</span>()](reg, callback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>写到这里本以为自己写出了一手漂亮的代码，但是突然想起，app实例上有个use()可以用来忽略请求方法get/post，然后在内部对请求做匹配处理，这样代码会更加的精简和容易被理解：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isMock = !!process.<span class=\"property\">env</span>.<span class=\"property\">mock</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;/api/action/game/list&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">config</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">config</span> = config;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">handle</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    app.<span class=\"title function_\">use</span>(<span class=\"function\">(<span class=\"params\">req, res, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isMock || !!req.<span class=\"property\">query</span>.<span class=\"property\">_is_mock</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">config</span>).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">route</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(route)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> model = <span class=\"variable language_\">this</span>.<span class=\"property\">config</span>[route]</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (reg.<span class=\"title function_\">test</span>(req.<span class=\"property\">path</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"attr\">data</span>: model</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res.<span class=\"title function_\">json</span>(data);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"title function_\">next</span>()</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">next</span>()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个方案原理是利用webpack devServer在发送请求时候做了一层拦截，请求并没有经过真实的网络环境，但是利用webpack devServer其实有个弊端，当我想增加一条记录时，需要再次重启webpack，本身属于对webpack配置的修改，除利用node watch功能监听文件改动运行脚本重启的方法外，几乎想不出有更好的方法了，这个痛点用一个名词来形容就是不支持热插拔。</p>\n<h2 id=\"浏览器插件\"><a href=\"#浏览器插件\" class=\"headerlink\" title=\"浏览器插件\"></a>浏览器插件</h2><p>有没有不涉及到编程的mock方案呢？有，<strong>利用浏览器插件拦截请求或篡改响应。</strong></p>\n<p>这种方案属于利用工具，不用在代码层面引入mock层也可以拦击请求，好处是相对前面介绍的方案，更加的具有普适性，可以让测试小伙伴在后端接口发生异常的情况下依然畅通无阻的测试前端功能。</p>\n<p>这样的插件我推荐： <strong>Ajax Interceptor</strong> <a target=\"_blank\" rel=\"noopener\" href=\"https://chrome.google.com/webstore/detail/ajax-interceptor/nhpjggchkhnlbgdfcbgpdpkifemomkpg\">下载</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/YGYOOO/ajax-interceptor\">源代码</a></p>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p>不想用浏览器插件还有其他的工具吗？当然有，就是我们熟悉的postman，详细请参考下面文章：</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/qq598535550/article/details/87924629\">Postman高级应用（11）：可以开始对接了吗——Mock服务</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029eda4cc75.jpg\" alt=\"我是图片\"></p>","more":"<blockquote>\n<p>什么是mock？mock指的是模拟。</p>\n</blockquote>\n<p>在软件工程中当开发工作不同步情况下为了不断工作链，而模拟其中一环节让工作得以持续下去，符合这种情况的工作我们就叫mock。当然我们常说的mock是指模拟网络请求前后端通讯。</p>\n<p>前端和后端的协同工作中，为了不串行工作流加快开发效率，往往需要制定协议，而前端只需要后端提供数据接口，所以这份协议就是接口协议。根据这份协议前端就可以mock模仿数据，达到前后端并行开发。</p>\n<p>mock可以分为以下几种方式：</p>\n<ol>\n<li>侵入业务代码，设置开关</li>\n<li>利用webpack构建工具拦截请求</li>\n<li>搭建mock服务层代理响应</li>\n<li>利用浏览器插件拦截请求</li>\n</ol>\n<p>cms-web是由vue-cli3脚手架搭建的项目，依赖webpack打包工具，可以利用devServer.defore api对请求拦截处理，返回mock数据，引入mock层。</p>\n<p>所以选择上面第二种方式，原因总结为：<strong>无侵入，简单快捷易上手</strong>。</p>\n<h2 id=\"mockjs\"><a href=\"#mockjs\" class=\"headerlink\" title=\"mockjs\"></a>mockjs</h2><p>借助mockjs实现mock数据逻辑，以下是最简单的实现：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Mock</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mockjs&#x27;</span>);</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"title function_\">before</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/api/action/game/list&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">              <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">            &#125;]</span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">      res.<span class=\"title function_\">json</span>(data)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里我们简单介绍一下mockjs的使用规范，详细移至<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/nuysoft/Mock/wiki/Syntax-Specification\">mockjs文档</a></p>\n<p>数据模板中属性主要由三个部分构成：属性名，生成规则和属性值<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x27;属性名|生成规则&#x27;: 属性值</span><br></pre></td></tr></table></figure><br>以’dataName|1-5’: ‘name’为例，dataName是属性值，name是属性值，1-5是生成规则，对应String类型属性代表重复随机次数1到5次，假如对应Number类型代表生成随机数的最小值1和最大值5。’id|+1’: 1表示id值会从开始叠加。</p>\n<h2 id=\"优化mock层\"><a href=\"#优化mock层\" class=\"headerlink\" title=\"优化mock层\"></a>优化mock层</h2><p>话题回来mock层搭建的迭代优化，首先分析上面实现存在的问题：</p>\n<ul>\n<li>所有的请求都会经过这一层，mock层匹配到请求就会被拦截，需要设置开关</li>\n<li>配置的请求和数据模板会越来越多，逻辑与配置混合会导致代码越来越臃肿，逻辑和配置要分离</li>\n</ul>\n<p>把mock层从before函数中抽离，并设置开关机制：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Mock</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mockjs&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">handle</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/api/action/game/list&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!!process.<span class=\"property\">env</span>.<span class=\"property\">mock</span> || !!req.<span class=\"property\">query</span>.<span class=\"property\">_is_mock</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">              <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">              &#125;]</span><br><span class=\"line\">            &#125;]</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        res.<span class=\"title function_\">json</span>(data);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">next</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">MockHandler</span>(config);</span><br></pre></td></tr></table></figure><br>设置了两个并联开关，分别设置环境变量mock或者往请求查询参数加入_is_mock变量都可以通过验证。</p>\n<p>逻辑与配置分离：<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;/api/action/game/list&#x27;</span>: &#123;</span><br><span class=\"line\">      code: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"keyword\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(config) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.config = config</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  handle(app, server) &#123;</span><br><span class=\"line\">    Object.keys(<span class=\"keyword\">this</span>.config).forEach(route =&gt; &#123;</span><br><span class=\"line\">        app.<span class=\"keyword\">get</span>(route, function (req, res, next) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!!process.env.mock || !!req.query._is_mock) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> <span class=\"keyword\">data</span> = Mock.mock(&#123;</span><br><span class=\"line\">                  code: <span class=\"number\">0</span>,</span><br><span class=\"line\">                  <span class=\"keyword\">data</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">                      <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                      <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">                        <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">                        <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">                      &#125;]</span><br><span class=\"line\">                    &#125;]</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                res.json(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                next();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>革命尚未成功，旧的问题的解决了，但同时又出现的新的问题：</p>\n<ul>\n<li>只支持get请求，不支持post请求</li>\n<li>get方法的回调函数中重复了很多次对mock开关条件的判断，需要提取出来</li>\n</ul>\n<p>针对第一个问题，只需要将get/post请求方法配置到route就好了，本身属于配置逻辑的范围之内。而第二个问题，可以提炼函数，利用函数式编程，利用高阶函数返回回调函数，这样代码会简洁很多，具体优化如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;GET /api/action/game/list&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">config</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">init</span>(config);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">config</span> = config;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\">config</span>) &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(config).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">route</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> model = config[route];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">function</span> <span class=\"title function_\">callbackWarpper</span>(<span class=\"params\">model</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (isMock || !!req.<span class=\"property\">query</span>.<span class=\"property\">_is_mock</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"attr\">data</span>: model</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            res.<span class=\"title function_\">json</span>(data);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">next</span>();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      config[route] = <span class=\"title function_\">callbackWarpper</span>(model);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">handle</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> route <span class=\"keyword\">in</span> <span class=\"variable language_\">this</span>.<span class=\"property\">config</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> [method, path] = route.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(path);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> callback = <span class=\"variable language_\">this</span>.<span class=\"property\">config</span>[route];</span><br><span class=\"line\">      app[method.<span class=\"title function_\">toLowerCase</span>()](reg, callback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>写到这里本以为自己写出了一手漂亮的代码，但是突然想起，app实例上有个use()可以用来忽略请求方法get/post，然后在内部对请求做匹配处理，这样代码会更加的精简和容易被理解：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isMock = !!process.<span class=\"property\">env</span>.<span class=\"property\">mock</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;/api/action/game/list&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;totalCount|1-100&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;datas|1-10&#x27;</span>: [&#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataName|1-5&#x27;</span>: <span class=\"string\">&#x27;name&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataType|1-2&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataScope&#x27;</span>: <span class=\"string\">&#x27;1,100&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;defaultValue|1-5&#x27;</span>: <span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;dataStatus|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;remark|1-5&#x27;</span>: <span class=\"string\">&#x27;str&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;record|0-1&#x27;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;series|1-3&#x27;</span>: [&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;id|+1&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type|1-2&#x27;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;name|1-2&#x27;</span>: <span class=\"string\">&#x27;小云熊奇妙故事&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;mark&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">0</span></span><br><span class=\"line\">          &#125;]</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MockHandler</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">config</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">config</span> = config;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">handle</span>(<span class=\"params\">app, server</span>) &#123;</span><br><span class=\"line\">    app.<span class=\"title function_\">use</span>(<span class=\"function\">(<span class=\"params\">req, res, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (isMock || !!req.<span class=\"property\">query</span>.<span class=\"property\">_is_mock</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">config</span>).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">route</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> reg = <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(route)</span><br><span class=\"line\">          <span class=\"keyword\">const</span> model = <span class=\"variable language_\">this</span>.<span class=\"property\">config</span>[route]</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (reg.<span class=\"title function_\">test</span>(req.<span class=\"property\">path</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data = <span class=\"title class_\">Mock</span>.<span class=\"title function_\">mock</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">code</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"attr\">data</span>: model</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res.<span class=\"title function_\">json</span>(data);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"title function_\">next</span>()</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">next</span>()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个方案原理是利用webpack devServer在发送请求时候做了一层拦截，请求并没有经过真实的网络环境，但是利用webpack devServer其实有个弊端，当我想增加一条记录时，需要再次重启webpack，本身属于对webpack配置的修改，除利用node watch功能监听文件改动运行脚本重启的方法外，几乎想不出有更好的方法了，这个痛点用一个名词来形容就是不支持热插拔。</p>\n<h2 id=\"浏览器插件\"><a href=\"#浏览器插件\" class=\"headerlink\" title=\"浏览器插件\"></a>浏览器插件</h2><p>有没有不涉及到编程的mock方案呢？有，<strong>利用浏览器插件拦截请求或篡改响应。</strong></p>\n<p>这种方案属于利用工具，不用在代码层面引入mock层也可以拦击请求，好处是相对前面介绍的方案，更加的具有普适性，可以让测试小伙伴在后端接口发生异常的情况下依然畅通无阻的测试前端功能。</p>\n<p>这样的插件我推荐： <strong>Ajax Interceptor</strong> <a target=\"_blank\" rel=\"noopener\" href=\"https://chrome.google.com/webstore/detail/ajax-interceptor/nhpjggchkhnlbgdfcbgpdpkifemomkpg\">下载</a> <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/YGYOOO/ajax-interceptor\">源代码</a></p>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p>不想用浏览器插件还有其他的工具吗？当然有，就是我们熟悉的postman，详细请参考下面文章：</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/qq598535550/article/details/87924629\">Postman高级应用（11）：可以开始对接了吗——Mock服务</a></p>"},{"title":"整理凌乱代码的有效姿势【工作日记02】","date":"2019-10-15T16:00:00.000Z","_content":"\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029f14b63d2.jpg)\n\n<!-- more -->\n\n> 下文可能存在图片未显示问题，可异步到 [原文](https://juejin.im/post/5dca29625188254ac07ad2aa) 阅读\n\n\n维护项目是几乎每个程序员日常中比不可少了的工作，接手项目又是维护的项目来源中，令人“可恨”的一种方式，因为看代码无非有三个感觉：“这代码666”，“这代码好像是我写的”，“这垃圾代码简直就像shi一样”。在不幸，入职接手的项目给我的就是第三感觉。\n\n<center>\n    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3E.n2mb6NHBQwstynPaC3hvL4ig7oHJg186JAd4lS24!/b/dFIBAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img>\n</center>\n\n项目之前经过几个人手，在没有引入eslint等代码规范管理情况下，代码风格凌乱不堪，不像是一个团队写的。可能有人会说，搞这些花里胡哨的，代码不是照样能用。大师说人生最大的智慧是不要跟傻逼争论，嗯你说的对。\n\n<center>\n    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/*IjbziiGhkTxOMH6rqt7b2hg.eQytUUz4.zxDi*VWd8!/b/dL8AAAAAAAAA&bo=uADIAAAAAAARB0A!&rf=viewer_4\"></img>\n</center>\n\n\n* 代码风格统一，可读性改善，有利于团队协作\n* 有利于代码交付\n* 重要的是对心情好\n\n下面是具体的做法：\n1. 引入eslint\n```\nnpm i eslint -S\n\n# package.json加入\n\"scripts\": {\n    \"lint:write\": \"eslint --debug src/* --fix\"\n}\n```\n2. .eslintrc.js\neslint的配置文件，拆分如下：\n```\nmodule.exports = { \n   env: {}, \n   extends: {}, \n   plugins: {}, \n   parser: {}, \n   parserOptions: {}, \n   rules: {},\n}\n```\n* env：表示指定想启用的环境\n* extends：指定额外配置的选项，如 ['airbnb'] 表示使用 Airbnb 的 * linting 规则\n* plugins：设置规则插件\n* parser：默认情况下 ESLint 使用 espree 进行解析\n* parserOptions：如果将默认解析器更改，需要制定 parserOptions\n* rules：定义拓展并通过插件添加的所有规则\n\neslint支持多种格式的配置文件，还可以采用.yaml,.json,.yml的格式，优先级如下：\n```\n.eslintrc.js\n.eslintrc.yaml\n.eslintrc.yml\n.eslintrc.json\n.eslintrc\npackage.json\n```\n\n规则：\n```\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quote\": [\"error\", \"double\"]\n    }\n}\n```\n上面semi，quote是规则名称，数组的第一项是指检验级别：\n* off/0：关闭规则\n* warn/1：以 warning 形式打开规则\n* error/2：以 error 形式打开规则\n\n默认配置：\n```\n\"extends\": \"eslint:recommended\"\n```\n这是默认的规则集合，也可以选择其他集合，比如：[\"airbnb\", \"google\"]\n\n3. husky \n\n一般我们会在提交版本时候做检验，而不是每次保存的时候，因为那样频繁的检查会造成开发效率低下，这正是husky库解决的问题。可以把它当成实现git钩子的js库。在package.json下添加：\n```\n\"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint:write\"\n    }\n  },\n```\n其他的git钩子还有pre-push,commit-msg等\n\n4. lint-staged\n\n可是eslint会检查src下的全部文件，在一个本来就没有统一风格的项目中，几乎所有文件都有检查不通过的可能，这不是搞死自己吗。兄台，不必担忧，我有妙计。提交代码版本时只对工作区内的文件做检验，改了哪些文件就检验哪些文件，这样就大大减少了检查文件和更改量，随着时间的推移，项目的迭代，相信代码风格统一的目标达成指日可待。\n\nlint-staged就是为了解决这个问题而诞生的，结合husky使用：\n```\n\"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n},\n\"lint-staged\": {\n    \"*.(js|jsx|vue)\": [\n      \"npm run lint:write\",\n      \"git add\"\n    ]\n},\n```\n\n目前引入eslint后，代码看这舒服了，香！\n\n<center>\n    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ulbO*3Z4Svo1rZ.RcxsI0E6X4zjaAnduPZBWfZg2pg8!/b/dFIBAAAAAAAA&bo=8AC7AAAAAAADB2k!&rf=viewer_4\"></img>\n</center>\n","source":"_posts/02-代码规范-整理凌乱代码的有效姿势.md","raw":"---\ntitle: 整理凌乱代码的有效姿势【工作日记02】\ndate: 2019-10-16\ntags: []\ncategories: [前端,工作日记]\n---\n\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029f14b63d2.jpg)\n\n<!-- more -->\n\n> 下文可能存在图片未显示问题，可异步到 [原文](https://juejin.im/post/5dca29625188254ac07ad2aa) 阅读\n\n\n维护项目是几乎每个程序员日常中比不可少了的工作，接手项目又是维护的项目来源中，令人“可恨”的一种方式，因为看代码无非有三个感觉：“这代码666”，“这代码好像是我写的”，“这垃圾代码简直就像shi一样”。在不幸，入职接手的项目给我的就是第三感觉。\n\n<center>\n    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3E.n2mb6NHBQwstynPaC3hvL4ig7oHJg186JAd4lS24!/b/dFIBAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img>\n</center>\n\n项目之前经过几个人手，在没有引入eslint等代码规范管理情况下，代码风格凌乱不堪，不像是一个团队写的。可能有人会说，搞这些花里胡哨的，代码不是照样能用。大师说人生最大的智慧是不要跟傻逼争论，嗯你说的对。\n\n<center>\n    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/*IjbziiGhkTxOMH6rqt7b2hg.eQytUUz4.zxDi*VWd8!/b/dL8AAAAAAAAA&bo=uADIAAAAAAARB0A!&rf=viewer_4\"></img>\n</center>\n\n\n* 代码风格统一，可读性改善，有利于团队协作\n* 有利于代码交付\n* 重要的是对心情好\n\n下面是具体的做法：\n1. 引入eslint\n```\nnpm i eslint -S\n\n# package.json加入\n\"scripts\": {\n    \"lint:write\": \"eslint --debug src/* --fix\"\n}\n```\n2. .eslintrc.js\neslint的配置文件，拆分如下：\n```\nmodule.exports = { \n   env: {}, \n   extends: {}, \n   plugins: {}, \n   parser: {}, \n   parserOptions: {}, \n   rules: {},\n}\n```\n* env：表示指定想启用的环境\n* extends：指定额外配置的选项，如 ['airbnb'] 表示使用 Airbnb 的 * linting 规则\n* plugins：设置规则插件\n* parser：默认情况下 ESLint 使用 espree 进行解析\n* parserOptions：如果将默认解析器更改，需要制定 parserOptions\n* rules：定义拓展并通过插件添加的所有规则\n\neslint支持多种格式的配置文件，还可以采用.yaml,.json,.yml的格式，优先级如下：\n```\n.eslintrc.js\n.eslintrc.yaml\n.eslintrc.yml\n.eslintrc.json\n.eslintrc\npackage.json\n```\n\n规则：\n```\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quote\": [\"error\", \"double\"]\n    }\n}\n```\n上面semi，quote是规则名称，数组的第一项是指检验级别：\n* off/0：关闭规则\n* warn/1：以 warning 形式打开规则\n* error/2：以 error 形式打开规则\n\n默认配置：\n```\n\"extends\": \"eslint:recommended\"\n```\n这是默认的规则集合，也可以选择其他集合，比如：[\"airbnb\", \"google\"]\n\n3. husky \n\n一般我们会在提交版本时候做检验，而不是每次保存的时候，因为那样频繁的检查会造成开发效率低下，这正是husky库解决的问题。可以把它当成实现git钩子的js库。在package.json下添加：\n```\n\"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint:write\"\n    }\n  },\n```\n其他的git钩子还有pre-push,commit-msg等\n\n4. lint-staged\n\n可是eslint会检查src下的全部文件，在一个本来就没有统一风格的项目中，几乎所有文件都有检查不通过的可能，这不是搞死自己吗。兄台，不必担忧，我有妙计。提交代码版本时只对工作区内的文件做检验，改了哪些文件就检验哪些文件，这样就大大减少了检查文件和更改量，随着时间的推移，项目的迭代，相信代码风格统一的目标达成指日可待。\n\nlint-staged就是为了解决这个问题而诞生的，结合husky使用：\n```\n\"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n},\n\"lint-staged\": {\n    \"*.(js|jsx|vue)\": [\n      \"npm run lint:write\",\n      \"git add\"\n    ]\n},\n```\n\n目前引入eslint后，代码看这舒服了，香！\n\n<center>\n    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ulbO*3Z4Svo1rZ.RcxsI0E6X4zjaAnduPZBWfZg2pg8!/b/dFIBAAAAAAAA&bo=8AC7AAAAAAADB2k!&rf=viewer_4\"></img>\n</center>\n","slug":"02-代码规范-整理凌乱代码的有效姿势","published":1,"updated":"2022-12-06T15:30:37.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3q0003mcq0hsx82824","content":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029f14b63d2.jpg\" alt=\"我是图片\"></p>\n<span id=\"more\"></span>\n<blockquote>\n<p>下文可能存在图片未显示问题，可异步到 <a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5dca29625188254ac07ad2aa\">原文</a> 阅读</p>\n</blockquote>\n<p>维护项目是几乎每个程序员日常中比不可少了的工作，接手项目又是维护的项目来源中，令人“可恨”的一种方式，因为看代码无非有三个感觉：“这代码666”，“这代码好像是我写的”，“这垃圾代码简直就像shi一样”。在不幸，入职接手的项目给我的就是第三感觉。</p>\n<center><br>    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3E.n2mb6NHBQwstynPaC3hvL4ig7oHJg186JAd4lS24!/b/dFIBAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img><br></center>\n\n<p>项目之前经过几个人手，在没有引入eslint等代码规范管理情况下，代码风格凌乱不堪，不像是一个团队写的。可能有人会说，搞这些花里胡哨的，代码不是照样能用。大师说人生最大的智慧是不要跟傻逼争论，嗯你说的对。</p>\n<center><br>    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/*IjbziiGhkTxOMH6rqt7b2hg.eQytUUz4.zxDi*VWd8!/b/dL8AAAAAAAAA&bo=uADIAAAAAAARB0A!&rf=viewer_4\"></img><br></center>\n\n\n<ul>\n<li>代码风格统一，可读性改善，有利于团队协作</li>\n<li>有利于代码交付</li>\n<li>重要的是对心情好</li>\n</ul>\n<p>下面是具体的做法：</p>\n<ol>\n<li>引入eslint<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> i eslint -S</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># package.json加入</span></span><br><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lint:write&quot;</span>: <span class=\"string\">&quot;eslint --debug src/* --fix&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>.eslintrc.js<br>eslint的配置文件，拆分如下：<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.<span class=\"attr\">exports</span> <span class=\"operator\">=</span> <span class=\"punctuation\">&#123;</span> </span><br><span class=\"line\"><span class=\"symbol\">   env:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   extends:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   plugins:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   parser:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   parserOptions:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   rules:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>,</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>env：表示指定想启用的环境</li>\n<li>extends：指定额外配置的选项，如 [‘airbnb’] 表示使用 Airbnb 的 * linting 规则</li>\n<li>plugins：设置规则插件</li>\n<li>parser：默认情况下 ESLint 使用 espree 进行解析</li>\n<li>parserOptions：如果将默认解析器更改，需要制定 parserOptions</li>\n<li>rules：定义拓展并通过插件添加的所有规则</li>\n</ul>\n<p>eslint支持多种格式的配置文件，还可以采用.yaml,.json,.yml的格式，优先级如下：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.js</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.yaml</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.yml</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.json</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span></span><br><span class=\"line\">package.json</span><br></pre></td></tr></table></figure></p>\n<p>规则：<br><figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;rules&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;semi&quot;</span>: [<span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;always&quot;</span>],</span><br><span class=\"line\">        <span class=\"string\">&quot;quote&quot;</span>: [<span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;double&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>上面semi，quote是规则名称，数组的第一项是指检验级别：</p>\n<ul>\n<li>off/0：关闭规则</li>\n<li>warn/1：以 warning 形式打开规则</li>\n<li>error/2：以 error 形式打开规则</li>\n</ul>\n<p>默认配置：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;extends&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;eslint:recommended&quot;</span></span><br></pre></td></tr></table></figure><br>这是默认的规则集合，也可以选择其他集合，比如：[“airbnb”, “google”]</p>\n<ol start=\"3\">\n<li>husky </li>\n</ol>\n<p>一般我们会在提交版本时候做检验，而不是每次保存的时候，因为那样频繁的检查会造成开发效率低下，这正是husky库解决的问题。可以把它当成实现git钩子的js库。在package.json下添加：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;husky&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hooks&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;pre-commit&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;npm run lint:write&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure><br>其他的git钩子还有pre-push,commit-msg等</p>\n<ol start=\"4\">\n<li>lint-staged</li>\n</ol>\n<p>可是eslint会检查src下的全部文件，在一个本来就没有统一风格的项目中，几乎所有文件都有检查不通过的可能，这不是搞死自己吗。兄台，不必担忧，我有妙计。提交代码版本时只对工作区内的文件做检验，改了哪些文件就检验哪些文件，这样就大大减少了检查文件和更改量，随着时间的推移，项目的迭代，相信代码风格统一的目标达成指日可待。</p>\n<p>lint-staged就是为了解决这个问题而诞生的，结合husky使用：<br><figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;husky&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;hooks&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;pre-commit&quot;</span>: <span class=\"string\">&quot;lint-staged&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"string\">&quot;lint-staged&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;*.(js|jsx|vue)&quot;</span>: [</span><br><span class=\"line\">      <span class=\"string\">&quot;npm run lint:write&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;git add&quot;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>目前引入eslint后，代码看这舒服了，香！</p>\n<center><br>    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ulbO*3Z4Svo1rZ.RcxsI0E6X4zjaAnduPZBWfZg2pg8!/b/dFIBAAAAAAAA&bo=8AC7AAAAAAADB2k!&rf=viewer_4\"></img><br></center>\n","site":{"data":{}},"excerpt":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029f14b63d2.jpg\" alt=\"我是图片\"></p>","more":"<blockquote>\n<p>下文可能存在图片未显示问题，可异步到 <a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5dca29625188254ac07ad2aa\">原文</a> 阅读</p>\n</blockquote>\n<p>维护项目是几乎每个程序员日常中比不可少了的工作，接手项目又是维护的项目来源中，令人“可恨”的一种方式，因为看代码无非有三个感觉：“这代码666”，“这代码好像是我写的”，“这垃圾代码简直就像shi一样”。在不幸，入职接手的项目给我的就是第三感觉。</p>\n<center><br>    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3E.n2mb6NHBQwstynPaC3hvL4ig7oHJg186JAd4lS24!/b/dFIBAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img><br></center>\n\n<p>项目之前经过几个人手，在没有引入eslint等代码规范管理情况下，代码风格凌乱不堪，不像是一个团队写的。可能有人会说，搞这些花里胡哨的，代码不是照样能用。大师说人生最大的智慧是不要跟傻逼争论，嗯你说的对。</p>\n<center><br>    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/*IjbziiGhkTxOMH6rqt7b2hg.eQytUUz4.zxDi*VWd8!/b/dL8AAAAAAAAA&bo=uADIAAAAAAARB0A!&rf=viewer_4\"></img><br></center>\n\n\n<ul>\n<li>代码风格统一，可读性改善，有利于团队协作</li>\n<li>有利于代码交付</li>\n<li>重要的是对心情好</li>\n</ul>\n<p>下面是具体的做法：</p>\n<ol>\n<li>引入eslint<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> i eslint -S</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># package.json加入</span></span><br><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;lint:write&quot;</span>: <span class=\"string\">&quot;eslint --debug src/* --fix&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>.eslintrc.js<br>eslint的配置文件，拆分如下：<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.<span class=\"attr\">exports</span> <span class=\"operator\">=</span> <span class=\"punctuation\">&#123;</span> </span><br><span class=\"line\"><span class=\"symbol\">   env:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   extends:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   plugins:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   parser:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   parserOptions:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>, </span><br><span class=\"line\"><span class=\"symbol\">   rules:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span>,</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>env：表示指定想启用的环境</li>\n<li>extends：指定额外配置的选项，如 [‘airbnb’] 表示使用 Airbnb 的 * linting 规则</li>\n<li>plugins：设置规则插件</li>\n<li>parser：默认情况下 ESLint 使用 espree 进行解析</li>\n<li>parserOptions：如果将默认解析器更改，需要制定 parserOptions</li>\n<li>rules：定义拓展并通过插件添加的所有规则</li>\n</ul>\n<p>eslint支持多种格式的配置文件，还可以采用.yaml,.json,.yml的格式，优先级如下：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.js</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.yaml</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.yml</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span><span class=\"selector-class\">.json</span></span><br><span class=\"line\"><span class=\"selector-class\">.eslintrc</span></span><br><span class=\"line\">package.json</span><br></pre></td></tr></table></figure></p>\n<p>规则：<br><figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;rules&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;semi&quot;</span>: [<span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;always&quot;</span>],</span><br><span class=\"line\">        <span class=\"string\">&quot;quote&quot;</span>: [<span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;double&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>上面semi，quote是规则名称，数组的第一项是指检验级别：</p>\n<ul>\n<li>off/0：关闭规则</li>\n<li>warn/1：以 warning 形式打开规则</li>\n<li>error/2：以 error 形式打开规则</li>\n</ul>\n<p>默认配置：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;extends&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;eslint:recommended&quot;</span></span><br></pre></td></tr></table></figure><br>这是默认的规则集合，也可以选择其他集合，比如：[“airbnb”, “google”]</p>\n<ol start=\"3\">\n<li>husky </li>\n</ol>\n<p>一般我们会在提交版本时候做检验，而不是每次保存的时候，因为那样频繁的检查会造成开发效率低下，这正是husky库解决的问题。可以把它当成实现git钩子的js库。在package.json下添加：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;husky&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;hooks&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;pre-commit&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;npm run lint:write&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure><br>其他的git钩子还有pre-push,commit-msg等</p>\n<ol start=\"4\">\n<li>lint-staged</li>\n</ol>\n<p>可是eslint会检查src下的全部文件，在一个本来就没有统一风格的项目中，几乎所有文件都有检查不通过的可能，这不是搞死自己吗。兄台，不必担忧，我有妙计。提交代码版本时只对工作区内的文件做检验，改了哪些文件就检验哪些文件，这样就大大减少了检查文件和更改量，随着时间的推移，项目的迭代，相信代码风格统一的目标达成指日可待。</p>\n<p>lint-staged就是为了解决这个问题而诞生的，结合husky使用：<br><figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;husky&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;hooks&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;pre-commit&quot;</span>: <span class=\"string\">&quot;lint-staged&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"string\">&quot;lint-staged&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;*.(js|jsx|vue)&quot;</span>: [</span><br><span class=\"line\">      <span class=\"string\">&quot;npm run lint:write&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;git add&quot;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>目前引入eslint后，代码看这舒服了，香！</p>\n<center><br>    <img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ulbO*3Z4Svo1rZ.RcxsI0E6X4zjaAnduPZBWfZg2pg8!/b/dFIBAAAAAAAA&bo=8AC7AAAAAAADB2k!&rf=viewer_4\"></img><br></center>"},{"title":"不得不懂的工作流优化技能【工作日记04】","date":"2019-12-19T16:00:00.000Z","_content":"\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029f1175340.jpg)\n\n<!-- more -->\n\n> 工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，用娱乐精神分享知识。\n\n> 下文可能存在图片未显示问题，可异步到 [原文](https://juejin.im/post/5dcd569d51882510b265fc62) 阅读\n\n很多朋友都知道我们团队是在智能音箱上开发语音技能业务，问答类和剧情类是语音技能中常见的两大类，其中剧情类是我们家游戏重中之重。\n\n剧情游戏的数据结构是树，称为剧情树。上线游戏之前，得先在后台手动录入剧情树，包括创建剧情节点、填入语料信息、关键词等等。故事内容小的不出一百个剧情节点，大的还要划分章节，剧情节点总数可达千级以上。\n![image](http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/7EoUcLRyVwuW4jKAVcqKAUgwghtnsujZtzd9TMD8Iow!/b/dLgAAAAAAAAA&bo=fgWqAX4FqgEDCSw!&rf=viewer_4)\n\n那么人工录入这颗庞大的剧情树的时间成本会制约剧情游戏上线时间，况且这么多数据靠人工操作，那人岂不是要心态爆炸。\n\n有大佬说过：有麻烦的地方，就有机会。谁说的我想不起来。\n<center>\n    <img width=\"200\" src=\"http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/5Qtfvc0ROsoe3VEROyr3amxeZ9EQuFRpLQLeAKzRFnw!/b/dL8AAAAAAAAA&bo=2gDwANoA8AARCT4!&rf=viewer_4\"></img>\n</center>\n\n况且不忍心看着运营妹子把青春都浪费在重复无价值的工作上，于是就有了我，一位技术不咋地但乐善好施的前端专业切图手，挺身而出，做了以下事情。\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ba.jrAo5EBEsb8Z6kUXjh1LKPc.BE.*1gVfOx54UmXY!/b/dLgAAAAAAAAA&bo=8ADwAPAA8AACOR0!&rf=viewer_4\"></img>\n</center>\n\n\n* [工作流分析](#工作流分析)\n* [推动立项](#推动立项)\n* [实现需求](#实现需求)\n* [效果和收益](#效果和收益)\n\n## 工作流分析\n把录入剧情树的工作流程画成图来表达会更加容易说明问题：\n![image](http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/irSMmVs9SQXAZc.sQNRUNvzUF2AcpE1qI11nC38RsKs!/b/dLYAAAAAAAAA&bo=WAK3AFgCtwADCSw!&rf=viewer_4)\n\n很简单的一个工作流，把效率不高的环节拆分成多个组合因素，这里的目的主要是录入剧情树的相关信息，把信息分类如下：\n![image](http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/KL0TIziHozdKiDj0ij7KTQgemnqVWU95I4rM5YdTB2I!/b/dLYAAAAAAAAA&bo=lALpAZQC6QEDCSw!&rf=viewer_4)\n\n其中有些信息是可以直接从剧本中去是识别提炼出来形成结构化数据，将这个任务自动化，交给机器来处理，人工只负责剧本不需要出现、数据操作类的信息，那么一下步就是按自动/人工的范畴来重整信息。\n![image](http://b309.photo.store.qq.com/psb?/V12x89qA2LlAEO/360ys0nAUzliwPsseN63c1piKE.gxPEOVybPBtnENpU!/b/dDUBAAAAAAAA&bo=5ANBAuQDQQIDCSw!&rf=viewer_4)\n\n右边的就是重整后的信息分类，两个分类可以演化成两个新阶段，机器分析剧本自动化阶段和人工补全阶段，替换掉前面效率低下的部分就可以形成新的工作流：\n![image](http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/YbT32wTf*K8*knQAtn5Jh5W7MlFfZp.ugGPtwVawxEU!/b/dL8AAAAAAAAA&bo=0AIcAdACHAEDCSw!&rf=viewer_4)\n\n优化升级后的工作流需要一个剧本分析器来为它赋能。\n\n现在的感觉就像仿佛看见了曙光。\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/o4r2aVqjJIaMwG*LrzJSw0Xuc0XZ2AdKU.2r58u8XxM!/b/dPMAAAAAAAAA&bo=9wCaAAAAAAACZy4!&rf=viewer_4\"></img>\n</center>\n\n\n你以为我会现在马上动手做吗？不，这仅仅是我歪歪的一个东西，并没有经过各方面的认同，需要请求下产品和技术老大的意见，否者辛辛苦苦做出来，得不到大家认同，没有功劳更没有苦劳。\n\n## 项目立项\n在周会上回报工作情况时候，顺水推舟的拿出上面的工作流分析，向组内提出了这个优化方案。大伙也没啥意见，反正不用他们搬砖，真是替你们有我这么个好伙伴感到开心。\n<center>\n    <img width=\"200\" src=\"http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/bmc64lJ4xpxu59RZC9Xq7DRVxyhVRuZASlr.L3L9iiM!/b/dLgAAAAAAAAA&bo=8ADWAPAA1gARCT4!&rf=viewer_4\"></img>\n</center>\n\n\n接着找到产品，需要确定两点：\n* 剧情剧本的统一格式（假如策划伙伴每人各持一套，兼容代码会让人写到吐）\n* 解析器具体的功能点\n\n最终这个项目的面貌逐渐清晰：\n<!-- 具体需求 -->\n* 剧本格式\n```\n第一章 互动\n...\n1. 已经是晚上11点了\n你的女神突然很想吃宵夜\n你会帮她叫外卖还是让她赶紧睡觉？  \n(1-1： 帮她叫外卖，叫外卖，外卖。1-2： 让她赶紧睡觉，赶紧睡觉，睡觉)\n...\n```\n* 功能\n    * 上传.docx文档剧本\n    * 解析提出信息\n    * 验证剧情树结构\n    * 输出结构化数据\n\n## 实现需求\n\n这里我们直接看关键功能：解析剧本提炼信息。这里就包含两个步骤：解析docx文档和识别提炼信息。\n\n* 解析docx文档\n\n自己实现个解析docx文档程序？一般人不会那么干，那是牛人做的事情。\n<!--【表情包：牛】-->\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/uU8WcIx9l0DnUXjQSaLjPMau6FWllCnmMZu07ThMPik!/b/dFMBAAAAAAAA&bo=5gC3AOYAtwACaU0!&rf=viewer_4\"></img>\n</center>\n\n`mammoth.js`可以解决这个问题。\n> Mammoth is designed to convert .docx documents, such as those created by Microsoft Word, and convert them to HTML. \n\n意思是主要用于将word的.docx文档转换成HTML文档，除此之外mammoth有个extractRawText方法可以转换成row text行文本，以换行符划分。\n\n将解析文档功能封装成函数:\n```\nconst mammoth = require('mammoth');\n/**\n * 解析docx文本内容并导出\n * \n * @param {String} path .docx 路径\n */\nconst extractRawText = function (file) {\n  const opt = {};\n  if (file instanceof Buffer) {\n    opt.buffer = file;\n  } else if (typeof file === 'string') {\n    opt.path = file;\n  } else {\n    global.log_debug.error(`[parseDocxScript]:${file} 未知类型`);\n    throw new Error(`${file} 未知类型`);\n  }\n  return new Promise(resolve => {\n    mammoth.extractRawText(opt)\n      .then(function (result) {\n        resolve(result); // {value, message}\n      });\n  });\n};\n```\n文档内容以String类型存在于result.value中，其中换行符会被转换成\\n\\n。\n\n* 识别并提炼信息\n\n识别就是字符串遍历和检测，利用正则表达式足以解决，其实就是使用标记法，待识别的数据有其相关的标记。\n\n根据剧本格式，需要正则识别的信息有：\n* 章节：第一章\n```\n/第(.*)章(.*)$/\n```\n* 剧情编号（ID）：2. 2-1. \n```\n/^([\\d\\-]+)\\./\n```\n* 分支：（5：回复，回。6：不理会）\n```\n/^[（\\()](.*)[）\\)]$/\n```\n* 分支中的剧情编号\n```\n/([\\d\\-]+)/\n```\n\n可以以`\\n\\n`为分隔符将内容切分成数组，遍历去逐行识别检验。\n\n<details>\n<summary>code</summary>\n<pre><code class=\"hljs\">\n/**\n * 解析剧本，结构化信息\n * \n * @param {String} path .docx 路径\n * @param {Object} opt 拼装数据需要的参数sceneId\n */\nconst parseScript = function (file, opt = {}) {\n  return extractRawText(file)\n    .then(result => {\n      var text = result.value;\n      var aSource = text.split('\\n\\n');\n      var temp = aSource.filter(v => !!v);\n      var dialog = {},\n        dialogs = [],\n        chapters = [],\n        currId,\n        currChar;\n      console.log(temp);\n      temp.forEach(v => {\n        var matchIdReg = /^([\\d\\-]+)\\./, // 2 2-1 \n          matchNextIdReg = /([\\d\\-]+)/,\n          matchChooseText = /^[（\\()](.*)[）\\)]$/,\n          matchChapText = /第(.*)章(.*)$/,\n          res;\n        // 解析章节\n        res = v.trim().match(matchChapText);\n        if (res) {\n          var chapNo = currChar = zhDigitToArabic(res[1]);\n          var isExit = !!chapters.find(v => v.chapNo === chapNo);\n          !isExit && chapters.push({\n            chapNo,\n            title: res[2].trim()\n          });\n        }\n        // 识别节点\n        res = v.match(matchIdReg);\n        if (res) {\n          dialog = {};\n          currId = dialog.id = res[1];\n          currChar && (dialog.chapNo = currChar);\n          v = v.replace(matchIdReg, '');\n        }\n        // 判断分支语句\n        res = v.match(matchChooseText);\n        if (res) {\n          const t = res[1];\n          t.split(/[。；]/).forEach(v => {\n            // v => 2：xxx || 接4\n            var item = {},\n              keyword;\n            res = v.match(matchNextIdReg);\n            if (res === null) return;\n            item.nextId = res[1];\n            keyword = v.split('：')[1];\n            keyword && (item.keywords = keyword.trim().split('，'));\n            !dialog.children && (dialog.children = []);\n            dialog.children.push(item);\n          });\n        } else {\n          // 处理内容语句\n          if (currId === dialog.id && !/【全文完】/.test(v)) {\n            if (dialog.content === undefined) dialog.content = '';\n            dialog.content += `${v}\\n\\n`;\n          }\n        }\n        // 装载dialog\n        if (dialog.id && dialog.content && !dialogs.includes(dialog)) dialogs.push(dialog);\n      });\n    return { dialogs, chapters }\n};\n</code></pre>\n</details>\n\n## 效果和收益\n当打通流程之后，只需轻轻点击上传剧本，弹指一挥间，一棵可爱的剧情树已经出现在你面前，处理时间平均200+ms，整个过程1s不到。\n<!--【图片。gif】-->\n![image](http://b264.photo.store.qq.com/psb?/V12x89qA2LlAEO/oaTG.bAfWJtIE7Y944ngY0o5RnP5gragZki3JkEbu6Y!/b/dAgBAAAAAAAA&bo=xgX*AQAAAAACR14!&rf=viewer_4)\n\n之前完整的配一个复杂的剧情树要配一天，目前只需要两小时不到。在效率上得到了大幅度的提升，对于运营伙伴来说简直是如获至宝，用他们的话来说就是大快人心。\n\n<center>\n    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/97GNFgAvlnbwg.czssmO*4312jTHJXbY6zP1lm5.Em8!/b/dL4AAAAAAAAA&bo=WgHfAAAAAAAChyc!&rf=viewer_4\"></img>\n</center>\n\n\n\n\n\n\n","source":"_posts/04-不得不懂的工作流优化技能.md","raw":"---\ntitle: 不得不懂的工作流优化技能【工作日记04】\ndate: 2019-12-20\ntags: []\ncategories: [前端,工作日记]\n---\n\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029f1175340.jpg)\n\n<!-- more -->\n\n> 工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，用娱乐精神分享知识。\n\n> 下文可能存在图片未显示问题，可异步到 [原文](https://juejin.im/post/5dcd569d51882510b265fc62) 阅读\n\n很多朋友都知道我们团队是在智能音箱上开发语音技能业务，问答类和剧情类是语音技能中常见的两大类，其中剧情类是我们家游戏重中之重。\n\n剧情游戏的数据结构是树，称为剧情树。上线游戏之前，得先在后台手动录入剧情树，包括创建剧情节点、填入语料信息、关键词等等。故事内容小的不出一百个剧情节点，大的还要划分章节，剧情节点总数可达千级以上。\n![image](http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/7EoUcLRyVwuW4jKAVcqKAUgwghtnsujZtzd9TMD8Iow!/b/dLgAAAAAAAAA&bo=fgWqAX4FqgEDCSw!&rf=viewer_4)\n\n那么人工录入这颗庞大的剧情树的时间成本会制约剧情游戏上线时间，况且这么多数据靠人工操作，那人岂不是要心态爆炸。\n\n有大佬说过：有麻烦的地方，就有机会。谁说的我想不起来。\n<center>\n    <img width=\"200\" src=\"http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/5Qtfvc0ROsoe3VEROyr3amxeZ9EQuFRpLQLeAKzRFnw!/b/dL8AAAAAAAAA&bo=2gDwANoA8AARCT4!&rf=viewer_4\"></img>\n</center>\n\n况且不忍心看着运营妹子把青春都浪费在重复无价值的工作上，于是就有了我，一位技术不咋地但乐善好施的前端专业切图手，挺身而出，做了以下事情。\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ba.jrAo5EBEsb8Z6kUXjh1LKPc.BE.*1gVfOx54UmXY!/b/dLgAAAAAAAAA&bo=8ADwAPAA8AACOR0!&rf=viewer_4\"></img>\n</center>\n\n\n* [工作流分析](#工作流分析)\n* [推动立项](#推动立项)\n* [实现需求](#实现需求)\n* [效果和收益](#效果和收益)\n\n## 工作流分析\n把录入剧情树的工作流程画成图来表达会更加容易说明问题：\n![image](http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/irSMmVs9SQXAZc.sQNRUNvzUF2AcpE1qI11nC38RsKs!/b/dLYAAAAAAAAA&bo=WAK3AFgCtwADCSw!&rf=viewer_4)\n\n很简单的一个工作流，把效率不高的环节拆分成多个组合因素，这里的目的主要是录入剧情树的相关信息，把信息分类如下：\n![image](http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/KL0TIziHozdKiDj0ij7KTQgemnqVWU95I4rM5YdTB2I!/b/dLYAAAAAAAAA&bo=lALpAZQC6QEDCSw!&rf=viewer_4)\n\n其中有些信息是可以直接从剧本中去是识别提炼出来形成结构化数据，将这个任务自动化，交给机器来处理，人工只负责剧本不需要出现、数据操作类的信息，那么一下步就是按自动/人工的范畴来重整信息。\n![image](http://b309.photo.store.qq.com/psb?/V12x89qA2LlAEO/360ys0nAUzliwPsseN63c1piKE.gxPEOVybPBtnENpU!/b/dDUBAAAAAAAA&bo=5ANBAuQDQQIDCSw!&rf=viewer_4)\n\n右边的就是重整后的信息分类，两个分类可以演化成两个新阶段，机器分析剧本自动化阶段和人工补全阶段，替换掉前面效率低下的部分就可以形成新的工作流：\n![image](http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/YbT32wTf*K8*knQAtn5Jh5W7MlFfZp.ugGPtwVawxEU!/b/dL8AAAAAAAAA&bo=0AIcAdACHAEDCSw!&rf=viewer_4)\n\n优化升级后的工作流需要一个剧本分析器来为它赋能。\n\n现在的感觉就像仿佛看见了曙光。\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/o4r2aVqjJIaMwG*LrzJSw0Xuc0XZ2AdKU.2r58u8XxM!/b/dPMAAAAAAAAA&bo=9wCaAAAAAAACZy4!&rf=viewer_4\"></img>\n</center>\n\n\n你以为我会现在马上动手做吗？不，这仅仅是我歪歪的一个东西，并没有经过各方面的认同，需要请求下产品和技术老大的意见，否者辛辛苦苦做出来，得不到大家认同，没有功劳更没有苦劳。\n\n## 项目立项\n在周会上回报工作情况时候，顺水推舟的拿出上面的工作流分析，向组内提出了这个优化方案。大伙也没啥意见，反正不用他们搬砖，真是替你们有我这么个好伙伴感到开心。\n<center>\n    <img width=\"200\" src=\"http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/bmc64lJ4xpxu59RZC9Xq7DRVxyhVRuZASlr.L3L9iiM!/b/dLgAAAAAAAAA&bo=8ADWAPAA1gARCT4!&rf=viewer_4\"></img>\n</center>\n\n\n接着找到产品，需要确定两点：\n* 剧情剧本的统一格式（假如策划伙伴每人各持一套，兼容代码会让人写到吐）\n* 解析器具体的功能点\n\n最终这个项目的面貌逐渐清晰：\n<!-- 具体需求 -->\n* 剧本格式\n```\n第一章 互动\n...\n1. 已经是晚上11点了\n你的女神突然很想吃宵夜\n你会帮她叫外卖还是让她赶紧睡觉？  \n(1-1： 帮她叫外卖，叫外卖，外卖。1-2： 让她赶紧睡觉，赶紧睡觉，睡觉)\n...\n```\n* 功能\n    * 上传.docx文档剧本\n    * 解析提出信息\n    * 验证剧情树结构\n    * 输出结构化数据\n\n## 实现需求\n\n这里我们直接看关键功能：解析剧本提炼信息。这里就包含两个步骤：解析docx文档和识别提炼信息。\n\n* 解析docx文档\n\n自己实现个解析docx文档程序？一般人不会那么干，那是牛人做的事情。\n<!--【表情包：牛】-->\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/uU8WcIx9l0DnUXjQSaLjPMau6FWllCnmMZu07ThMPik!/b/dFMBAAAAAAAA&bo=5gC3AOYAtwACaU0!&rf=viewer_4\"></img>\n</center>\n\n`mammoth.js`可以解决这个问题。\n> Mammoth is designed to convert .docx documents, such as those created by Microsoft Word, and convert them to HTML. \n\n意思是主要用于将word的.docx文档转换成HTML文档，除此之外mammoth有个extractRawText方法可以转换成row text行文本，以换行符划分。\n\n将解析文档功能封装成函数:\n```\nconst mammoth = require('mammoth');\n/**\n * 解析docx文本内容并导出\n * \n * @param {String} path .docx 路径\n */\nconst extractRawText = function (file) {\n  const opt = {};\n  if (file instanceof Buffer) {\n    opt.buffer = file;\n  } else if (typeof file === 'string') {\n    opt.path = file;\n  } else {\n    global.log_debug.error(`[parseDocxScript]:${file} 未知类型`);\n    throw new Error(`${file} 未知类型`);\n  }\n  return new Promise(resolve => {\n    mammoth.extractRawText(opt)\n      .then(function (result) {\n        resolve(result); // {value, message}\n      });\n  });\n};\n```\n文档内容以String类型存在于result.value中，其中换行符会被转换成\\n\\n。\n\n* 识别并提炼信息\n\n识别就是字符串遍历和检测，利用正则表达式足以解决，其实就是使用标记法，待识别的数据有其相关的标记。\n\n根据剧本格式，需要正则识别的信息有：\n* 章节：第一章\n```\n/第(.*)章(.*)$/\n```\n* 剧情编号（ID）：2. 2-1. \n```\n/^([\\d\\-]+)\\./\n```\n* 分支：（5：回复，回。6：不理会）\n```\n/^[（\\()](.*)[）\\)]$/\n```\n* 分支中的剧情编号\n```\n/([\\d\\-]+)/\n```\n\n可以以`\\n\\n`为分隔符将内容切分成数组，遍历去逐行识别检验。\n\n<details>\n<summary>code</summary>\n<pre><code class=\"hljs\">\n/**\n * 解析剧本，结构化信息\n * \n * @param {String} path .docx 路径\n * @param {Object} opt 拼装数据需要的参数sceneId\n */\nconst parseScript = function (file, opt = {}) {\n  return extractRawText(file)\n    .then(result => {\n      var text = result.value;\n      var aSource = text.split('\\n\\n');\n      var temp = aSource.filter(v => !!v);\n      var dialog = {},\n        dialogs = [],\n        chapters = [],\n        currId,\n        currChar;\n      console.log(temp);\n      temp.forEach(v => {\n        var matchIdReg = /^([\\d\\-]+)\\./, // 2 2-1 \n          matchNextIdReg = /([\\d\\-]+)/,\n          matchChooseText = /^[（\\()](.*)[）\\)]$/,\n          matchChapText = /第(.*)章(.*)$/,\n          res;\n        // 解析章节\n        res = v.trim().match(matchChapText);\n        if (res) {\n          var chapNo = currChar = zhDigitToArabic(res[1]);\n          var isExit = !!chapters.find(v => v.chapNo === chapNo);\n          !isExit && chapters.push({\n            chapNo,\n            title: res[2].trim()\n          });\n        }\n        // 识别节点\n        res = v.match(matchIdReg);\n        if (res) {\n          dialog = {};\n          currId = dialog.id = res[1];\n          currChar && (dialog.chapNo = currChar);\n          v = v.replace(matchIdReg, '');\n        }\n        // 判断分支语句\n        res = v.match(matchChooseText);\n        if (res) {\n          const t = res[1];\n          t.split(/[。；]/).forEach(v => {\n            // v => 2：xxx || 接4\n            var item = {},\n              keyword;\n            res = v.match(matchNextIdReg);\n            if (res === null) return;\n            item.nextId = res[1];\n            keyword = v.split('：')[1];\n            keyword && (item.keywords = keyword.trim().split('，'));\n            !dialog.children && (dialog.children = []);\n            dialog.children.push(item);\n          });\n        } else {\n          // 处理内容语句\n          if (currId === dialog.id && !/【全文完】/.test(v)) {\n            if (dialog.content === undefined) dialog.content = '';\n            dialog.content += `${v}\\n\\n`;\n          }\n        }\n        // 装载dialog\n        if (dialog.id && dialog.content && !dialogs.includes(dialog)) dialogs.push(dialog);\n      });\n    return { dialogs, chapters }\n};\n</code></pre>\n</details>\n\n## 效果和收益\n当打通流程之后，只需轻轻点击上传剧本，弹指一挥间，一棵可爱的剧情树已经出现在你面前，处理时间平均200+ms，整个过程1s不到。\n<!--【图片。gif】-->\n![image](http://b264.photo.store.qq.com/psb?/V12x89qA2LlAEO/oaTG.bAfWJtIE7Y944ngY0o5RnP5gragZki3JkEbu6Y!/b/dAgBAAAAAAAA&bo=xgX*AQAAAAACR14!&rf=viewer_4)\n\n之前完整的配一个复杂的剧情树要配一天，目前只需要两小时不到。在效率上得到了大幅度的提升，对于运营伙伴来说简直是如获至宝，用他们的话来说就是大快人心。\n\n<center>\n    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/97GNFgAvlnbwg.czssmO*4312jTHJXbY6zP1lm5.Em8!/b/dL4AAAAAAAAA&bo=WgHfAAAAAAAChyc!&rf=viewer_4\"></img>\n</center>\n\n\n\n\n\n\n","slug":"04-不得不懂的工作流优化技能","published":1,"updated":"2022-12-06T15:30:37.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3s0006mcq0aegtdt00","content":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029f1175340.jpg\" alt=\"我是图片\"></p>\n<span id=\"more\"></span>\n<blockquote>\n<p>工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，用娱乐精神分享知识。</p>\n</blockquote>\n<blockquote>\n<p>下文可能存在图片未显示问题，可异步到 <a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5dcd569d51882510b265fc62\">原文</a> 阅读</p>\n</blockquote>\n<p>很多朋友都知道我们团队是在智能音箱上开发语音技能业务，问答类和剧情类是语音技能中常见的两大类，其中剧情类是我们家游戏重中之重。</p>\n<p>剧情游戏的数据结构是树，称为剧情树。上线游戏之前，得先在后台手动录入剧情树，包括创建剧情节点、填入语料信息、关键词等等。故事内容小的不出一百个剧情节点，大的还要划分章节，剧情节点总数可达千级以上。<br><img src=\"http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/7EoUcLRyVwuW4jKAVcqKAUgwghtnsujZtzd9TMD8Iow!/b/dLgAAAAAAAAA&amp;bo=fgWqAX4FqgEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>那么人工录入这颗庞大的剧情树的时间成本会制约剧情游戏上线时间，况且这么多数据靠人工操作，那人岂不是要心态爆炸。</p>\n<p>有大佬说过：有麻烦的地方，就有机会。谁说的我想不起来。</p>\n<center><br>    <img width=\"200\" src=\"http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/5Qtfvc0ROsoe3VEROyr3amxeZ9EQuFRpLQLeAKzRFnw!/b/dL8AAAAAAAAA&bo=2gDwANoA8AARCT4!&rf=viewer_4\"></img><br></center>\n\n<p>况且不忍心看着运营妹子把青春都浪费在重复无价值的工作上，于是就有了我，一位技术不咋地但乐善好施的前端专业切图手，挺身而出，做了以下事情。</p>\n<center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ba.jrAo5EBEsb8Z6kUXjh1LKPc.BE.*1gVfOx54UmXY!/b/dLgAAAAAAAAA&bo=8ADwAPAA8AACOR0!&rf=viewer_4\"></img><br></center>\n\n\n<ul>\n<li><a href=\"#工作流分析\">工作流分析</a></li>\n<li><a href=\"#推动立项\">推动立项</a></li>\n<li><a href=\"#实现需求\">实现需求</a></li>\n<li><a href=\"#效果和收益\">效果和收益</a></li>\n</ul>\n<h2 id=\"工作流分析\"><a href=\"#工作流分析\" class=\"headerlink\" title=\"工作流分析\"></a>工作流分析</h2><p>把录入剧情树的工作流程画成图来表达会更加容易说明问题：<br><img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/irSMmVs9SQXAZc.sQNRUNvzUF2AcpE1qI11nC38RsKs!/b/dLYAAAAAAAAA&amp;bo=WAK3AFgCtwADCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>很简单的一个工作流，把效率不高的环节拆分成多个组合因素，这里的目的主要是录入剧情树的相关信息，把信息分类如下：<br><img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/KL0TIziHozdKiDj0ij7KTQgemnqVWU95I4rM5YdTB2I!/b/dLYAAAAAAAAA&amp;bo=lALpAZQC6QEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>其中有些信息是可以直接从剧本中去是识别提炼出来形成结构化数据，将这个任务自动化，交给机器来处理，人工只负责剧本不需要出现、数据操作类的信息，那么一下步就是按自动/人工的范畴来重整信息。<br><img src=\"http://b309.photo.store.qq.com/psb?/V12x89qA2LlAEO/360ys0nAUzliwPsseN63c1piKE.gxPEOVybPBtnENpU!/b/dDUBAAAAAAAA&amp;bo=5ANBAuQDQQIDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>右边的就是重整后的信息分类，两个分类可以演化成两个新阶段，机器分析剧本自动化阶段和人工补全阶段，替换掉前面效率低下的部分就可以形成新的工作流：<br><img src=\"http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/YbT32wTf*K8*knQAtn5Jh5W7MlFfZp.ugGPtwVawxEU!/b/dL8AAAAAAAAA&amp;bo=0AIcAdACHAEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>优化升级后的工作流需要一个剧本分析器来为它赋能。</p>\n<p>现在的感觉就像仿佛看见了曙光。</p>\n<center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/o4r2aVqjJIaMwG*LrzJSw0Xuc0XZ2AdKU.2r58u8XxM!/b/dPMAAAAAAAAA&bo=9wCaAAAAAAACZy4!&rf=viewer_4\"></img><br></center>\n\n\n<p>你以为我会现在马上动手做吗？不，这仅仅是我歪歪的一个东西，并没有经过各方面的认同，需要请求下产品和技术老大的意见，否者辛辛苦苦做出来，得不到大家认同，没有功劳更没有苦劳。</p>\n<h2 id=\"项目立项\"><a href=\"#项目立项\" class=\"headerlink\" title=\"项目立项\"></a>项目立项</h2><p>在周会上回报工作情况时候，顺水推舟的拿出上面的工作流分析，向组内提出了这个优化方案。大伙也没啥意见，反正不用他们搬砖，真是替你们有我这么个好伙伴感到开心。</p>\n<center><br>    <img width=\"200\" src=\"http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/bmc64lJ4xpxu59RZC9Xq7DRVxyhVRuZASlr.L3L9iiM!/b/dLgAAAAAAAAA&bo=8ADWAPAA1gARCT4!&rf=viewer_4\"></img><br></center>\n\n\n<p>接着找到产品，需要确定两点：</p>\n<ul>\n<li>剧情剧本的统一格式（假如策划伙伴每人各持一套，兼容代码会让人写到吐）</li>\n<li>解析器具体的功能点</li>\n</ul>\n<p>最终这个项目的面貌逐渐清晰：<br><!-- 具体需求 --></p>\n<ul>\n<li>剧本格式<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一章 互动</span><br><span class=\"line\"><span class=\"meta prompt_\">...</span></span><br><span class=\"line\">1. 已经是晚上11点了</span><br><span class=\"line\">你的女神突然很想吃宵夜</span><br><span class=\"line\">你会帮她叫外卖还是让她赶紧睡觉？  </span><br><span class=\"line\">(1-1： 帮她叫外卖，叫外卖，外卖。1-2： 让她赶紧睡觉，赶紧睡觉，睡觉)</span><br><span class=\"line\"><span class=\"meta prompt_\">...</span></span><br></pre></td></tr></table></figure></li>\n<li>功能<ul>\n<li>上传.docx文档剧本</li>\n<li>解析提出信息</li>\n<li>验证剧情树结构</li>\n<li>输出结构化数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"实现需求\"><a href=\"#实现需求\" class=\"headerlink\" title=\"实现需求\"></a>实现需求</h2><p>这里我们直接看关键功能：解析剧本提炼信息。这里就包含两个步骤：解析docx文档和识别提炼信息。</p>\n<ul>\n<li>解析docx文档</li>\n</ul>\n<p>自己实现个解析docx文档程序？一般人不会那么干，那是牛人做的事情。<br><!--【表情包：牛】--></p>\n<center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/uU8WcIx9l0DnUXjQSaLjPMau6FWllCnmMZu07ThMPik!/b/dFMBAAAAAAAA&bo=5gC3AOYAtwACaU0!&rf=viewer_4\"></img><br></center>\n\n<p><code>mammoth.js</code>可以解决这个问题。</p>\n<blockquote>\n<p>Mammoth is designed to convert .docx documents, such as those created by Microsoft Word, and convert them to HTML. </p>\n</blockquote>\n<p>意思是主要用于将word的.docx文档转换成HTML文档，除此之外mammoth有个extractRawText方法可以转换成row text行文本，以换行符划分。</p>\n<p>将解析文档功能封装成函数:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mammoth = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mammoth&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 解析docx文本内容并导出</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; path .docx 路径</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> extractRawText = <span class=\"keyword\">function</span> (<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> opt = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (file <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Buffer</span>) &#123;</span><br><span class=\"line\">    opt.<span class=\"property\">buffer</span> = file;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> file === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">    opt.<span class=\"property\">path</span> = file;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">global</span>.<span class=\"property\">log_debug</span>.<span class=\"title function_\">error</span>(<span class=\"string\">`[parseDocxScript]:<span class=\"subst\">$&#123;file&#125;</span> 未知类型`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;file&#125;</span> 未知类型`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> &#123;</span><br><span class=\"line\">    mammoth.<span class=\"title function_\">extractRawText</span>(opt)</span><br><span class=\"line\">      .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">result</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(result); <span class=\"comment\">// &#123;value, message&#125;</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br>文档内容以String类型存在于result.value中，其中换行符会被转换成\\n\\n。</p>\n<ul>\n<li>识别并提炼信息</li>\n</ul>\n<p>识别就是字符串遍历和检测，利用正则表达式足以解决，其实就是使用标记法，待识别的数据有其相关的标记。</p>\n<p>根据剧本格式，需要正则识别的信息有：</p>\n<ul>\n<li>章节：第一章<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/第(.*)章(.*)$/</span></span><br></pre></td></tr></table></figure></li>\n<li>剧情编号（ID）：2. 2-1. <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/^([\\d\\-]+)\\./</span></span><br></pre></td></tr></table></figure></li>\n<li>分支：（5：回复，回。6：不理会）<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/^[（\\()](.*)[）\\)]$/</span></span><br></pre></td></tr></table></figure></li>\n<li>分支中的剧情编号<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/([\\d\\-]+)/</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以以<code>\\n\\n</code>为分隔符将内容切分成数组，遍历去逐行识别检验。</p>\n<details><br><summary>code</summary><br><pre><code class=\"hljs\"><br>/*<em>\n </em> 解析剧本，结构化信息<br> <em> \n </em> @param &#123;String&#125; path .docx 路径<br> <em> @param &#123;Object&#125; opt 拼装数据需要的参数sceneId\n </em>/<br>const parseScript = function (file, opt = &#123;&#125;) &#123;<br>  return extractRawText(file)<br>    .then(result =&gt; &#123;<br>      var text = result.value;<br>      var aSource = text.split(‘\\n\\n’);<br>      var temp = aSource.filter(v =&gt; !!v);<br>      var dialog = &#123;&#125;,<br>        dialogs = [],<br>        chapters = [],<br>        currId,<br>        currChar;<br>      console.log(temp);<br>      temp.forEach(v =&gt; &#123;<br>        var matchIdReg = /^([\\d-]+)./, // 2 2-1<br>          matchNextIdReg = /([\\d-]+)/,<br>          matchChooseText = /^<a href=\".*\">（()</a>[）)]$/,<br>          matchChapText = /第(.<em>)章(.</em>)$/,<br>          res;<br>        // 解析章节<br>        res = v.trim().match(matchChapText);<br>        if (res) &#123;<br>          var chapNo = currChar = zhDigitToArabic(res[1]);<br>          var isExit = !!chapters.find(v =&gt; v.chapNo === chapNo);<br>          !isExit &amp;&amp; chapters.push(&#123;<br>            chapNo,<br>            title: res[2].trim()<br>          &#125;);<br>        &#125;<br>        // 识别节点<br>        res = v.match(matchIdReg);<br>        if (res) &#123;<br>          dialog = &#123;&#125;;<br>          currId = dialog.id = res[1];<br>          currChar &amp;&amp; (dialog.chapNo = currChar);<br>          v = v.replace(matchIdReg, ‘’);<br>        &#125;<br>        // 判断分支语句<br>        res = v.match(matchChooseText);<br>        if (res) &#123;<br>          const t = res[1];<br>          t.split(/[。；]/).forEach(v =&gt; &#123;<br>            // v =&gt; 2：xxx || 接4<br>            var item = &#123;&#125;,<br>              keyword;<br>            res = v.match(matchNextIdReg);<br>            if (res === null) return;<br>            item.nextId = res[1];<br>            keyword = v.split(‘：’)[1];<br>            keyword &amp;&amp; (item.keywords = keyword.trim().split(‘，’));<br>            !dialog.children &amp;&amp; (dialog.children = []);<br>            dialog.children.push(item);<br>          &#125;);<br>        &#125; else &#123;<br>          // 处理内容语句<br>          if (currId === dialog.id &amp;&amp; !/【全文完】/.test(v)) &#123;<br>            if (dialog.content === undefined) dialog.content = ‘’;<br>            dialog.content += <code>$&#123;v&#125;\\n\\n</code>;<br>          }<br>        }<br>        // 装载dialog<br>        if (dialog.id &amp;&amp; dialog.content &amp;&amp; !dialogs.includes(dialog)) dialogs.push(dialog);<br>      });<br>    return { dialogs, chapters }<br>};<br></code></pre><br></details>\n\n<h2 id=\"效果和收益\"><a href=\"#效果和收益\" class=\"headerlink\" title=\"效果和收益\"></a>效果和收益</h2><p>当打通流程之后，只需轻轻点击上传剧本，弹指一挥间，一棵可爱的剧情树已经出现在你面前，处理时间平均200+ms，整个过程1s不到。<br><!--【图片。gif】--><br><img src=\"http://b264.photo.store.qq.com/psb?/V12x89qA2LlAEO/oaTG.bAfWJtIE7Y944ngY0o5RnP5gragZki3JkEbu6Y!/b/dAgBAAAAAAAA&amp;bo=xgX*AQAAAAACR14!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>之前完整的配一个复杂的剧情树要配一天，目前只需要两小时不到。在效率上得到了大幅度的提升，对于运营伙伴来说简直是如获至宝，用他们的话来说就是大快人心。</p>\n<center><br>    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/97GNFgAvlnbwg.czssmO*4312jTHJXbY6zP1lm5.Em8!/b/dL4AAAAAAAAA&bo=WgHfAAAAAAAChyc!&rf=viewer_4\"></img><br></center>\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029f1175340.jpg\" alt=\"我是图片\"></p>","more":"<blockquote>\n<p>工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，用娱乐精神分享知识。</p>\n</blockquote>\n<blockquote>\n<p>下文可能存在图片未显示问题，可异步到 <a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5dcd569d51882510b265fc62\">原文</a> 阅读</p>\n</blockquote>\n<p>很多朋友都知道我们团队是在智能音箱上开发语音技能业务，问答类和剧情类是语音技能中常见的两大类，其中剧情类是我们家游戏重中之重。</p>\n<p>剧情游戏的数据结构是树，称为剧情树。上线游戏之前，得先在后台手动录入剧情树，包括创建剧情节点、填入语料信息、关键词等等。故事内容小的不出一百个剧情节点，大的还要划分章节，剧情节点总数可达千级以上。<br><img src=\"http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/7EoUcLRyVwuW4jKAVcqKAUgwghtnsujZtzd9TMD8Iow!/b/dLgAAAAAAAAA&amp;bo=fgWqAX4FqgEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>那么人工录入这颗庞大的剧情树的时间成本会制约剧情游戏上线时间，况且这么多数据靠人工操作，那人岂不是要心态爆炸。</p>\n<p>有大佬说过：有麻烦的地方，就有机会。谁说的我想不起来。</p>\n<center><br>    <img width=\"200\" src=\"http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/5Qtfvc0ROsoe3VEROyr3amxeZ9EQuFRpLQLeAKzRFnw!/b/dL8AAAAAAAAA&bo=2gDwANoA8AARCT4!&rf=viewer_4\"></img><br></center>\n\n<p>况且不忍心看着运营妹子把青春都浪费在重复无价值的工作上，于是就有了我，一位技术不咋地但乐善好施的前端专业切图手，挺身而出，做了以下事情。</p>\n<center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/ba.jrAo5EBEsb8Z6kUXjh1LKPc.BE.*1gVfOx54UmXY!/b/dLgAAAAAAAAA&bo=8ADwAPAA8AACOR0!&rf=viewer_4\"></img><br></center>\n\n\n<ul>\n<li><a href=\"#工作流分析\">工作流分析</a></li>\n<li><a href=\"#推动立项\">推动立项</a></li>\n<li><a href=\"#实现需求\">实现需求</a></li>\n<li><a href=\"#效果和收益\">效果和收益</a></li>\n</ul>\n<h2 id=\"工作流分析\"><a href=\"#工作流分析\" class=\"headerlink\" title=\"工作流分析\"></a>工作流分析</h2><p>把录入剧情树的工作流程画成图来表达会更加容易说明问题：<br><img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/irSMmVs9SQXAZc.sQNRUNvzUF2AcpE1qI11nC38RsKs!/b/dLYAAAAAAAAA&amp;bo=WAK3AFgCtwADCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>很简单的一个工作流，把效率不高的环节拆分成多个组合因素，这里的目的主要是录入剧情树的相关信息，把信息分类如下：<br><img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/KL0TIziHozdKiDj0ij7KTQgemnqVWU95I4rM5YdTB2I!/b/dLYAAAAAAAAA&amp;bo=lALpAZQC6QEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>其中有些信息是可以直接从剧本中去是识别提炼出来形成结构化数据，将这个任务自动化，交给机器来处理，人工只负责剧本不需要出现、数据操作类的信息，那么一下步就是按自动/人工的范畴来重整信息。<br><img src=\"http://b309.photo.store.qq.com/psb?/V12x89qA2LlAEO/360ys0nAUzliwPsseN63c1piKE.gxPEOVybPBtnENpU!/b/dDUBAAAAAAAA&amp;bo=5ANBAuQDQQIDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>右边的就是重整后的信息分类，两个分类可以演化成两个新阶段，机器分析剧本自动化阶段和人工补全阶段，替换掉前面效率低下的部分就可以形成新的工作流：<br><img src=\"http://b191.photo.store.qq.com/psb?/V12x89qA2LlAEO/YbT32wTf*K8*knQAtn5Jh5W7MlFfZp.ugGPtwVawxEU!/b/dL8AAAAAAAAA&amp;bo=0AIcAdACHAEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>优化升级后的工作流需要一个剧本分析器来为它赋能。</p>\n<p>现在的感觉就像仿佛看见了曙光。</p>\n<center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/o4r2aVqjJIaMwG*LrzJSw0Xuc0XZ2AdKU.2r58u8XxM!/b/dPMAAAAAAAAA&bo=9wCaAAAAAAACZy4!&rf=viewer_4\"></img><br></center>\n\n\n<p>你以为我会现在马上动手做吗？不，这仅仅是我歪歪的一个东西，并没有经过各方面的认同，需要请求下产品和技术老大的意见，否者辛辛苦苦做出来，得不到大家认同，没有功劳更没有苦劳。</p>\n<h2 id=\"项目立项\"><a href=\"#项目立项\" class=\"headerlink\" title=\"项目立项\"></a>项目立项</h2><p>在周会上回报工作情况时候，顺水推舟的拿出上面的工作流分析，向组内提出了这个优化方案。大伙也没啥意见，反正不用他们搬砖，真是替你们有我这么个好伙伴感到开心。</p>\n<center><br>    <img width=\"200\" src=\"http://b184.photo.store.qq.com/psb?/V12x89qA2LlAEO/bmc64lJ4xpxu59RZC9Xq7DRVxyhVRuZASlr.L3L9iiM!/b/dLgAAAAAAAAA&bo=8ADWAPAA1gARCT4!&rf=viewer_4\"></img><br></center>\n\n\n<p>接着找到产品，需要确定两点：</p>\n<ul>\n<li>剧情剧本的统一格式（假如策划伙伴每人各持一套，兼容代码会让人写到吐）</li>\n<li>解析器具体的功能点</li>\n</ul>\n<p>最终这个项目的面貌逐渐清晰：<br><!-- 具体需求 --></p>\n<ul>\n<li>剧本格式<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一章 互动</span><br><span class=\"line\"><span class=\"meta prompt_\">...</span></span><br><span class=\"line\">1. 已经是晚上11点了</span><br><span class=\"line\">你的女神突然很想吃宵夜</span><br><span class=\"line\">你会帮她叫外卖还是让她赶紧睡觉？  </span><br><span class=\"line\">(1-1： 帮她叫外卖，叫外卖，外卖。1-2： 让她赶紧睡觉，赶紧睡觉，睡觉)</span><br><span class=\"line\"><span class=\"meta prompt_\">...</span></span><br></pre></td></tr></table></figure></li>\n<li>功能<ul>\n<li>上传.docx文档剧本</li>\n<li>解析提出信息</li>\n<li>验证剧情树结构</li>\n<li>输出结构化数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"实现需求\"><a href=\"#实现需求\" class=\"headerlink\" title=\"实现需求\"></a>实现需求</h2><p>这里我们直接看关键功能：解析剧本提炼信息。这里就包含两个步骤：解析docx文档和识别提炼信息。</p>\n<ul>\n<li>解析docx文档</li>\n</ul>\n<p>自己实现个解析docx文档程序？一般人不会那么干，那是牛人做的事情。<br><!--【表情包：牛】--></p>\n<center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/uU8WcIx9l0DnUXjQSaLjPMau6FWllCnmMZu07ThMPik!/b/dFMBAAAAAAAA&bo=5gC3AOYAtwACaU0!&rf=viewer_4\"></img><br></center>\n\n<p><code>mammoth.js</code>可以解决这个问题。</p>\n<blockquote>\n<p>Mammoth is designed to convert .docx documents, such as those created by Microsoft Word, and convert them to HTML. </p>\n</blockquote>\n<p>意思是主要用于将word的.docx文档转换成HTML文档，除此之外mammoth有个extractRawText方法可以转换成row text行文本，以换行符划分。</p>\n<p>将解析文档功能封装成函数:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mammoth = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mammoth&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 解析docx文本内容并导出</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; path .docx 路径</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> extractRawText = <span class=\"keyword\">function</span> (<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> opt = &#123;&#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (file <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Buffer</span>) &#123;</span><br><span class=\"line\">    opt.<span class=\"property\">buffer</span> = file;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> file === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">    opt.<span class=\"property\">path</span> = file;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">global</span>.<span class=\"property\">log_debug</span>.<span class=\"title function_\">error</span>(<span class=\"string\">`[parseDocxScript]:<span class=\"subst\">$&#123;file&#125;</span> 未知类型`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;file&#125;</span> 未知类型`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> &#123;</span><br><span class=\"line\">    mammoth.<span class=\"title function_\">extractRawText</span>(opt)</span><br><span class=\"line\">      .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">result</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(result); <span class=\"comment\">// &#123;value, message&#125;</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br>文档内容以String类型存在于result.value中，其中换行符会被转换成\\n\\n。</p>\n<ul>\n<li>识别并提炼信息</li>\n</ul>\n<p>识别就是字符串遍历和检测，利用正则表达式足以解决，其实就是使用标记法，待识别的数据有其相关的标记。</p>\n<p>根据剧本格式，需要正则识别的信息有：</p>\n<ul>\n<li>章节：第一章<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/第(.*)章(.*)$/</span></span><br></pre></td></tr></table></figure></li>\n<li>剧情编号（ID）：2. 2-1. <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/^([\\d\\-]+)\\./</span></span><br></pre></td></tr></table></figure></li>\n<li>分支：（5：回复，回。6：不理会）<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/^[（\\()](.*)[）\\)]$/</span></span><br></pre></td></tr></table></figure></li>\n<li>分支中的剧情编号<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/([\\d\\-]+)/</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以以<code>\\n\\n</code>为分隔符将内容切分成数组，遍历去逐行识别检验。</p>\n<details><br><summary>code</summary><br><pre><code class=\"hljs\"><br>/*<em>\n </em> 解析剧本，结构化信息<br> <em> \n </em> @param &#123;String&#125; path .docx 路径<br> <em> @param &#123;Object&#125; opt 拼装数据需要的参数sceneId\n </em>/<br>const parseScript = function (file, opt = &#123;&#125;) &#123;<br>  return extractRawText(file)<br>    .then(result =&gt; &#123;<br>      var text = result.value;<br>      var aSource = text.split(‘\\n\\n’);<br>      var temp = aSource.filter(v =&gt; !!v);<br>      var dialog = &#123;&#125;,<br>        dialogs = [],<br>        chapters = [],<br>        currId,<br>        currChar;<br>      console.log(temp);<br>      temp.forEach(v =&gt; &#123;<br>        var matchIdReg = /^([\\d-]+)./, // 2 2-1<br>          matchNextIdReg = /([\\d-]+)/,<br>          matchChooseText = /^<a href=\".*\">（()</a>[）)]$/,<br>          matchChapText = /第(.<em>)章(.</em>)$/,<br>          res;<br>        // 解析章节<br>        res = v.trim().match(matchChapText);<br>        if (res) &#123;<br>          var chapNo = currChar = zhDigitToArabic(res[1]);<br>          var isExit = !!chapters.find(v =&gt; v.chapNo === chapNo);<br>          !isExit &amp;&amp; chapters.push(&#123;<br>            chapNo,<br>            title: res[2].trim()<br>          &#125;);<br>        &#125;<br>        // 识别节点<br>        res = v.match(matchIdReg);<br>        if (res) &#123;<br>          dialog = &#123;&#125;;<br>          currId = dialog.id = res[1];<br>          currChar &amp;&amp; (dialog.chapNo = currChar);<br>          v = v.replace(matchIdReg, ‘’);<br>        &#125;<br>        // 判断分支语句<br>        res = v.match(matchChooseText);<br>        if (res) &#123;<br>          const t = res[1];<br>          t.split(/[。；]/).forEach(v =&gt; &#123;<br>            // v =&gt; 2：xxx || 接4<br>            var item = &#123;&#125;,<br>              keyword;<br>            res = v.match(matchNextIdReg);<br>            if (res === null) return;<br>            item.nextId = res[1];<br>            keyword = v.split(‘：’)[1];<br>            keyword &amp;&amp; (item.keywords = keyword.trim().split(‘，’));<br>            !dialog.children &amp;&amp; (dialog.children = []);<br>            dialog.children.push(item);<br>          &#125;);<br>        &#125; else &#123;<br>          // 处理内容语句<br>          if (currId === dialog.id &amp;&amp; !/【全文完】/.test(v)) &#123;<br>            if (dialog.content === undefined) dialog.content = ‘’;<br>            dialog.content += <code>$&#123;v&#125;\\n\\n</code>;<br>          }<br>        }<br>        // 装载dialog<br>        if (dialog.id &amp;&amp; dialog.content &amp;&amp; !dialogs.includes(dialog)) dialogs.push(dialog);<br>      });<br>    return { dialogs, chapters }<br>};<br></code></pre><br></details>\n\n<h2 id=\"效果和收益\"><a href=\"#效果和收益\" class=\"headerlink\" title=\"效果和收益\"></a>效果和收益</h2><p>当打通流程之后，只需轻轻点击上传剧本，弹指一挥间，一棵可爱的剧情树已经出现在你面前，处理时间平均200+ms，整个过程1s不到。<br><!--【图片。gif】--><br><img src=\"http://b264.photo.store.qq.com/psb?/V12x89qA2LlAEO/oaTG.bAfWJtIE7Y944ngY0o5RnP5gragZki3JkEbu6Y!/b/dAgBAAAAAAAA&amp;bo=xgX*AQAAAAACR14!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>之前完整的配一个复杂的剧情树要配一天，目前只需要两小时不到。在效率上得到了大幅度的提升，对于运营伙伴来说简直是如获至宝，用他们的话来说就是大快人心。</p>\n<center><br>    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/97GNFgAvlnbwg.czssmO*4312jTHJXbY6zP1lm5.Em8!/b/dL4AAAAAAAAA&bo=WgHfAAAAAAAChyc!&rf=viewer_4\"></img><br></center>"},{"title":"使用console输出网站logo彩蛋【工作日记03】","date":"2019-11-17T16:00:00.000Z","_content":"\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029f187ca9f.jpg)\n\n<!-- more -->\n\n\n\n\n\n> 工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，分享知识，娱乐自己。\n\n> 下文可能存在图片未显示问题，可异步到 [原文](https://juejin.im/post/5dca2e56518825574d2149e5) 阅读\n\n相信大多数年轻人上班时都会偶尔刷下知乎，吃瓜或者提问题，一天我美若天仙的GF发了一张截图过来，说她知乎刷着刷着感觉遇到了bug，于是打开F12，看到了这个彩蛋。\n\n![zhihu-egg](http://b131.photo.store.qq.com/psb?/V12x89qA2LlAEO/piwEkxKgLCg69fWgJGgwSe9E98LHnzpFwrP938F4ufs!/b/dIMAAAAAAAAA&bo=NANnAQAAAAADB3M!&rf=viewer_4)\n\n除了不得不敬佩她的敬业精神外（她也是前端一枚），我肯定是不能涨他人志气，灭自己威风的。我平静的回了句，这玩意太简单，我也能整出来。\n\n编辑器打开，手在键盘上凝固，不知如何敲出第一个代码...\n\n<html>\n<center>\n    <img src=\"http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/cRggOlfoPJaxWQWwXauWV1aJi57jspW6RmKORJeW8Xk!/b/dFIBAAAAAAAA&bo=lgCWAAAAAAACFzM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n\n\n难道要一个个字符的画上去？那得画到什么何年何月？\n<!--【惊讶二级】-->\n<html>\n<center>\n    <img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/7vb2fhkTRegac9U7pv.iMHmoIf2hqE2x9ZJIYSpvsZw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img>\n</center>\n</html>\n\n既然自己没那个美术天赋，那就动脑子吧，何况我本身就靠脑子吃饭的呀。\n\n<!--【恍然大悟】-->\n<html>\n<center>\n    <img width=\"200\" src=\"http://b318.photo.store.qq.com/psb?/V12x89qA2LlAEO/sxtTcevZyQ55Zqb.olsITndQzMmw4oZwwoQmrGrn*O8!/b/dD4BAAAAAAAA&bo=LAEsAQAAAAACFzM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n既然是靠脑子吃饭的，那就得对得起我这聪明的脑子。先问问google大哥如何解决。\n\n\n一搜，不出我所料，已经有总结文章了。站在巨人的肩膀也不失为一种小聪明。\n\n* [让console充满情怀](hhttps://aotu.io/notes/2016/06/22/An-interesting-experience-on-console/index.html)\n\n<!--【得意】-->\n<html>\n<center>\n    <img width=\"200\" src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/jj43nXXEcKXqN2wnHhnyHnLuq6OBaIQmVrpngsNZdmw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAACJwM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n提取出有用的信息：\n1. console的方法可以填入占位符，类似c语言的print方法中的占位符。\n```\nconsole.log(object [, object, …])\n```\n2. 占位符\n\n格式占位符 | 作用\n---|---\n%s | 字符串\n%d or %i | 整数\n%f | 浮点数\n%o | 可展开的DOM\n%O | 列出DOM的属性\n%c | 根据提供的css样式格式化字符串\n\n3. 字符画  \n打印出的logo图案叫字符画，是可以用软件分析图片生成。亲测下面的软件比较好用：\n* [ASCII Generator](http://pan.baidu.com/share/link?shareid=3161588673&uk=3509597415)\n\n从上面第二点得知，原来console可以使用css规则格式化字符串，再结合软件将logo生成字符画，这个网站彩蛋不就搞定了吗，如此简单。\n\n\n具体步骤：\n1. 制作字符画  \n\n使用ASCII Generator上传logo图片，生成字符画，调节大小，抖动，然后选择好看的字符，调整好后可以拷贝到IDE了（粘贴到console.info(``)中，否则会出现换行符），如果不是很像可以增删一些字符微调一下。  \n\n这里要注意的是，字符画在IDE里表现会有点变形，可能打印出来也会变形，这是由字体不同造成的，回到软件中将字体调为微软雅黑，再粘贴回去，即使IDE上有点变形但打印出来不会。\n\n但是打印字符画有点单调，加点文字点缀点缀，会碰撞出更美的火花，加上我们团队的队名和标语。\n\n```\nconsole.log(`\n                       7007                       \n                 7000000000000007                 \n            760000000000000000000000057           \n         76000008888888888888880800000005         \n       700008888868688868888880000008860006       \n      800088886888688888888800067      700002     \n    70088888888888868888880007         7088000    \n   3008868800000088868888005           70888800   \n  7008888808000080888888801       76000088888800  \n  008868808      608888808      70000000888888806 \n 7088688800      608888807     700000888888688800 \n 3088868800      808888007             7088868880                 加班熊工作室\n 2088686800      608888807             70888888807          \n 2088888800      808888007             70888688007          ——国内精品AI语音游戏开创者——\n 1088888880      808888807     000000000888688880 \n  0088888007     700888007     000000000888888800 \n  0088888806      70000007     808888888888888007 \n  70086888803       758007     00888686888888005  \n   70088000006                 8088686868888002   \n    108057878003               808688868888007    \n    70007 1  800087            6088888880006      \n    00800  7   700000008888888608888800008        \n   8088800 77 7080800000000000808000004          \n  400000000000800080808000000000000047            \n700000000000000000000000000000007                `);\n```\n\n2. 加上样式\n```\nconsole.log(\"%cHello,%cWorld\", \"color:red;\", \"color:blue;\");\n```\n%c占位符的样式会影响其字后的字符串，样式之间符合从前到后的覆盖逻辑，后面的样式会覆盖前面的样式。\n\n![image](http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/grdHiKfwZrCevmZGh8HoFlQ7X7fVWTd4.Ekyhl2zon8!/b/dFIBAAAAAAAA&bo=OQMxAAAAAAADByk!&rf=viewer_4)\n\n那我们就可以在不同位置插入%c占位符，来控制不同元素字符画、队名和标语之间的样式。代码封装成函数：\n```\nconst consoleEgg = () => {\n  const egg = `%c\n                       7007                       \n                 7000000000000007                 \n            760000000000000000000000057           \n         76000008888888888888880800000005         \n       700008888868688868888880000008860006       \n      800088886888688888888800067      700002     \n    70088888888888868888880007         7088000    \n   3008868800000088868888005           70888800   \n  7008888808000080888888801       76000088888800  \n  008868808      608888808      70000000888888806 \n 7088688800      608888807     700000888888688800 \n 3088868800      808888007             7088868880                 %c加班熊工作室%c\n 2088686800      608888807             70888888807          \n 2088888800      808888007             70888688007          ——%c国内精品AI语音游戏开创者%c——\n 1088888880      808888807     000000000888688880 \n  0088888007     700888007     000000000888888800 \n  0088888806      70000007     808888888888888007 \n  70086888803       758007     00888686888888005  \n   70088000006                 8088686868888002   \n    108057878003               808688868888007    \n    70007 1  800087            6088888880006      \n    00800  7   700000008888888608888800008        \n   8088800 77 7080800000000000808000004          \n  400000000000800080808000000000000047            \n700000000000000000000000000000007                `;\n  const defaultStyle = 'color: rgba(0,0,0,.7);';\n  const titleStyle = 'color: #fff;background: rgba(52,55,86,1);padding: 2px 10px; border-radius: 2px;font-family: 微软雅黑;';\n  const sloganStyle = 'color: #343756';\n\n  console.log(egg, defaultStyle, titleStyle, defaultStyle, sloganStyle, defaultStyle);\n};\n```\n\n最终效果：\n![image](http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/MO7ODEnWcPYkDOJMM8VfeO1LROYS.5QE2NzR1qshQTQ!/b/dL4AAAAAAAAA&bo=KgN8AQAAAAADB3Y!&rf=viewer_4)\n\n把图片发给GF，她立马秒变迷妹，发来表情：\n\n<html>\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/nS8f7*bX*osE9cs9U2D61xGHu5goQ8pwLFaHJnJZHNU!/b/dL8AAAAAAAAA&bo=yADIAAAAAAACJwM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n<br>\n<br>\n<br>\n<br>\n\n<center>--------------------------》》》一条华丽的结束线《《《--------------------------\n</center>\n<br>\n<br>\nawait!await!!await!!!\n<center>\n    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/R3rpwlihgpSoxQnp92BPYp65Iryts4TmYoZemDikX1U!/b/dL4AAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img>\n</center>\n好奇的小伙伴肯定注意到我们古怪的队名，下面就是我们团队和业务的简单介绍，欢迎关注：\n\n\n> 加班熊工作室，国内精品AI语音游戏开创者，打造有趣好玩多元化语音交互游戏，在各大智能音箱平台天猫精灵、小度和小度在家、小爱同学上线语音技能数量达10+，积累玩家达一千多万，部分爆款游戏有女生追求手册、约会大作战、恐怖嫌疑人、恐怖陌生人、喜剧之王...赶快上音箱上玩玩吧！\n\n<center>\n    <img src=\"http://b320.photo.store.qq.com/psb?/V12x89qA2LlAEO/rfwmg.Xm7*..V1vL41h84cYLFHoKAtwazaoIvnueRsI!/b/dEABAAAAAAAA&bo=UQHfAAAAAAADB60!&rf=viewer_4\"></img>\n</center>\n\n\n<center>--------------------------》》》一条真正的结束线《《《--------------------------\n</center>","source":"_posts/03-使用console输出网站logo彩蛋.md","raw":"\n---\ntitle: 使用console输出网站logo彩蛋【工作日记03】\ndate: 2019-11-18\ntags: []\ncategories: [前端,工作日记]\n---\n\n![我是图片](http://pic1.win4000.com/wallpaper/2017-11-08/5a029f187ca9f.jpg)\n\n<!-- more -->\n\n\n\n\n\n> 工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，分享知识，娱乐自己。\n\n> 下文可能存在图片未显示问题，可异步到 [原文](https://juejin.im/post/5dca2e56518825574d2149e5) 阅读\n\n相信大多数年轻人上班时都会偶尔刷下知乎，吃瓜或者提问题，一天我美若天仙的GF发了一张截图过来，说她知乎刷着刷着感觉遇到了bug，于是打开F12，看到了这个彩蛋。\n\n![zhihu-egg](http://b131.photo.store.qq.com/psb?/V12x89qA2LlAEO/piwEkxKgLCg69fWgJGgwSe9E98LHnzpFwrP938F4ufs!/b/dIMAAAAAAAAA&bo=NANnAQAAAAADB3M!&rf=viewer_4)\n\n除了不得不敬佩她的敬业精神外（她也是前端一枚），我肯定是不能涨他人志气，灭自己威风的。我平静的回了句，这玩意太简单，我也能整出来。\n\n编辑器打开，手在键盘上凝固，不知如何敲出第一个代码...\n\n<html>\n<center>\n    <img src=\"http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/cRggOlfoPJaxWQWwXauWV1aJi57jspW6RmKORJeW8Xk!/b/dFIBAAAAAAAA&bo=lgCWAAAAAAACFzM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n\n\n难道要一个个字符的画上去？那得画到什么何年何月？\n<!--【惊讶二级】-->\n<html>\n<center>\n    <img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/7vb2fhkTRegac9U7pv.iMHmoIf2hqE2x9ZJIYSpvsZw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img>\n</center>\n</html>\n\n既然自己没那个美术天赋，那就动脑子吧，何况我本身就靠脑子吃饭的呀。\n\n<!--【恍然大悟】-->\n<html>\n<center>\n    <img width=\"200\" src=\"http://b318.photo.store.qq.com/psb?/V12x89qA2LlAEO/sxtTcevZyQ55Zqb.olsITndQzMmw4oZwwoQmrGrn*O8!/b/dD4BAAAAAAAA&bo=LAEsAQAAAAACFzM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n既然是靠脑子吃饭的，那就得对得起我这聪明的脑子。先问问google大哥如何解决。\n\n\n一搜，不出我所料，已经有总结文章了。站在巨人的肩膀也不失为一种小聪明。\n\n* [让console充满情怀](hhttps://aotu.io/notes/2016/06/22/An-interesting-experience-on-console/index.html)\n\n<!--【得意】-->\n<html>\n<center>\n    <img width=\"200\" src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/jj43nXXEcKXqN2wnHhnyHnLuq6OBaIQmVrpngsNZdmw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAACJwM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n提取出有用的信息：\n1. console的方法可以填入占位符，类似c语言的print方法中的占位符。\n```\nconsole.log(object [, object, …])\n```\n2. 占位符\n\n格式占位符 | 作用\n---|---\n%s | 字符串\n%d or %i | 整数\n%f | 浮点数\n%o | 可展开的DOM\n%O | 列出DOM的属性\n%c | 根据提供的css样式格式化字符串\n\n3. 字符画  \n打印出的logo图案叫字符画，是可以用软件分析图片生成。亲测下面的软件比较好用：\n* [ASCII Generator](http://pan.baidu.com/share/link?shareid=3161588673&uk=3509597415)\n\n从上面第二点得知，原来console可以使用css规则格式化字符串，再结合软件将logo生成字符画，这个网站彩蛋不就搞定了吗，如此简单。\n\n\n具体步骤：\n1. 制作字符画  \n\n使用ASCII Generator上传logo图片，生成字符画，调节大小，抖动，然后选择好看的字符，调整好后可以拷贝到IDE了（粘贴到console.info(``)中，否则会出现换行符），如果不是很像可以增删一些字符微调一下。  \n\n这里要注意的是，字符画在IDE里表现会有点变形，可能打印出来也会变形，这是由字体不同造成的，回到软件中将字体调为微软雅黑，再粘贴回去，即使IDE上有点变形但打印出来不会。\n\n但是打印字符画有点单调，加点文字点缀点缀，会碰撞出更美的火花，加上我们团队的队名和标语。\n\n```\nconsole.log(`\n                       7007                       \n                 7000000000000007                 \n            760000000000000000000000057           \n         76000008888888888888880800000005         \n       700008888868688868888880000008860006       \n      800088886888688888888800067      700002     \n    70088888888888868888880007         7088000    \n   3008868800000088868888005           70888800   \n  7008888808000080888888801       76000088888800  \n  008868808      608888808      70000000888888806 \n 7088688800      608888807     700000888888688800 \n 3088868800      808888007             7088868880                 加班熊工作室\n 2088686800      608888807             70888888807          \n 2088888800      808888007             70888688007          ——国内精品AI语音游戏开创者——\n 1088888880      808888807     000000000888688880 \n  0088888007     700888007     000000000888888800 \n  0088888806      70000007     808888888888888007 \n  70086888803       758007     00888686888888005  \n   70088000006                 8088686868888002   \n    108057878003               808688868888007    \n    70007 1  800087            6088888880006      \n    00800  7   700000008888888608888800008        \n   8088800 77 7080800000000000808000004          \n  400000000000800080808000000000000047            \n700000000000000000000000000000007                `);\n```\n\n2. 加上样式\n```\nconsole.log(\"%cHello,%cWorld\", \"color:red;\", \"color:blue;\");\n```\n%c占位符的样式会影响其字后的字符串，样式之间符合从前到后的覆盖逻辑，后面的样式会覆盖前面的样式。\n\n![image](http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/grdHiKfwZrCevmZGh8HoFlQ7X7fVWTd4.Ekyhl2zon8!/b/dFIBAAAAAAAA&bo=OQMxAAAAAAADByk!&rf=viewer_4)\n\n那我们就可以在不同位置插入%c占位符，来控制不同元素字符画、队名和标语之间的样式。代码封装成函数：\n```\nconst consoleEgg = () => {\n  const egg = `%c\n                       7007                       \n                 7000000000000007                 \n            760000000000000000000000057           \n         76000008888888888888880800000005         \n       700008888868688868888880000008860006       \n      800088886888688888888800067      700002     \n    70088888888888868888880007         7088000    \n   3008868800000088868888005           70888800   \n  7008888808000080888888801       76000088888800  \n  008868808      608888808      70000000888888806 \n 7088688800      608888807     700000888888688800 \n 3088868800      808888007             7088868880                 %c加班熊工作室%c\n 2088686800      608888807             70888888807          \n 2088888800      808888007             70888688007          ——%c国内精品AI语音游戏开创者%c——\n 1088888880      808888807     000000000888688880 \n  0088888007     700888007     000000000888888800 \n  0088888806      70000007     808888888888888007 \n  70086888803       758007     00888686888888005  \n   70088000006                 8088686868888002   \n    108057878003               808688868888007    \n    70007 1  800087            6088888880006      \n    00800  7   700000008888888608888800008        \n   8088800 77 7080800000000000808000004          \n  400000000000800080808000000000000047            \n700000000000000000000000000000007                `;\n  const defaultStyle = 'color: rgba(0,0,0,.7);';\n  const titleStyle = 'color: #fff;background: rgba(52,55,86,1);padding: 2px 10px; border-radius: 2px;font-family: 微软雅黑;';\n  const sloganStyle = 'color: #343756';\n\n  console.log(egg, defaultStyle, titleStyle, defaultStyle, sloganStyle, defaultStyle);\n};\n```\n\n最终效果：\n![image](http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/MO7ODEnWcPYkDOJMM8VfeO1LROYS.5QE2NzR1qshQTQ!/b/dL4AAAAAAAAA&bo=KgN8AQAAAAADB3Y!&rf=viewer_4)\n\n把图片发给GF，她立马秒变迷妹，发来表情：\n\n<html>\n<center>\n    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/nS8f7*bX*osE9cs9U2D61xGHu5goQ8pwLFaHJnJZHNU!/b/dL8AAAAAAAAA&bo=yADIAAAAAAACJwM!&rf=viewer_4\"></img>\n</center>\n</html>\n\n<br>\n<br>\n<br>\n<br>\n\n<center>--------------------------》》》一条华丽的结束线《《《--------------------------\n</center>\n<br>\n<br>\nawait!await!!await!!!\n<center>\n    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/R3rpwlihgpSoxQnp92BPYp65Iryts4TmYoZemDikX1U!/b/dL4AAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img>\n</center>\n好奇的小伙伴肯定注意到我们古怪的队名，下面就是我们团队和业务的简单介绍，欢迎关注：\n\n\n> 加班熊工作室，国内精品AI语音游戏开创者，打造有趣好玩多元化语音交互游戏，在各大智能音箱平台天猫精灵、小度和小度在家、小爱同学上线语音技能数量达10+，积累玩家达一千多万，部分爆款游戏有女生追求手册、约会大作战、恐怖嫌疑人、恐怖陌生人、喜剧之王...赶快上音箱上玩玩吧！\n\n<center>\n    <img src=\"http://b320.photo.store.qq.com/psb?/V12x89qA2LlAEO/rfwmg.Xm7*..V1vL41h84cYLFHoKAtwazaoIvnueRsI!/b/dEABAAAAAAAA&bo=UQHfAAAAAAADB60!&rf=viewer_4\"></img>\n</center>\n\n\n<center>--------------------------》》》一条真正的结束线《《《--------------------------\n</center>","slug":"03-使用console输出网站logo彩蛋","published":1,"updated":"2022-12-06T15:30:37.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3t0007mcq0c1o30a71","content":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029f187ca9f.jpg\" alt=\"我是图片\"></p>\n<span id=\"more\"></span>\n<blockquote>\n<p>工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，分享知识，娱乐自己。</p>\n</blockquote>\n<blockquote>\n<p>下文可能存在图片未显示问题，可异步到 <a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5dca2e56518825574d2149e5\">原文</a> 阅读</p>\n</blockquote>\n<p>相信大多数年轻人上班时都会偶尔刷下知乎，吃瓜或者提问题，一天我美若天仙的GF发了一张截图过来，说她知乎刷着刷着感觉遇到了bug，于是打开F12，看到了这个彩蛋。</p>\n<p><img src=\"http://b131.photo.store.qq.com/psb?/V12x89qA2LlAEO/piwEkxKgLCg69fWgJGgwSe9E98LHnzpFwrP938F4ufs!/b/dIMAAAAAAAAA&amp;bo=NANnAQAAAAADB3M!&amp;rf=viewer_4\" alt=\"zhihu-egg\"></p>\n<p>除了不得不敬佩她的敬业精神外（她也是前端一枚），我肯定是不能涨他人志气，灭自己威风的。我平静的回了句，这玩意太简单，我也能整出来。</p>\n<p>编辑器打开，手在键盘上凝固，不知如何敲出第一个代码…</p>\n<html><br><center><br>    <img src=\"http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/cRggOlfoPJaxWQWwXauWV1aJi57jspW6RmKORJeW8Xk!/b/dFIBAAAAAAAA&bo=lgCWAAAAAAACFzM!&rf=viewer_4\"></img><br></center><br></html>\n\n\n\n<p>难道要一个个字符的画上去？那得画到什么何年何月？<br><!--【惊讶二级】--></p>\n<html><br><center><br>    <img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/7vb2fhkTRegac9U7pv.iMHmoIf2hqE2x9ZJIYSpvsZw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img><br></center><br></html>\n\n<p>既然自己没那个美术天赋，那就动脑子吧，何况我本身就靠脑子吃饭的呀。</p>\n<!--【恍然大悟】-->\n<html><br><center><br>    <img width=\"200\" src=\"http://b318.photo.store.qq.com/psb?/V12x89qA2LlAEO/sxtTcevZyQ55Zqb.olsITndQzMmw4oZwwoQmrGrn*O8!/b/dD4BAAAAAAAA&bo=LAEsAQAAAAACFzM!&rf=viewer_4\"></img><br></center><br></html>\n\n<p>既然是靠脑子吃饭的，那就得对得起我这聪明的脑子。先问问google大哥如何解决。</p>\n<p>一搜，不出我所料，已经有总结文章了。站在巨人的肩膀也不失为一种小聪明。</p>\n<ul>\n<li><a href=\"hhttps://aotu.io/notes/2016/06/22/An-interesting-experience-on-console/index.html\">让console充满情怀</a></li>\n</ul>\n<!--【得意】-->\n<html><br><center><br>    <img width=\"200\" src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/jj43nXXEcKXqN2wnHhnyHnLuq6OBaIQmVrpngsNZdmw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAACJwM!&rf=viewer_4\"></img><br></center><br></html>\n\n<p>提取出有用的信息：</p>\n<ol>\n<li>console的方法可以填入占位符，类似c语言的print方法中的占位符。<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(<span class=\"keyword\">object</span> [, <span class=\"keyword\">object</span>, …])</span><br></pre></td></tr></table></figure></li>\n<li>占位符</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>格式占位符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%s</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td>%d or %i</td>\n<td>整数</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>浮点数</td>\n</tr>\n<tr>\n<td>%o</td>\n<td>可展开的DOM</td>\n</tr>\n<tr>\n<td>%O</td>\n<td>列出DOM的属性</td>\n</tr>\n<tr>\n<td>%c</td>\n<td>根据提供的css样式格式化字符串</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>字符画<br>打印出的logo图案叫字符画，是可以用软件分析图片生成。亲测下面的软件比较好用：</li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://pan.baidu.com/share/link?shareid=3161588673&amp;uk=3509597415\">ASCII Generator</a></li>\n</ul>\n<p>从上面第二点得知，原来console可以使用css规则格式化字符串，再结合软件将logo生成字符画，这个网站彩蛋不就搞定了吗，如此简单。</p>\n<p>具体步骤：</p>\n<ol>\n<li>制作字符画  </li>\n</ol>\n<p>使用ASCII Generator上传logo图片，生成字符画，调节大小，抖动，然后选择好看的字符，调整好后可以拷贝到IDE了（粘贴到console.info(<code></code>)中，否则会出现换行符），如果不是很像可以增删一些字符微调一下。  </p>\n<p>这里要注意的是，字符画在IDE里表现会有点变形，可能打印出来也会变形，这是由字体不同造成的，回到软件中将字体调为微软雅黑，再粘贴回去，即使IDE上有点变形但打印出来不会。</p>\n<p>但是打印字符画有点单调，加点文字点缀点缀，会碰撞出更美的火花，加上我们团队的队名和标语。</p>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(`</span><br><span class=\"line\">                      <span class=\"number\"> 7007 </span>                      </span><br><span class=\"line\">                <span class=\"number\"> 7000000000000007 </span>                </span><br><span class=\"line\">           <span class=\"number\"> 760000000000000000000000057 </span>          </span><br><span class=\"line\">        <span class=\"number\"> 76000008888888888888880800000005 </span>        </span><br><span class=\"line\">      <span class=\"number\"> 700008888868688868888880000008860006 </span>      </span><br><span class=\"line\">     <span class=\"number\"> 800088886888688888888800067 </span>    <span class=\"number\"> 700002 </span>    </span><br><span class=\"line\">   <span class=\"number\"> 70088888888888868888880007 </span>       <span class=\"number\"> 7088000 </span>   </span><br><span class=\"line\">  <span class=\"number\"> 3008868800000088868888005 </span>         <span class=\"number\"> 70888800 </span>  </span><br><span class=\"line\"> <span class=\"number\"> 7008888808000080888888801 </span>     <span class=\"number\"> 76000088888800 </span> </span><br><span class=\"line\"> <span class=\"number\"> 008868808 </span>    <span class=\"number\"> 608888808 </span>    <span class=\"number\"> 70000000888888806 </span></span><br><span class=\"line\"><span class=\"number\"> 7088688800 </span>    <span class=\"number\"> 608888807 </span>   <span class=\"number\"> 700000888888688800 </span></span><br><span class=\"line\"><span class=\"number\"> 3088868800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 7088868880 </span>                加班熊工作室</span><br><span class=\"line\"><span class=\"number\"> 2088686800 </span>    <span class=\"number\"> 608888807 </span>           <span class=\"number\"> 70888888807 </span>         </span><br><span class=\"line\"><span class=\"number\"> 2088888800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 70888688007 </span>         ——国内精品AI语音游戏开创者——</span><br><span class=\"line\"><span class=\"number\"> 1088888880 </span>    <span class=\"number\"> 808888807 </span>   <span class=\"number\"> 000000000888688880 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888007 </span>   <span class=\"number\"> 700888007 </span>   <span class=\"number\"> 000000000888888800 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888806 </span>    <span class=\"number\"> 70000007 </span>   <span class=\"number\"> 808888888888888007 </span></span><br><span class=\"line\"> <span class=\"number\"> 70086888803 </span>     <span class=\"number\"> 758007 </span>   <span class=\"number\"> 00888686888888005 </span> </span><br><span class=\"line\">  <span class=\"number\"> 70088000006 </span>               <span class=\"number\"> 8088686868888002 </span>  </span><br><span class=\"line\">   <span class=\"number\"> 108057878003 </span>             <span class=\"number\"> 808688868888007 </span>   </span><br><span class=\"line\">   <span class=\"number\"> 70007 </span>1 <span class=\"number\"> 800087 </span>          <span class=\"number\"> 6088888880006 </span>     </span><br><span class=\"line\">   <span class=\"number\"> 00800 </span><span class=\"number\"> 7 </span> <span class=\"number\"> 700000008888888608888800008 </span>       </span><br><span class=\"line\">  <span class=\"number\"> 8088800 </span>77<span class=\"number\"> 7080800000000000808000004 </span>         </span><br><span class=\"line\"> <span class=\"number\"> 400000000000800080808000000000000047 </span>           </span><br><span class=\"line\">700000000000000000000000000000007                `);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>加上样式<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.<span class=\"built_in\">log</span>(<span class=\"string\">&quot;%cHello,%cWorld&quot;</span>, <span class=\"string\">&quot;color:red;&quot;</span>, <span class=\"string\">&quot;color:blue;&quot;</span>);</span><br></pre></td></tr></table></figure>\n%c占位符的样式会影响其字后的字符串，样式之间符合从前到后的覆盖逻辑，后面的样式会覆盖前面的样式。</li>\n</ol>\n<p><img src=\"http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/grdHiKfwZrCevmZGh8HoFlQ7X7fVWTd4.Ekyhl2zon8!/b/dFIBAAAAAAAA&amp;bo=OQMxAAAAAAADByk!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>那我们就可以在不同位置插入%c占位符，来控制不同元素字符画、队名和标语之间的样式。代码封装成函数：<br><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const consoleEgg = () =&gt; &#123;</span><br><span class=\"line\">  const egg = `%c</span><br><span class=\"line\">                      <span class=\"number\"> 7007 </span>                      </span><br><span class=\"line\">                <span class=\"number\"> 7000000000000007 </span>                </span><br><span class=\"line\">           <span class=\"number\"> 760000000000000000000000057 </span>          </span><br><span class=\"line\">        <span class=\"number\"> 76000008888888888888880800000005 </span>        </span><br><span class=\"line\">      <span class=\"number\"> 700008888868688868888880000008860006 </span>      </span><br><span class=\"line\">     <span class=\"number\"> 800088886888688888888800067 </span>    <span class=\"number\"> 700002 </span>    </span><br><span class=\"line\">   <span class=\"number\"> 70088888888888868888880007 </span>       <span class=\"number\"> 7088000 </span>   </span><br><span class=\"line\">  <span class=\"number\"> 3008868800000088868888005 </span>         <span class=\"number\"> 70888800 </span>  </span><br><span class=\"line\"> <span class=\"number\"> 7008888808000080888888801 </span>     <span class=\"number\"> 76000088888800 </span> </span><br><span class=\"line\"> <span class=\"number\"> 008868808 </span>    <span class=\"number\"> 608888808 </span>    <span class=\"number\"> 70000000888888806 </span></span><br><span class=\"line\"><span class=\"number\"> 7088688800 </span>    <span class=\"number\"> 608888807 </span>   <span class=\"number\"> 700000888888688800 </span></span><br><span class=\"line\"><span class=\"number\"> 3088868800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 7088868880 </span>                %c加班熊工作室%c</span><br><span class=\"line\"><span class=\"number\"> 2088686800 </span>    <span class=\"number\"> 608888807 </span>           <span class=\"number\"> 70888888807 </span>         </span><br><span class=\"line\"><span class=\"number\"> 2088888800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 70888688007 </span>         ——%c国内精品AI语音游戏开创者%c——</span><br><span class=\"line\"><span class=\"number\"> 1088888880 </span>    <span class=\"number\"> 808888807 </span>   <span class=\"number\"> 000000000888688880 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888007 </span>   <span class=\"number\"> 700888007 </span>   <span class=\"number\"> 000000000888888800 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888806 </span>    <span class=\"number\"> 70000007 </span>   <span class=\"number\"> 808888888888888007 </span></span><br><span class=\"line\"> <span class=\"number\"> 70086888803 </span>     <span class=\"number\"> 758007 </span>   <span class=\"number\"> 00888686888888005 </span> </span><br><span class=\"line\">  <span class=\"number\"> 70088000006 </span>               <span class=\"number\"> 8088686868888002 </span>  </span><br><span class=\"line\">   <span class=\"number\"> 108057878003 </span>             <span class=\"number\"> 808688868888007 </span>   </span><br><span class=\"line\">   <span class=\"number\"> 70007 </span>1 <span class=\"number\"> 800087 </span>          <span class=\"number\"> 6088888880006 </span>     </span><br><span class=\"line\">   <span class=\"number\"> 00800 </span><span class=\"number\"> 7 </span> <span class=\"number\"> 700000008888888608888800008 </span>       </span><br><span class=\"line\">  <span class=\"number\"> 8088800 </span>77<span class=\"number\"> 7080800000000000808000004 </span>         </span><br><span class=\"line\"> <span class=\"number\"> 400000000000800080808000000000000047 </span>           </span><br><span class=\"line\">700000000000000000000000000000007                `;</span><br><span class=\"line\">  const defaultStyle = &#x27;color: rgba(0,0,0,.7);&#x27;;</span><br><span class=\"line\">  const titleStyle = &#x27;color: <span class=\"comment\">#fff;background: rgba(52,55,86,1);padding: 2px 10px; border-radius: 2px;font-family: 微软雅黑;&#x27;;</span></span><br><span class=\"line\">  const sloganStyle = &#x27;color: <span class=\"comment\">#343756&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  console.log(egg, defaultStyle, titleStyle, defaultStyle, sloganStyle, defaultStyle);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>最终效果：<br><img src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/MO7ODEnWcPYkDOJMM8VfeO1LROYS.5QE2NzR1qshQTQ!/b/dL4AAAAAAAAA&amp;bo=KgN8AQAAAAADB3Y!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>把图片发给GF，她立马秒变迷妹，发来表情：</p>\n<html><br><center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/nS8f7*bX*osE9cs9U2D61xGHu5goQ8pwLFaHJnJZHNU!/b/dL8AAAAAAAAA&bo=yADIAAAAAAACJwM!&rf=viewer_4\"></img><br></center><br></html>\n\n<p><br><br><br><br><br><br><br></p>\n<center>————————–》》》一条华丽的结束线《《《————————–<br></center><br><br><br><br><br>await!await!!await!!!<br><center><br>    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/R3rpwlihgpSoxQnp92BPYp65Iryts4TmYoZemDikX1U!/b/dL4AAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img><br></center><br>好奇的小伙伴肯定注意到我们古怪的队名，下面就是我们团队和业务的简单介绍，欢迎关注：<br><br><br>&gt; 加班熊工作室，国内精品AI语音游戏开创者，打造有趣好玩多元化语音交互游戏，在各大智能音箱平台天猫精灵、小度和小度在家、小爱同学上线语音技能数量达10+，积累玩家达一千多万，部分爆款游戏有女生追求手册、约会大作战、恐怖嫌疑人、恐怖陌生人、喜剧之王…赶快上音箱上玩玩吧！<br><br><center><br>    <img src=\"http://b320.photo.store.qq.com/psb?/V12x89qA2LlAEO/rfwmg.Xm7*..V1vL41h84cYLFHoKAtwazaoIvnueRsI!/b/dEABAAAAAAAA&bo=UQHfAAAAAAADB60!&rf=viewer_4\"></img><br></center>\n\n\n<center>————————–》》》一条真正的结束线《《《————————–<br></center>","site":{"data":{}},"excerpt":"<p><img src=\"http://pic1.win4000.com/wallpaper/2017-11-08/5a029f187ca9f.jpg\" alt=\"我是图片\"></p>","more":"<blockquote>\n<p>工作日记是笔者记录在日常工作中对负责的前端项目和任务的总结和提炼，在工作中寻乐趣，在代码中找灵魂，输出工作中有价值有意思的沉淀，分享知识，娱乐自己。</p>\n</blockquote>\n<blockquote>\n<p>下文可能存在图片未显示问题，可异步到 <a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5dca2e56518825574d2149e5\">原文</a> 阅读</p>\n</blockquote>\n<p>相信大多数年轻人上班时都会偶尔刷下知乎，吃瓜或者提问题，一天我美若天仙的GF发了一张截图过来，说她知乎刷着刷着感觉遇到了bug，于是打开F12，看到了这个彩蛋。</p>\n<p><img src=\"http://b131.photo.store.qq.com/psb?/V12x89qA2LlAEO/piwEkxKgLCg69fWgJGgwSe9E98LHnzpFwrP938F4ufs!/b/dIMAAAAAAAAA&amp;bo=NANnAQAAAAADB3M!&amp;rf=viewer_4\" alt=\"zhihu-egg\"></p>\n<p>除了不得不敬佩她的敬业精神外（她也是前端一枚），我肯定是不能涨他人志气，灭自己威风的。我平静的回了句，这玩意太简单，我也能整出来。</p>\n<p>编辑器打开，手在键盘上凝固，不知如何敲出第一个代码…</p>\n<html><br><center><br>    <img src=\"http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/cRggOlfoPJaxWQWwXauWV1aJi57jspW6RmKORJeW8Xk!/b/dFIBAAAAAAAA&bo=lgCWAAAAAAACFzM!&rf=viewer_4\"></img><br></center><br></html>\n\n\n\n<p>难道要一个个字符的画上去？那得画到什么何年何月？<br><!--【惊讶二级】--></p>\n<html><br><center><br>    <img src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/7vb2fhkTRegac9U7pv.iMHmoIf2hqE2x9ZJIYSpvsZw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img><br></center><br></html>\n\n<p>既然自己没那个美术天赋，那就动脑子吧，何况我本身就靠脑子吃饭的呀。</p>\n<!--【恍然大悟】-->\n<html><br><center><br>    <img width=\"200\" src=\"http://b318.photo.store.qq.com/psb?/V12x89qA2LlAEO/sxtTcevZyQ55Zqb.olsITndQzMmw4oZwwoQmrGrn*O8!/b/dD4BAAAAAAAA&bo=LAEsAQAAAAACFzM!&rf=viewer_4\"></img><br></center><br></html>\n\n<p>既然是靠脑子吃饭的，那就得对得起我这聪明的脑子。先问问google大哥如何解决。</p>\n<p>一搜，不出我所料，已经有总结文章了。站在巨人的肩膀也不失为一种小聪明。</p>\n<ul>\n<li><a href=\"hhttps://aotu.io/notes/2016/06/22/An-interesting-experience-on-console/index.html\">让console充满情怀</a></li>\n</ul>\n<!--【得意】-->\n<html><br><center><br>    <img width=\"200\" src=\"http://b182.photo.store.qq.com/psb?/V12x89qA2LlAEO/jj43nXXEcKXqN2wnHhnyHnLuq6OBaIQmVrpngsNZdmw!/b/dLYAAAAAAAAA&bo=8ADwAAAAAAACJwM!&rf=viewer_4\"></img><br></center><br></html>\n\n<p>提取出有用的信息：</p>\n<ol>\n<li>console的方法可以填入占位符，类似c语言的print方法中的占位符。<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(<span class=\"keyword\">object</span> [, <span class=\"keyword\">object</span>, …])</span><br></pre></td></tr></table></figure></li>\n<li>占位符</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>格式占位符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%s</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td>%d or %i</td>\n<td>整数</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>浮点数</td>\n</tr>\n<tr>\n<td>%o</td>\n<td>可展开的DOM</td>\n</tr>\n<tr>\n<td>%O</td>\n<td>列出DOM的属性</td>\n</tr>\n<tr>\n<td>%c</td>\n<td>根据提供的css样式格式化字符串</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>字符画<br>打印出的logo图案叫字符画，是可以用软件分析图片生成。亲测下面的软件比较好用：</li>\n</ol>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://pan.baidu.com/share/link?shareid=3161588673&amp;uk=3509597415\">ASCII Generator</a></li>\n</ul>\n<p>从上面第二点得知，原来console可以使用css规则格式化字符串，再结合软件将logo生成字符画，这个网站彩蛋不就搞定了吗，如此简单。</p>\n<p>具体步骤：</p>\n<ol>\n<li>制作字符画  </li>\n</ol>\n<p>使用ASCII Generator上传logo图片，生成字符画，调节大小，抖动，然后选择好看的字符，调整好后可以拷贝到IDE了（粘贴到console.info(<code></code>)中，否则会出现换行符），如果不是很像可以增删一些字符微调一下。  </p>\n<p>这里要注意的是，字符画在IDE里表现会有点变形，可能打印出来也会变形，这是由字体不同造成的，回到软件中将字体调为微软雅黑，再粘贴回去，即使IDE上有点变形但打印出来不会。</p>\n<p>但是打印字符画有点单调，加点文字点缀点缀，会碰撞出更美的火花，加上我们团队的队名和标语。</p>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(`</span><br><span class=\"line\">                      <span class=\"number\"> 7007 </span>                      </span><br><span class=\"line\">                <span class=\"number\"> 7000000000000007 </span>                </span><br><span class=\"line\">           <span class=\"number\"> 760000000000000000000000057 </span>          </span><br><span class=\"line\">        <span class=\"number\"> 76000008888888888888880800000005 </span>        </span><br><span class=\"line\">      <span class=\"number\"> 700008888868688868888880000008860006 </span>      </span><br><span class=\"line\">     <span class=\"number\"> 800088886888688888888800067 </span>    <span class=\"number\"> 700002 </span>    </span><br><span class=\"line\">   <span class=\"number\"> 70088888888888868888880007 </span>       <span class=\"number\"> 7088000 </span>   </span><br><span class=\"line\">  <span class=\"number\"> 3008868800000088868888005 </span>         <span class=\"number\"> 70888800 </span>  </span><br><span class=\"line\"> <span class=\"number\"> 7008888808000080888888801 </span>     <span class=\"number\"> 76000088888800 </span> </span><br><span class=\"line\"> <span class=\"number\"> 008868808 </span>    <span class=\"number\"> 608888808 </span>    <span class=\"number\"> 70000000888888806 </span></span><br><span class=\"line\"><span class=\"number\"> 7088688800 </span>    <span class=\"number\"> 608888807 </span>   <span class=\"number\"> 700000888888688800 </span></span><br><span class=\"line\"><span class=\"number\"> 3088868800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 7088868880 </span>                加班熊工作室</span><br><span class=\"line\"><span class=\"number\"> 2088686800 </span>    <span class=\"number\"> 608888807 </span>           <span class=\"number\"> 70888888807 </span>         </span><br><span class=\"line\"><span class=\"number\"> 2088888800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 70888688007 </span>         ——国内精品AI语音游戏开创者——</span><br><span class=\"line\"><span class=\"number\"> 1088888880 </span>    <span class=\"number\"> 808888807 </span>   <span class=\"number\"> 000000000888688880 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888007 </span>   <span class=\"number\"> 700888007 </span>   <span class=\"number\"> 000000000888888800 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888806 </span>    <span class=\"number\"> 70000007 </span>   <span class=\"number\"> 808888888888888007 </span></span><br><span class=\"line\"> <span class=\"number\"> 70086888803 </span>     <span class=\"number\"> 758007 </span>   <span class=\"number\"> 00888686888888005 </span> </span><br><span class=\"line\">  <span class=\"number\"> 70088000006 </span>               <span class=\"number\"> 8088686868888002 </span>  </span><br><span class=\"line\">   <span class=\"number\"> 108057878003 </span>             <span class=\"number\"> 808688868888007 </span>   </span><br><span class=\"line\">   <span class=\"number\"> 70007 </span>1 <span class=\"number\"> 800087 </span>          <span class=\"number\"> 6088888880006 </span>     </span><br><span class=\"line\">   <span class=\"number\"> 00800 </span><span class=\"number\"> 7 </span> <span class=\"number\"> 700000008888888608888800008 </span>       </span><br><span class=\"line\">  <span class=\"number\"> 8088800 </span>77<span class=\"number\"> 7080800000000000808000004 </span>         </span><br><span class=\"line\"> <span class=\"number\"> 400000000000800080808000000000000047 </span>           </span><br><span class=\"line\">700000000000000000000000000000007                `);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>加上样式<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.<span class=\"built_in\">log</span>(<span class=\"string\">&quot;%cHello,%cWorld&quot;</span>, <span class=\"string\">&quot;color:red;&quot;</span>, <span class=\"string\">&quot;color:blue;&quot;</span>);</span><br></pre></td></tr></table></figure>\n%c占位符的样式会影响其字后的字符串，样式之间符合从前到后的覆盖逻辑，后面的样式会覆盖前面的样式。</li>\n</ol>\n<p><img src=\"http://b338.photo.store.qq.com/psb?/V12x89qA2LlAEO/grdHiKfwZrCevmZGh8HoFlQ7X7fVWTd4.Ekyhl2zon8!/b/dFIBAAAAAAAA&amp;bo=OQMxAAAAAAADByk!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>那我们就可以在不同位置插入%c占位符，来控制不同元素字符画、队名和标语之间的样式。代码封装成函数：<br><figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const consoleEgg = () =&gt; &#123;</span><br><span class=\"line\">  const egg = `%c</span><br><span class=\"line\">                      <span class=\"number\"> 7007 </span>                      </span><br><span class=\"line\">                <span class=\"number\"> 7000000000000007 </span>                </span><br><span class=\"line\">           <span class=\"number\"> 760000000000000000000000057 </span>          </span><br><span class=\"line\">        <span class=\"number\"> 76000008888888888888880800000005 </span>        </span><br><span class=\"line\">      <span class=\"number\"> 700008888868688868888880000008860006 </span>      </span><br><span class=\"line\">     <span class=\"number\"> 800088886888688888888800067 </span>    <span class=\"number\"> 700002 </span>    </span><br><span class=\"line\">   <span class=\"number\"> 70088888888888868888880007 </span>       <span class=\"number\"> 7088000 </span>   </span><br><span class=\"line\">  <span class=\"number\"> 3008868800000088868888005 </span>         <span class=\"number\"> 70888800 </span>  </span><br><span class=\"line\"> <span class=\"number\"> 7008888808000080888888801 </span>     <span class=\"number\"> 76000088888800 </span> </span><br><span class=\"line\"> <span class=\"number\"> 008868808 </span>    <span class=\"number\"> 608888808 </span>    <span class=\"number\"> 70000000888888806 </span></span><br><span class=\"line\"><span class=\"number\"> 7088688800 </span>    <span class=\"number\"> 608888807 </span>   <span class=\"number\"> 700000888888688800 </span></span><br><span class=\"line\"><span class=\"number\"> 3088868800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 7088868880 </span>                %c加班熊工作室%c</span><br><span class=\"line\"><span class=\"number\"> 2088686800 </span>    <span class=\"number\"> 608888807 </span>           <span class=\"number\"> 70888888807 </span>         </span><br><span class=\"line\"><span class=\"number\"> 2088888800 </span>    <span class=\"number\"> 808888007 </span>           <span class=\"number\"> 70888688007 </span>         ——%c国内精品AI语音游戏开创者%c——</span><br><span class=\"line\"><span class=\"number\"> 1088888880 </span>    <span class=\"number\"> 808888807 </span>   <span class=\"number\"> 000000000888688880 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888007 </span>   <span class=\"number\"> 700888007 </span>   <span class=\"number\"> 000000000888888800 </span></span><br><span class=\"line\"> <span class=\"number\"> 0088888806 </span>    <span class=\"number\"> 70000007 </span>   <span class=\"number\"> 808888888888888007 </span></span><br><span class=\"line\"> <span class=\"number\"> 70086888803 </span>     <span class=\"number\"> 758007 </span>   <span class=\"number\"> 00888686888888005 </span> </span><br><span class=\"line\">  <span class=\"number\"> 70088000006 </span>               <span class=\"number\"> 8088686868888002 </span>  </span><br><span class=\"line\">   <span class=\"number\"> 108057878003 </span>             <span class=\"number\"> 808688868888007 </span>   </span><br><span class=\"line\">   <span class=\"number\"> 70007 </span>1 <span class=\"number\"> 800087 </span>          <span class=\"number\"> 6088888880006 </span>     </span><br><span class=\"line\">   <span class=\"number\"> 00800 </span><span class=\"number\"> 7 </span> <span class=\"number\"> 700000008888888608888800008 </span>       </span><br><span class=\"line\">  <span class=\"number\"> 8088800 </span>77<span class=\"number\"> 7080800000000000808000004 </span>         </span><br><span class=\"line\"> <span class=\"number\"> 400000000000800080808000000000000047 </span>           </span><br><span class=\"line\">700000000000000000000000000000007                `;</span><br><span class=\"line\">  const defaultStyle = &#x27;color: rgba(0,0,0,.7);&#x27;;</span><br><span class=\"line\">  const titleStyle = &#x27;color: <span class=\"comment\">#fff;background: rgba(52,55,86,1);padding: 2px 10px; border-radius: 2px;font-family: 微软雅黑;&#x27;;</span></span><br><span class=\"line\">  const sloganStyle = &#x27;color: <span class=\"comment\">#343756&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  console.log(egg, defaultStyle, titleStyle, defaultStyle, sloganStyle, defaultStyle);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>最终效果：<br><img src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/MO7ODEnWcPYkDOJMM8VfeO1LROYS.5QE2NzR1qshQTQ!/b/dL4AAAAAAAAA&amp;bo=KgN8AQAAAAADB3Y!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>把图片发给GF，她立马秒变迷妹，发来表情：</p>\n<html><br><center><br>    <img width=\"200\" src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/nS8f7*bX*osE9cs9U2D61xGHu5goQ8pwLFaHJnJZHNU!/b/dL8AAAAAAAAA&bo=yADIAAAAAAACJwM!&rf=viewer_4\"></img><br></center><br></html>\n\n<p><br><br><br><br><br><br><br></p>\n<center>————————–》》》一条华丽的结束线《《《————————–<br></center><br><br><br><br><br>await!await!!await!!!<br><center><br>    <img width=\"200\" src=\"http://b190.photo.store.qq.com/psb?/V12x89qA2LlAEO/R3rpwlihgpSoxQnp92BPYp65Iryts4TmYoZemDikX1U!/b/dL4AAAAAAAAA&bo=8ADwAAAAAAARBzA!&rf=viewer_4\"></img><br></center><br>好奇的小伙伴肯定注意到我们古怪的队名，下面就是我们团队和业务的简单介绍，欢迎关注：<br><br><br>&gt; 加班熊工作室，国内精品AI语音游戏开创者，打造有趣好玩多元化语音交互游戏，在各大智能音箱平台天猫精灵、小度和小度在家、小爱同学上线语音技能数量达10+，积累玩家达一千多万，部分爆款游戏有女生追求手册、约会大作战、恐怖嫌疑人、恐怖陌生人、喜剧之王…赶快上音箱上玩玩吧！<br><br><center><br>    <img src=\"http://b320.photo.store.qq.com/psb?/V12x89qA2LlAEO/rfwmg.Xm7*..V1vL41h84cYLFHoKAtwazaoIvnueRsI!/b/dEABAAAAAAAA&bo=UQHfAAAAAAADB60!&rf=viewer_4\"></img><br></center>\n\n\n<center>————————–》》》一条真正的结束线《《《————————–<br></center>"},{"title":"CSS3实现3D轮播图","date":"2017-09-24T16:00:00.000Z","_content":"\n### CSS3 3D旋转图片轮播\n\n想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。\n\n#### 变形transform\n旋转：transform : rotateX()/rotateY()/rotateZ()\n这个项目很明显是用rotateY(angle)\n\n#### 关键的perspective属性\n这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：\n1.写在舞台元素上，也就是动画元素的父元素上\n```\n.stage{\n\t\tperspective: 800px;\n}\n```\n2.写在动画元素上，写在transform属性里\n```\n.stage .box{\n\t\ttransform:perspective(800px) rotate(60deg);\n}\n```\n视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。\n其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。\n\n#### 定义视角位置\n```\n.stage{\n\t\tperspective: 800px;\n\t\tperspective-origin:25% 250px;\n}\n```\n\n#### 拉开与中心的距离\n当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ\n```\n.stage .box{\n\t\ttransform: rotate(60deg) translateZ(500px); \n}\n```\n\n#### js控制transform属性\n```\naImg[i].style.webkitTransform = \"rotateY(\"+ ( - (count*60 - i*60) )+  \"deg) translateZ(\" + 483+\"px)\";\n```\n需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。\n\n[参考](http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\n\n","source":"_posts/CSS3实现3D轮播图.md","raw":"---\ntitle: CSS3实现3D轮播图\ndate: 2017-9-25\ntags: [html5,css3]\n---\n\n### CSS3 3D旋转图片轮播\n\n想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。\n\n#### 变形transform\n旋转：transform : rotateX()/rotateY()/rotateZ()\n这个项目很明显是用rotateY(angle)\n\n#### 关键的perspective属性\n这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：\n1.写在舞台元素上，也就是动画元素的父元素上\n```\n.stage{\n\t\tperspective: 800px;\n}\n```\n2.写在动画元素上，写在transform属性里\n```\n.stage .box{\n\t\ttransform:perspective(800px) rotate(60deg);\n}\n```\n视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。\n其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。\n\n#### 定义视角位置\n```\n.stage{\n\t\tperspective: 800px;\n\t\tperspective-origin:25% 250px;\n}\n```\n\n#### 拉开与中心的距离\n当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ\n```\n.stage .box{\n\t\ttransform: rotate(60deg) translateZ(500px); \n}\n```\n\n#### js控制transform属性\n```\naImg[i].style.webkitTransform = \"rotateY(\"+ ( - (count*60 - i*60) )+  \"deg) translateZ(\" + 483+\"px)\";\n```\n需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。\n\n[参考](http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\n\n","slug":"CSS3实现3D轮播图","published":1,"updated":"2022-12-06T15:30:37.617Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3t0008mcq02h7f6djt","content":"<h3 id=\"CSS3-3D旋转图片轮播\"><a href=\"#CSS3-3D旋转图片轮播\" class=\"headerlink\" title=\"CSS3 3D旋转图片轮播\"></a>CSS3 3D旋转图片轮播</h3><p>想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。</p>\n<h4 id=\"变形transform\"><a href=\"#变形transform\" class=\"headerlink\" title=\"变形transform\"></a>变形transform</h4><p>旋转：transform : rotateX()/rotateY()/rotateZ()<br>这个项目很明显是用rotateY(angle)</p>\n<h4 id=\"关键的perspective属性\"><a href=\"#关键的perspective属性\" class=\"headerlink\" title=\"关键的perspective属性\"></a>关键的perspective属性</h4><p>这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：<br>1.写在舞台元素上，也就是动画元素的父元素上<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>2.写在动画元素上，写在transform属性里<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>:<span class=\"built_in\">perspective</span>(<span class=\"number\">800px</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。<br>其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。</p>\n<h4 id=\"定义视角位置\"><a href=\"#定义视角位置\" class=\"headerlink\" title=\"定义视角位置\"></a>定义视角位置</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective-origin</span>:<span class=\"number\">25%</span> <span class=\"number\">250px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉开与中心的距离\"><a href=\"#拉开与中心的距离\" class=\"headerlink\" title=\"拉开与中心的距离\"></a>拉开与中心的距离</h4><p>当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>) <span class=\"built_in\">translateZ</span>(<span class=\"number\">500px</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"js控制transform属性\"><a href=\"#js控制transform属性\" class=\"headerlink\" title=\"js控制transform属性\"></a>js控制transform属性</h4><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">aImg</span>[i].style.webkitTransform = <span class=\"string\">&quot;rotateY(&quot;</span>+ ( - (count*<span class=\"number\">60</span> - i*<span class=\"number\">60</span>) )+  <span class=\"string\">&quot;deg) translateZ(&quot;</span> + <span class=\"number\">483</span>+<span class=\"string\">&quot;px)&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。</p>\n<p>[参考](<a target=\"_blank\" rel=\"noopener\" href=\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\">http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"CSS3-3D旋转图片轮播\"><a href=\"#CSS3-3D旋转图片轮播\" class=\"headerlink\" title=\"CSS3 3D旋转图片轮播\"></a>CSS3 3D旋转图片轮播</h3><p>想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。</p>\n<h4 id=\"变形transform\"><a href=\"#变形transform\" class=\"headerlink\" title=\"变形transform\"></a>变形transform</h4><p>旋转：transform : rotateX()/rotateY()/rotateZ()<br>这个项目很明显是用rotateY(angle)</p>\n<h4 id=\"关键的perspective属性\"><a href=\"#关键的perspective属性\" class=\"headerlink\" title=\"关键的perspective属性\"></a>关键的perspective属性</h4><p>这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：<br>1.写在舞台元素上，也就是动画元素的父元素上<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>2.写在动画元素上，写在transform属性里<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>:<span class=\"built_in\">perspective</span>(<span class=\"number\">800px</span>) <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。<br>其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。</p>\n<h4 id=\"定义视角位置\"><a href=\"#定义视角位置\" class=\"headerlink\" title=\"定义视角位置\"></a>定义视角位置</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective-origin</span>:<span class=\"number\">25%</span> <span class=\"number\">250px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉开与中心的距离\"><a href=\"#拉开与中心的距离\" class=\"headerlink\" title=\"拉开与中心的距离\"></a>拉开与中心的距离</h4><p>当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">60deg</span>) <span class=\"built_in\">translateZ</span>(<span class=\"number\">500px</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"js控制transform属性\"><a href=\"#js控制transform属性\" class=\"headerlink\" title=\"js控制transform属性\"></a>js控制transform属性</h4><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">aImg</span>[i].style.webkitTransform = <span class=\"string\">&quot;rotateY(&quot;</span>+ ( - (count*<span class=\"number\">60</span> - i*<span class=\"number\">60</span>) )+  <span class=\"string\">&quot;deg) translateZ(&quot;</span> + <span class=\"number\">483</span>+<span class=\"string\">&quot;px)&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。</p>\n<p>[参考](<a target=\"_blank\" rel=\"noopener\" href=\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\">http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）</a></p>\n"},{"title":"散乱知识汇集【工作日记05】","date":"2020-03-25T16:00:00.000Z","_content":"\n![Stark](https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1585232140&di=19cede1f52e7d232878de1e59f7ef215&src=http://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/dbb44aed2e738bd4f69c4f49a58b87d6277ff90d.jpg)\n<center><i style=\"color:#333;\">(权游Stark家族图徽)</i></center>\n\n<!-- more -->\n\n\n\n> 下面的内容是，我最近几个月工作遇到的零散的技术和知识点的汇聚，定期整理归类繁杂的知识，有利于形成知识的结构化。\n\n目录：\n- git相关\n- protobuf协议\n- make构建\n\n\n## git相关\n### git子模块\n允许git仓库做为另一个git仓库的子目录，同时保持自己的独立提交\n```\n# 添加子模块，同时会创建.gitmodules保存仓库子模块的映射信息\ngit submodule add [url] \n\n# clone含有子模块的项目后拉取子模块代码\ngit clone [url]\ngit submodule init\ngit submodule update\n# 加入--recursive 同等于上面\ngit clone --recursive [url]\n\n# 在子模块上更新代码\ngit fetch\ngit merge origin/master\n# 在主项目中执行下面命令同等于上面操作,缺少[submodule name]默认更新所有子模块\ngit submodule update --remote [submodule name]\n\n# 在主项目看到子模块的提交日志\ngit log -p --submodule\n```\n\ngit子模块：https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\n业界文档：https://juejin.im/post/5addeb48518825672a028a3b\n\n### git-diff命令\n```\n# 显示更改文件数\ngit diff COMMIT COMMIT --shortstat  \n#显示更改的文件名\n--name-status \n\n# 筛选文件\n# 合并后对比一些特定文件的情况下，这条命令尤为重要，后买可以接对多个文件名，用vscode的diff插件还要一个一个文件检查\n# 假如合并文件有几百个，工作量是艰巨的，可以写个shell脚本处理对比结果，写进txt文件\n# 我最近就有个这样的需求，幸好有这条命令\ngit diff COMMIT COMMIT *.lua *.js \n\n\n# 筛选具体目录下的目标文件，注意path从当前目录起始\ngit diff COMMIT COMMIT path/to/target  \n\n# 版本信息\ngit show COMMIT \n```\n\n\n## protobuf协议\n游戏中的数据通讯协议主要是Protobuf+socket，只有登录时拿到ID和session或token用到了http协议。对于数据响应要求高、低延迟甚至实时的应用程序，像游戏、直播、即时聊天，一般都会用到protobuf作为数据结构化和序列化的协议。\n\n\n### 定义\nProtobuf全称Protocol Buffer，是google内部广泛使用的结构化数据存储、数据序列化的协议。下面是google官方给出的定义：\nProtocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据序列化，很适合做数据存储或 RPC 数据交换格式。它可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。\n\n### 优势\n首先从定义上，可以看到一个描述protobuf的关键字：方便高效。\n\n- proobuf的语法比xml简洁方便\n\n拿常见的数据序列化协议Json，xml与protobuf做对比：\n```\n.proto\npackage lm; \nmessage helloworld \n{ \n   required int32     id = 1;  // ID \n   required string    str = 2;  // str \n}\n\n.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<helloword>\n  <id>1</id>\n  <str>helloworld</str>\n</note>\n```\n* protobuf是二进制协议，比同为文本协议的json和xml的读写操作都要高效，快捷。\n文本协议要读进内存，会被解析成二进制，而pb属于二进制协议，所以相对文本协议解析速度更快。\n\n官方针对protobuf的性能将其更各种数据协议做了测试比较，下图是通过各个协议对一个对象操作的时间--Total time，包括创建对象、将对象序列化为内存中的字节序列，然后再反序列化的过程。\n\n![image](http://m.qpic.cn/psc?/V12x89qA2LlAEO/YPhsM5mUO5.bFmyDEhTOh.bBxFLbiHnVZm4ijUstjs4299r7Qq73xp9N6FkEC3fTipoSpwWAoyqyDu6AavAyu7I6I3SMKyuZQdfOcLaFKu0!/b&bo=sAKrAbACqwEDGTw!&rf=viewer_4)\n\nprotobuf性能测试报告：https://code.google.com/archive/p/thrift-protobuf-compare/wikis/Benchmarking.wiki\n\n- protobuf协议更小\n\n各协议的字节码大小对比：\n![image](http://m.qpic.cn/psc?/V12x89qA2LlAEO/NZ9C4PTRAOGVNvAxFZDwtwanSqa8Dd8UwWZwMJTLqealcb2nqDNffsJmDvN0EJWV7GIgHvUar5NDR37*AGkxwA!!/b&bo=SwTNAUsEzQEDCSw!&rf=viewer_4)\n\n- protobuf与平台无关，与语言无关，所以兼容性更好\n\njava中使用json和xml数据结构，使用使用相应的包支持的，jackson（java的标准json库）和javolution xmlformat（javolution库中格式化xml的API）。\n而protobuf可以通过编译器将描述数据结构的.proto文件编译成各种目标语言，github仓库上标有目标语言有：c++、java、c#、JavaScript、Ruby、Go、PHP、Dart、Objective-C。\n\nhttps://github.com/protocolbuffers/protobuf\n\n\n## make构建\nmake是一个常用的构建工具，多用于C语言项目，但在一些大型的项目中使用频率也比较高。\n\n假如一个工程里有个makefile文件，往往都需要用到make命令来构建。\n\n### 详细介绍：\nhttp://www.ruanyifeng.com/blog/2015/02/make.html\n\n### 如何用make来构建node.js项目\nhttp://www.ruanyifeng.com/blog/2015/03/build-website-with-make.html\n\n### windows下使用make命令安装教程\n下载MinGW：http://sourceforge.net/projects/mingw/files/latest/download?source=files\n\n下载后假如没在bin下找make.exe，可以到MinGW instanllation manager中找到下载MinGW-make.exe，勾选包然后到左上角点击apply change下载(记得把MinGW-make改名成make)。最好把basic setup都下了。\n\n最后记得手动添加环境变量：path/to/MinGW/bin，就可以使用了。\n","source":"_posts/05-散乱知识汇集.md","raw":"---\ntitle: 散乱知识汇集【工作日记05】\ndate: 2020-3-26\ntags: [git,protobuf,Protocol Buffer,make]\ncategories: [工具]\n---\n\n![Stark](https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1585232140&di=19cede1f52e7d232878de1e59f7ef215&src=http://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/dbb44aed2e738bd4f69c4f49a58b87d6277ff90d.jpg)\n<center><i style=\"color:#333;\">(权游Stark家族图徽)</i></center>\n\n<!-- more -->\n\n\n\n> 下面的内容是，我最近几个月工作遇到的零散的技术和知识点的汇聚，定期整理归类繁杂的知识，有利于形成知识的结构化。\n\n目录：\n- git相关\n- protobuf协议\n- make构建\n\n\n## git相关\n### git子模块\n允许git仓库做为另一个git仓库的子目录，同时保持自己的独立提交\n```\n# 添加子模块，同时会创建.gitmodules保存仓库子模块的映射信息\ngit submodule add [url] \n\n# clone含有子模块的项目后拉取子模块代码\ngit clone [url]\ngit submodule init\ngit submodule update\n# 加入--recursive 同等于上面\ngit clone --recursive [url]\n\n# 在子模块上更新代码\ngit fetch\ngit merge origin/master\n# 在主项目中执行下面命令同等于上面操作,缺少[submodule name]默认更新所有子模块\ngit submodule update --remote [submodule name]\n\n# 在主项目看到子模块的提交日志\ngit log -p --submodule\n```\n\ngit子模块：https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\n业界文档：https://juejin.im/post/5addeb48518825672a028a3b\n\n### git-diff命令\n```\n# 显示更改文件数\ngit diff COMMIT COMMIT --shortstat  \n#显示更改的文件名\n--name-status \n\n# 筛选文件\n# 合并后对比一些特定文件的情况下，这条命令尤为重要，后买可以接对多个文件名，用vscode的diff插件还要一个一个文件检查\n# 假如合并文件有几百个，工作量是艰巨的，可以写个shell脚本处理对比结果，写进txt文件\n# 我最近就有个这样的需求，幸好有这条命令\ngit diff COMMIT COMMIT *.lua *.js \n\n\n# 筛选具体目录下的目标文件，注意path从当前目录起始\ngit diff COMMIT COMMIT path/to/target  \n\n# 版本信息\ngit show COMMIT \n```\n\n\n## protobuf协议\n游戏中的数据通讯协议主要是Protobuf+socket，只有登录时拿到ID和session或token用到了http协议。对于数据响应要求高、低延迟甚至实时的应用程序，像游戏、直播、即时聊天，一般都会用到protobuf作为数据结构化和序列化的协议。\n\n\n### 定义\nProtobuf全称Protocol Buffer，是google内部广泛使用的结构化数据存储、数据序列化的协议。下面是google官方给出的定义：\nProtocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据序列化，很适合做数据存储或 RPC 数据交换格式。它可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。\n\n### 优势\n首先从定义上，可以看到一个描述protobuf的关键字：方便高效。\n\n- proobuf的语法比xml简洁方便\n\n拿常见的数据序列化协议Json，xml与protobuf做对比：\n```\n.proto\npackage lm; \nmessage helloworld \n{ \n   required int32     id = 1;  // ID \n   required string    str = 2;  // str \n}\n\n.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<helloword>\n  <id>1</id>\n  <str>helloworld</str>\n</note>\n```\n* protobuf是二进制协议，比同为文本协议的json和xml的读写操作都要高效，快捷。\n文本协议要读进内存，会被解析成二进制，而pb属于二进制协议，所以相对文本协议解析速度更快。\n\n官方针对protobuf的性能将其更各种数据协议做了测试比较，下图是通过各个协议对一个对象操作的时间--Total time，包括创建对象、将对象序列化为内存中的字节序列，然后再反序列化的过程。\n\n![image](http://m.qpic.cn/psc?/V12x89qA2LlAEO/YPhsM5mUO5.bFmyDEhTOh.bBxFLbiHnVZm4ijUstjs4299r7Qq73xp9N6FkEC3fTipoSpwWAoyqyDu6AavAyu7I6I3SMKyuZQdfOcLaFKu0!/b&bo=sAKrAbACqwEDGTw!&rf=viewer_4)\n\nprotobuf性能测试报告：https://code.google.com/archive/p/thrift-protobuf-compare/wikis/Benchmarking.wiki\n\n- protobuf协议更小\n\n各协议的字节码大小对比：\n![image](http://m.qpic.cn/psc?/V12x89qA2LlAEO/NZ9C4PTRAOGVNvAxFZDwtwanSqa8Dd8UwWZwMJTLqealcb2nqDNffsJmDvN0EJWV7GIgHvUar5NDR37*AGkxwA!!/b&bo=SwTNAUsEzQEDCSw!&rf=viewer_4)\n\n- protobuf与平台无关，与语言无关，所以兼容性更好\n\njava中使用json和xml数据结构，使用使用相应的包支持的，jackson（java的标准json库）和javolution xmlformat（javolution库中格式化xml的API）。\n而protobuf可以通过编译器将描述数据结构的.proto文件编译成各种目标语言，github仓库上标有目标语言有：c++、java、c#、JavaScript、Ruby、Go、PHP、Dart、Objective-C。\n\nhttps://github.com/protocolbuffers/protobuf\n\n\n## make构建\nmake是一个常用的构建工具，多用于C语言项目，但在一些大型的项目中使用频率也比较高。\n\n假如一个工程里有个makefile文件，往往都需要用到make命令来构建。\n\n### 详细介绍：\nhttp://www.ruanyifeng.com/blog/2015/02/make.html\n\n### 如何用make来构建node.js项目\nhttp://www.ruanyifeng.com/blog/2015/03/build-website-with-make.html\n\n### windows下使用make命令安装教程\n下载MinGW：http://sourceforge.net/projects/mingw/files/latest/download?source=files\n\n下载后假如没在bin下找make.exe，可以到MinGW instanllation manager中找到下载MinGW-make.exe，勾选包然后到左上角点击apply change下载(记得把MinGW-make改名成make)。最好把basic setup都下了。\n\n最后记得手动添加环境变量：path/to/MinGW/bin，就可以使用了。\n","slug":"05-散乱知识汇集","published":1,"updated":"2022-12-06T15:30:37.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3v000amcq0970d20ts","content":"<p><img src=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1585232140&amp;di=19cede1f52e7d232878de1e59f7ef215&amp;src=http://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/dbb44aed2e738bd4f69c4f49a58b87d6277ff90d.jpg\" alt=\"Stark\"></p>\n<center><i style=\"color:#333;\">(权游Stark家族图徽)</i></center>\n\n<span id=\"more\"></span>\n<blockquote>\n<p>下面的内容是，我最近几个月工作遇到的零散的技术和知识点的汇聚，定期整理归类繁杂的知识，有利于形成知识的结构化。</p>\n</blockquote>\n<p>目录：</p>\n<ul>\n<li>git相关</li>\n<li>protobuf协议</li>\n<li>make构建</li>\n</ul>\n<h2 id=\"git相关\"><a href=\"#git相关\" class=\"headerlink\" title=\"git相关\"></a>git相关</h2><h3 id=\"git子模块\"><a href=\"#git子模块\" class=\"headerlink\" title=\"git子模块\"></a>git子模块</h3><p>允许git仓库做为另一个git仓库的子目录，同时保持自己的独立提交<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加子模块，同时会创建.gitmodules保存仓库子模块的映射信息</span></span><br><span class=\"line\">git <span class=\"keyword\">submodule </span><span class=\"keyword\">add </span>[url] </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clone含有子模块的项目后拉取子模块代码</span></span><br><span class=\"line\">git <span class=\"keyword\">clone </span>[url]</span><br><span class=\"line\">git <span class=\"keyword\">submodule </span>init</span><br><span class=\"line\">git <span class=\"keyword\">submodule </span>update</span><br><span class=\"line\"><span class=\"comment\"># 加入--recursive 同等于上面</span></span><br><span class=\"line\">git <span class=\"keyword\">clone </span>--recursive [url]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在子模块上更新代码</span></span><br><span class=\"line\">git fetch</span><br><span class=\"line\">git merge <span class=\"keyword\">origin/master</span></span><br><span class=\"line\"><span class=\"keyword\"></span><span class=\"comment\"># 在主项目中执行下面命令同等于上面操作,缺少[submodule name]默认更新所有子模块</span></span><br><span class=\"line\">git <span class=\"keyword\">submodule </span>update --remote [<span class=\"keyword\">submodule </span>name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在主项目看到子模块的提交日志</span></span><br><span class=\"line\">git log -p --<span class=\"keyword\">submodule</span></span><br></pre></td></tr></table></figure></p>\n<p>git子模块：<a target=\"_blank\" rel=\"noopener\" href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\">https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97</a><br>业界文档：<a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5addeb48518825672a028a3b\">https://juejin.im/post/5addeb48518825672a028a3b</a></p>\n<h3 id=\"git-diff命令\"><a href=\"#git-diff命令\" class=\"headerlink\" title=\"git-diff命令\"></a>git-diff命令</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示更改文件数</span><br><span class=\"line\">git diff <span class=\"keyword\">COMMIT</span> <span class=\"keyword\">COMMIT</span> <span class=\"comment\">--shortstat  </span></span><br><span class=\"line\">#显示更改的文件名</span><br><span class=\"line\"><span class=\"comment\">--name-status </span></span><br><span class=\"line\"></span><br><span class=\"line\"># 筛选文件</span><br><span class=\"line\"># 合并后对比一些特定文件的情况下，这条命令尤为重要，后买可以接对多个文件名，用vscode的diff插件还要一个一个文件检查</span><br><span class=\"line\"># 假如合并文件有几百个，工作量是艰巨的，可以写个shell脚本处理对比结果，写进txt文件</span><br><span class=\"line\"># 我最近就有个这样的需求，幸好有这条命令</span><br><span class=\"line\">git diff <span class=\"keyword\">COMMIT</span> <span class=\"keyword\">COMMIT</span> *.lua *.js </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 筛选具体目录下的目标文件，注意<span class=\"type\">path</span>从当前目录起始</span><br><span class=\"line\">git diff <span class=\"keyword\">COMMIT</span> <span class=\"keyword\">COMMIT</span> <span class=\"type\">path</span>/<span class=\"keyword\">to</span>/target  </span><br><span class=\"line\"></span><br><span class=\"line\"># 版本信息</span><br><span class=\"line\">git <span class=\"keyword\">show</span> <span class=\"keyword\">COMMIT</span> </span><br></pre></td></tr></table></figure>\n<h2 id=\"protobuf协议\"><a href=\"#protobuf协议\" class=\"headerlink\" title=\"protobuf协议\"></a>protobuf协议</h2><p>游戏中的数据通讯协议主要是Protobuf+socket，只有登录时拿到ID和session或token用到了http协议。对于数据响应要求高、低延迟甚至实时的应用程序，像游戏、直播、即时聊天，一般都会用到protobuf作为数据结构化和序列化的协议。</p>\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>Protobuf全称Protocol Buffer，是google内部广泛使用的结构化数据存储、数据序列化的协议。下面是google官方给出的定义：<br>Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据序列化，很适合做数据存储或 RPC 数据交换格式。它可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。</p>\n<h3 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h3><p>首先从定义上，可以看到一个描述protobuf的关键字：方便高效。</p>\n<ul>\n<li>proobuf的语法比xml简洁方便</li>\n</ul>\n<p>拿常见的数据序列化协议Json，xml与protobuf做对比：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.proto</span><br><span class=\"line\">package lm; </span><br><span class=\"line\">message helloworld </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">   required int32     id = 1;  // ID </span><br><span class=\"line\">   required string    str = 2;  // str </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.xml</span><br><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">helloword</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">str</span>&gt;</span>helloworld<span class=\"tag\">&lt;/<span class=\"name\">str</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>protobuf是二进制协议，比同为文本协议的json和xml的读写操作都要高效，快捷。<br>文本协议要读进内存，会被解析成二进制，而pb属于二进制协议，所以相对文本协议解析速度更快。</li>\n</ul>\n<p>官方针对protobuf的性能将其更各种数据协议做了测试比较，下图是通过各个协议对一个对象操作的时间–Total time，包括创建对象、将对象序列化为内存中的字节序列，然后再反序列化的过程。</p>\n<p><img src=\"http://m.qpic.cn/psc?/V12x89qA2LlAEO/YPhsM5mUO5.bFmyDEhTOh.bBxFLbiHnVZm4ijUstjs4299r7Qq73xp9N6FkEC3fTipoSpwWAoyqyDu6AavAyu7I6I3SMKyuZQdfOcLaFKu0!/b&amp;bo=sAKrAbACqwEDGTw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>protobuf性能测试报告：<a target=\"_blank\" rel=\"noopener\" href=\"https://code.google.com/archive/p/thrift-protobuf-compare/wikis/Benchmarking.wiki\">https://code.google.com/archive/p/thrift-protobuf-compare/wikis/Benchmarking.wiki</a></p>\n<ul>\n<li>protobuf协议更小</li>\n</ul>\n<p>各协议的字节码大小对比：<br><img src=\"http://m.qpic.cn/psc?/V12x89qA2LlAEO/NZ9C4PTRAOGVNvAxFZDwtwanSqa8Dd8UwWZwMJTLqealcb2nqDNffsJmDvN0EJWV7GIgHvUar5NDR37*AGkxwA!!/b&amp;bo=SwTNAUsEzQEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<ul>\n<li>protobuf与平台无关，与语言无关，所以兼容性更好</li>\n</ul>\n<p>java中使用json和xml数据结构，使用使用相应的包支持的，jackson（java的标准json库）和javolution xmlformat（javolution库中格式化xml的API）。<br>而protobuf可以通过编译器将描述数据结构的.proto文件编译成各种目标语言，github仓库上标有目标语言有：c++、java、c#、JavaScript、Ruby、Go、PHP、Dart、Objective-C。</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/protocolbuffers/protobuf\">https://github.com/protocolbuffers/protobuf</a></p>\n<h2 id=\"make构建\"><a href=\"#make构建\" class=\"headerlink\" title=\"make构建\"></a>make构建</h2><p>make是一个常用的构建工具，多用于C语言项目，但在一些大型的项目中使用频率也比较高。</p>\n<p>假如一个工程里有个makefile文件，往往都需要用到make命令来构建。</p>\n<h3 id=\"详细介绍：\"><a href=\"#详细介绍：\" class=\"headerlink\" title=\"详细介绍：\"></a>详细介绍：</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ruanyifeng.com/blog/2015/02/make.html\">http://www.ruanyifeng.com/blog/2015/02/make.html</a></p>\n<h3 id=\"如何用make来构建node-js项目\"><a href=\"#如何用make来构建node-js项目\" class=\"headerlink\" title=\"如何用make来构建node.js项目\"></a>如何用make来构建node.js项目</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ruanyifeng.com/blog/2015/03/build-website-with-make.html\">http://www.ruanyifeng.com/blog/2015/03/build-website-with-make.html</a></p>\n<h3 id=\"windows下使用make命令安装教程\"><a href=\"#windows下使用make命令安装教程\" class=\"headerlink\" title=\"windows下使用make命令安装教程\"></a>windows下使用make命令安装教程</h3><p>下载MinGW：<a target=\"_blank\" rel=\"noopener\" href=\"http://sourceforge.net/projects/mingw/files/latest/download?source=files\">http://sourceforge.net/projects/mingw/files/latest/download?source=files</a></p>\n<p>下载后假如没在bin下找make.exe，可以到MinGW instanllation manager中找到下载MinGW-make.exe，勾选包然后到左上角点击apply change下载(记得把MinGW-make改名成make)。最好把basic setup都下了。</p>\n<p>最后记得手动添加环境变量：path/to/MinGW/bin，就可以使用了。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1585232140&amp;di=19cede1f52e7d232878de1e59f7ef215&amp;src=http://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/dbb44aed2e738bd4f69c4f49a58b87d6277ff90d.jpg\" alt=\"Stark\"></p>\n<center><i style=\"color:#333;\">(权游Stark家族图徽)</i></center>","more":"<blockquote>\n<p>下面的内容是，我最近几个月工作遇到的零散的技术和知识点的汇聚，定期整理归类繁杂的知识，有利于形成知识的结构化。</p>\n</blockquote>\n<p>目录：</p>\n<ul>\n<li>git相关</li>\n<li>protobuf协议</li>\n<li>make构建</li>\n</ul>\n<h2 id=\"git相关\"><a href=\"#git相关\" class=\"headerlink\" title=\"git相关\"></a>git相关</h2><h3 id=\"git子模块\"><a href=\"#git子模块\" class=\"headerlink\" title=\"git子模块\"></a>git子模块</h3><p>允许git仓库做为另一个git仓库的子目录，同时保持自己的独立提交<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加子模块，同时会创建.gitmodules保存仓库子模块的映射信息</span></span><br><span class=\"line\">git <span class=\"keyword\">submodule </span><span class=\"keyword\">add </span>[url] </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clone含有子模块的项目后拉取子模块代码</span></span><br><span class=\"line\">git <span class=\"keyword\">clone </span>[url]</span><br><span class=\"line\">git <span class=\"keyword\">submodule </span>init</span><br><span class=\"line\">git <span class=\"keyword\">submodule </span>update</span><br><span class=\"line\"><span class=\"comment\"># 加入--recursive 同等于上面</span></span><br><span class=\"line\">git <span class=\"keyword\">clone </span>--recursive [url]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在子模块上更新代码</span></span><br><span class=\"line\">git fetch</span><br><span class=\"line\">git merge <span class=\"keyword\">origin/master</span></span><br><span class=\"line\"><span class=\"keyword\"></span><span class=\"comment\"># 在主项目中执行下面命令同等于上面操作,缺少[submodule name]默认更新所有子模块</span></span><br><span class=\"line\">git <span class=\"keyword\">submodule </span>update --remote [<span class=\"keyword\">submodule </span>name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在主项目看到子模块的提交日志</span></span><br><span class=\"line\">git log -p --<span class=\"keyword\">submodule</span></span><br></pre></td></tr></table></figure></p>\n<p>git子模块：<a target=\"_blank\" rel=\"noopener\" href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\">https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97</a><br>业界文档：<a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/5addeb48518825672a028a3b\">https://juejin.im/post/5addeb48518825672a028a3b</a></p>\n<h3 id=\"git-diff命令\"><a href=\"#git-diff命令\" class=\"headerlink\" title=\"git-diff命令\"></a>git-diff命令</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示更改文件数</span><br><span class=\"line\">git diff <span class=\"keyword\">COMMIT</span> <span class=\"keyword\">COMMIT</span> <span class=\"comment\">--shortstat  </span></span><br><span class=\"line\">#显示更改的文件名</span><br><span class=\"line\"><span class=\"comment\">--name-status </span></span><br><span class=\"line\"></span><br><span class=\"line\"># 筛选文件</span><br><span class=\"line\"># 合并后对比一些特定文件的情况下，这条命令尤为重要，后买可以接对多个文件名，用vscode的diff插件还要一个一个文件检查</span><br><span class=\"line\"># 假如合并文件有几百个，工作量是艰巨的，可以写个shell脚本处理对比结果，写进txt文件</span><br><span class=\"line\"># 我最近就有个这样的需求，幸好有这条命令</span><br><span class=\"line\">git diff <span class=\"keyword\">COMMIT</span> <span class=\"keyword\">COMMIT</span> *.lua *.js </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 筛选具体目录下的目标文件，注意<span class=\"type\">path</span>从当前目录起始</span><br><span class=\"line\">git diff <span class=\"keyword\">COMMIT</span> <span class=\"keyword\">COMMIT</span> <span class=\"type\">path</span>/<span class=\"keyword\">to</span>/target  </span><br><span class=\"line\"></span><br><span class=\"line\"># 版本信息</span><br><span class=\"line\">git <span class=\"keyword\">show</span> <span class=\"keyword\">COMMIT</span> </span><br></pre></td></tr></table></figure>\n<h2 id=\"protobuf协议\"><a href=\"#protobuf协议\" class=\"headerlink\" title=\"protobuf协议\"></a>protobuf协议</h2><p>游戏中的数据通讯协议主要是Protobuf+socket，只有登录时拿到ID和session或token用到了http协议。对于数据响应要求高、低延迟甚至实时的应用程序，像游戏、直播、即时聊天，一般都会用到protobuf作为数据结构化和序列化的协议。</p>\n<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>Protobuf全称Protocol Buffer，是google内部广泛使用的结构化数据存储、数据序列化的协议。下面是google官方给出的定义：<br>Protocol Buffers 是一种轻便高效的结构化数据存储格式，可以用于结构化数据序列化，很适合做数据存储或 RPC 数据交换格式。它可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。</p>\n<h3 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h3><p>首先从定义上，可以看到一个描述protobuf的关键字：方便高效。</p>\n<ul>\n<li>proobuf的语法比xml简洁方便</li>\n</ul>\n<p>拿常见的数据序列化协议Json，xml与protobuf做对比：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.proto</span><br><span class=\"line\">package lm; </span><br><span class=\"line\">message helloworld </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">   required int32     id = 1;  // ID </span><br><span class=\"line\">   required string    str = 2;  // str </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.xml</span><br><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">helloword</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">str</span>&gt;</span>helloworld<span class=\"tag\">&lt;/<span class=\"name\">str</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">note</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>protobuf是二进制协议，比同为文本协议的json和xml的读写操作都要高效，快捷。<br>文本协议要读进内存，会被解析成二进制，而pb属于二进制协议，所以相对文本协议解析速度更快。</li>\n</ul>\n<p>官方针对protobuf的性能将其更各种数据协议做了测试比较，下图是通过各个协议对一个对象操作的时间–Total time，包括创建对象、将对象序列化为内存中的字节序列，然后再反序列化的过程。</p>\n<p><img src=\"http://m.qpic.cn/psc?/V12x89qA2LlAEO/YPhsM5mUO5.bFmyDEhTOh.bBxFLbiHnVZm4ijUstjs4299r7Qq73xp9N6FkEC3fTipoSpwWAoyqyDu6AavAyu7I6I3SMKyuZQdfOcLaFKu0!/b&amp;bo=sAKrAbACqwEDGTw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<p>protobuf性能测试报告：<a target=\"_blank\" rel=\"noopener\" href=\"https://code.google.com/archive/p/thrift-protobuf-compare/wikis/Benchmarking.wiki\">https://code.google.com/archive/p/thrift-protobuf-compare/wikis/Benchmarking.wiki</a></p>\n<ul>\n<li>protobuf协议更小</li>\n</ul>\n<p>各协议的字节码大小对比：<br><img src=\"http://m.qpic.cn/psc?/V12x89qA2LlAEO/NZ9C4PTRAOGVNvAxFZDwtwanSqa8Dd8UwWZwMJTLqealcb2nqDNffsJmDvN0EJWV7GIgHvUar5NDR37*AGkxwA!!/b&amp;bo=SwTNAUsEzQEDCSw!&amp;rf=viewer_4\" alt=\"image\"></p>\n<ul>\n<li>protobuf与平台无关，与语言无关，所以兼容性更好</li>\n</ul>\n<p>java中使用json和xml数据结构，使用使用相应的包支持的，jackson（java的标准json库）和javolution xmlformat（javolution库中格式化xml的API）。<br>而protobuf可以通过编译器将描述数据结构的.proto文件编译成各种目标语言，github仓库上标有目标语言有：c++、java、c#、JavaScript、Ruby、Go、PHP、Dart、Objective-C。</p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/protocolbuffers/protobuf\">https://github.com/protocolbuffers/protobuf</a></p>\n<h2 id=\"make构建\"><a href=\"#make构建\" class=\"headerlink\" title=\"make构建\"></a>make构建</h2><p>make是一个常用的构建工具，多用于C语言项目，但在一些大型的项目中使用频率也比较高。</p>\n<p>假如一个工程里有个makefile文件，往往都需要用到make命令来构建。</p>\n<h3 id=\"详细介绍：\"><a href=\"#详细介绍：\" class=\"headerlink\" title=\"详细介绍：\"></a>详细介绍：</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ruanyifeng.com/blog/2015/02/make.html\">http://www.ruanyifeng.com/blog/2015/02/make.html</a></p>\n<h3 id=\"如何用make来构建node-js项目\"><a href=\"#如何用make来构建node-js项目\" class=\"headerlink\" title=\"如何用make来构建node.js项目\"></a>如何用make来构建node.js项目</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"http://www.ruanyifeng.com/blog/2015/03/build-website-with-make.html\">http://www.ruanyifeng.com/blog/2015/03/build-website-with-make.html</a></p>\n<h3 id=\"windows下使用make命令安装教程\"><a href=\"#windows下使用make命令安装教程\" class=\"headerlink\" title=\"windows下使用make命令安装教程\"></a>windows下使用make命令安装教程</h3><p>下载MinGW：<a target=\"_blank\" rel=\"noopener\" href=\"http://sourceforge.net/projects/mingw/files/latest/download?source=files\">http://sourceforge.net/projects/mingw/files/latest/download?source=files</a></p>\n<p>下载后假如没在bin下找make.exe，可以到MinGW instanllation manager中找到下载MinGW-make.exe，勾选包然后到左上角点击apply change下载(记得把MinGW-make改名成make)。最好把basic setup都下了。</p>\n<p>最后记得手动添加环境变量：path/to/MinGW/bin，就可以使用了。</p>"},{"title":"饼状loading效果","date":"2017-09-19T16:00:00.000Z","_content":"\n###   垂直和水平居中 \n\t\n水平居中是最简单的，在设置了大小的元素上加margin：0 auto\n关键是垂直居中\n使用定位position：absolution;  //脱离文档流\n\t    top: 50%;\t//这时顶部处于中央位置\n\t   margin-top: -(height/2) px;\n或者第三句可以使用位移：transfrom：translateY(-50%)\n\n另一种方法是使用flex布局\n在居中元素的父元素上：display：flex;\n\t\t\t       align-items:center; //垂直居中\n\t\t\t       justify: center;\t//水平居中\n可是flex布局存在兼容性问题  ，慎用！\n参考：http://www.cnblogs.com/yugege/p/5246652.html\n\n**让脱离了文档流的p标签垂直和水平居中**  \n```\n<nav class=\"mynav\">\n\t\t<div>\n\t\t\t<p><span></span><span></span><span></span></p>\n\t\t</div>\t\t\n\t</nav>\n\t\n<style>\n    .mynav{\n    \theight: 100px;\n    \twidth: 100%;\n    \tmargin-top: 70px;\t\n    }\n    .mynav div{\n    \theight: 100%;\n    \tposition: relative; //垂直\n    \ttext-align: center; //水平\n    }\n    .mynav p{\t\n    \twidth: 100%; //水平\n    \tposition: absolute; //垂直\n    \ttop: 50%;   //垂直\n    \tmargin-top: -12px;  //垂直\n    }\n    .mynav p span{\n    \tdisplay: inline-block;\n    \twidth: 24px;\n    \theight: 24px;\n    \tborder-radius: 50%;\n    \t-webkit-border-radius: 50%;\n    \tbackground-color: #000;\n    \tmargin-right: 20px;\n    \n    }\n</style>\n```\n\n### 思路\n\n[查看效果](https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif)\n\n这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。\n首先如何画圆呢？\n一般是在一个正方形的div上设置border-radius=圆的半径\n可是现在是用另外的方法，用border来画圆\n```\nwidth:0;\nheight:0;\nborder:50px solid #000;\nborder-radius:50px;\n```\n可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。\n中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent\n\n一个红色和粉红色的底圆：\n```\nwidth: 0;\nheight: 0;\nborder-radius: 50px;\nborder:50px solid;\nborder-top-color: rgb(251,139,189);\nborder-left-color: rgb(255,41,140);\nborder-right-color: rgb(251,139,189);\nborder-bottom-color: rgb(255,41,140);\n```\n\n一个红半圆：\n```\nwidth: 0;\n height: 0;\nborder-radius: 50px;\nborder: solid rgb(251,139,189) 50px  ;\nborder-right-color: transparent;\n border-bottom-color: transparent;\n```\n分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。\n我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。\n\n对比下面的两个动画框架：\n```\n@keyframes red-rotate{\n\t\t    0% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    }\t\t\n\t\t}\n\t\t@keyframes pink-rotate{\n\t\t\t0% {\n\t\t    \ttransform: rotate(-45deg);\t\t    \t\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75.001% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    } \n\t\t}\n```\n最后两个动画框架同时开始就大功告成了！\n","source":"_posts/CSS3饼状loading效果.md","raw":"---\ntitle: 饼状loading效果\ndate: 2017-9-20\ntags: [html5,css3]\n---\n\n###   垂直和水平居中 \n\t\n水平居中是最简单的，在设置了大小的元素上加margin：0 auto\n关键是垂直居中\n使用定位position：absolution;  //脱离文档流\n\t    top: 50%;\t//这时顶部处于中央位置\n\t   margin-top: -(height/2) px;\n或者第三句可以使用位移：transfrom：translateY(-50%)\n\n另一种方法是使用flex布局\n在居中元素的父元素上：display：flex;\n\t\t\t       align-items:center; //垂直居中\n\t\t\t       justify: center;\t//水平居中\n可是flex布局存在兼容性问题  ，慎用！\n参考：http://www.cnblogs.com/yugege/p/5246652.html\n\n**让脱离了文档流的p标签垂直和水平居中**  \n```\n<nav class=\"mynav\">\n\t\t<div>\n\t\t\t<p><span></span><span></span><span></span></p>\n\t\t</div>\t\t\n\t</nav>\n\t\n<style>\n    .mynav{\n    \theight: 100px;\n    \twidth: 100%;\n    \tmargin-top: 70px;\t\n    }\n    .mynav div{\n    \theight: 100%;\n    \tposition: relative; //垂直\n    \ttext-align: center; //水平\n    }\n    .mynav p{\t\n    \twidth: 100%; //水平\n    \tposition: absolute; //垂直\n    \ttop: 50%;   //垂直\n    \tmargin-top: -12px;  //垂直\n    }\n    .mynav p span{\n    \tdisplay: inline-block;\n    \twidth: 24px;\n    \theight: 24px;\n    \tborder-radius: 50%;\n    \t-webkit-border-radius: 50%;\n    \tbackground-color: #000;\n    \tmargin-right: 20px;\n    \n    }\n</style>\n```\n\n### 思路\n\n[查看效果](https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif)\n\n这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。\n首先如何画圆呢？\n一般是在一个正方形的div上设置border-radius=圆的半径\n可是现在是用另外的方法，用border来画圆\n```\nwidth:0;\nheight:0;\nborder:50px solid #000;\nborder-radius:50px;\n```\n可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。\n中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent\n\n一个红色和粉红色的底圆：\n```\nwidth: 0;\nheight: 0;\nborder-radius: 50px;\nborder:50px solid;\nborder-top-color: rgb(251,139,189);\nborder-left-color: rgb(255,41,140);\nborder-right-color: rgb(251,139,189);\nborder-bottom-color: rgb(255,41,140);\n```\n\n一个红半圆：\n```\nwidth: 0;\n height: 0;\nborder-radius: 50px;\nborder: solid rgb(251,139,189) 50px  ;\nborder-right-color: transparent;\n border-bottom-color: transparent;\n```\n分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。\n我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。\n\n对比下面的两个动画框架：\n```\n@keyframes red-rotate{\n\t\t    0% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    }\t\t\n\t\t}\n\t\t@keyframes pink-rotate{\n\t\t\t0% {\n\t\t    \ttransform: rotate(-45deg);\t\t    \t\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75.001% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    } \n\t\t}\n```\n最后两个动画框架同时开始就大功告成了！\n","slug":"CSS3饼状loading效果","published":1,"updated":"2022-12-06T15:30:37.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3w000cmcq0e3hadb5h","content":"<h3 id=\"垂直和水平居中\"><a href=\"#垂直和水平居中\" class=\"headerlink\" title=\"垂直和水平居中\"></a>垂直和水平居中</h3><p>水平居中是最简单的，在设置了大小的元素上加margin：0 auto<br>关键是垂直居中<br>使用定位position：absolution;  //脱离文档流<br>        top: 50%;    //这时顶部处于中央位置<br>       margin-top: -(height/2) px;<br>或者第三句可以使用位移：transfrom：translateY(-50%)</p>\n<p>另一种方法是使用flex布局<br>在居中元素的父元素上：display：flex;<br>                   align-items:center; //垂直居中<br>                   justify: center;    //水平居中<br>可是flex布局存在兼容性问题  ，慎用！<br>参考：<a target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/yugege/p/5246652.html\">http://www.cnblogs.com/yugege/p/5246652.html</a></p>\n<p><strong>让脱离了文档流的p标签垂直和水平居中</strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mynav&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\t\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">margin-top</span>: <span class=\"number\">70px</span>;\t</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">position</span>: relative; //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">text-align</span>: center; //水平</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">p</span>&#123;\t</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; //水平</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">position</span>: absolute; //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;   //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">12px</span>;  //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">p</span> <span class=\"selector-tag\">span</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">24px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif\">查看效果</a></p>\n<p>这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。<br>首先如何画圆呢？<br>一般是在一个正方形的div上设置border-radius=圆的半径<br>可是现在是用另外的方法，用border来画圆<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>:<span class=\"number\">50px</span>;</span><br></pre></td></tr></table></figure><br>可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。<br>中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent</p>\n<p>一个红色和粉红色的底圆：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid;</span><br><span class=\"line\"><span class=\"attribute\">border-top-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-left-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-bottom-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br></pre></td></tr></table></figure></p>\n<p>一个红半圆：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>: solid <span class=\"built_in\">rgb</span>(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>) <span class=\"number\">50px</span>  ;</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom-color</span>: transparent;</span><br></pre></td></tr></table></figure><br>分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。<br>我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。</p>\n<p>对比下面的两个动画框架：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> red-rotate&#123;</span><br><span class=\"line\">\t\t    <span class=\"number\">0%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">45deg</span>);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">25%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">50%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">75%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">405deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">405deg</span>);</span><br><span class=\"line\">\t\t    &#125;\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">@keyframes</span> pink-rotate&#123;</span><br><span class=\"line\">\t\t\t<span class=\"number\">0%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">45deg</span>);\t\t    \t</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">25%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">45deg</span>);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">50%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">75%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">75.001%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">405deg</span>);</span><br><span class=\"line\">\t\t    &#125; </span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure><br>最后两个动画框架同时开始就大功告成了！</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"垂直和水平居中\"><a href=\"#垂直和水平居中\" class=\"headerlink\" title=\"垂直和水平居中\"></a>垂直和水平居中</h3><p>水平居中是最简单的，在设置了大小的元素上加margin：0 auto<br>关键是垂直居中<br>使用定位position：absolution;  //脱离文档流<br>        top: 50%;    //这时顶部处于中央位置<br>       margin-top: -(height/2) px;<br>或者第三句可以使用位移：transfrom：translateY(-50%)</p>\n<p>另一种方法是使用flex布局<br>在居中元素的父元素上：display：flex;<br>                   align-items:center; //垂直居中<br>                   justify: center;    //水平居中<br>可是flex布局存在兼容性问题  ，慎用！<br>参考：<a target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/yugege/p/5246652.html\">http://www.cnblogs.com/yugege/p/5246652.html</a></p>\n<p><strong>让脱离了文档流的p标签垂直和水平居中</strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mynav&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>\t\t</span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">margin-top</span>: <span class=\"number\">70px</span>;\t</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">div</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">position</span>: relative; //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">text-align</span>: center; //水平</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">p</span>&#123;\t</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; //水平</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">position</span>: absolute; //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;   //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">12px</span>;  //垂直</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">p</span> <span class=\"selector-tag\">span</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">display</span>: inline-block;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">24px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    \t<span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif\">查看效果</a></p>\n<p>这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。<br>首先如何画圆呢？<br>一般是在一个正方形的div上设置border-radius=圆的半径<br>可是现在是用另外的方法，用border来画圆<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>:<span class=\"number\">50px</span>;</span><br></pre></td></tr></table></figure><br>可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。<br>中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent</p>\n<p>一个红色和粉红色的底圆：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid;</span><br><span class=\"line\"><span class=\"attribute\">border-top-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-left-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-bottom-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br></pre></td></tr></table></figure></p>\n<p>一个红半圆：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>: solid <span class=\"built_in\">rgb</span>(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>) <span class=\"number\">50px</span>  ;</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom-color</span>: transparent;</span><br></pre></td></tr></table></figure><br>分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。<br>我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。</p>\n<p>对比下面的两个动画框架：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> red-rotate&#123;</span><br><span class=\"line\">\t\t    <span class=\"number\">0%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">45deg</span>);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">25%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">50%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">75%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">405deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">405deg</span>);</span><br><span class=\"line\">\t\t    &#125;\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">@keyframes</span> pink-rotate&#123;</span><br><span class=\"line\">\t\t\t<span class=\"number\">0%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">45deg</span>);\t\t    \t</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">25%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">45deg</span>);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">50%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">75%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">75.001%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">225deg</span>);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">405deg</span>);</span><br><span class=\"line\">\t\t    &#125; </span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure><br>最后两个动画框架同时开始就大功告成了！</p>\n"},{"title":"JS之cookie.md","date":"2016-06-01T16:00:00.000Z","_content":"\n### cookie\n\n页面用来保存信息，比如保存用户名，自动登陆\n\n#### cookie的特性\n* 同个网站中所有页面公享一套cookie\n* 数量，大小有限\n* 过期时间，可用js来控制。给expries赋值设置时间\n* cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少\n\n#### js中使用cookie\n* document.cookie\n\n#### cookie的操作\n> 设置cookie\n  * 格式：名字 = 值\n  * 不会覆盖，等号是添加的意思\n  *过期事件：expries = 时间\n\n#### 练习代码\n* 设置cookie\n```javascript\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\n```\n* 读取cookie\n```javascript\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\n\n```\n*主要是将字符串分割split*  \n*注意： var arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素*\n* 删除cookie\n```javascript\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n```\n*将时间设置为过期时间* \n\n#### cookie的使用\n* 记录div的位置\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n}\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\nfunction removeCookie(name)\n{\tsetCookie(name,'1',-1);\n}\n\n\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\tvar x = getcookie('x');\n\t\t\tvar y = getcookie('y');\n\t\t\tif(x)\n\t\t\t{\n\t\t\t\toDiv.style.left =x+ 'px';\n\t\t\t\toDiv.style.top = y+ 'px';\t\n\t\t\t}\n\n\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY- oDiv.offsetTop;\n\n\t\t\t\tdocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\n\t\t\t\t\tsetCookie('x',oDiv.offsetLeft, 30);\n\t\t\t\t\tsetCookie('y',oDiv.offsetTop,30);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n*在onload下定好div位置，在ondown下记录*\n\n* 记录用户名\n```javascript \n<script>\n\tfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = new Array();\n\tvar arr = document.cookie.split(';');\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] ==name) {\n\t\t\treturn arr2[1];\n\t\t};\n\n\t}\n\treturn '';\n}\n\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n\nwindow.onload = function()\n{\n\tvar form = document.getElementById('form1');\n\tvar oUser = document.getElementsByName('user')[0];\n\tvar a = document.getElementsByTagName('a')[0];\n\n\tform.onsubmit = function()\n\t{\n\t\tsetCookie('user',oUser.value,2);\n\t}\n\n\ta.onclick = function ()\n\t{\n\t\tremoveCookie('user');\n\t\toUser.value = '';\n\t}\n}\n</script>\n</head>\n<body>\n\t<form id=\"form1\" action=\"www.baidu.com\">\n\t\t用户名：<input type=\"text\" name=\"user\">\n\t\t密码：<input type=\"password\">\n\t\t<input type=\"submit\" value=\"登陆\">\n\t\t<a href=\"javascript:;\">清除记录</a>\n\t</form>\n</body>\n\n\n```\n\n","source":"_posts/JS之cookie.md","raw":"---\ntitle: JS之cookie.md\ndate: 2016-06-2\ntags: [js]\n---\n\n### cookie\n\n页面用来保存信息，比如保存用户名，自动登陆\n\n#### cookie的特性\n* 同个网站中所有页面公享一套cookie\n* 数量，大小有限\n* 过期时间，可用js来控制。给expries赋值设置时间\n* cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少\n\n#### js中使用cookie\n* document.cookie\n\n#### cookie的操作\n> 设置cookie\n  * 格式：名字 = 值\n  * 不会覆盖，等号是添加的意思\n  *过期事件：expries = 时间\n\n#### 练习代码\n* 设置cookie\n```javascript\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\n```\n* 读取cookie\n```javascript\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\n\n```\n*主要是将字符串分割split*  \n*注意： var arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素*\n* 删除cookie\n```javascript\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n```\n*将时间设置为过期时间* \n\n#### cookie的使用\n* 记录div的位置\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n}\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\nfunction removeCookie(name)\n{\tsetCookie(name,'1',-1);\n}\n\n\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\tvar x = getcookie('x');\n\t\t\tvar y = getcookie('y');\n\t\t\tif(x)\n\t\t\t{\n\t\t\t\toDiv.style.left =x+ 'px';\n\t\t\t\toDiv.style.top = y+ 'px';\t\n\t\t\t}\n\n\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY- oDiv.offsetTop;\n\n\t\t\t\tdocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\n\t\t\t\t\tsetCookie('x',oDiv.offsetLeft, 30);\n\t\t\t\t\tsetCookie('y',oDiv.offsetTop,30);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n*在onload下定好div位置，在ondown下记录*\n\n* 记录用户名\n```javascript \n<script>\n\tfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = new Array();\n\tvar arr = document.cookie.split(';');\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] ==name) {\n\t\t\treturn arr2[1];\n\t\t};\n\n\t}\n\treturn '';\n}\n\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n\nwindow.onload = function()\n{\n\tvar form = document.getElementById('form1');\n\tvar oUser = document.getElementsByName('user')[0];\n\tvar a = document.getElementsByTagName('a')[0];\n\n\tform.onsubmit = function()\n\t{\n\t\tsetCookie('user',oUser.value,2);\n\t}\n\n\ta.onclick = function ()\n\t{\n\t\tremoveCookie('user');\n\t\toUser.value = '';\n\t}\n}\n</script>\n</head>\n<body>\n\t<form id=\"form1\" action=\"www.baidu.com\">\n\t\t用户名：<input type=\"text\" name=\"user\">\n\t\t密码：<input type=\"password\">\n\t\t<input type=\"submit\" value=\"登陆\">\n\t\t<a href=\"javascript:;\">清除记录</a>\n\t</form>\n</body>\n\n\n```\n\n","slug":"JS之cookie","published":1,"updated":"2022-12-06T15:30:37.623Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3x000emcq0772xc37u","content":"<h3 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h3><p>页面用来保存信息，比如保存用户名，自动登陆</p>\n<h4 id=\"cookie的特性\"><a href=\"#cookie的特性\" class=\"headerlink\" title=\"cookie的特性\"></a>cookie的特性</h4><ul>\n<li>同个网站中所有页面公享一套cookie</li>\n<li>数量，大小有限</li>\n<li>过期时间，可用js来控制。给expries赋值设置时间</li>\n<li>cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少</li>\n</ul>\n<h4 id=\"js中使用cookie\"><a href=\"#js中使用cookie\" class=\"headerlink\" title=\"js中使用cookie\"></a>js中使用cookie</h4><ul>\n<li>document.cookie</li>\n</ul>\n<h4 id=\"cookie的操作\"><a href=\"#cookie的操作\" class=\"headerlink\" title=\"cookie的操作\"></a>cookie的操作</h4><blockquote>\n<p>设置cookie</p>\n<ul>\n<li>格式：名字 = 值</li>\n<li>不会覆盖，等号是添加的意思<br>*过期事件：expries = 时间</li>\n</ul>\n</blockquote>\n<h4 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h4><ul>\n<li>设置cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">\toDate.<span class=\"title function_\">setDate</span>(oDate.<span class=\"title function_\">getDate</span>() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = name +<span class=\"string\">&#x27;=&#x27;</span>+value+<span class=\"string\">&#x27;;expires=&#x27;</span>+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/*document.cookie = &quot;user = Leo;expires=&quot; +oDate ;</span></span><br><span class=\"line\"><span class=\"comment\">\tdocument.cookie = &quot;pass = 123&quot;;*/</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li>读取cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getcookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;; &#x27;</span>); <span class=\"comment\">//千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span></span><br><span class=\"line\">\t<span class=\"comment\">//arr-&gt;[&#x27;username=laotuzhu&#x27;,&#x27;passwork=123456789&#x27;,&#x27;user=Leo&#x27;,..]</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.<span class=\"property\">length</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;[&#x27;username&#x27;,&#x27;laotuzhu&#x27;, ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] == name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<em>主要是将字符串分割split</em><br><em>注意： var arr = document.cookie.split(‘; ‘); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</em></li>\n<li>删除cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title function_\">setCookie</span>(name,<span class=\"string\">&#x27;1&#x27;</span>,-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<em>将时间设置为过期时间</em> </li>\n</ul>\n<h4 id=\"cookie的使用\"><a href=\"#cookie的使用\" class=\"headerlink\" title=\"cookie的使用\"></a>cookie的使用</h4><ul>\n<li><p>记录div的位置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: red;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\toDate.<span class=\"title function_\">setDate</span>(oDate.<span class=\"title function_\">getDate</span>() + iDay);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = name +<span class=\"string\">&#x27;=&#x27;</span>+value+<span class=\"string\">&#x27;;expires=&#x27;</span>+oDate;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">getcookie</span>(<span class=\"params\">name</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> arr = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;; &#x27;</span>); <span class=\"comment\">//千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"comment\">//arr-&gt;</span></span></span>[<span class=\"string\">&#x27;username=laotuzhu&#x27;</span>,<span class=\"string\">&#x27;passwork=123456789&#x27;</span>,<span class=\"string\">&#x27;user=Leo&#x27;</span>,..]</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.<span class=\"property\">length</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;[&#x27;username&#x27;,&#x27;laotuzhu&#x27;, ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] == name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;\t<span class=\"title function_\">setCookie</span>(name,<span class=\"string\">&#x27;1&#x27;</span>,-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> =<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> disX =<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> disY =<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> x = <span class=\"title function_\">getcookie</span>(<span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> y = <span class=\"title function_\">getcookie</span>(<span class=\"string\">&#x27;y&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> =x+ <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = y+ <span class=\"string\">&#x27;px&#x27;</span>;\t</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.<span class=\"property\">onmousedown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdisX = oEvent.<span class=\"property\">clientX</span>- oDiv.<span class=\"property\">offsetLeft</span>;</span><br><span class=\"line\">\t\t\t\tdisY = oEvent.<span class=\"property\">clientY</span>- oDiv.<span class=\"property\">offsetTop</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> l = oEvent.<span class=\"property\">clientX</span>-disX;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> t = oEvent.<span class=\"property\">clientY</span>-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (l&lt;<span class=\"number\">0</span>) &#123;  <span class=\"comment\">//限制div移出可视区</span></span><br><span class=\"line\">\t\t\t\t\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (t&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = l+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = t+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"title function_\">setCookie</span>(<span class=\"string\">&#x27;x&#x27;</span>,oDiv.<span class=\"property\">offsetLeft</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"title function_\">setCookie</span>(<span class=\"string\">&#x27;y&#x27;</span>,oDiv.<span class=\"property\">offsetTop</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-handlebars\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-handlebars\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-handlebars\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span></span></span><br></pre></td></tr></table></figure>\n<p><em>在onload下定好div位置，在ondown下记录</em></p>\n</li>\n<li><p>记录用户名</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">\toDate.<span class=\"title function_\">setDate</span>(oDate.<span class=\"title function_\">getDate</span>() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = name +<span class=\"string\">&#x27;=&#x27;</span>+value+<span class=\"string\">&#x27;;expires=&#x27;</span>+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/*document.cookie = &quot;user = Leo;expires=&quot; +oDate ;</span></span><br><span class=\"line\"><span class=\"comment\">\tdocument.cookie = &quot;pass = 123&quot;;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getcookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;;&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//arr-&gt;[&#x27;username=laotuzhu&#x27;,&#x27;passwork=123456789&#x27;,&#x27;user=Leo&#x27;,..]</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.<span class=\"property\">length</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;[&#x27;username&#x27;,&#x27;laotuzhu&#x27;, ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] ==name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title function_\">setCookie</span>(name,<span class=\"string\">&#x27;1&#x27;</span>,-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> form = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;form1&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oUser = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&#x27;user&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\tform.<span class=\"property\">onsubmit</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">setCookie</span>(<span class=\"string\">&#x27;user&#x27;</span>,oUser.<span class=\"property\">value</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ta.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">removeCookie</span>(<span class=\"string\">&#x27;user&#x27;</span>);</span><br><span class=\"line\">\t\toUser.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;form id=&quot;form1&quot; action=&quot;www.baidu.com&quot;&gt;</span><br><span class=\"line\">\t\t用户名：&lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;</span><br><span class=\"line\">\t\t密码：&lt;input type=&quot;password&quot;&gt;</span><br><span class=\"line\">\t\t&lt;input type=&quot;submit&quot; value=&quot;登陆&quot;&gt;</span><br><span class=\"line\">\t\t&lt;a href=&quot;javascript:;&quot;&gt;清除记录&lt;/a&gt;</span><br><span class=\"line\">\t&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h3><p>页面用来保存信息，比如保存用户名，自动登陆</p>\n<h4 id=\"cookie的特性\"><a href=\"#cookie的特性\" class=\"headerlink\" title=\"cookie的特性\"></a>cookie的特性</h4><ul>\n<li>同个网站中所有页面公享一套cookie</li>\n<li>数量，大小有限</li>\n<li>过期时间，可用js来控制。给expries赋值设置时间</li>\n<li>cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少</li>\n</ul>\n<h4 id=\"js中使用cookie\"><a href=\"#js中使用cookie\" class=\"headerlink\" title=\"js中使用cookie\"></a>js中使用cookie</h4><ul>\n<li>document.cookie</li>\n</ul>\n<h4 id=\"cookie的操作\"><a href=\"#cookie的操作\" class=\"headerlink\" title=\"cookie的操作\"></a>cookie的操作</h4><blockquote>\n<p>设置cookie</p>\n<ul>\n<li>格式：名字 = 值</li>\n<li>不会覆盖，等号是添加的意思<br>*过期事件：expries = 时间</li>\n</ul>\n</blockquote>\n<h4 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h4><ul>\n<li>设置cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">\toDate.<span class=\"title function_\">setDate</span>(oDate.<span class=\"title function_\">getDate</span>() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = name +<span class=\"string\">&#x27;=&#x27;</span>+value+<span class=\"string\">&#x27;;expires=&#x27;</span>+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/*document.cookie = &quot;user = Leo;expires=&quot; +oDate ;</span></span><br><span class=\"line\"><span class=\"comment\">\tdocument.cookie = &quot;pass = 123&quot;;*/</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li>读取cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getcookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;; &#x27;</span>); <span class=\"comment\">//千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span></span><br><span class=\"line\">\t<span class=\"comment\">//arr-&gt;[&#x27;username=laotuzhu&#x27;,&#x27;passwork=123456789&#x27;,&#x27;user=Leo&#x27;,..]</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.<span class=\"property\">length</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;[&#x27;username&#x27;,&#x27;laotuzhu&#x27;, ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] == name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<em>主要是将字符串分割split</em><br><em>注意： var arr = document.cookie.split(‘; ‘); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</em></li>\n<li>删除cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title function_\">setCookie</span>(name,<span class=\"string\">&#x27;1&#x27;</span>,-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<em>将时间设置为过期时间</em> </li>\n</ul>\n<h4 id=\"cookie的使用\"><a href=\"#cookie的使用\" class=\"headerlink\" title=\"cookie的使用\"></a>cookie的使用</h4><ul>\n<li><p>记录div的位置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: red;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\toDate.<span class=\"title function_\">setDate</span>(oDate.<span class=\"title function_\">getDate</span>() + iDay);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = name +<span class=\"string\">&#x27;=&#x27;</span>+value+<span class=\"string\">&#x27;;expires=&#x27;</span>+oDate;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"keyword\">function</span> <span class=\"title function_\">getcookie</span>(<span class=\"params\">name</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> arr = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;; &#x27;</span>); <span class=\"comment\">//千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"comment\">//arr-&gt;</span></span></span>[<span class=\"string\">&#x27;username=laotuzhu&#x27;</span>,<span class=\"string\">&#x27;passwork=123456789&#x27;</span>,<span class=\"string\">&#x27;user=Leo&#x27;</span>,..]</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.<span class=\"property\">length</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;[&#x27;username&#x27;,&#x27;laotuzhu&#x27;, ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] == name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;\t<span class=\"title function_\">setCookie</span>(name,<span class=\"string\">&#x27;1&#x27;</span>,-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> =<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> disX =<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> disY =<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> x = <span class=\"title function_\">getcookie</span>(<span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> y = <span class=\"title function_\">getcookie</span>(<span class=\"string\">&#x27;y&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> =x+ <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = y+ <span class=\"string\">&#x27;px&#x27;</span>;\t</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.<span class=\"property\">onmousedown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdisX = oEvent.<span class=\"property\">clientX</span>- oDiv.<span class=\"property\">offsetLeft</span>;</span><br><span class=\"line\">\t\t\t\tdisY = oEvent.<span class=\"property\">clientY</span>- oDiv.<span class=\"property\">offsetTop</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> l = oEvent.<span class=\"property\">clientX</span>-disX;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> t = oEvent.<span class=\"property\">clientY</span>-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (l&lt;<span class=\"number\">0</span>) &#123;  <span class=\"comment\">//限制div移出可视区</span></span><br><span class=\"line\">\t\t\t\t\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (t&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = l+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = t+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"title function_\">setCookie</span>(<span class=\"string\">&#x27;x&#x27;</span>,oDiv.<span class=\"property\">offsetLeft</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"title function_\">setCookie</span>(<span class=\"string\">&#x27;y&#x27;</span>,oDiv.<span class=\"property\">offsetTop</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-handlebars\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-handlebars\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-handlebars\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span></span></span><br></pre></td></tr></table></figure>\n<p><em>在onload下定好div位置，在ondown下记录</em></p>\n</li>\n<li><p>记录用户名</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">\toDate.<span class=\"title function_\">setDate</span>(oDate.<span class=\"title function_\">getDate</span>() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = name +<span class=\"string\">&#x27;=&#x27;</span>+value+<span class=\"string\">&#x27;;expires=&#x27;</span>+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/*document.cookie = &quot;user = Leo;expires=&quot; +oDate ;</span></span><br><span class=\"line\"><span class=\"comment\">\tdocument.cookie = &quot;pass = 123&quot;;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getcookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>();</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;;&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//arr-&gt;[&#x27;username=laotuzhu&#x27;,&#x27;passwork=123456789&#x27;,&#x27;user=Leo&#x27;,..]</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.<span class=\"property\">length</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;=&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;[&#x27;username&#x27;,&#x27;laotuzhu&#x27;, ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] ==name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title function_\">setCookie</span>(name,<span class=\"string\">&#x27;1&#x27;</span>,-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> form = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;form1&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oUser = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByName</span>(<span class=\"string\">&#x27;user&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;a&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\tform.<span class=\"property\">onsubmit</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">setCookie</span>(<span class=\"string\">&#x27;user&#x27;</span>,oUser.<span class=\"property\">value</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ta.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"title function_\">removeCookie</span>(<span class=\"string\">&#x27;user&#x27;</span>);</span><br><span class=\"line\">\t\toUser.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;form id=&quot;form1&quot; action=&quot;www.baidu.com&quot;&gt;</span><br><span class=\"line\">\t\t用户名：&lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;</span><br><span class=\"line\">\t\t密码：&lt;input type=&quot;password&quot;&gt;</span><br><span class=\"line\">\t\t&lt;input type=&quot;submit&quot; value=&quot;登陆&quot;&gt;</span><br><span class=\"line\">\t\t&lt;a href=&quot;javascript:;&quot;&gt;清除记录&lt;/a&gt;</span><br><span class=\"line\">\t&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"JS之事件详解（一）","date":"2016-05-19T09:10:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **event对象**\n \n> * Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。\nevent对象只在事件发生的过程中才有效。\nevent的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。\n\n> * 获取鼠标的位置：clientX，clientY\n\n> * 获取event对象的兼容性写法：var oEvent = ev || event；\n***\n> * 事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。\n一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;\n\n###  **练习代码**\n#### 1.弹出菜单\n    *取消事件冒泡*\n```javascript\n\t<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\n\t}\n\tul{\n\t\tbackground-color: #1457dd;\n\t\tpadding:5px 10px;\n\t\tdisplay:none ;\n\t\tlist-style: none;\n\t\twidth: 150px;\n\t}\n\tdiv{\n\t\tposition: absolute;\n\t\tleft:45%;\n\t\ttop:10%;\n\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\n\tvar oBtn = document.getElementById('btn1');\n\tvar oUl = document.getElementById('ul1');\n\n\n\toBtn.onclick =function (ev){\n\t\tvar oEvent = ev || event;\n\t\toUl.style.display = 'block';\n\n\t\toEvent.cancelBubble = 'true'\n\n\t}\n\tdocument.onclick = function(){\n\t\toUl.style.display = 'none';\n\t\t\n\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div>\n\t\t<button id=\"btn1\">显示</button>\n\t\t<ul id=\"ul1\">\n\t\t\t<li>收藏</li>\n\t\t\t<li>刷新</li>\n\t\t\t<li>注销</li>\n\t\t\t<li>登陆</li>\n\t\t\t<li>注册</li>\n\t\t</ul>\n\t</div>\n\t\n</body\n```\n#### 2.跟随鼠标移动的div\n    *注意：消除滚动条的影响*\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #120047;\n\t\t\tposition: absolute; //别忘记加这个属性，有了定位left和top才能设置\n\t\t}\n\t</style>\n\t<script>\n\tdocument.onmousemove = function(ev){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar oEvent = ev || event; //event在ie下才有定义\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n\t\toDiv.style.left = oEvent.clientX +scrollLeft+'px';\n\t\toDiv.style.top = oEvent.clientY + scrollTop+'px' ;\n\t\n\t\n\t}\n\t\t\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n#### 3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\n```javascript\n\t<style>\n\t\tdiv{\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tbackground-color: #124888;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\t\tvar aDiv = document.getElementsByTagName('div');\n\t\tvar i = 0;\n\n\t\tdocument.onmousemove =function (ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\tfor(i=aDiv.length-1; i>0; i--){\n\t\t\t\taDiv[i].style.left = aDiv[i-1].style.left;\n\t\t\t\taDiv[i].style.top = aDiv[i-1].style.top;\n\t\t\t}\n\n\t\t\taDiv[0].style.left = oEvent.clientX + 'px';\n\t\t\taDiv[0].style.top = oEvent.clientY + 'px';\n\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\tDiv*50\n</body>\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","source":"_posts/JS之事件详情（1）.md","raw":"---\ntitle: JS之事件详解（一）\ndate: 2016-05-19 17:10:00\ntags: [编程,javacript]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **event对象**\n \n> * Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。\nevent对象只在事件发生的过程中才有效。\nevent的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。\n\n> * 获取鼠标的位置：clientX，clientY\n\n> * 获取event对象的兼容性写法：var oEvent = ev || event；\n***\n> * 事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。\n一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;\n\n###  **练习代码**\n#### 1.弹出菜单\n    *取消事件冒泡*\n```javascript\n\t<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\n\t}\n\tul{\n\t\tbackground-color: #1457dd;\n\t\tpadding:5px 10px;\n\t\tdisplay:none ;\n\t\tlist-style: none;\n\t\twidth: 150px;\n\t}\n\tdiv{\n\t\tposition: absolute;\n\t\tleft:45%;\n\t\ttop:10%;\n\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\n\tvar oBtn = document.getElementById('btn1');\n\tvar oUl = document.getElementById('ul1');\n\n\n\toBtn.onclick =function (ev){\n\t\tvar oEvent = ev || event;\n\t\toUl.style.display = 'block';\n\n\t\toEvent.cancelBubble = 'true'\n\n\t}\n\tdocument.onclick = function(){\n\t\toUl.style.display = 'none';\n\t\t\n\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div>\n\t\t<button id=\"btn1\">显示</button>\n\t\t<ul id=\"ul1\">\n\t\t\t<li>收藏</li>\n\t\t\t<li>刷新</li>\n\t\t\t<li>注销</li>\n\t\t\t<li>登陆</li>\n\t\t\t<li>注册</li>\n\t\t</ul>\n\t</div>\n\t\n</body\n```\n#### 2.跟随鼠标移动的div\n    *注意：消除滚动条的影响*\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #120047;\n\t\t\tposition: absolute; //别忘记加这个属性，有了定位left和top才能设置\n\t\t}\n\t</style>\n\t<script>\n\tdocument.onmousemove = function(ev){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar oEvent = ev || event; //event在ie下才有定义\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n\t\toDiv.style.left = oEvent.clientX +scrollLeft+'px';\n\t\toDiv.style.top = oEvent.clientY + scrollTop+'px' ;\n\t\n\t\n\t}\n\t\t\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n#### 3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\n```javascript\n\t<style>\n\t\tdiv{\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tbackground-color: #124888;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\t\tvar aDiv = document.getElementsByTagName('div');\n\t\tvar i = 0;\n\n\t\tdocument.onmousemove =function (ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\tfor(i=aDiv.length-1; i>0; i--){\n\t\t\t\taDiv[i].style.left = aDiv[i-1].style.left;\n\t\t\t\taDiv[i].style.top = aDiv[i-1].style.top;\n\t\t\t}\n\n\t\t\taDiv[0].style.left = oEvent.clientX + 'px';\n\t\t\taDiv[0].style.top = oEvent.clientY + 'px';\n\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\tDiv*50\n</body>\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","slug":"JS之事件详情（1）","published":1,"updated":"2022-12-06T15:30:37.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3x000fmcq0a18aejl1","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<span id=\"more\"></span>\n<h2 id=\"event对象\"><a href=\"#event对象\" class=\"headerlink\" title=\"event对象\"></a><strong>event对象</strong></h2><blockquote>\n<ul>\n<li>Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。<br>event对象只在事件发生的过程中才有效。<br>event的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>获取鼠标的位置：clientX，clientY</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>获取event对象的兼容性写法：var oEvent = ev || event；</li>\n</ul>\n</blockquote>\n<hr>\n<blockquote>\n<ul>\n<li>事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。<br>一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;</li>\n</ul>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a><strong>练习代码</strong></h3><h4 id=\"1-弹出菜单\"><a href=\"#1-弹出菜单\" class=\"headerlink\" title=\"1.弹出菜单\"></a>1.弹出菜单</h4><pre><code>*取消事件冒泡*\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attr\">padding</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tul&#123;</span><br><span class=\"line\">\t\tbackground-<span class=\"attr\">color</span>: #1457dd;</span><br><span class=\"line\">\t\t<span class=\"attr\">padding</span>:5px 10px;</span><br><span class=\"line\">\t\t<span class=\"attr\">display</span>:none ;</span><br><span class=\"line\">\t\tlist-<span class=\"attr\">style</span>: none;</span><br><span class=\"line\">\t\t<span class=\"attr\">width</span>: 150px;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdiv&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t<span class=\"attr\">left</span>:<span class=\"number\">45</span>%;</span><br><span class=\"line\">\t\t<span class=\"attr\">top</span>:<span class=\"number\">10</span>%;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\toBtn.<span class=\"property\">onclick</span> =<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toUl.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;block&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toEvent.<span class=\"property\">cancelBubble</span> = <span class=\"string\">&#x27;true&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toUl.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn1&quot;</span>&gt;</span>显示<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>收藏<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>刷新<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>注销<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>登陆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t</span></span><br><span class=\"line\"><span class=\"language-xml\">&lt;/body</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-跟随鼠标移动的div\"><a href=\"#2-跟随鼠标移动的div\" class=\"headerlink\" title=\"2.跟随鼠标移动的div\"></a>2.跟随鼠标移动的div</h4><pre><code>*注意：消除滚动条的影响*\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">120047</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute; <span class=\"comment\">//别忘记加这个属性，有了定位left和top才能设置</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oEvent = ev || event; <span class=\"comment\">//event在ie下才有定义</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> scrollLeft = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span> +scrollLeft+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span> + scrollTop+<span class=\"string\">&#x27;px&#x27;</span> ;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"><a href=\"#3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\" class=\"headerlink\" title=\"3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"></a>3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t\tdiv&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 10px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 10px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">124888</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> aDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> =<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">for</span>(i=aDiv.<span class=\"property\">length</span>-<span class=\"number\">1</span>; i&gt;<span class=\"number\">0</span>; i--)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\taDiv[i].<span class=\"property\">style</span>.<span class=\"property\">left</span> = aDiv[i-<span class=\"number\">1</span>].<span class=\"property\">style</span>.<span class=\"property\">left</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\taDiv[i].<span class=\"property\">style</span>.<span class=\"property\">top</span> = aDiv[i-<span class=\"number\">1</span>].<span class=\"property\">style</span>.<span class=\"property\">top</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\taDiv[<span class=\"number\">0</span>].<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\taDiv[<span class=\"number\">0</span>].<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\tDiv*50</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/19/JS%E4%B9%8B%E4%BA%8B%E4%BB%B6%E8%AF%A6%E6%83%85%EF%BC%881%EF%BC%89/\">  JS之事件详解（一）  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<h2 id=\"event对象\"><a href=\"#event对象\" class=\"headerlink\" title=\"event对象\"></a><strong>event对象</strong></h2><blockquote>\n<ul>\n<li>Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。<br>event对象只在事件发生的过程中才有效。<br>event的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>获取鼠标的位置：clientX，clientY</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>获取event对象的兼容性写法：var oEvent = ev || event；</li>\n</ul>\n</blockquote>\n<hr>\n<blockquote>\n<ul>\n<li>事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。<br>一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;</li>\n</ul>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a><strong>练习代码</strong></h3><h4 id=\"1-弹出菜单\"><a href=\"#1-弹出菜单\" class=\"headerlink\" title=\"1.弹出菜单\"></a>1.弹出菜单</h4><pre><code>*取消事件冒泡*\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attr\">padding</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tul&#123;</span><br><span class=\"line\">\t\tbackground-<span class=\"attr\">color</span>: #1457dd;</span><br><span class=\"line\">\t\t<span class=\"attr\">padding</span>:5px 10px;</span><br><span class=\"line\">\t\t<span class=\"attr\">display</span>:none ;</span><br><span class=\"line\">\t\tlist-<span class=\"attr\">style</span>: none;</span><br><span class=\"line\">\t\t<span class=\"attr\">width</span>: 150px;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdiv&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t<span class=\"attr\">left</span>:<span class=\"number\">45</span>%;</span><br><span class=\"line\">\t\t<span class=\"attr\">top</span>:<span class=\"number\">10</span>%;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\toBtn.<span class=\"property\">onclick</span> =<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toUl.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;block&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toEvent.<span class=\"property\">cancelBubble</span> = <span class=\"string\">&#x27;true&#x27;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toUl.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn1&quot;</span>&gt;</span>显示<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>收藏<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>刷新<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>注销<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>登陆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t</span></span><br><span class=\"line\"><span class=\"language-xml\">&lt;/body</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-跟随鼠标移动的div\"><a href=\"#2-跟随鼠标移动的div\" class=\"headerlink\" title=\"2.跟随鼠标移动的div\"></a>2.跟随鼠标移动的div</h4><pre><code>*注意：消除滚动条的影响*\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">120047</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute; <span class=\"comment\">//别忘记加这个属性，有了定位left和top才能设置</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oEvent = ev || event; <span class=\"comment\">//event在ie下才有定义</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> scrollLeft = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollLeft</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollLeft</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span> +scrollLeft+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span> + scrollTop+<span class=\"string\">&#x27;px&#x27;</span> ;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"><a href=\"#3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\" class=\"headerlink\" title=\"3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"></a>3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t\tdiv&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 10px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 10px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">124888</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> aDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> =<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">for</span>(i=aDiv.<span class=\"property\">length</span>-<span class=\"number\">1</span>; i&gt;<span class=\"number\">0</span>; i--)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\taDiv[i].<span class=\"property\">style</span>.<span class=\"property\">left</span> = aDiv[i-<span class=\"number\">1</span>].<span class=\"property\">style</span>.<span class=\"property\">left</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\taDiv[i].<span class=\"property\">style</span>.<span class=\"property\">top</span> = aDiv[i-<span class=\"number\">1</span>].<span class=\"property\">style</span>.<span class=\"property\">top</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\taDiv[<span class=\"number\">0</span>].<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\taDiv[<span class=\"number\">0</span>].<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span> + <span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\tDiv*50</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/19/JS%E4%B9%8B%E4%BA%8B%E4%BB%B6%E8%AF%A6%E6%83%85%EF%BC%881%EF%BC%89/\">  JS之事件详解（一）  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"JS之事件详解（二）","date":"2016-05-19T09:10:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **键盘事件**\n***\n### keyCode\n> 键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用\n其他属性还有：ctrlKey，shiftKey，altKey\n\n### 练习代码\n#### 1.获取用户按下键盘哪个键\n```javascript\n<script>\n\twindow.onload = function(){\n\t\tdocument.onkeydown= function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\talert(oEvent.keyCode);\n\t\t\t//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13\n\t\t}\n\t}\n\t</script>\n```\n#### 2.键盘控制div移动\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:oDiv.style.left = oDiv.offsetLeft-10+'px';break;\n\t\t\t\tcase 39:oDiv.style.left = oDiv.offsetLeft+10+'px';break;\n\t\t\t\tcase 38:oDiv.style.top = oDiv.offsetTop-10+'px';break;\n\t\t\t\tcase 40:oDiv.style.top = oDiv.offsetTop+10+'px';break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n * -解决卡顿问题\n>  要点：1.开定时器 2.加判断\n\t\t\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar timer = null;\n\t\tvar left = false;\n\t\tvar top = false;\n\t\tvar bottom = false;\n\t\tvar right = false;\n\n\t\tsetInterval(function(){\n\t\t\tif (left) {\n\t\t\t\toDiv.style.left = oDiv.offsetLeft-10+'px';\n\t\t\t}else if(right){\n\t\t\t\toDiv.style.left = oDiv.offsetLeft+10+'px';\n\t\t\t}else if(top){\n\t\t\t\toDiv.style.top = oDiv.offsetTop-10+'px';\n\t\t\t}else if(bottom){\n\t\t\t\toDiv.style.top = oDiv.offsetTop+10+'px';\n\t\t\t}\n\t\t},50)\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = true;break;\n\t\t\t\tcase 39:right = true;break;\n\t\t\t\tcase 38:top = true;break;\n\t\t\t\tcase 40:bottom = true;break;\n\t\t\t}\n\t\t}\n\t\tdocument.onkeyup = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = false;break;\n\t\t\t\tcase 39:right = false;break;\n\t\t\t\tcase 38:top = false;break;\n\t\t\t\tcase 40:bottom = false;break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n#### 3.提交留言\n* 回车提交\n```javascript\n<script>\n\twindow.onload =function(){\n\t\tvar oTxt1 = document.getElementById('txt1');\n\t\tvar oTxt2 = document.getElementById('txt2');\n\t\tvar oBtn = document.getElementById('btn');\n\n\t\tvar commit = btn.onclick = function(){\n\t\t\toTxt1.value += oTxt2.value + '\\n';\n\t\t\toTxt2.value = '';\n\t\t}\n\t\tdocument.onkeydown=function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tcommit();\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\" ></textarea><br>\n\t<input type=\"text\" id=\"txt2\"><button id=\"btn\">提交</button>\n</body>\n```\n* ctrl+回车 提交\n> 在上面的基础上，更改if条件\n```javascript\nif (oEvent.ctrlKey == true && oEvent.keyCode == 13) {\n\t\t\t\tcommit();\n\t\t\t};\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","source":"_posts/JS之事件详解（2）.md","raw":"---\ntitle: JS之事件详解（二）\ndate: 2016-05-19 17:10:00\ntags: [编程,javacript]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **键盘事件**\n***\n### keyCode\n> 键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用\n其他属性还有：ctrlKey，shiftKey，altKey\n\n### 练习代码\n#### 1.获取用户按下键盘哪个键\n```javascript\n<script>\n\twindow.onload = function(){\n\t\tdocument.onkeydown= function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\talert(oEvent.keyCode);\n\t\t\t//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13\n\t\t}\n\t}\n\t</script>\n```\n#### 2.键盘控制div移动\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:oDiv.style.left = oDiv.offsetLeft-10+'px';break;\n\t\t\t\tcase 39:oDiv.style.left = oDiv.offsetLeft+10+'px';break;\n\t\t\t\tcase 38:oDiv.style.top = oDiv.offsetTop-10+'px';break;\n\t\t\t\tcase 40:oDiv.style.top = oDiv.offsetTop+10+'px';break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n * -解决卡顿问题\n>  要点：1.开定时器 2.加判断\n\t\t\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar timer = null;\n\t\tvar left = false;\n\t\tvar top = false;\n\t\tvar bottom = false;\n\t\tvar right = false;\n\n\t\tsetInterval(function(){\n\t\t\tif (left) {\n\t\t\t\toDiv.style.left = oDiv.offsetLeft-10+'px';\n\t\t\t}else if(right){\n\t\t\t\toDiv.style.left = oDiv.offsetLeft+10+'px';\n\t\t\t}else if(top){\n\t\t\t\toDiv.style.top = oDiv.offsetTop-10+'px';\n\t\t\t}else if(bottom){\n\t\t\t\toDiv.style.top = oDiv.offsetTop+10+'px';\n\t\t\t}\n\t\t},50)\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = true;break;\n\t\t\t\tcase 39:right = true;break;\n\t\t\t\tcase 38:top = true;break;\n\t\t\t\tcase 40:bottom = true;break;\n\t\t\t}\n\t\t}\n\t\tdocument.onkeyup = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = false;break;\n\t\t\t\tcase 39:right = false;break;\n\t\t\t\tcase 38:top = false;break;\n\t\t\t\tcase 40:bottom = false;break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n#### 3.提交留言\n* 回车提交\n```javascript\n<script>\n\twindow.onload =function(){\n\t\tvar oTxt1 = document.getElementById('txt1');\n\t\tvar oTxt2 = document.getElementById('txt2');\n\t\tvar oBtn = document.getElementById('btn');\n\n\t\tvar commit = btn.onclick = function(){\n\t\t\toTxt1.value += oTxt2.value + '\\n';\n\t\t\toTxt2.value = '';\n\t\t}\n\t\tdocument.onkeydown=function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tcommit();\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\" ></textarea><br>\n\t<input type=\"text\" id=\"txt2\"><button id=\"btn\">提交</button>\n</body>\n```\n* ctrl+回车 提交\n> 在上面的基础上，更改if条件\n```javascript\nif (oEvent.ctrlKey == true && oEvent.keyCode == 13) {\n\t\t\t\tcommit();\n\t\t\t};\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","slug":"JS之事件详解（2）","published":1,"updated":"2022-12-06T15:30:37.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3y000imcq008jxf2nr","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<span id=\"more\"></span>\n<h2 id=\"键盘事件\"><a href=\"#键盘事件\" class=\"headerlink\" title=\"键盘事件\"></a><strong>键盘事件</strong></h2><hr>\n<h3 id=\"keyCode\"><a href=\"#keyCode\" class=\"headerlink\" title=\"keyCode\"></a>keyCode</h3><blockquote>\n<p>键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用<br>其他属性还有：ctrlKey，shiftKey，altKey</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-获取用户按下键盘哪个键\"><a href=\"#1-获取用户按下键盘哪个键\" class=\"headerlink\" title=\"1.获取用户按下键盘哪个键\"></a>1.获取用户按下键盘哪个键</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span>= <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">alert</span>(oEvent.<span class=\"property\">keyCode</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-键盘控制div移动\"><a href=\"#2-键盘控制div移动\" class=\"headerlink\" title=\"2.键盘控制div移动\"></a>2.键盘控制div移动</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">311245</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> keyCode = oEvent.<span class=\"property\">keyCode</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">switch</span>(keyCode)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">37</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">39</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">38</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">40</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>-解决卡顿问题<blockquote>\n<p> 要点：1.开定时器 2.加判断</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">311245</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> timer = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> left = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> top = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> bottom = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> right = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">if</span> (left) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(right)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(top)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(bottom)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;,<span class=\"number\">50</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> keyCode = oEvent.<span class=\"property\">keyCode</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">switch</span>(keyCode)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">37</span>:left = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">39</span>:right = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">38</span>:top = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">40</span>:bottom = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeyup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> keyCode = oEvent.<span class=\"property\">keyCode</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">switch</span>(keyCode)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">37</span>:left = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">39</span>:right = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">38</span>:top = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">40</span>:bottom = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-提交留言\"><a href=\"#3-提交留言\" class=\"headerlink\" title=\"3.提交留言\"></a>3.提交留言</h4><ul>\n<li>回车提交<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> =<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oTxt1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oTxt2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt2&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> commit = btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\toTxt1.<span class=\"property\">value</span> += oTxt2.<span class=\"property\">value</span> + <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t\toTxt2.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">commit</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;textarea name=&quot;&quot; id=&quot;txt1&quot; cols=&quot;30&quot; rows=&quot;10&quot; &gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class=\"line\">\t&lt;input type=&quot;text&quot; id=&quot;txt2&quot;&gt;&lt;button id=&quot;btn&quot;&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li>\n<li>ctrl+回车 提交<blockquote>\n<p>在上面的基础上，更改if条件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (oEvent.<span class=\"property\">ctrlKey</span> == <span class=\"literal\">true</span> &amp;&amp; oEvent.<span class=\"property\">keyCode</span> == <span class=\"number\">13</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"title function_\">commit</span>();</span><br><span class=\"line\">\t\t\t&#125;;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/19/JS%E4%B9%8B%E4%BA%8B%E4%BB%B6%E8%AF%A6%E8%A7%A3%EF%BC%882%EF%BC%89/\">  JS之事件详解（二）  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<h2 id=\"键盘事件\"><a href=\"#键盘事件\" class=\"headerlink\" title=\"键盘事件\"></a><strong>键盘事件</strong></h2><hr>\n<h3 id=\"keyCode\"><a href=\"#keyCode\" class=\"headerlink\" title=\"keyCode\"></a>keyCode</h3><blockquote>\n<p>键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用<br>其他属性还有：ctrlKey，shiftKey，altKey</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-获取用户按下键盘哪个键\"><a href=\"#1-获取用户按下键盘哪个键\" class=\"headerlink\" title=\"1.获取用户按下键盘哪个键\"></a>1.获取用户按下键盘哪个键</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span>= <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">alert</span>(oEvent.<span class=\"property\">keyCode</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-键盘控制div移动\"><a href=\"#2-键盘控制div移动\" class=\"headerlink\" title=\"2.键盘控制div移动\"></a>2.键盘控制div移动</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">311245</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> keyCode = oEvent.<span class=\"property\">keyCode</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">switch</span>(keyCode)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">37</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">39</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">38</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">40</span>:oDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>-解决卡顿问题<blockquote>\n<p> 要点：1.开定时器 2.加判断</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: #<span class=\"number\">311245</span>;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> timer = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> left = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> top = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> bottom = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> right = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">if</span> (left) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(right)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oDiv.<span class=\"property\">offsetLeft</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(top)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>-<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(bottom)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oDiv.<span class=\"property\">offsetTop</span>+<span class=\"number\">10</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;,<span class=\"number\">50</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> keyCode = oEvent.<span class=\"property\">keyCode</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">switch</span>(keyCode)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">37</span>:left = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">39</span>:right = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">38</span>:top = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">40</span>:bottom = <span class=\"literal\">true</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeyup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> keyCode = oEvent.<span class=\"property\">keyCode</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">switch</span>(keyCode)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">37</span>:left = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">39</span>:right = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">38</span>:top = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">case</span> <span class=\"number\">40</span>:bottom = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-提交留言\"><a href=\"#3-提交留言\" class=\"headerlink\" title=\"3.提交留言\"></a>3.提交留言</h4><ul>\n<li>回车提交<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> =<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oTxt1 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oTxt2 = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt2&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> commit = btn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\toTxt1.<span class=\"property\">value</span> += oTxt2.<span class=\"property\">value</span> + <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t\toTxt2.<span class=\"property\">value</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onkeydown</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">commit</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;textarea name=&quot;&quot; id=&quot;txt1&quot; cols=&quot;30&quot; rows=&quot;10&quot; &gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class=\"line\">\t&lt;input type=&quot;text&quot; id=&quot;txt2&quot;&gt;&lt;button id=&quot;btn&quot;&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li>\n<li>ctrl+回车 提交<blockquote>\n<p>在上面的基础上，更改if条件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (oEvent.<span class=\"property\">ctrlKey</span> == <span class=\"literal\">true</span> &amp;&amp; oEvent.<span class=\"property\">keyCode</span> == <span class=\"number\">13</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"title function_\">commit</span>();</span><br><span class=\"line\">\t\t\t&#125;;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/19/JS%E4%B9%8B%E4%BA%8B%E4%BB%B6%E8%AF%A6%E8%A7%A3%EF%BC%882%EF%BC%89/\">  JS之事件详解（二）  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"JS之默认行为","date":"2016-05-19T09:10:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **默认行为**\n***\n\n> 浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交\nreturn false;取消默认行为\n\n### 练习代码\n#### 1.屏蔽右键菜单\n> --弹出自定义的右键菜单\n```javascipt\n<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\t}\n\t\t#ul1{\n\t\t\twidth: 130px;\n\t\t\theight: 205px;\n\t\t\tbackground-color: #ccc;\n\t\t\tlist-style: none;\n\t\t\tposition: absolute;\n\t\t\ttext-indent: 10px;\n\t\t\tdisplay: none;\n\t\t}\n\t\t#ul1 li{\n\t\t\tpadding-bottom: 10px;\n\t\t\tborder-bottom: 1px solid #000;\n\t\t\theight: 30px;\n\t\t\tline-height: 30px;\n\n\t\t}\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\n\t\tdocument.oncontextmenu = function(ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\toUl.style.display = 'block';\n\t\t\toUl.style.left = oEvent.clientX +'px';\n\t\t\toUl.style.top = oEvent.clientY+'px';\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tdocument.onclick =function(){\n\t\t\tvar oUl = document.getElementById('ul1');\n\t\t\toUl.style.display = 'none';\n\t\t\t\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>返回</li>\n\t\t<li>刷新</li>\n\t\t<li>开发者模式</li>\n\t\t<li>查看源代码</li>\n\t\t<li>属性</li>\n\t</ul>\n</body>\n```\n#### 2.拖拽div（简易版）\n> 原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\n\t\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY - oDiv.offsetTop;\n\n\t\t\t\toDiv.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\toDiv.onmouseup = function(){\n\t\t\t\t\toDiv.onmousemove = null;\n\t\t\t\t\toDiv.onmouseup = null;\n\t\t\t\t}\n\t\t\treturn false； //解决旧版火狐的bug\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 解决div拖动时，鼠标移出问题\n\t> 原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\t\t\t\t}\n```\t\n* 解决div拖出可视区\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","source":"_posts/JS之默认行为.md","raw":"---\ntitle: JS之默认行为\ndate: 2016-05-19 17:10:00\ntags: [编程,javacript]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **默认行为**\n***\n\n> 浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交\nreturn false;取消默认行为\n\n### 练习代码\n#### 1.屏蔽右键菜单\n> --弹出自定义的右键菜单\n```javascipt\n<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\t}\n\t\t#ul1{\n\t\t\twidth: 130px;\n\t\t\theight: 205px;\n\t\t\tbackground-color: #ccc;\n\t\t\tlist-style: none;\n\t\t\tposition: absolute;\n\t\t\ttext-indent: 10px;\n\t\t\tdisplay: none;\n\t\t}\n\t\t#ul1 li{\n\t\t\tpadding-bottom: 10px;\n\t\t\tborder-bottom: 1px solid #000;\n\t\t\theight: 30px;\n\t\t\tline-height: 30px;\n\n\t\t}\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\n\t\tdocument.oncontextmenu = function(ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\toUl.style.display = 'block';\n\t\t\toUl.style.left = oEvent.clientX +'px';\n\t\t\toUl.style.top = oEvent.clientY+'px';\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tdocument.onclick =function(){\n\t\t\tvar oUl = document.getElementById('ul1');\n\t\t\toUl.style.display = 'none';\n\t\t\t\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>返回</li>\n\t\t<li>刷新</li>\n\t\t<li>开发者模式</li>\n\t\t<li>查看源代码</li>\n\t\t<li>属性</li>\n\t</ul>\n</body>\n```\n#### 2.拖拽div（简易版）\n> 原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\n\t\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY - oDiv.offsetTop;\n\n\t\t\t\toDiv.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\toDiv.onmouseup = function(){\n\t\t\t\t\toDiv.onmousemove = null;\n\t\t\t\t\toDiv.onmouseup = null;\n\t\t\t\t}\n\t\t\treturn false； //解决旧版火狐的bug\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 解决div拖动时，鼠标移出问题\n\t> 原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\t\t\t\t}\n```\t\n* 解决div拖出可视区\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","slug":"JS之默认行为","published":1,"updated":"2022-12-06T15:30:37.631Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv3z000jmcq00dzj8ekp","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<span id=\"more\"></span>\n<h2 id=\"默认行为\"><a href=\"#默认行为\" class=\"headerlink\" title=\"默认行为\"></a><strong>默认行为</strong></h2><hr>\n<blockquote>\n<p>浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交<br>return false;取消默认行为</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-屏蔽右键菜单\"><a href=\"#1-屏蔽右键菜单\" class=\"headerlink\" title=\"1.屏蔽右键菜单\"></a>1.屏蔽右键菜单</h4><blockquote>\n<p>–弹出自定义的右键菜单<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\tmargin: 0;</span><br><span class=\"line\">\t\tpadding:0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t#ul1&#123;</span><br><span class=\"line\">\t\t\twidth: 130px;</span><br><span class=\"line\">\t\t\theight: 205px;</span><br><span class=\"line\">\t\t\tbackground-color: #ccc;</span><br><span class=\"line\">\t\t\tlist-style: none;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t\ttext-indent: 10px;</span><br><span class=\"line\">\t\t\tdisplay: none;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t#ul1 li&#123;</span><br><span class=\"line\">\t\t\tpadding-bottom: 10px;</span><br><span class=\"line\">\t\t\tborder-bottom: 1px solid #000;</span><br><span class=\"line\">\t\t\theight: 30px;</span><br><span class=\"line\">\t\t\tline-height: 30px;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oUl = document.getElementById(&#x27;ul1&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.oncontextmenu = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toUl.style.display = &#x27;block&#x27;;</span><br><span class=\"line\">\t\t\toUl.style.left = oEvent.clientX +&#x27;px&#x27;;</span><br><span class=\"line\">\t\t\toUl.style.top = oEvent.clientY+&#x27;px&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onclick =function()&#123;</span><br><span class=\"line\">\t\t\tvar oUl = document.getElementById(&#x27;ul1&#x27;);</span><br><span class=\"line\">\t\t\toUl.style.display = &#x27;none&#x27;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;返回&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;开发者模式&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;查看源代码&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;属性&lt;/li&gt;</span><br><span class=\"line\">\t&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"2-拖拽div（简易版）\"><a href=\"#2-拖拽div（简易版）\" class=\"headerlink\" title=\"2.拖拽div（简易版）\"></a>2.拖拽div（简易版）</h4><blockquote>\n<p>原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: red;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> =<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> disX =<span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> disY =<span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\toDiv.<span class=\"property\">onmousedown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\tdisX = oEvent.<span class=\"property\">clientX</span>- oDiv.<span class=\"property\">offsetLeft</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\tdisY = oEvent.<span class=\"property\">clientY</span> - oDiv.<span class=\"property\">offsetTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span>-disX+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span>-disY+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">onmouseup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">onmousemove</span> = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">onmouseup</span> = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>； <span class=\"comment\">//解决旧版火狐的bug</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>解决div拖动时，鼠标移出问题<blockquote>\n<p>原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span>-disX+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span>-disY+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n<li>解决div拖出可视区<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> l = oEvent.<span class=\"property\">clientX</span>-disX;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> t = oEvent.<span class=\"property\">clientY</span>-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (l&lt;<span class=\"number\">0</span>) &#123;  <span class=\"comment\">//限制div移出可视区</span></span><br><span class=\"line\">\t\t\t\t\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (t&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = l+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = t+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/19/JS%E4%B9%8B%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA/\">  JS之默认行为  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<h2 id=\"默认行为\"><a href=\"#默认行为\" class=\"headerlink\" title=\"默认行为\"></a><strong>默认行为</strong></h2><hr>\n<blockquote>\n<p>浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交<br>return false;取消默认行为</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-屏蔽右键菜单\"><a href=\"#1-屏蔽右键菜单\" class=\"headerlink\" title=\"1.屏蔽右键菜单\"></a>1.屏蔽右键菜单</h4><blockquote>\n<p>–弹出自定义的右键菜单<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\tmargin: 0;</span><br><span class=\"line\">\t\tpadding:0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t#ul1&#123;</span><br><span class=\"line\">\t\t\twidth: 130px;</span><br><span class=\"line\">\t\t\theight: 205px;</span><br><span class=\"line\">\t\t\tbackground-color: #ccc;</span><br><span class=\"line\">\t\t\tlist-style: none;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t\ttext-indent: 10px;</span><br><span class=\"line\">\t\t\tdisplay: none;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t#ul1 li&#123;</span><br><span class=\"line\">\t\t\tpadding-bottom: 10px;</span><br><span class=\"line\">\t\t\tborder-bottom: 1px solid #000;</span><br><span class=\"line\">\t\t\theight: 30px;</span><br><span class=\"line\">\t\t\tline-height: 30px;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oUl = document.getElementById(&#x27;ul1&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.oncontextmenu = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toUl.style.display = &#x27;block&#x27;;</span><br><span class=\"line\">\t\t\toUl.style.left = oEvent.clientX +&#x27;px&#x27;;</span><br><span class=\"line\">\t\t\toUl.style.top = oEvent.clientY+&#x27;px&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onclick =function()&#123;</span><br><span class=\"line\">\t\t\tvar oUl = document.getElementById(&#x27;ul1&#x27;);</span><br><span class=\"line\">\t\t\toUl.style.display = &#x27;none&#x27;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;返回&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;开发者模式&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;查看源代码&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;属性&lt;/li&gt;</span><br><span class=\"line\">\t&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"2-拖拽div（简易版）\"><a href=\"#2-拖拽div（简易版）\" class=\"headerlink\" title=\"2.拖拽div（简易版）\"></a>2.拖拽div（简易版）</h4><blockquote>\n<p>原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t\tbackground-<span class=\"attr\">color</span>: red;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> =<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> disX =<span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">var</span> disY =<span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\toDiv.<span class=\"property\">onmousedown</span> = <span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\tdisX = oEvent.<span class=\"property\">clientX</span>- oDiv.<span class=\"property\">offsetLeft</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\tdisY = oEvent.<span class=\"property\">clientY</span> - oDiv.<span class=\"property\">offsetTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span>-disX+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span>-disY+<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\toDiv.<span class=\"property\">onmouseup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">onmousemove</span> = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\toDiv.<span class=\"property\">onmouseup</span> = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>； <span class=\"comment\">//解决旧版火狐的bug</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>解决div拖动时，鼠标移出问题<blockquote>\n<p>原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = oEvent.<span class=\"property\">clientX</span>-disX+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = oEvent.<span class=\"property\">clientY</span>-disY+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n<li>解决div拖出可视区<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> l = oEvent.<span class=\"property\">clientX</span>-disX;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> t = oEvent.<span class=\"property\">clientY</span>-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (l&lt;<span class=\"number\">0</span>) &#123;  <span class=\"comment\">//限制div移出可视区</span></span><br><span class=\"line\">\t\t\t\t\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>- oDiv.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (t&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>- oDiv.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">left</span> = l+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = t+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/19/JS%E4%B9%8B%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA/\">  JS之默认行为  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"MVVM框架双向数据绑定的实现原理","date":"2018-03-05T16:00:00.000Z","_content":"\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525175920&di=0a8226ac6efda720e6da74d056b697a3&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg)\n\n# 前言\n> 目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？\n\n<!--more-->\n\n# 什么是MVVM？\n\nMVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。\n\n在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。\n\n回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。\n那么Model数据更改是如何被ViewModel检测到的呢？\n\n# 数据变更检测\n\n在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。\n\n那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。\n\n下面介绍四种方式： \n* 手动触发绑定\n* 脏检测机制\n* 数据对象劫持\n* Proxy\n\n# 数据变更检测四种方式\n\n## 手动触发绑定\n\n这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之手动触发绑定</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图\n        */\n        //相当于view，通过节点数组获取节点\n        let elems = [document.getElementById(\"el\"), document.getElementById(\"input\")];\n\n        //数据对像\n        let data = {\n            value: 'hello'\n        };\n\n        //定义directive：操作逻辑定义\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text;\n            },\n            value: function(value) {\n                // this.setAttribute('value', value); setAttribute一般用于设置自定义属性\n                this.value = value;\n            }\n        };\n\n        //数据绑定监听 view ==> model\n        if(document.addEventListener) {\n            elems[1].addEventListener('keyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }else {\n            elems[1].attachEvent('onkeyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }\n\n        //开始扫描\n        scan();\n        //model ==> view\n        setTimeout(function() {\n            ViewModelSet('value', 'hello AlexL');\n        }, 1000)\n\n        function scan() {\n            //扫描带指令的节点属性\n            for(let elem of elems) {\n                elem.directive = [];\n                for(let attr of elem.attributes) {\n                    if(attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n\n        function ViewModelSet(key, value) {\n            data[key] =value;\n            scan();\n        }\n\n\n    </script>\n</body>\n</html>\n```\n\n## 脏检测机制\n\n脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之脏数据检测</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" qg-event=\"value\" qg-bind=\"value\">\n    <div>\n        <span id=\"el\" qg-event=\"text\" qg-bind=\"value\"></span>\n    </div>\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    //初始化扫描节点\n    scan(elems);\n    // $digest('value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'nice job!';\n        $digest('value');\n    }, 5000)\n\n    function scan() {\n        for(let elem of elems) {\n            elem.directive = [];\n        }\n    }\n\n    //数据劫持监听，只扫描绑定了这个数据（value）的元素\n    function $digest(value) {\n        let list = document.querySelectorAll('[qg-bind=' + value + ']');\n        // console.log(list)\n        digest(list); \n    }\n\n    //脏数据循环检测\n    function digest(elems) {\n        //扫描带指令的节点属性\n        for(let i=0, len=elems.length; i<len; i++) {\n            let elem = elems[i];\n            for(let j=0, len=elem.attributes.length; j<len; j++) {\n                let attr = elem.attributes[j];\n                if(attr.nodeName.indexOf('qg-event') > -1) {\n                    //调用属性指令\n                    let datakey = elem.getAttribute('qg-bind') || undefined;\n                    //判断数据是否发生变化，是则执行指令重新渲染，否则跳过\n                    if(elem.directive[attr.nodeValue] !== data[datakey]) {\n                        directive[attr.nodeValue].call(elem, data[datakey]);\n                        elem.directive[attr.nodeValue] = data[datakey];\n                    }\n                }\n            }\n        }\n    }\n\n</script>\n</body>\n</html>\n```\n\n## 数据对象劫持\n\n基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之对象劫持</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    let bValue;\n    scan();\n\n    //数据劫持监听\n    defineGetAndSet(data, 'value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'hello 木木夕';\n    }, 2000);\n\n    function scan() {\n        //扫描带指令的节点属性\n        for(let elem of elems) {\n            elem.directive = [];\n            for(let attr of elem.attributes) {\n                if(attr.nodeName.indexOf('q-') > -1) {\n                    //调用属性指令\n                    directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                    elem.directive.push(attr.nodeName.slice(2));\n                }\n            }\n        }\n    }\n\n    //定义对象属性并设置劫持\n    function defineGetAndSet(obj, propName) {\n        Object.defineProperty(obj, propName, {\n            get: function() {\n                return bValue;\n            },\n            set: function(newValue) {\n                bValue = newValue;\n                scan();\n            },\n            enumerable: true,\n            configurable: true\n        })\n    }\n\n\n\n</script>\n</body>\n</html>\n```\n\n## ES6 Proxy\n\nES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更之proxy对象劫持</title>\n</head>\n\n<body>\n    <label>请输入<input type=\"text\" q-value=\"value\" id=\"input\"></label>\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； \n         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描\n         */\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (str) {\n                this.innerHTML = str;\n            },\n            value: function (str) {\n                this.setAttribute('value', str);\n            }\n        };\n\n        //设置data的访问proxy\n        let data = new Proxy({\n            value: 'my name is AlexL'\n        }, {\n                get: function (target, key, receiver) {\n                    return target.value; //data对象中的value属性\n                },\n                set: function (target, key, value, receiver) {\n                    target.value = value;\n                    scan();\n                    return target.value;\n                }\n            });\n\n        // 初始化\n        // data['value'] = 'my name is laotuzhu';\n        scan();\n\n        //数据绑定监听\n        if (document.addEventListener) {\n            elems[1].addEventListener('keyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        } else {\n            elems[1].attachEvent('onkeyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        }\n\n        setTimeout(function () {\n            data.value = 'hello 木木夕';\n        }, 2000);\n\n        function scan() {\n            //扫描带指令的节点属性\n            for (let elem of elems) {\n                elem.directive = [];\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n\n</html>\n```\n\n# 结语\n> 实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。    \n> 但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV\\*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV\\*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。","source":"_posts/MVVM框架双向数据绑定的实现原理.md","raw":"---\ntitle: MVVM框架双向数据绑定的实现原理\ndate: 2018-03-06\ntags: [MVVM]\ncategories: [前端框架]\n---\n\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525175920&di=0a8226ac6efda720e6da74d056b697a3&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg)\n\n# 前言\n> 目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？\n\n<!--more-->\n\n# 什么是MVVM？\n\nMVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。\n\n在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。\n\n回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。\n那么Model数据更改是如何被ViewModel检测到的呢？\n\n# 数据变更检测\n\n在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。\n\n那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。\n\n下面介绍四种方式： \n* 手动触发绑定\n* 脏检测机制\n* 数据对象劫持\n* Proxy\n\n# 数据变更检测四种方式\n\n## 手动触发绑定\n\n这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之手动触发绑定</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图\n        */\n        //相当于view，通过节点数组获取节点\n        let elems = [document.getElementById(\"el\"), document.getElementById(\"input\")];\n\n        //数据对像\n        let data = {\n            value: 'hello'\n        };\n\n        //定义directive：操作逻辑定义\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text;\n            },\n            value: function(value) {\n                // this.setAttribute('value', value); setAttribute一般用于设置自定义属性\n                this.value = value;\n            }\n        };\n\n        //数据绑定监听 view ==> model\n        if(document.addEventListener) {\n            elems[1].addEventListener('keyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }else {\n            elems[1].attachEvent('onkeyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }\n\n        //开始扫描\n        scan();\n        //model ==> view\n        setTimeout(function() {\n            ViewModelSet('value', 'hello AlexL');\n        }, 1000)\n\n        function scan() {\n            //扫描带指令的节点属性\n            for(let elem of elems) {\n                elem.directive = [];\n                for(let attr of elem.attributes) {\n                    if(attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n\n        function ViewModelSet(key, value) {\n            data[key] =value;\n            scan();\n        }\n\n\n    </script>\n</body>\n</html>\n```\n\n## 脏检测机制\n\n脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之脏数据检测</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" qg-event=\"value\" qg-bind=\"value\">\n    <div>\n        <span id=\"el\" qg-event=\"text\" qg-bind=\"value\"></span>\n    </div>\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    //初始化扫描节点\n    scan(elems);\n    // $digest('value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'nice job!';\n        $digest('value');\n    }, 5000)\n\n    function scan() {\n        for(let elem of elems) {\n            elem.directive = [];\n        }\n    }\n\n    //数据劫持监听，只扫描绑定了这个数据（value）的元素\n    function $digest(value) {\n        let list = document.querySelectorAll('[qg-bind=' + value + ']');\n        // console.log(list)\n        digest(list); \n    }\n\n    //脏数据循环检测\n    function digest(elems) {\n        //扫描带指令的节点属性\n        for(let i=0, len=elems.length; i<len; i++) {\n            let elem = elems[i];\n            for(let j=0, len=elem.attributes.length; j<len; j++) {\n                let attr = elem.attributes[j];\n                if(attr.nodeName.indexOf('qg-event') > -1) {\n                    //调用属性指令\n                    let datakey = elem.getAttribute('qg-bind') || undefined;\n                    //判断数据是否发生变化，是则执行指令重新渲染，否则跳过\n                    if(elem.directive[attr.nodeValue] !== data[datakey]) {\n                        directive[attr.nodeValue].call(elem, data[datakey]);\n                        elem.directive[attr.nodeValue] = data[datakey];\n                    }\n                }\n            }\n        }\n    }\n\n</script>\n</body>\n</html>\n```\n\n## 数据对象劫持\n\n基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之对象劫持</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    let bValue;\n    scan();\n\n    //数据劫持监听\n    defineGetAndSet(data, 'value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'hello 木木夕';\n    }, 2000);\n\n    function scan() {\n        //扫描带指令的节点属性\n        for(let elem of elems) {\n            elem.directive = [];\n            for(let attr of elem.attributes) {\n                if(attr.nodeName.indexOf('q-') > -1) {\n                    //调用属性指令\n                    directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                    elem.directive.push(attr.nodeName.slice(2));\n                }\n            }\n        }\n    }\n\n    //定义对象属性并设置劫持\n    function defineGetAndSet(obj, propName) {\n        Object.defineProperty(obj, propName, {\n            get: function() {\n                return bValue;\n            },\n            set: function(newValue) {\n                bValue = newValue;\n                scan();\n            },\n            enumerable: true,\n            configurable: true\n        })\n    }\n\n\n\n</script>\n</body>\n</html>\n```\n\n## ES6 Proxy\n\nES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更之proxy对象劫持</title>\n</head>\n\n<body>\n    <label>请输入<input type=\"text\" q-value=\"value\" id=\"input\"></label>\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； \n         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描\n         */\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (str) {\n                this.innerHTML = str;\n            },\n            value: function (str) {\n                this.setAttribute('value', str);\n            }\n        };\n\n        //设置data的访问proxy\n        let data = new Proxy({\n            value: 'my name is AlexL'\n        }, {\n                get: function (target, key, receiver) {\n                    return target.value; //data对象中的value属性\n                },\n                set: function (target, key, value, receiver) {\n                    target.value = value;\n                    scan();\n                    return target.value;\n                }\n            });\n\n        // 初始化\n        // data['value'] = 'my name is laotuzhu';\n        scan();\n\n        //数据绑定监听\n        if (document.addEventListener) {\n            elems[1].addEventListener('keyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        } else {\n            elems[1].attachEvent('onkeyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        }\n\n        setTimeout(function () {\n            data.value = 'hello 木木夕';\n        }, 2000);\n\n        function scan() {\n            //扫描带指令的节点属性\n            for (let elem of elems) {\n                elem.directive = [];\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n\n</html>\n```\n\n# 结语\n> 实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。    \n> 但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV\\*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV\\*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。","slug":"MVVM框架双向数据绑定的实现原理","published":1,"updated":"2022-12-06T15:30:37.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv40000mmcq09bto3ux9","content":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525175920&amp;di=0a8226ac6efda720e6da74d056b697a3&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"什么是MVVM？\"><a href=\"#什么是MVVM？\" class=\"headerlink\" title=\"什么是MVVM？\"></a>什么是MVVM？</h1><p>MVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。</p>\n<p>在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。</p>\n<p>回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。<br>那么Model数据更改是如何被ViewModel检测到的呢？</p>\n<h1 id=\"数据变更检测\"><a href=\"#数据变更检测\" class=\"headerlink\" title=\"数据变更检测\"></a>数据变更检测</h1><p>在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。</p>\n<p>那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。</p>\n<p>下面介绍四种方式： </p>\n<ul>\n<li>手动触发绑定</li>\n<li>脏检测机制</li>\n<li>数据对象劫持</li>\n<li>Proxy</li>\n</ul>\n<h1 id=\"数据变更检测四种方式\"><a href=\"#数据变更检测四种方式\" class=\"headerlink\" title=\"数据变更检测四种方式\"></a>数据变更检测四种方式</h1><h2 id=\"手动触发绑定\"><a href=\"#手动触发绑定\" class=\"headerlink\" title=\"手动触发绑定\"></a>手动触发绑定</h2><p>这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之手动触发绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">q-value</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">        */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//相当于view，通过节点数组获取节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;el&quot;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//数据对像</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"string\">&#x27;hello&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//定义directive：操作逻辑定义</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">text</span>: <span class=\"keyword\">function</span> (<span class=\"params\">text</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = text;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"keyword\">function</span>(<span class=\"params\">value</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// this.setAttribute(&#x27;value&#x27;, value); setAttribute一般用于设置自定义属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">value</span> = value;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//数据绑定监听 view ==&gt; model</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title class_\">ViewModelSet</span>(<span class=\"string\">&#x27;value&#x27;</span>, e.<span class=\"property\">target</span>.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title class_\">ViewModelSet</span>(<span class=\"string\">&#x27;value&#x27;</span>, e.<span class=\"property\">target</span>.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//开始扫描</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//model ==&gt; view</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title class_\">ViewModelSet</span>(<span class=\"string\">&#x27;value&#x27;</span>, <span class=\"string\">&#x27;hello AlexL&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">1000</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.<span class=\"property\">attributes</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;q-&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        directive[attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>)].<span class=\"title function_\">call</span>(elem, data[attr.<span class=\"property\">nodeValue</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        elem.<span class=\"property\">directive</span>.<span class=\"title function_\">push</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">ViewModelSet</span>(<span class=\"params\">key, value</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data[key] =value;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"脏检测机制\"><a href=\"#脏检测机制\" class=\"headerlink\" title=\"脏检测机制\"></a>脏检测机制</h2><p>脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之脏数据检测<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;el&#x27;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"string\">&#x27;hello&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">text</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = str;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;value&#x27;</span>, str);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//初始化扫描节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">scan</span>(elems);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// $digest(&#x27;value&#x27;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据绑定监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $digest(e.<span class=\"property\">target</span>.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;qg-bind&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $digest(e.<span class=\"property\">target</span>.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;qg-bind&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        data.<span class=\"property\">value</span> = <span class=\"string\">&#x27;nice job!&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        $digest(<span class=\"string\">&#x27;value&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;, <span class=\"number\">5000</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据劫持监听，只扫描绑定了这个数据（value）的元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">$digest</span>(<span class=\"params\">value</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> list = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;[qg-bind=&#x27;</span> + value + <span class=\"string\">&#x27;]&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// console.log(list)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">digest</span>(list); </span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//脏数据循环检测</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">digest</span>(<span class=\"params\">elems</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>, len=elems.<span class=\"property\">length</span>; i&lt;len; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> elem = elems[i];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>, len=elem.<span class=\"property\">attributes</span>.<span class=\"property\">length</span>; j&lt;len; j++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> attr = elem.<span class=\"property\">attributes</span>[j];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;qg-event&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">let</span> datakey = elem.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;qg-bind&#x27;</span>) || <span class=\"literal\">undefined</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//判断数据是否发生变化，是则执行指令重新渲染，否则跳过</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(elem.<span class=\"property\">directive</span>[attr.<span class=\"property\">nodeValue</span>] !== data[datakey]) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        directive[attr.<span class=\"property\">nodeValue</span>].<span class=\"title function_\">call</span>(elem, data[datakey]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        elem.<span class=\"property\">directive</span>[attr.<span class=\"property\">nodeValue</span>] = data[datakey];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数据对象劫持\"><a href=\"#数据对象劫持\" class=\"headerlink\" title=\"数据对象劫持\"></a>数据对象劫持</h2><p>基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">q-value</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;el&#x27;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"string\">&#x27;hello&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">text</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = str;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;value&#x27;</span>, str);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> bValue;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据劫持监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">defineGetAndSet</span>(data, <span class=\"string\">&#x27;value&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据绑定监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        data.<span class=\"property\">value</span> = <span class=\"string\">&#x27;hello 木木夕&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;, <span class=\"number\">2000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.<span class=\"property\">attributes</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;q-&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    directive[attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>)].<span class=\"title function_\">call</span>(elem, data[attr.<span class=\"property\">nodeValue</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    elem.<span class=\"property\">directive</span>.<span class=\"title function_\">push</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定义对象属性并设置劫持</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">defineGetAndSet</span>(<span class=\"params\">obj, propName</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(obj, propName, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">get</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span> bValue;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">set</span>: <span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                bValue = newValue;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">enumerable</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">configurable</span>: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-Proxy\"><a href=\"#ES6-Proxy\" class=\"headerlink\" title=\"ES6 Proxy\"></a>ES6 Proxy</h2><p>ES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更之proxy对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>请输入<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">q-value</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;el&#x27;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">text</span>: <span class=\"keyword\">function</span> (<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = str;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"keyword\">function</span> (<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;value&#x27;</span>, str);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//设置data的访问proxy</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"string\">&#x27;my name is AlexL&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">get</span>: <span class=\"keyword\">function</span> (<span class=\"params\">target, key, receiver</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">return</span> target.<span class=\"property\">value</span>; <span class=\"comment\">//data对象中的value属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">set</span>: <span class=\"keyword\">function</span> (<span class=\"params\">target, key, value, receiver</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    target.<span class=\"property\">value</span> = value;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">return</span> target.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 初始化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// data[&#x27;value&#x27;] = &#x27;my name is laotuzhu&#x27;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//数据绑定监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = <span class=\"string\">&#x27;hello 木木夕&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">2000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.<span class=\"property\">attributes</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;q-&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        directive[attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>)].<span class=\"title function_\">call</span>(elem, data[attr.<span class=\"property\">nodeValue</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        elem.<span class=\"property\">directive</span>.<span class=\"title function_\">push</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><blockquote>\n<p>实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。<br>但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525175920&amp;di=0a8226ac6efda720e6da74d056b697a3&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？</p>\n</blockquote>","more":"<h1 id=\"什么是MVVM？\"><a href=\"#什么是MVVM？\" class=\"headerlink\" title=\"什么是MVVM？\"></a>什么是MVVM？</h1><p>MVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。</p>\n<p>在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。</p>\n<p>回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。<br>那么Model数据更改是如何被ViewModel检测到的呢？</p>\n<h1 id=\"数据变更检测\"><a href=\"#数据变更检测\" class=\"headerlink\" title=\"数据变更检测\"></a>数据变更检测</h1><p>在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。</p>\n<p>那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。</p>\n<p>下面介绍四种方式： </p>\n<ul>\n<li>手动触发绑定</li>\n<li>脏检测机制</li>\n<li>数据对象劫持</li>\n<li>Proxy</li>\n</ul>\n<h1 id=\"数据变更检测四种方式\"><a href=\"#数据变更检测四种方式\" class=\"headerlink\" title=\"数据变更检测四种方式\"></a>数据变更检测四种方式</h1><h2 id=\"手动触发绑定\"><a href=\"#手动触发绑定\" class=\"headerlink\" title=\"手动触发绑定\"></a>手动触发绑定</h2><p>这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之手动触发绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">q-value</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">        */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//相当于view，通过节点数组获取节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;el&quot;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;input&quot;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//数据对像</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"string\">&#x27;hello&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//定义directive：操作逻辑定义</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">text</span>: <span class=\"keyword\">function</span> (<span class=\"params\">text</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = text;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"keyword\">function</span>(<span class=\"params\">value</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// this.setAttribute(&#x27;value&#x27;, value); setAttribute一般用于设置自定义属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">value</span> = value;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//数据绑定监听 view ==&gt; model</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title class_\">ViewModelSet</span>(<span class=\"string\">&#x27;value&#x27;</span>, e.<span class=\"property\">target</span>.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title class_\">ViewModelSet</span>(<span class=\"string\">&#x27;value&#x27;</span>, e.<span class=\"property\">target</span>.<span class=\"property\">value</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//开始扫描</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//model ==&gt; view</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title class_\">ViewModelSet</span>(<span class=\"string\">&#x27;value&#x27;</span>, <span class=\"string\">&#x27;hello AlexL&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">1000</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.<span class=\"property\">attributes</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;q-&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        directive[attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>)].<span class=\"title function_\">call</span>(elem, data[attr.<span class=\"property\">nodeValue</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        elem.<span class=\"property\">directive</span>.<span class=\"title function_\">push</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">ViewModelSet</span>(<span class=\"params\">key, value</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data[key] =value;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"脏检测机制\"><a href=\"#脏检测机制\" class=\"headerlink\" title=\"脏检测机制\"></a>脏检测机制</h2><p>脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之脏数据检测<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">&quot;value&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;el&#x27;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"string\">&#x27;hello&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">text</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = str;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;value&#x27;</span>, str);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//初始化扫描节点</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">scan</span>(elems);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// $digest(&#x27;value&#x27;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据绑定监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $digest(e.<span class=\"property\">target</span>.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;qg-bind&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            $digest(e.<span class=\"property\">target</span>.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;qg-bind&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        data.<span class=\"property\">value</span> = <span class=\"string\">&#x27;nice job!&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        $digest(<span class=\"string\">&#x27;value&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;, <span class=\"number\">5000</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据劫持监听，只扫描绑定了这个数据（value）的元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">$digest</span>(<span class=\"params\">value</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> list = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;[qg-bind=&#x27;</span> + value + <span class=\"string\">&#x27;]&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// console.log(list)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">digest</span>(list); </span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//脏数据循环检测</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">digest</span>(<span class=\"params\">elems</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>, len=elems.<span class=\"property\">length</span>; i&lt;len; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">let</span> elem = elems[i];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>, len=elem.<span class=\"property\">attributes</span>.<span class=\"property\">length</span>; j&lt;len; j++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">let</span> attr = elem.<span class=\"property\">attributes</span>[j];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;qg-event&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">let</span> datakey = elem.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;qg-bind&#x27;</span>) || <span class=\"literal\">undefined</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//判断数据是否发生变化，是则执行指令重新渲染，否则跳过</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(elem.<span class=\"property\">directive</span>[attr.<span class=\"property\">nodeValue</span>] !== data[datakey]) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        directive[attr.<span class=\"property\">nodeValue</span>].<span class=\"title function_\">call</span>(elem, data[datakey]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        elem.<span class=\"property\">directive</span>[attr.<span class=\"property\">nodeValue</span>] = data[datakey];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数据对象劫持\"><a href=\"#数据对象劫持\" class=\"headerlink\" title=\"数据对象劫持\"></a>数据对象劫持</h2><p>基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">q-value</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;el&#x27;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> data = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"string\">&#x27;hello&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">text</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = str;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">value</span>: <span class=\"keyword\">function</span>(<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;value&#x27;</span>, str);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> bValue;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据劫持监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">defineGetAndSet</span>(data, <span class=\"string\">&#x27;value&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数据绑定监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;<span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        data.<span class=\"property\">value</span> = <span class=\"string\">&#x27;hello 木木夕&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;, <span class=\"number\">2000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.<span class=\"property\">attributes</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;q-&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    directive[attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>)].<span class=\"title function_\">call</span>(elem, data[attr.<span class=\"property\">nodeValue</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    elem.<span class=\"property\">directive</span>.<span class=\"title function_\">push</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定义对象属性并设置劫持</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">defineGetAndSet</span>(<span class=\"params\">obj, propName</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(obj, propName, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">get</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span> bValue;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">set</span>: <span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                bValue = newValue;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">enumerable</span>: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">configurable</span>: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-Proxy\"><a href=\"#ES6-Proxy\" class=\"headerlink\" title=\"ES6 Proxy\"></a>ES6 Proxy</h2><p>ES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更之proxy对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>请输入<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">q-value</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;input&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">&quot;value&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;el&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； </span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">         */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> elems = [<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;el&#x27;</span>), <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;input&#x27;</span>)];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> directive = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">text</span>: <span class=\"keyword\">function</span> (<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">innerHTML</span> = str;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"keyword\">function</span> (<span class=\"params\">str</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;value&#x27;</span>, str);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//设置data的访问proxy</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"attr\">value</span>: <span class=\"string\">&#x27;my name is AlexL&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">get</span>: <span class=\"keyword\">function</span> (<span class=\"params\">target, key, receiver</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">return</span> target.<span class=\"property\">value</span>; <span class=\"comment\">//data对象中的value属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">set</span>: <span class=\"keyword\">function</span> (<span class=\"params\">target, key, value, receiver</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    target.<span class=\"property\">value</span> = value;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">return</span> target.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// 初始化</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">// data[&#x27;value&#x27;] = &#x27;my name is laotuzhu&#x27;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">scan</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//数据绑定监听</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">addEventListener</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            elems[<span class=\"number\">1</span>].<span class=\"title function_\">attachEvent</span>(<span class=\"string\">&#x27;onkeyup&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                data.<span class=\"property\">value</span> = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            data.<span class=\"property\">value</span> = <span class=\"string\">&#x27;hello 木木夕&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;, <span class=\"number\">2000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">function</span> <span class=\"title function_\">scan</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//扫描带指令的节点属性</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                elem.<span class=\"property\">directive</span> = [];</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.<span class=\"property\">attributes</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span> (attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;q-&#x27;</span>) &gt; -<span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        <span class=\"comment\">//调用属性指令</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                        directive[attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>)].<span class=\"title function_\">call</span>(elem, data[attr.<span class=\"property\">nodeValue</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        elem.<span class=\"property\">directive</span>.<span class=\"title function_\">push</span>(attr.<span class=\"property\">nodeName</span>.<span class=\"title function_\">slice</span>(<span class=\"number\">2</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><blockquote>\n<p>实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。<br>但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。</p>\n</blockquote>"},{"title":"ParticleEffectForUGUI（UIParticle）","date":"2022-01-09T16:00:00.000Z","_content":"\n\n# ParticleEffectForUGUI（UIParticle）\n\n## 一、概述\n\nParticleEffectForUGUI插件，又名UIParticle，为UGUI渲染可遮罩、可排序的粒子特效，而且不需要额外摄像机、RT和Canvas。Unity 2018.2及以上版本支持。\n\n<!-- more -->\n\n官方对其的使用和与其他方案对比的优缺点已给出详细说明，了解请访问[ParticleEffectForUGUI](https://github.com/mob-sakai/ParticleEffectForUGUI \"ParticleEffectForUGUI\")。\n\n下面研究如何引入到项目中使用，Unity版本是2019.4.35f1，并且和项目现使用的RT粒子特效方案做性能对比。\n\n## 二、引入项目\n\n#### 1.导入package\n\n使用manifest.json添加依赖方式导入。\n\n```c#\n-- manifest.json\ndependencies:{\n  \"com.coffee.ui-particle\": \"[https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10](https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10)\",\n}\n```\n\n\\#3.3.10代表版本号。refresh一下就会导入package。\n\n#### 2.添加UIParticle组件\n\ngameObject右键-UI中可以添加UIParticle组件。\n\n![](ParticleEffectForUGUI（UIParticle）/image_2vkN8DyEOU.png)\n\n也可以将目前项目里的UI Effect Prefab转换成用UIParticle的方式，在其根节点上添加UIParticle组件即可。\n\n![](ParticleEffectForUGUI（UIParticle）/image_TKk-_imcnM.png)\n\n![](ParticleEffectForUGUI（UIParticle）/image_ckbsiwRhQu.png)\n\n两者效果一致，而且UIParticle方式的特效可以自由缩放大小。\n\n#### 3.编写工具类，在lua层加载UIParticle并显示\n\n```lua\n-- UIParticle.lua\nmodule(\"logic.common.ugui.UIParticle\", package.seeall)\n \nlocal UIParticle = class(\"UIParticle\")\n \nfunction UIParticle:ctor(container)\n    self._go = container.gameObject\n    self._loader = PrefabLoader.Get(self._go)\n    self._url = nil\n    self._goInst = nil\nend\n \nfunction UIParticle:load(url)\n    if GameUtils.isEmptyString(url) then\n        return\n    end\n    if url == self._url then\n        return\n    end\n    self._url = url\n    self._loader:load(url, self._onResLoaded, self)\nend\n \nfunction UIParticle:_onResLoaded(loader)\n    local goInst = loader and loader:getInst()\n    if goutil.isNil(goInst) then\n        return\n    end\n    goutil.addChildToParent(goInst, self._go)\n    self._goInst = goInst\n    self._comUIParticle = goInst:GetComponent(typeof(Coffee.UIExtensions.UIParticle))\n    if self._effectLoadedCallback then\n        if self._effectLoadedCallbackObj then\n            self._effectLoadedCallback(self._effectLoadedCallbackObj, goInst, res)\n        else\n            self._effectLoadedCallback(goInst, res)\n        end\n    end\n    --检查美术是否有挂载EffectPlayer的组件\n    local _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))\n    if _effectCSComp and not goutil.isNil(_effectCSComp) then\n        --参数默认以组件的，暂不支持外部设置参数\n        _effectCSComp:AddFinishListener(self._onEffectPlayFinish, self)\n        --加载好就立即执行play\n        _effectCSComp:Play()\n    end\nend\n \n--暂时没有全部播放完毕逻辑回调\nfunction UIParticle:_onEffectPlayFinish()\n    if goutil.isNil(self._go) then\n        return\n    end\n    if self._effectFinishCallback then\n        if self._effectFinishCallbackObj then\n            self._effectFinishCallback(self._effectFinishCallbackObj, self)\n        else\n            self._effectFinishCallback()\n        end\n    end\nend\n \nfunction UIParticle:clear()\n    if goutil.isNil(self._goInst) then\n        return\n    end\n    --检查美术是否有挂载EffectPlayer的组件\n    local _effectCSComp = self._goInst:GetComponent(typeof(Pjg.EffectPlayer))\n    if _effectCSComp and not goutil.isNil(_effectCSComp) then\n        _effectCSComp:Stop()\n        _effectCSComp:RemoveFinishListener()\n    end\nend\n \nfunction UIParticle:OnDestroy()\n    self:clear()\n    self._go = nil\n    self._loader = nil\n    self._url = nil\n    self._goInst = nil\n    self._effectLoadedCallback = nil\n    self._effectLoadedCallbackObj = nil\n    self._effectFinishCallback = nil\n    self._effectFinishCallbackObj = nil\nend\n \nfunction UIParticle:getGo()\n    return self._go\nend\n \nfunction UIParticle:setEffectLoadedCallback(callback, callbackObj)\n    self._effectLoadedCallback = callback\n    self._effectLoadedCallbackObj = callbackObj\nend\n \nfunction UIParticle:setEffectFinishCallback(callback, callbackObj)\n    self._effectFinishCallback = callback\n    self._effectFinishCallbackObj = callbackObj\nend\n \nfunction UIParticle:play()\n    if goutil.isNil(self._goInst) then\n        return\n    end\n    if self._goInst.activeSelf then\n        goutil.setActive(self._goInst, false)\n    end\n    goutil.setActive(self._goInst, true)\n    --检查美术是否有挂载EffectPlayer的组件\n    local _effectCSComp = self._goInst:GetComponent(typeof(Pjg.EffectPlayer))\n    if _effectCSComp and not goutil.isNil(_effectCSComp) then\n        _effectCSComp:Stop()\n        _effectCSComp:RemoveFinishListener()\n        --参数默认以组件的，暂不支持外部设置参数\n        _effectCSComp:AddFinishListener(self._onEffectPlayFinish, self)\n        _effectCSComp:Play()\n    end\nend\n \nfunction UIParticle:setScale(scale)\n    self._comUIParticle.scale = scale\nend\n \nfunction UIParticle:setPos(x, y, z)\n    GameUtils.setLocalPos(self._goInst, x, y, z or 0)\nend\n \nreturn UIParticle\n```\n\n功能包括加载uiParticle Prefab，改变大小和位置。\n\n测试能够正常显示：\n\n![](ParticleEffectForUGUI（UIParticle）/uiparticle_wQzXgIMX6n.gif)\n\n## 三、UIParticle实现原理\n\n![](ParticleEffectForUGUI（UIParticle）/image_tl8asSvA18.png)\n\n1.会先将粒子系统的共享材质传给CanvasRenderer\n\n2.在Canvas刷新前事件函数里，将粒子系统的网格经过烘焙后合并，将合并的烘焙网格传给CanvasRenderer.Mesh\n\n3.刷新材质属性时，从粒子系统材质上拿到材质属性数据，根据面板上设置好的动画材质属性类型，依次传给CanvasRenderer上的材质。\n\n4.相同材质的粒子会烘焙成网格并合并，UIParticle在烘焙前会对粒子排序，按材质实例ID、渲染队列、渲染顺序等排序，合并网格时将计算材质的hashCode，相等才能一起合并。\n\n![](ParticleEffectForUGUI（UIParticle）/image_Lq8cKHXJpH.png)\n\n## 四、性能对比\n\nUIParticle和RT特效方式进行性能对比\n\n#### 1.单个UI粒子特效对比\n\n![](ParticleEffectForUGUI（UIParticle）/image_dlKUVIURur.png)\n\n![](ParticleEffectForUGUI（UIParticle）/image_-AleO20bJE.png)\n\n左边UIParticle，右边RT。\n\n两者面数一样，UIParticle比RT方式少1个batches，其实差不多。\n\n对比内存：\n\n**1.1256\\*144RT与UIParticle内存占用对比：**\n\n![](ParticleEffectForUGUI（UIParticle）/image_CVmGras3MP.png)\n\n256\\*144的RT特效内存加载情况，rt不是很大，只是占432kb。\n\n![](ParticleEffectForUGUI（UIParticle）/image_S5b-ACEJZV.png)\n\nUIParticle内存特效加载后，scene memory只是上涨了0.2MB，而RT特效上涨0.6MB，RT特效占用较大；RT特效的Assets内存也大了0.2MB。\n\n1.2全屏1560\\*720RT和UIParticle内存占用对比：\n\n![](ParticleEffectForUGUI（UIParticle）/image_oZQEU2PqwI.png)\n\nRT特效加载前后内存对比，可以看出加载后scene memory中rt占的内存较大，一张全屏RT占了近13MB。\n\n![](ParticleEffectForUGUI（UIParticle）/image_0FbXJEVpBZ.png)\n\nUIParticle特效加载前后对比，加载后scene memory中没有rt，内存上升不多。\n\n对比两者可以看出，particleSystem占的内存都一样，而全屏RT所以占用的内存就更明显了。\n\n#### 2.多个相同UI粒子特效对比\n\n![](ParticleEffectForUGUI（UIParticle）/image_2gDEMoHZdN.png)\n\n![](ParticleEffectForUGUI（UIParticle）/image_dd56kuGgSY.png)\n\n左边UIParticle，右边RT。\n\nUIParticle方式特效面数比RT多，batches数也比较多。相比下，RT方式更好。\n\n对比内存：\n\n![](ParticleEffectForUGUI（UIParticle）/image_tWZrP03QQ1.png)\n\n加载10个UIParticle特效，particleSystem数量增加30（正常），scene memory增加1.6MB，assets增加1.4MB，Other上涨0.02GB。\n\n![](ParticleEffectForUGUI（UIParticle）/image_4Tro4aIdsT.png)\n\n加个10个同个粒子的RT特效，RT增加一个（共用同一个255\\*144大小RT），scene memory增加0.6MB，assets增加0.2MB，Other上涨0.01GB。\n\n明显多个相同粒子特效，内存方面，RT方式优于UIParticle方式。\n\n#### 总结\n\n1.  UI特效单独显示（比如全屏特效等）的情况，选择UIParticle方式。\n\n2.  UI特效多个相同显示，选择RT方式。\n","source":"_posts/ParticleEffectForUGUI（UIParticle）.md","raw":"---\ntitle: ParticleEffectForUGUI（UIParticle）\ndate: 2022-01-10\ntags: [UIParticle,特效]\ncategories: [Unity游戏开发,Unity,特效]\n---\n\n\n# ParticleEffectForUGUI（UIParticle）\n\n## 一、概述\n\nParticleEffectForUGUI插件，又名UIParticle，为UGUI渲染可遮罩、可排序的粒子特效，而且不需要额外摄像机、RT和Canvas。Unity 2018.2及以上版本支持。\n\n<!-- more -->\n\n官方对其的使用和与其他方案对比的优缺点已给出详细说明，了解请访问[ParticleEffectForUGUI](https://github.com/mob-sakai/ParticleEffectForUGUI \"ParticleEffectForUGUI\")。\n\n下面研究如何引入到项目中使用，Unity版本是2019.4.35f1，并且和项目现使用的RT粒子特效方案做性能对比。\n\n## 二、引入项目\n\n#### 1.导入package\n\n使用manifest.json添加依赖方式导入。\n\n```c#\n-- manifest.json\ndependencies:{\n  \"com.coffee.ui-particle\": \"[https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10](https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10)\",\n}\n```\n\n\\#3.3.10代表版本号。refresh一下就会导入package。\n\n#### 2.添加UIParticle组件\n\ngameObject右键-UI中可以添加UIParticle组件。\n\n![](ParticleEffectForUGUI（UIParticle）/image_2vkN8DyEOU.png)\n\n也可以将目前项目里的UI Effect Prefab转换成用UIParticle的方式，在其根节点上添加UIParticle组件即可。\n\n![](ParticleEffectForUGUI（UIParticle）/image_TKk-_imcnM.png)\n\n![](ParticleEffectForUGUI（UIParticle）/image_ckbsiwRhQu.png)\n\n两者效果一致，而且UIParticle方式的特效可以自由缩放大小。\n\n#### 3.编写工具类，在lua层加载UIParticle并显示\n\n```lua\n-- UIParticle.lua\nmodule(\"logic.common.ugui.UIParticle\", package.seeall)\n \nlocal UIParticle = class(\"UIParticle\")\n \nfunction UIParticle:ctor(container)\n    self._go = container.gameObject\n    self._loader = PrefabLoader.Get(self._go)\n    self._url = nil\n    self._goInst = nil\nend\n \nfunction UIParticle:load(url)\n    if GameUtils.isEmptyString(url) then\n        return\n    end\n    if url == self._url then\n        return\n    end\n    self._url = url\n    self._loader:load(url, self._onResLoaded, self)\nend\n \nfunction UIParticle:_onResLoaded(loader)\n    local goInst = loader and loader:getInst()\n    if goutil.isNil(goInst) then\n        return\n    end\n    goutil.addChildToParent(goInst, self._go)\n    self._goInst = goInst\n    self._comUIParticle = goInst:GetComponent(typeof(Coffee.UIExtensions.UIParticle))\n    if self._effectLoadedCallback then\n        if self._effectLoadedCallbackObj then\n            self._effectLoadedCallback(self._effectLoadedCallbackObj, goInst, res)\n        else\n            self._effectLoadedCallback(goInst, res)\n        end\n    end\n    --检查美术是否有挂载EffectPlayer的组件\n    local _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))\n    if _effectCSComp and not goutil.isNil(_effectCSComp) then\n        --参数默认以组件的，暂不支持外部设置参数\n        _effectCSComp:AddFinishListener(self._onEffectPlayFinish, self)\n        --加载好就立即执行play\n        _effectCSComp:Play()\n    end\nend\n \n--暂时没有全部播放完毕逻辑回调\nfunction UIParticle:_onEffectPlayFinish()\n    if goutil.isNil(self._go) then\n        return\n    end\n    if self._effectFinishCallback then\n        if self._effectFinishCallbackObj then\n            self._effectFinishCallback(self._effectFinishCallbackObj, self)\n        else\n            self._effectFinishCallback()\n        end\n    end\nend\n \nfunction UIParticle:clear()\n    if goutil.isNil(self._goInst) then\n        return\n    end\n    --检查美术是否有挂载EffectPlayer的组件\n    local _effectCSComp = self._goInst:GetComponent(typeof(Pjg.EffectPlayer))\n    if _effectCSComp and not goutil.isNil(_effectCSComp) then\n        _effectCSComp:Stop()\n        _effectCSComp:RemoveFinishListener()\n    end\nend\n \nfunction UIParticle:OnDestroy()\n    self:clear()\n    self._go = nil\n    self._loader = nil\n    self._url = nil\n    self._goInst = nil\n    self._effectLoadedCallback = nil\n    self._effectLoadedCallbackObj = nil\n    self._effectFinishCallback = nil\n    self._effectFinishCallbackObj = nil\nend\n \nfunction UIParticle:getGo()\n    return self._go\nend\n \nfunction UIParticle:setEffectLoadedCallback(callback, callbackObj)\n    self._effectLoadedCallback = callback\n    self._effectLoadedCallbackObj = callbackObj\nend\n \nfunction UIParticle:setEffectFinishCallback(callback, callbackObj)\n    self._effectFinishCallback = callback\n    self._effectFinishCallbackObj = callbackObj\nend\n \nfunction UIParticle:play()\n    if goutil.isNil(self._goInst) then\n        return\n    end\n    if self._goInst.activeSelf then\n        goutil.setActive(self._goInst, false)\n    end\n    goutil.setActive(self._goInst, true)\n    --检查美术是否有挂载EffectPlayer的组件\n    local _effectCSComp = self._goInst:GetComponent(typeof(Pjg.EffectPlayer))\n    if _effectCSComp and not goutil.isNil(_effectCSComp) then\n        _effectCSComp:Stop()\n        _effectCSComp:RemoveFinishListener()\n        --参数默认以组件的，暂不支持外部设置参数\n        _effectCSComp:AddFinishListener(self._onEffectPlayFinish, self)\n        _effectCSComp:Play()\n    end\nend\n \nfunction UIParticle:setScale(scale)\n    self._comUIParticle.scale = scale\nend\n \nfunction UIParticle:setPos(x, y, z)\n    GameUtils.setLocalPos(self._goInst, x, y, z or 0)\nend\n \nreturn UIParticle\n```\n\n功能包括加载uiParticle Prefab，改变大小和位置。\n\n测试能够正常显示：\n\n![](ParticleEffectForUGUI（UIParticle）/uiparticle_wQzXgIMX6n.gif)\n\n## 三、UIParticle实现原理\n\n![](ParticleEffectForUGUI（UIParticle）/image_tl8asSvA18.png)\n\n1.会先将粒子系统的共享材质传给CanvasRenderer\n\n2.在Canvas刷新前事件函数里，将粒子系统的网格经过烘焙后合并，将合并的烘焙网格传给CanvasRenderer.Mesh\n\n3.刷新材质属性时，从粒子系统材质上拿到材质属性数据，根据面板上设置好的动画材质属性类型，依次传给CanvasRenderer上的材质。\n\n4.相同材质的粒子会烘焙成网格并合并，UIParticle在烘焙前会对粒子排序，按材质实例ID、渲染队列、渲染顺序等排序，合并网格时将计算材质的hashCode，相等才能一起合并。\n\n![](ParticleEffectForUGUI（UIParticle）/image_Lq8cKHXJpH.png)\n\n## 四、性能对比\n\nUIParticle和RT特效方式进行性能对比\n\n#### 1.单个UI粒子特效对比\n\n![](ParticleEffectForUGUI（UIParticle）/image_dlKUVIURur.png)\n\n![](ParticleEffectForUGUI（UIParticle）/image_-AleO20bJE.png)\n\n左边UIParticle，右边RT。\n\n两者面数一样，UIParticle比RT方式少1个batches，其实差不多。\n\n对比内存：\n\n**1.1256\\*144RT与UIParticle内存占用对比：**\n\n![](ParticleEffectForUGUI（UIParticle）/image_CVmGras3MP.png)\n\n256\\*144的RT特效内存加载情况，rt不是很大，只是占432kb。\n\n![](ParticleEffectForUGUI（UIParticle）/image_S5b-ACEJZV.png)\n\nUIParticle内存特效加载后，scene memory只是上涨了0.2MB，而RT特效上涨0.6MB，RT特效占用较大；RT特效的Assets内存也大了0.2MB。\n\n1.2全屏1560\\*720RT和UIParticle内存占用对比：\n\n![](ParticleEffectForUGUI（UIParticle）/image_oZQEU2PqwI.png)\n\nRT特效加载前后内存对比，可以看出加载后scene memory中rt占的内存较大，一张全屏RT占了近13MB。\n\n![](ParticleEffectForUGUI（UIParticle）/image_0FbXJEVpBZ.png)\n\nUIParticle特效加载前后对比，加载后scene memory中没有rt，内存上升不多。\n\n对比两者可以看出，particleSystem占的内存都一样，而全屏RT所以占用的内存就更明显了。\n\n#### 2.多个相同UI粒子特效对比\n\n![](ParticleEffectForUGUI（UIParticle）/image_2gDEMoHZdN.png)\n\n![](ParticleEffectForUGUI（UIParticle）/image_dd56kuGgSY.png)\n\n左边UIParticle，右边RT。\n\nUIParticle方式特效面数比RT多，batches数也比较多。相比下，RT方式更好。\n\n对比内存：\n\n![](ParticleEffectForUGUI（UIParticle）/image_tWZrP03QQ1.png)\n\n加载10个UIParticle特效，particleSystem数量增加30（正常），scene memory增加1.6MB，assets增加1.4MB，Other上涨0.02GB。\n\n![](ParticleEffectForUGUI（UIParticle）/image_4Tro4aIdsT.png)\n\n加个10个同个粒子的RT特效，RT增加一个（共用同一个255\\*144大小RT），scene memory增加0.6MB，assets增加0.2MB，Other上涨0.01GB。\n\n明显多个相同粒子特效，内存方面，RT方式优于UIParticle方式。\n\n#### 总结\n\n1.  UI特效单独显示（比如全屏特效等）的情况，选择UIParticle方式。\n\n2.  UI特效多个相同显示，选择RT方式。\n","slug":"ParticleEffectForUGUI（UIParticle）","published":1,"updated":"2022-12-17T13:52:23.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv40000omcq0bfr87dhj","content":"<h1 id=\"ParticleEffectForUGUI（UIParticle）\"><a href=\"#ParticleEffectForUGUI（UIParticle）\" class=\"headerlink\" title=\"ParticleEffectForUGUI（UIParticle）\"></a>ParticleEffectForUGUI（UIParticle）</h1><h2 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h2><p>ParticleEffectForUGUI插件，又名UIParticle，为UGUI渲染可遮罩、可排序的粒子特效，而且不需要额外摄像机、RT和Canvas。Unity 2018.2及以上版本支持。</p>\n<span id=\"more\"></span>\n<p>官方对其的使用和与其他方案对比的优缺点已给出详细说明，了解请访问<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI\" title=\"ParticleEffectForUGUI\">ParticleEffectForUGUI</a>。</p>\n<p>下面研究如何引入到项目中使用，Unity版本是2019.4.35f1，并且和项目现使用的RT粒子特效方案做性能对比。</p>\n<h2 id=\"二、引入项目\"><a href=\"#二、引入项目\" class=\"headerlink\" title=\"二、引入项目\"></a>二、引入项目</h2><h4 id=\"1-导入package\"><a href=\"#1-导入package\" class=\"headerlink\" title=\"1.导入package\"></a>1.导入package</h4><p>使用manifest.json添加依赖方式导入。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- manifest.json</span><br><span class=\"line\">dependencies:&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;com.coffee.ui-particle&quot;</span>: <span class=\"string\">&quot;[https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10](https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10)&quot;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#3.3.10代表版本号。refresh一下就会导入package。</p>\n<h4 id=\"2-添加UIParticle组件\"><a href=\"#2-添加UIParticle组件\" class=\"headerlink\" title=\"2.添加UIParticle组件\"></a>2.添加UIParticle组件</h4><p>gameObject右键-UI中可以添加UIParticle组件。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_2vkN8DyEOU.png\" class=\"\">\n<p>也可以将目前项目里的UI Effect Prefab转换成用UIParticle的方式，在其根节点上添加UIParticle组件即可。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_TKk-_imcnM.png\" class=\"\">\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_ckbsiwRhQu.png\" class=\"\">\n<p>两者效果一致，而且UIParticle方式的特效可以自由缩放大小。</p>\n<h4 id=\"3-编写工具类，在lua层加载UIParticle并显示\"><a href=\"#3-编写工具类，在lua层加载UIParticle并显示\" class=\"headerlink\" title=\"3.编写工具类，在lua层加载UIParticle并显示\"></a>3.编写工具类，在lua层加载UIParticle并显示</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- UIParticle.lua</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>(<span class=\"string\">&quot;logic.common.ugui.UIParticle&quot;</span>, <span class=\"built_in\">package</span>.<span class=\"built_in\">seeall</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">local</span> UIParticle = class(<span class=\"string\">&quot;UIParticle&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:ctor</span><span class=\"params\">(container)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._go = container.gameObject</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._loader = PrefabLoader.Get(<span class=\"built_in\">self</span>._go)</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._url = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._goInst = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:load</span><span class=\"params\">(url)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> GameUtils.isEmptyString(url) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> url == <span class=\"built_in\">self</span>._url <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._url = url</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._loader:<span class=\"built_in\">load</span>(url, <span class=\"built_in\">self</span>._onResLoaded, <span class=\"built_in\">self</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:_onResLoaded</span><span class=\"params\">(loader)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> goInst = loader <span class=\"keyword\">and</span> loader:getInst()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(goInst) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    goutil.addChildToParent(goInst, <span class=\"built_in\">self</span>._go)</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._goInst = goInst</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._comUIParticle = goInst:GetComponent(typeof(Coffee.UIExtensions.UIParticle))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectLoadedCallback <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectLoadedCallbackObj <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectLoadedCallback(<span class=\"built_in\">self</span>._effectLoadedCallbackObj, goInst, res)</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectLoadedCallback(goInst, res)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"comment\">--检查美术是否有挂载EffectPlayer的组件</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> _effectCSComp <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> goutil.isNil(_effectCSComp) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\">--参数默认以组件的，暂不支持外部设置参数</span></span><br><span class=\"line\">        _effectCSComp:AddFinishListener(<span class=\"built_in\">self</span>._onEffectPlayFinish, <span class=\"built_in\">self</span>)</span><br><span class=\"line\">        <span class=\"comment\">--加载好就立即执行play</span></span><br><span class=\"line\">        _effectCSComp:Play()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">--暂时没有全部播放完毕逻辑回调</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:_onEffectPlayFinish</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(<span class=\"built_in\">self</span>._go) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectFinishCallback <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectFinishCallbackObj <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectFinishCallback(<span class=\"built_in\">self</span>._effectFinishCallbackObj, <span class=\"built_in\">self</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectFinishCallback()</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:clear</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(<span class=\"built_in\">self</span>._goInst) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"comment\">--检查美术是否有挂载EffectPlayer的组件</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> _effectCSComp = <span class=\"built_in\">self</span>._goInst:GetComponent(typeof(Pjg.EffectPlayer))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> _effectCSComp <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> goutil.isNil(_effectCSComp) <span class=\"keyword\">then</span></span><br><span class=\"line\">        _effectCSComp:Stop()</span><br><span class=\"line\">        _effectCSComp:RemoveFinishListener()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:OnDestroy</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>:clear()</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._go = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._loader = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._url = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._goInst = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallback = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallbackObj = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallback = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallbackObj = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:getGo</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._go</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setEffectLoadedCallback</span><span class=\"params\">(callback, callbackObj)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallback = callback</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallbackObj = callbackObj</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setEffectFinishCallback</span><span class=\"params\">(callback, callbackObj)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallback = callback</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallbackObj = callbackObj</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:play</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(<span class=\"built_in\">self</span>._goInst) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._goInst.activeSelf <span class=\"keyword\">then</span></span><br><span class=\"line\">        goutil.setActive(<span class=\"built_in\">self</span>._goInst, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    goutil.setActive(<span class=\"built_in\">self</span>._goInst, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"comment\">--检查美术是否有挂载EffectPlayer的组件</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> _effectCSComp = <span class=\"built_in\">self</span>._goInst:GetComponent(typeof(Pjg.EffectPlayer))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> _effectCSComp <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> goutil.isNil(_effectCSComp) <span class=\"keyword\">then</span></span><br><span class=\"line\">        _effectCSComp:Stop()</span><br><span class=\"line\">        _effectCSComp:RemoveFinishListener()</span><br><span class=\"line\">        <span class=\"comment\">--参数默认以组件的，暂不支持外部设置参数</span></span><br><span class=\"line\">        _effectCSComp:AddFinishListener(<span class=\"built_in\">self</span>._onEffectPlayFinish, <span class=\"built_in\">self</span>)</span><br><span class=\"line\">        _effectCSComp:Play()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setScale</span><span class=\"params\">(scale)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._comUIParticle.scale = scale</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setPos</span><span class=\"params\">(x, y, z)</span></span></span><br><span class=\"line\">    GameUtils.setLocalPos(<span class=\"built_in\">self</span>._goInst, x, y, z <span class=\"keyword\">or</span> <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">return</span> UIParticle</span><br></pre></td></tr></table></figure>\n<p>功能包括加载uiParticle Prefab，改变大小和位置。</p>\n<p>测试能够正常显示：</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/uiparticle_wQzXgIMX6n.gif\" class=\"\">\n<h2 id=\"三、UIParticle实现原理\"><a href=\"#三、UIParticle实现原理\" class=\"headerlink\" title=\"三、UIParticle实现原理\"></a>三、UIParticle实现原理</h2><img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_tl8asSvA18.png\" class=\"\">\n<p>1.会先将粒子系统的共享材质传给CanvasRenderer</p>\n<p>2.在Canvas刷新前事件函数里，将粒子系统的网格经过烘焙后合并，将合并的烘焙网格传给CanvasRenderer.Mesh</p>\n<p>3.刷新材质属性时，从粒子系统材质上拿到材质属性数据，根据面板上设置好的动画材质属性类型，依次传给CanvasRenderer上的材质。</p>\n<p>4.相同材质的粒子会烘焙成网格并合并，UIParticle在烘焙前会对粒子排序，按材质实例ID、渲染队列、渲染顺序等排序，合并网格时将计算材质的hashCode，相等才能一起合并。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_Lq8cKHXJpH.png\" class=\"\">\n<h2 id=\"四、性能对比\"><a href=\"#四、性能对比\" class=\"headerlink\" title=\"四、性能对比\"></a>四、性能对比</h2><p>UIParticle和RT特效方式进行性能对比</p>\n<h4 id=\"1-单个UI粒子特效对比\"><a href=\"#1-单个UI粒子特效对比\" class=\"headerlink\" title=\"1.单个UI粒子特效对比\"></a>1.单个UI粒子特效对比</h4><img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_dlKUVIURur.png\" class=\"\">\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_-AleO20bJE.png\" class=\"\">\n<p>左边UIParticle，右边RT。</p>\n<p>两者面数一样，UIParticle比RT方式少1个batches，其实差不多。</p>\n<p>对比内存：</p>\n<p><strong>1.1256*144RT与UIParticle内存占用对比：</strong></p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_CVmGras3MP.png\" class=\"\">\n<p>256*144的RT特效内存加载情况，rt不是很大，只是占432kb。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_S5b-ACEJZV.png\" class=\"\">\n<p>UIParticle内存特效加载后，scene memory只是上涨了0.2MB，而RT特效上涨0.6MB，RT特效占用较大；RT特效的Assets内存也大了0.2MB。</p>\n<p>1.2全屏1560*720RT和UIParticle内存占用对比：</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_oZQEU2PqwI.png\" class=\"\">\n<p>RT特效加载前后内存对比，可以看出加载后scene memory中rt占的内存较大，一张全屏RT占了近13MB。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_0FbXJEVpBZ.png\" class=\"\">\n<p>UIParticle特效加载前后对比，加载后scene memory中没有rt，内存上升不多。</p>\n<p>对比两者可以看出，particleSystem占的内存都一样，而全屏RT所以占用的内存就更明显了。</p>\n<h4 id=\"2-多个相同UI粒子特效对比\"><a href=\"#2-多个相同UI粒子特效对比\" class=\"headerlink\" title=\"2.多个相同UI粒子特效对比\"></a>2.多个相同UI粒子特效对比</h4><img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_2gDEMoHZdN.png\" class=\"\">\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_dd56kuGgSY.png\" class=\"\">\n<p>左边UIParticle，右边RT。</p>\n<p>UIParticle方式特效面数比RT多，batches数也比较多。相比下，RT方式更好。</p>\n<p>对比内存：</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_tWZrP03QQ1.png\" class=\"\">\n<p>加载10个UIParticle特效，particleSystem数量增加30（正常），scene memory增加1.6MB，assets增加1.4MB，Other上涨0.02GB。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_4Tro4aIdsT.png\" class=\"\">\n<p>加个10个同个粒子的RT特效，RT增加一个（共用同一个255*144大小RT），scene memory增加0.6MB，assets增加0.2MB，Other上涨0.01GB。</p>\n<p>明显多个相同粒子特效，内存方面，RT方式优于UIParticle方式。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li><p>UI特效单独显示（比如全屏特效等）的情况，选择UIParticle方式。</p>\n</li>\n<li><p>UI特效多个相同显示，选择RT方式。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"ParticleEffectForUGUI（UIParticle）\"><a href=\"#ParticleEffectForUGUI（UIParticle）\" class=\"headerlink\" title=\"ParticleEffectForUGUI（UIParticle）\"></a>ParticleEffectForUGUI（UIParticle）</h1><h2 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h2><p>ParticleEffectForUGUI插件，又名UIParticle，为UGUI渲染可遮罩、可排序的粒子特效，而且不需要额外摄像机、RT和Canvas。Unity 2018.2及以上版本支持。</p>","more":"<p>官方对其的使用和与其他方案对比的优缺点已给出详细说明，了解请访问<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI\" title=\"ParticleEffectForUGUI\">ParticleEffectForUGUI</a>。</p>\n<p>下面研究如何引入到项目中使用，Unity版本是2019.4.35f1，并且和项目现使用的RT粒子特效方案做性能对比。</p>\n<h2 id=\"二、引入项目\"><a href=\"#二、引入项目\" class=\"headerlink\" title=\"二、引入项目\"></a>二、引入项目</h2><h4 id=\"1-导入package\"><a href=\"#1-导入package\" class=\"headerlink\" title=\"1.导入package\"></a>1.导入package</h4><p>使用manifest.json添加依赖方式导入。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- manifest.json</span><br><span class=\"line\">dependencies:&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;com.coffee.ui-particle&quot;</span>: <span class=\"string\">&quot;[https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10](https://github.com/mob-sakai/ParticleEffectForUGUI.git#3.3.10)&quot;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>#3.3.10代表版本号。refresh一下就会导入package。</p>\n<h4 id=\"2-添加UIParticle组件\"><a href=\"#2-添加UIParticle组件\" class=\"headerlink\" title=\"2.添加UIParticle组件\"></a>2.添加UIParticle组件</h4><p>gameObject右键-UI中可以添加UIParticle组件。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_2vkN8DyEOU.png\" class=\"\">\n<p>也可以将目前项目里的UI Effect Prefab转换成用UIParticle的方式，在其根节点上添加UIParticle组件即可。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_TKk-_imcnM.png\" class=\"\">\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_ckbsiwRhQu.png\" class=\"\">\n<p>两者效果一致，而且UIParticle方式的特效可以自由缩放大小。</p>\n<h4 id=\"3-编写工具类，在lua层加载UIParticle并显示\"><a href=\"#3-编写工具类，在lua层加载UIParticle并显示\" class=\"headerlink\" title=\"3.编写工具类，在lua层加载UIParticle并显示\"></a>3.编写工具类，在lua层加载UIParticle并显示</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- UIParticle.lua</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>(<span class=\"string\">&quot;logic.common.ugui.UIParticle&quot;</span>, <span class=\"built_in\">package</span>.<span class=\"built_in\">seeall</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">local</span> UIParticle = class(<span class=\"string\">&quot;UIParticle&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:ctor</span><span class=\"params\">(container)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._go = container.gameObject</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._loader = PrefabLoader.Get(<span class=\"built_in\">self</span>._go)</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._url = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._goInst = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:load</span><span class=\"params\">(url)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> GameUtils.isEmptyString(url) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> url == <span class=\"built_in\">self</span>._url <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._url = url</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._loader:<span class=\"built_in\">load</span>(url, <span class=\"built_in\">self</span>._onResLoaded, <span class=\"built_in\">self</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:_onResLoaded</span><span class=\"params\">(loader)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> goInst = loader <span class=\"keyword\">and</span> loader:getInst()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(goInst) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    goutil.addChildToParent(goInst, <span class=\"built_in\">self</span>._go)</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._goInst = goInst</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._comUIParticle = goInst:GetComponent(typeof(Coffee.UIExtensions.UIParticle))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectLoadedCallback <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectLoadedCallbackObj <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectLoadedCallback(<span class=\"built_in\">self</span>._effectLoadedCallbackObj, goInst, res)</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectLoadedCallback(goInst, res)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"comment\">--检查美术是否有挂载EffectPlayer的组件</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> _effectCSComp <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> goutil.isNil(_effectCSComp) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\">--参数默认以组件的，暂不支持外部设置参数</span></span><br><span class=\"line\">        _effectCSComp:AddFinishListener(<span class=\"built_in\">self</span>._onEffectPlayFinish, <span class=\"built_in\">self</span>)</span><br><span class=\"line\">        <span class=\"comment\">--加载好就立即执行play</span></span><br><span class=\"line\">        _effectCSComp:Play()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">--暂时没有全部播放完毕逻辑回调</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:_onEffectPlayFinish</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(<span class=\"built_in\">self</span>._go) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectFinishCallback <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._effectFinishCallbackObj <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectFinishCallback(<span class=\"built_in\">self</span>._effectFinishCallbackObj, <span class=\"built_in\">self</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._effectFinishCallback()</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:clear</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(<span class=\"built_in\">self</span>._goInst) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"comment\">--检查美术是否有挂载EffectPlayer的组件</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> _effectCSComp = <span class=\"built_in\">self</span>._goInst:GetComponent(typeof(Pjg.EffectPlayer))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> _effectCSComp <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> goutil.isNil(_effectCSComp) <span class=\"keyword\">then</span></span><br><span class=\"line\">        _effectCSComp:Stop()</span><br><span class=\"line\">        _effectCSComp:RemoveFinishListener()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:OnDestroy</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>:clear()</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._go = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._loader = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._url = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._goInst = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallback = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallbackObj = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallback = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallbackObj = <span class=\"literal\">nil</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:getGo</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._go</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setEffectLoadedCallback</span><span class=\"params\">(callback, callbackObj)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallback = callback</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectLoadedCallbackObj = callbackObj</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setEffectFinishCallback</span><span class=\"params\">(callback, callbackObj)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallback = callback</span><br><span class=\"line\">    <span class=\"built_in\">self</span>._effectFinishCallbackObj = callbackObj</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:play</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> goutil.isNil(<span class=\"built_in\">self</span>._goInst) <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._goInst.activeSelf <span class=\"keyword\">then</span></span><br><span class=\"line\">        goutil.setActive(<span class=\"built_in\">self</span>._goInst, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    goutil.setActive(<span class=\"built_in\">self</span>._goInst, <span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"comment\">--检查美术是否有挂载EffectPlayer的组件</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> _effectCSComp = <span class=\"built_in\">self</span>._goInst:GetComponent(typeof(Pjg.EffectPlayer))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> _effectCSComp <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> goutil.isNil(_effectCSComp) <span class=\"keyword\">then</span></span><br><span class=\"line\">        _effectCSComp:Stop()</span><br><span class=\"line\">        _effectCSComp:RemoveFinishListener()</span><br><span class=\"line\">        <span class=\"comment\">--参数默认以组件的，暂不支持外部设置参数</span></span><br><span class=\"line\">        _effectCSComp:AddFinishListener(<span class=\"built_in\">self</span>._onEffectPlayFinish, <span class=\"built_in\">self</span>)</span><br><span class=\"line\">        _effectCSComp:Play()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setScale</span><span class=\"params\">(scale)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._comUIParticle.scale = scale</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">UIParticle:setPos</span><span class=\"params\">(x, y, z)</span></span></span><br><span class=\"line\">    GameUtils.setLocalPos(<span class=\"built_in\">self</span>._goInst, x, y, z <span class=\"keyword\">or</span> <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">return</span> UIParticle</span><br></pre></td></tr></table></figure>\n<p>功能包括加载uiParticle Prefab，改变大小和位置。</p>\n<p>测试能够正常显示：</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/uiparticle_wQzXgIMX6n.gif\" class=\"\">\n<h2 id=\"三、UIParticle实现原理\"><a href=\"#三、UIParticle实现原理\" class=\"headerlink\" title=\"三、UIParticle实现原理\"></a>三、UIParticle实现原理</h2><img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_tl8asSvA18.png\" class=\"\">\n<p>1.会先将粒子系统的共享材质传给CanvasRenderer</p>\n<p>2.在Canvas刷新前事件函数里，将粒子系统的网格经过烘焙后合并，将合并的烘焙网格传给CanvasRenderer.Mesh</p>\n<p>3.刷新材质属性时，从粒子系统材质上拿到材质属性数据，根据面板上设置好的动画材质属性类型，依次传给CanvasRenderer上的材质。</p>\n<p>4.相同材质的粒子会烘焙成网格并合并，UIParticle在烘焙前会对粒子排序，按材质实例ID、渲染队列、渲染顺序等排序，合并网格时将计算材质的hashCode，相等才能一起合并。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_Lq8cKHXJpH.png\" class=\"\">\n<h2 id=\"四、性能对比\"><a href=\"#四、性能对比\" class=\"headerlink\" title=\"四、性能对比\"></a>四、性能对比</h2><p>UIParticle和RT特效方式进行性能对比</p>\n<h4 id=\"1-单个UI粒子特效对比\"><a href=\"#1-单个UI粒子特效对比\" class=\"headerlink\" title=\"1.单个UI粒子特效对比\"></a>1.单个UI粒子特效对比</h4><img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_dlKUVIURur.png\" class=\"\">\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_-AleO20bJE.png\" class=\"\">\n<p>左边UIParticle，右边RT。</p>\n<p>两者面数一样，UIParticle比RT方式少1个batches，其实差不多。</p>\n<p>对比内存：</p>\n<p><strong>1.1256*144RT与UIParticle内存占用对比：</strong></p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_CVmGras3MP.png\" class=\"\">\n<p>256*144的RT特效内存加载情况，rt不是很大，只是占432kb。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_S5b-ACEJZV.png\" class=\"\">\n<p>UIParticle内存特效加载后，scene memory只是上涨了0.2MB，而RT特效上涨0.6MB，RT特效占用较大；RT特效的Assets内存也大了0.2MB。</p>\n<p>1.2全屏1560*720RT和UIParticle内存占用对比：</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_oZQEU2PqwI.png\" class=\"\">\n<p>RT特效加载前后内存对比，可以看出加载后scene memory中rt占的内存较大，一张全屏RT占了近13MB。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_0FbXJEVpBZ.png\" class=\"\">\n<p>UIParticle特效加载前后对比，加载后scene memory中没有rt，内存上升不多。</p>\n<p>对比两者可以看出，particleSystem占的内存都一样，而全屏RT所以占用的内存就更明显了。</p>\n<h4 id=\"2-多个相同UI粒子特效对比\"><a href=\"#2-多个相同UI粒子特效对比\" class=\"headerlink\" title=\"2.多个相同UI粒子特效对比\"></a>2.多个相同UI粒子特效对比</h4><img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_2gDEMoHZdN.png\" class=\"\">\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_dd56kuGgSY.png\" class=\"\">\n<p>左边UIParticle，右边RT。</p>\n<p>UIParticle方式特效面数比RT多，batches数也比较多。相比下，RT方式更好。</p>\n<p>对比内存：</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_tWZrP03QQ1.png\" class=\"\">\n<p>加载10个UIParticle特效，particleSystem数量增加30（正常），scene memory增加1.6MB，assets增加1.4MB，Other上涨0.02GB。</p>\n<img src=\"/2022/01/10/ParticleEffectForUGUI%EF%BC%88UIParticle%EF%BC%89/image_4Tro4aIdsT.png\" class=\"\">\n<p>加个10个同个粒子的RT特效，RT增加一个（共用同一个255*144大小RT），scene memory增加0.6MB，assets增加0.2MB，Other上涨0.01GB。</p>\n<p>明显多个相同粒子特效，内存方面，RT方式优于UIParticle方式。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li><p>UI特效单独显示（比如全屏特效等）的情况，选择UIParticle方式。</p>\n</li>\n<li><p>UI特效多个相同显示，选择RT方式。</p>\n</li>\n</ol>"},{"title":"RenderTexture特效系统实现原理","date":"2021-01-19T16:00:00.000Z","_content":"\n<!-- more -->\n\n# RenderTexture特效系统实现原理\n## 一、RenderTexture阐述\n\n食物语中的显示的特效一般是使用RenderTexture结合摄像机拍摄3D物体实现的，实际上游戏中显示的是一张加载好的RT。\n\n什么是RT？为啥RT可以渲染一张动态的图片？\n\nRT是一种特殊的Texture，可以在运行时实现更新内容。网上有句话可以概括：将一个FBO链接到server-side的texture对象上。通俗一点就是将渲染结果应用到gpu上的texture对象上，而texture对象就是游戏中的一张贴图，渲染结果（FBO的数据）可以动态变化，那么贴图的内容也跟着动态变化。\n\nFBO全称：FrameBufferObject，gpu上的一块buffer区域，用来存储渲染结果。一般有个默认的FBO直接连接显示器窗口区域，其他的FBO存储渲染结果供需要时使用，正是这时候，RT作为一块渲染区域应用这些FBO。\n\nserver-side：cpu加载贴图资源到内存，叫做client-side；cpu将资源从内存拷贝到gpu中，叫做发送到server-side。\n\n为什么特效需要用RT应用到项目中，而不直接加载呢？\n\n关键的原因是项目中一般在UI上挂特效，特效资源的渲染层跟UI不属于同一个渲染层级，所以总是在UI资源之前或之后，没办法在两个UI资源之间，让特效显示在最上层的话，那么就会挡住比如断线重连这类层级优先级最高的UI。\n\n所以要利用RT渲染特效，作为一个UI资源加载进来。\n\n\n\n## 二、RT特效系统设计原理\n\n怎样实现RT特效？\n\n很简单就是创建一个RenderTexture对象，赋值给camera的targetTextrue属性，同时赋值给RawImage对象的texture属性。这就相当于camera将渲染结果（特效的表现）写入到了RenderTexture对象，RawImage对象作为一个显示窗口区域，连接到RenderTexture对象存储数据的FBO。\n\n着点于项目上，RT特效系统是如何设计的，这么设计的原因有是什么呢？先看以下系统关系图：\n\n![](RenderTexture特效系统实现原理/image.png \"\")\n\n图中清晰的表达了类之间数据流向，关键的就是传递RT和特效实例，各类发挥的作用：\n\n1. PhotoProducer负责创建RT、摄像机和特效实例的容器TargetContainer，相当于一块特效的渲染场景，而且这个渲染场景跟UI不是同一个渲染层，另外负责把RT传递给PhotoBase的RawImage组件上。\n2. PhotoProducerCache作为对象池，管理PhotoProducer的分配和回收。\n3. PhotoBase就是作为承载RT的容器，显示在UI上。\n4. PhotoMultiEffect负责通过url加载特效资源，并将特效资源实例传递到Pruducer中的TargetContainer容器。\n\n另外这些类通过turnOn和turnOff方法控制特效的显示和隐藏。\n\n- turnOn方法：将Effect Inst加到TargetContainer节点下，将RT跟Camera和RawImage连接起来。\n- TurnOff方法：将RawImage置为不可用enable为false，将Effect Inst移出TargetContainer，并且将ProducerContainer置为不可见，归还Producer到对象池以便供其他特效使用。\n\n还有一点，PhotoProducerCache的主要优化手段是将RT缓存起来，用RT的规格（宽高）作为索引来复用RT。项目中规定了RT的几种规则：\n\n```Lua\n--最大规格RT尺寸(不能再大了) 1560 * 720\nPhotoUtil.MaxRTWidth = 1560\nPhotoUtil.MaxRTHeight = 720\n--大规格RT尺寸 1280 * 720\nPhotoUtil.RTWidth = 1280\nPhotoUtil.RTHeight = 720\n--中等规格RT尺寸 512 * 288\nPhotoUtil.PartRTWidth = 512\nPhotoUtil.PartRTHeight = 288\n--小规格RT尺寸 256 * 144\nPhotoUtil.SmallRTWidth = 256\nPhotoUtil.SmallRTHeight = 144\n```\n\n\n这样做应该是为限制RT规则来方便复用吧，而且面对各种规则的RT特效复用可能会出现特效裁边这种问题。\n\n\n\nRT特效系统中还处理了一种情况：显示多个同一类特效。\n\n当然RT肯定是同一张，但是需要创建多个PhotoMultiEffect的实例，进而实例化多个特效资源实例，这样就浪费资源了，创建多个特效实例可以省去，我们需要的是多个RT的承载体，也就是多个挂有RawImage组件的GameObject。\n\n所以就有PhotoEffectFactory类，负责管理同一类特效的多处显示情况。\n\n![](RenderTexture特效系统实现原理/image_1.png \"\")\n\n\n\n","source":"_posts/RenderTexture特效系统实现原理.md","raw":"---\ntitle: RenderTexture特效系统实现原理\ndate: 2021-01-20\ntags: [特效,RT,RenderTexture]\ncategories: [Unity游戏开发,Unity,特效]\n---\n\n<!-- more -->\n\n# RenderTexture特效系统实现原理\n## 一、RenderTexture阐述\n\n食物语中的显示的特效一般是使用RenderTexture结合摄像机拍摄3D物体实现的，实际上游戏中显示的是一张加载好的RT。\n\n什么是RT？为啥RT可以渲染一张动态的图片？\n\nRT是一种特殊的Texture，可以在运行时实现更新内容。网上有句话可以概括：将一个FBO链接到server-side的texture对象上。通俗一点就是将渲染结果应用到gpu上的texture对象上，而texture对象就是游戏中的一张贴图，渲染结果（FBO的数据）可以动态变化，那么贴图的内容也跟着动态变化。\n\nFBO全称：FrameBufferObject，gpu上的一块buffer区域，用来存储渲染结果。一般有个默认的FBO直接连接显示器窗口区域，其他的FBO存储渲染结果供需要时使用，正是这时候，RT作为一块渲染区域应用这些FBO。\n\nserver-side：cpu加载贴图资源到内存，叫做client-side；cpu将资源从内存拷贝到gpu中，叫做发送到server-side。\n\n为什么特效需要用RT应用到项目中，而不直接加载呢？\n\n关键的原因是项目中一般在UI上挂特效，特效资源的渲染层跟UI不属于同一个渲染层级，所以总是在UI资源之前或之后，没办法在两个UI资源之间，让特效显示在最上层的话，那么就会挡住比如断线重连这类层级优先级最高的UI。\n\n所以要利用RT渲染特效，作为一个UI资源加载进来。\n\n\n\n## 二、RT特效系统设计原理\n\n怎样实现RT特效？\n\n很简单就是创建一个RenderTexture对象，赋值给camera的targetTextrue属性，同时赋值给RawImage对象的texture属性。这就相当于camera将渲染结果（特效的表现）写入到了RenderTexture对象，RawImage对象作为一个显示窗口区域，连接到RenderTexture对象存储数据的FBO。\n\n着点于项目上，RT特效系统是如何设计的，这么设计的原因有是什么呢？先看以下系统关系图：\n\n![](RenderTexture特效系统实现原理/image.png \"\")\n\n图中清晰的表达了类之间数据流向，关键的就是传递RT和特效实例，各类发挥的作用：\n\n1. PhotoProducer负责创建RT、摄像机和特效实例的容器TargetContainer，相当于一块特效的渲染场景，而且这个渲染场景跟UI不是同一个渲染层，另外负责把RT传递给PhotoBase的RawImage组件上。\n2. PhotoProducerCache作为对象池，管理PhotoProducer的分配和回收。\n3. PhotoBase就是作为承载RT的容器，显示在UI上。\n4. PhotoMultiEffect负责通过url加载特效资源，并将特效资源实例传递到Pruducer中的TargetContainer容器。\n\n另外这些类通过turnOn和turnOff方法控制特效的显示和隐藏。\n\n- turnOn方法：将Effect Inst加到TargetContainer节点下，将RT跟Camera和RawImage连接起来。\n- TurnOff方法：将RawImage置为不可用enable为false，将Effect Inst移出TargetContainer，并且将ProducerContainer置为不可见，归还Producer到对象池以便供其他特效使用。\n\n还有一点，PhotoProducerCache的主要优化手段是将RT缓存起来，用RT的规格（宽高）作为索引来复用RT。项目中规定了RT的几种规则：\n\n```Lua\n--最大规格RT尺寸(不能再大了) 1560 * 720\nPhotoUtil.MaxRTWidth = 1560\nPhotoUtil.MaxRTHeight = 720\n--大规格RT尺寸 1280 * 720\nPhotoUtil.RTWidth = 1280\nPhotoUtil.RTHeight = 720\n--中等规格RT尺寸 512 * 288\nPhotoUtil.PartRTWidth = 512\nPhotoUtil.PartRTHeight = 288\n--小规格RT尺寸 256 * 144\nPhotoUtil.SmallRTWidth = 256\nPhotoUtil.SmallRTHeight = 144\n```\n\n\n这样做应该是为限制RT规则来方便复用吧，而且面对各种规则的RT特效复用可能会出现特效裁边这种问题。\n\n\n\nRT特效系统中还处理了一种情况：显示多个同一类特效。\n\n当然RT肯定是同一张，但是需要创建多个PhotoMultiEffect的实例，进而实例化多个特效资源实例，这样就浪费资源了，创建多个特效实例可以省去，我们需要的是多个RT的承载体，也就是多个挂有RawImage组件的GameObject。\n\n所以就有PhotoEffectFactory类，负责管理同一类特效的多处显示情况。\n\n![](RenderTexture特效系统实现原理/image_1.png \"\")\n\n\n\n","slug":"RenderTexture特效系统实现原理","published":1,"updated":"2022-12-07T13:34:13.149Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv41000tmcq06i8kgmgw","content":"<span id=\"more\"></span>\n<h1 id=\"RenderTexture特效系统实现原理\"><a href=\"#RenderTexture特效系统实现原理\" class=\"headerlink\" title=\"RenderTexture特效系统实现原理\"></a>RenderTexture特效系统实现原理</h1><h2 id=\"一、RenderTexture阐述\"><a href=\"#一、RenderTexture阐述\" class=\"headerlink\" title=\"一、RenderTexture阐述\"></a>一、RenderTexture阐述</h2><p>食物语中的显示的特效一般是使用RenderTexture结合摄像机拍摄3D物体实现的，实际上游戏中显示的是一张加载好的RT。</p>\n<p>什么是RT？为啥RT可以渲染一张动态的图片？</p>\n<p>RT是一种特殊的Texture，可以在运行时实现更新内容。网上有句话可以概括：将一个FBO链接到server-side的texture对象上。通俗一点就是将渲染结果应用到gpu上的texture对象上，而texture对象就是游戏中的一张贴图，渲染结果（FBO的数据）可以动态变化，那么贴图的内容也跟着动态变化。</p>\n<p>FBO全称：FrameBufferObject，gpu上的一块buffer区域，用来存储渲染结果。一般有个默认的FBO直接连接显示器窗口区域，其他的FBO存储渲染结果供需要时使用，正是这时候，RT作为一块渲染区域应用这些FBO。</p>\n<p>server-side：cpu加载贴图资源到内存，叫做client-side；cpu将资源从内存拷贝到gpu中，叫做发送到server-side。</p>\n<p>为什么特效需要用RT应用到项目中，而不直接加载呢？</p>\n<p>关键的原因是项目中一般在UI上挂特效，特效资源的渲染层跟UI不属于同一个渲染层级，所以总是在UI资源之前或之后，没办法在两个UI资源之间，让特效显示在最上层的话，那么就会挡住比如断线重连这类层级优先级最高的UI。</p>\n<p>所以要利用RT渲染特效，作为一个UI资源加载进来。</p>\n<h2 id=\"二、RT特效系统设计原理\"><a href=\"#二、RT特效系统设计原理\" class=\"headerlink\" title=\"二、RT特效系统设计原理\"></a>二、RT特效系统设计原理</h2><p>怎样实现RT特效？</p>\n<p>很简单就是创建一个RenderTexture对象，赋值给camera的targetTextrue属性，同时赋值给RawImage对象的texture属性。这就相当于camera将渲染结果（特效的表现）写入到了RenderTexture对象，RawImage对象作为一个显示窗口区域，连接到RenderTexture对象存储数据的FBO。</p>\n<p>着点于项目上，RT特效系统是如何设计的，这么设计的原因有是什么呢？先看以下系统关系图：</p>\n<img src=\"/2021/01/20/RenderTexture%E7%89%B9%E6%95%88%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/image.png\" class=\"\">\n<p>图中清晰的表达了类之间数据流向，关键的就是传递RT和特效实例，各类发挥的作用：</p>\n<ol>\n<li>PhotoProducer负责创建RT、摄像机和特效实例的容器TargetContainer，相当于一块特效的渲染场景，而且这个渲染场景跟UI不是同一个渲染层，另外负责把RT传递给PhotoBase的RawImage组件上。</li>\n<li>PhotoProducerCache作为对象池，管理PhotoProducer的分配和回收。</li>\n<li>PhotoBase就是作为承载RT的容器，显示在UI上。</li>\n<li>PhotoMultiEffect负责通过url加载特效资源，并将特效资源实例传递到Pruducer中的TargetContainer容器。</li>\n</ol>\n<p>另外这些类通过turnOn和turnOff方法控制特效的显示和隐藏。</p>\n<ul>\n<li>turnOn方法：将Effect Inst加到TargetContainer节点下，将RT跟Camera和RawImage连接起来。</li>\n<li>TurnOff方法：将RawImage置为不可用enable为false，将Effect Inst移出TargetContainer，并且将ProducerContainer置为不可见，归还Producer到对象池以便供其他特效使用。</li>\n</ul>\n<p>还有一点，PhotoProducerCache的主要优化手段是将RT缓存起来，用RT的规格（宽高）作为索引来复用RT。项目中规定了RT的几种规则：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--最大规格RT尺寸(不能再大了) 1560 * 720</span></span><br><span class=\"line\">PhotoUtil.MaxRTWidth = <span class=\"number\">1560</span></span><br><span class=\"line\">PhotoUtil.MaxRTHeight = <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"comment\">--大规格RT尺寸 1280 * 720</span></span><br><span class=\"line\">PhotoUtil.RTWidth = <span class=\"number\">1280</span></span><br><span class=\"line\">PhotoUtil.RTHeight = <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"comment\">--中等规格RT尺寸 512 * 288</span></span><br><span class=\"line\">PhotoUtil.PartRTWidth = <span class=\"number\">512</span></span><br><span class=\"line\">PhotoUtil.PartRTHeight = <span class=\"number\">288</span></span><br><span class=\"line\"><span class=\"comment\">--小规格RT尺寸 256 * 144</span></span><br><span class=\"line\">PhotoUtil.SmallRTWidth = <span class=\"number\">256</span></span><br><span class=\"line\">PhotoUtil.SmallRTHeight = <span class=\"number\">144</span></span><br></pre></td></tr></table></figure>\n<p>这样做应该是为限制RT规则来方便复用吧，而且面对各种规则的RT特效复用可能会出现特效裁边这种问题。</p>\n<p>RT特效系统中还处理了一种情况：显示多个同一类特效。</p>\n<p>当然RT肯定是同一张，但是需要创建多个PhotoMultiEffect的实例，进而实例化多个特效资源实例，这样就浪费资源了，创建多个特效实例可以省去，我们需要的是多个RT的承载体，也就是多个挂有RawImage组件的GameObject。</p>\n<p>所以就有PhotoEffectFactory类，负责管理同一类特效的多处显示情况。</p>\n<img src=\"/2021/01/20/RenderTexture%E7%89%B9%E6%95%88%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/image_1.png\" class=\"\">\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"RenderTexture特效系统实现原理\"><a href=\"#RenderTexture特效系统实现原理\" class=\"headerlink\" title=\"RenderTexture特效系统实现原理\"></a>RenderTexture特效系统实现原理</h1><h2 id=\"一、RenderTexture阐述\"><a href=\"#一、RenderTexture阐述\" class=\"headerlink\" title=\"一、RenderTexture阐述\"></a>一、RenderTexture阐述</h2><p>食物语中的显示的特效一般是使用RenderTexture结合摄像机拍摄3D物体实现的，实际上游戏中显示的是一张加载好的RT。</p>\n<p>什么是RT？为啥RT可以渲染一张动态的图片？</p>\n<p>RT是一种特殊的Texture，可以在运行时实现更新内容。网上有句话可以概括：将一个FBO链接到server-side的texture对象上。通俗一点就是将渲染结果应用到gpu上的texture对象上，而texture对象就是游戏中的一张贴图，渲染结果（FBO的数据）可以动态变化，那么贴图的内容也跟着动态变化。</p>\n<p>FBO全称：FrameBufferObject，gpu上的一块buffer区域，用来存储渲染结果。一般有个默认的FBO直接连接显示器窗口区域，其他的FBO存储渲染结果供需要时使用，正是这时候，RT作为一块渲染区域应用这些FBO。</p>\n<p>server-side：cpu加载贴图资源到内存，叫做client-side；cpu将资源从内存拷贝到gpu中，叫做发送到server-side。</p>\n<p>为什么特效需要用RT应用到项目中，而不直接加载呢？</p>\n<p>关键的原因是项目中一般在UI上挂特效，特效资源的渲染层跟UI不属于同一个渲染层级，所以总是在UI资源之前或之后，没办法在两个UI资源之间，让特效显示在最上层的话，那么就会挡住比如断线重连这类层级优先级最高的UI。</p>\n<p>所以要利用RT渲染特效，作为一个UI资源加载进来。</p>\n<h2 id=\"二、RT特效系统设计原理\"><a href=\"#二、RT特效系统设计原理\" class=\"headerlink\" title=\"二、RT特效系统设计原理\"></a>二、RT特效系统设计原理</h2><p>怎样实现RT特效？</p>\n<p>很简单就是创建一个RenderTexture对象，赋值给camera的targetTextrue属性，同时赋值给RawImage对象的texture属性。这就相当于camera将渲染结果（特效的表现）写入到了RenderTexture对象，RawImage对象作为一个显示窗口区域，连接到RenderTexture对象存储数据的FBO。</p>\n<p>着点于项目上，RT特效系统是如何设计的，这么设计的原因有是什么呢？先看以下系统关系图：</p>\n<img src=\"/2021/01/20/RenderTexture%E7%89%B9%E6%95%88%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/image.png\" class=\"\">\n<p>图中清晰的表达了类之间数据流向，关键的就是传递RT和特效实例，各类发挥的作用：</p>\n<ol>\n<li>PhotoProducer负责创建RT、摄像机和特效实例的容器TargetContainer，相当于一块特效的渲染场景，而且这个渲染场景跟UI不是同一个渲染层，另外负责把RT传递给PhotoBase的RawImage组件上。</li>\n<li>PhotoProducerCache作为对象池，管理PhotoProducer的分配和回收。</li>\n<li>PhotoBase就是作为承载RT的容器，显示在UI上。</li>\n<li>PhotoMultiEffect负责通过url加载特效资源，并将特效资源实例传递到Pruducer中的TargetContainer容器。</li>\n</ol>\n<p>另外这些类通过turnOn和turnOff方法控制特效的显示和隐藏。</p>\n<ul>\n<li>turnOn方法：将Effect Inst加到TargetContainer节点下，将RT跟Camera和RawImage连接起来。</li>\n<li>TurnOff方法：将RawImage置为不可用enable为false，将Effect Inst移出TargetContainer，并且将ProducerContainer置为不可见，归还Producer到对象池以便供其他特效使用。</li>\n</ul>\n<p>还有一点，PhotoProducerCache的主要优化手段是将RT缓存起来，用RT的规格（宽高）作为索引来复用RT。项目中规定了RT的几种规则：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--最大规格RT尺寸(不能再大了) 1560 * 720</span></span><br><span class=\"line\">PhotoUtil.MaxRTWidth = <span class=\"number\">1560</span></span><br><span class=\"line\">PhotoUtil.MaxRTHeight = <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"comment\">--大规格RT尺寸 1280 * 720</span></span><br><span class=\"line\">PhotoUtil.RTWidth = <span class=\"number\">1280</span></span><br><span class=\"line\">PhotoUtil.RTHeight = <span class=\"number\">720</span></span><br><span class=\"line\"><span class=\"comment\">--中等规格RT尺寸 512 * 288</span></span><br><span class=\"line\">PhotoUtil.PartRTWidth = <span class=\"number\">512</span></span><br><span class=\"line\">PhotoUtil.PartRTHeight = <span class=\"number\">288</span></span><br><span class=\"line\"><span class=\"comment\">--小规格RT尺寸 256 * 144</span></span><br><span class=\"line\">PhotoUtil.SmallRTWidth = <span class=\"number\">256</span></span><br><span class=\"line\">PhotoUtil.SmallRTHeight = <span class=\"number\">144</span></span><br></pre></td></tr></table></figure>\n<p>这样做应该是为限制RT规则来方便复用吧，而且面对各种规则的RT特效复用可能会出现特效裁边这种问题。</p>\n<p>RT特效系统中还处理了一种情况：显示多个同一类特效。</p>\n<p>当然RT肯定是同一张，但是需要创建多个PhotoMultiEffect的实例，进而实例化多个特效资源实例，这样就浪费资源了，创建多个特效实例可以省去，我们需要的是多个RT的承载体，也就是多个挂有RawImage组件的GameObject。</p>\n<p>所以就有PhotoEffectFactory类，负责管理同一类特效的多处显示情况。</p>\n<img src=\"/2021/01/20/RenderTexture%E7%89%B9%E6%95%88%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/image_1.png\" class=\"\">"},{"title":"UGUIText组件实现图文混排——原理篇","date":"2021-12-26T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n\n## 目录\n\n- [UGUI Text组件实现图文混排](#ugui-text组件实现图文混排)\n  - [实现图文混排原理](#实现图文混排原理)\n    - [quad标签的使用](#quad标签的使用)\n  - [渲染内嵌图片](#渲染内嵌图片)\n    - [文字渲染原理](#文字渲染原理)\n    - [流程讲解](#流程讲解)\n    - [代码实现](#代码实现)\n  - [超链接实现](#超链接实现)\n    - [超链接处理流程](#超链接处理流程)\n    - [响应点击事件](#响应点击事件)\n\n# UGUI Text组件实现图文混排\n\n## 实现图文混排原理\n\nUnity手册上介绍UI系统和传统的GUI系统都支持[富文本](https://docs.unity3d.com/2017.4/Documentation/Manual/StyledText.html \"富文本\")，Text、GUIStyle、GUIText和TextMesh类上有rich text的设置选项，开启它后Unity会解析文本中标记标签。\n\n![](UGUIText组件实现图文混排——原理篇/image__hVtRDjd_h.png)\n\nunity中支持的文本标签如下：\n\n![](UGUIText组件实现图文混排——原理篇/image_yhRARumho4.png)\n\n其中quad标签可以渲染出行内内嵌的图片，但是只是对TextMesh组件有效。\n\n> This is only useful for text meshes and renders an image inline with the text.\n\nTextMesh是用来生成3D图形字体，不能直接用在UI Canvas下。\n\n> Text Meshes can be used for rendering road signs, graffiti etc. The Text Mesh places text in the 3D scene. To make generic 2D text for GUIs, use a [GUI Text](class-GUIText.html \"GUI Text\") component instead.\n\n2D文本渲染需要用GUI Text组件，它属于传统GUI系统，UI系统（即UGUI）下的Text组件也是一样的用途，正如本节开头说到他们都有rich text的设置。\n\n但是UI的文本组件并不支持内嵌的图片，使用quad标签会出现乱码。好在UGUI开源，可以通过重写Text组件以支持渲染内嵌图片的效果。\n\n### quad标签的使用\n\n> \\<quad material=1 size=20 x=0.1 y=0.1 width=0.5 height=0.5>\n\nmaterial：渲染组件上引用的材质，值为材质数组的下表，从0开始。\n\nsize：决定内嵌图片的像素大小。\n\nx/y/width/height：决定材质贴图上渲染矩形区域的偏移和大小，它们的value代表百分比，类似于uv坐标。\n\n经过测试得知，实际渲染图片大小的关系：图片像素大小 = size \\*（width/height）。\n\n可以参考这篇[文章](https://blog.csdn.net/tom_221x/article/details/113456808 \"文章\")来推测。\n\n使用在UI Text组件上会出现乱码，其实乱码是字体贴图，放大后可以看见贴图上的文字，只不过缩放太小所以看不到。\n\n![](UGUIText组件实现图文混排——原理篇/image_rVuWhoO_3B.png)\n\n打开rich text设置才会解析标签，否则不解析：\n\n![](UGUIText组件实现图文混排——原理篇/image_7M009fCb6d.png)\n\n## 渲染内嵌图片\n\n虽然quad在UI上渲染不出图片，但是可以定义渲染区域大小，可以作为占位符。\n\n借助这个特效，渲染内嵌图片可以分三步：\n\n1.  使用quad标签占位\n\n2.  去除乱码\n\n3.  使用MaskableGraphic类渲染贴图，放置于占位符位置上\n\n项目规定，在渲染贴图之前，需要将所有用到的贴图打到一个spriteAsset上，并且将它引用到UIGraphicTextSprite组件上，UIGraphicTextSprite组件继承MaskableGraphic类，具体使用过程参考这篇[文章](http://wiki.info/pages/viewpage.action?pageId=13736289 \"文章\")。\n\n### 文字渲染原理\n\n![](UGUIText组件实现图文混排——原理篇/image_n9LveM62tZ.png)\n\n1.左边文本会生成100个顶点数据，100来自假设，但顶点数肯定是4的倍数\n\n2.前8个顶点代表两个中文的位置\n\n3.后面的顶点都是quad标签的顶点，但是unity会做处理，只有前4个代表quad标签的区域，后面顶点位置都位于一个点上，不会渲染内容\n\n### 流程讲解\n\nUGUI Text组件渲染文字代码流程图：\n\n![](UGUIText组件实现图文混排——原理篇/image_hn-XI1mBjn.png)\n\n重写渲染流程：\n\n![](UGUIText组件实现图文混排——原理篇/image_0ifY5wkaqd.png)\n\n重写渲染流程详细介绍：\n\n![](UGUIText组件实现图文混排——原理篇/image_OTeaUItO0F.png)\n\n### 代码实现\n\n正则表达式匹配quad标签\n\n```c#\nprivate static readonly Regex m_spriteTagRegex =\n          new Regex(@\"<quad name=(.+?) size=(\\d*\\.?\\d+%?) width=(\\d*\\.?\\d+%?) des=(.+?) />\", RegexOptions.Singleline);\n\nforeach (Match match in m_spriteTagRegex.Matches(m_OutputText))\n{\n  ...\n}\n```\n\n清除乱码\n\n```c#\n//清楚乱码\nfor (int i = 0; i < listTagInfor.Count; i++)\n{\n    //UGUIText不支持<quad/>标签，表现为乱码，我这里将他的uv全设置为0,清除乱码\n    for (int m = listTagInfor[i].index * 4; m < listTagInfor[i].index * 4 + 4; m++)\n    {\n        //超出可视范围的不会绘制，即leftBottomIndex >= verts.Count。\n        //所以这里不需要处理也不应该处理。若处理，则数组越界。\n        if (m >= verts.Count)\n        {\n            break;\n        }\n        UIVertex tempVertex = verts[m];\n        tempVertex.uv0 = Vector2.zero;\n        verts[m] = tempVertex;\n    }\n}\n```\n\n生成网格数据\n\n```c#\n  public struct InlineSpriteInfor\n    {\n        // 文字的最后的位置\n        public Vector3 textpos;\n        // 4 顶点 \n        public Vector3[] vertices;\n        //4 uv\n        public Vector2[] uv;\n        //6 三角顶点顺序\n        public int[] triangles;\n        public bool isEmptySprite;\n        public Texture texture;\n        public string name;\n    }\n    void CalcQuadTag(IList<UIVertex> verts)\n    {\n        m_AnimSpriteInfo = new Dictionary<int, InlineSpriteInfor[]>();\n\n        //通过标签信息来设置需要绘制的图片的信息\n        listSprite = new List<InlineSpriteInfor>();\n        for (int i = 0; i < listTagInfor.Count; i++)\n        {                                                                         3    2\n            var leftBottomIndex = ((listTagInfor[i].index + 1) * 4) - 1;\n            if (leftBottomIndex >= verts.Count)\n            {\n                break;\n            }\n            InlineSpriteInfor tempSprite = new InlineSpriteInfor();\n            tempSprite.name = listTagInfor[i].name;\n            tempSprite.isEmptySprite = listTagInfor[i].isEmptySprite;\n            \n            tempSprite.textpos = verts[leftBottomIndex].position;\n            //设置图片的位置\n            tempSprite.vertices = new Vector3[4];\n            tempSprite.vertices[0] = new Vector3(0, 0, 0) + tempSprite.textpos;\n            tempSprite.vertices[1] = new Vector3(listTagInfor[i].size.x, listTagInfor[i].size.y, 0) + tempSprite.textpos;\n            tempSprite.vertices[2] = new Vector3(listTagInfor[i].size.x, 0, 0) + tempSprite.textpos;\n            tempSprite.vertices[3] = new Vector3(0, listTagInfor[i].size.y, 0) + tempSprite.textpos;\n\n            //计算其uv\n            Sprite sprite;\n            m_nameToSpriteDict.TryGetValue(listTagInfor[i].name, out sprite);\n            Rect spriteRect = sprite.textureRect;\n            Texture texSource = sprite.texture;\n            tempSprite.texture = texSource;\n            Vector2 texSize = new Vector2(texSource.width, texSource.height);\n            tempSprite.uv = new Vector2[4];\n            tempSprite.uv[0] = new Vector2(spriteRect.x / texSize.x, spriteRect.y / texSize.y);\n            tempSprite.uv[1] = new Vector2((spriteRect.x + spriteRect.width) / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);\n            tempSprite.uv[2] = new Vector2((spriteRect.x + spriteRect.width) / texSize.x, spriteRect.y / texSize.y);\n            tempSprite.uv[3] = new Vector2(spriteRect.x / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);\n\n            //声明三角顶点所需要的数组\n            tempSprite.triangles = new int[6];\n            listSprite.Add(tempSprite);\n         }\n```\n\n渲染贴图\n\n```c#\nvoid DrawSprite(UIGraphicTextSprites spriteGraphic, List<InlineSpriteInfor> listInlineSprite)\n{\n  var spriteCanvasRenderer = spriteGraphic.GetComponentInChildren<CanvasRenderer>();\n  if (m_spriteMesh == null)\n  {\n    m_spriteMesh = new Mesh();\n  }\n\n  if (drawSpriteVertices == null) drawSpriteVertices = new List<Vector3>();\n  else drawSpriteVertices.Clear();\n  if (drawSpriteUv == null) drawSpriteUv = new List<Vector2>();\n  else drawSpriteUv.Clear();\n  if (drawSpriteTriangles == null) drawSpriteTriangles = new List<int>();\n  else drawSpriteTriangles.Clear();\n\n  for (int i = 0; i < listInlineSprite.Count; i++)\n  {\n      var inlineSprite = listInlineSprite[i];\n      if (inlineSprite.isEmptySprite) \n      {\n          continue;\n      }\n      for (int j = 0; j < inlineSprite.vertices.Length; j++)\n      {\n          drawSpriteVertices.Add(inlineSprite.vertices[j]);\n      }\n      for (int j = 0; j < inlineSprite.uv.Length; j++)\n      {\n          drawSpriteUv.Add(inlineSprite.uv[j]);\n      }\n      for (int j = 0; j < inlineSprite.triangles.Length; j++)\n      {\n          drawSpriteTriangles.Add(inlineSprite.triangles[j]);\n      }\n  }\n  //计算顶点绘制顺序\n  for (int i = 0; i < drawSpriteTriangles.Count; i++)\n  {\n      if (i % 6 == 0)\n      {\n          int num = i / 6;\n          drawSpriteTriangles[i] = 0 + 4 * num;\n          drawSpriteTriangles[i + 1] = 1 + 4 * num;\n          drawSpriteTriangles[i + 2] = 2 + 4 * num;\n\n          drawSpriteTriangles[i + 3] = 1 + 4 * num;\n          drawSpriteTriangles[i + 4] = 0 + 4 * num;\n          drawSpriteTriangles[i + 5] = 3 + 4 * num;\n      }\n  }\n  m_spriteMesh.vertices = drawSpriteVertices.ToArray ();\n  m_spriteMesh.uv = drawSpriteUv.ToArray ();\n  m_spriteMesh.triangles = drawSpriteTriangles.ToArray ();\n  \n  spriteCanvasRenderer.SetMesh(m_spriteMesh);\n  spriteGraphic.UpdateMaterial();\n}\n```\n\n动态图片是按一定频率切换主贴图和网格数据实现的\n\n```c#\nfloat fTime = 0.0f;\n//int iIndex = 0;\nvoid Update()\n{\nif(listSprite == null || listSprite.Count==0 || m_hasAnimTag==false) return;\n\nfTime += Time.deltaTime;\nif (fTime >= DynamicTagSwitchInterval)\n{\n        UpdateAnimSprite();\n  fTime = 0.0f;\n}\n\n}\n\nvoid UpdateAnimSprite() {\n    for (int i = 0; i < m_AnimIndex.Count; i++)\n    {\n        var animIndex = m_AnimIndex[i];\n        if (!m_AnimSpriteInfo.ContainsKey(animIndex)) continue;\n\n        m_AnimSpriteStep[animIndex]++;\n        if (m_AnimSpriteStep[animIndex] >= m_AnimSpriteInfo[animIndex].Length)\n        {\n            m_AnimSpriteStep[animIndex] = 0;\n        }\n        var step = m_AnimSpriteStep[animIndex];\n        var inlineSprite = m_AnimSpriteInfo[animIndex][step];\n        Sprite sprite;\n        m_nameToSpriteDict.TryGetValue(inlineSprite.name, out sprite);\n        var spriteGraphic = m_spriteGraphicArray[animIndex];\n        spriteGraphic.SetMainTexture(sprite.texture);\n        DrawSprite(spriteGraphic, new List<InlineSpriteInfor>(){inlineSprite});\n    }\n\n}\n```\n\n## 超链接实现\n\n### 超链接处理流程\n\n![](UGUIText组件实现图文混排——原理篇/image_TwT2GLPl7b.png)\n\n### 响应点击事件\n\n1.  UIGraphicText组件继承IPointerClickHandler接口，实现OnPointerClick方法\n\n2.  RectTransformUtility.ScreenPointToLocalPointInRectangle方法将屏幕坐标转成local坐标\n\n3.  判断是否点击在包围盒上，从而响应预先绑定的点击事件\n\n源代码\n\n[UIGraphicText.cs](UGUIText组件实现图文混排——原理篇/UIGraphicText__lKh67xRzm.cs)\n\n[UIGraphicTextSpritesMgr.cs](UGUIText组件实现图文混排——原理篇/UIGraphicTextSpritesMgr_VeAnnPQruV.cs)\n\n[EmojiSpriteAsset.cs](UGUIText组件实现图文混排——原理篇/EmojiSpriteAsset_m_7Wcnb4Es.cs)\n\n[UIGraphicTextSprites.cs](UGUIText组件实现图文混排——原理篇/UIGraphicTextSprites_SJ0ts213El.cs)\n","source":"_posts/UGUIText组件实现图文混排——原理篇.md","raw":"---\ntitle: UGUIText组件实现图文混排——原理篇\ndate: 2021-12-27\ntags: [emoji,图文混排]\ncategories: [Unity游戏开发,业务系统,图文混排]\n---\n\n<!-- more -->\n\n\n\n## 目录\n\n- [UGUI Text组件实现图文混排](#ugui-text组件实现图文混排)\n  - [实现图文混排原理](#实现图文混排原理)\n    - [quad标签的使用](#quad标签的使用)\n  - [渲染内嵌图片](#渲染内嵌图片)\n    - [文字渲染原理](#文字渲染原理)\n    - [流程讲解](#流程讲解)\n    - [代码实现](#代码实现)\n  - [超链接实现](#超链接实现)\n    - [超链接处理流程](#超链接处理流程)\n    - [响应点击事件](#响应点击事件)\n\n# UGUI Text组件实现图文混排\n\n## 实现图文混排原理\n\nUnity手册上介绍UI系统和传统的GUI系统都支持[富文本](https://docs.unity3d.com/2017.4/Documentation/Manual/StyledText.html \"富文本\")，Text、GUIStyle、GUIText和TextMesh类上有rich text的设置选项，开启它后Unity会解析文本中标记标签。\n\n![](UGUIText组件实现图文混排——原理篇/image__hVtRDjd_h.png)\n\nunity中支持的文本标签如下：\n\n![](UGUIText组件实现图文混排——原理篇/image_yhRARumho4.png)\n\n其中quad标签可以渲染出行内内嵌的图片，但是只是对TextMesh组件有效。\n\n> This is only useful for text meshes and renders an image inline with the text.\n\nTextMesh是用来生成3D图形字体，不能直接用在UI Canvas下。\n\n> Text Meshes can be used for rendering road signs, graffiti etc. The Text Mesh places text in the 3D scene. To make generic 2D text for GUIs, use a [GUI Text](class-GUIText.html \"GUI Text\") component instead.\n\n2D文本渲染需要用GUI Text组件，它属于传统GUI系统，UI系统（即UGUI）下的Text组件也是一样的用途，正如本节开头说到他们都有rich text的设置。\n\n但是UI的文本组件并不支持内嵌的图片，使用quad标签会出现乱码。好在UGUI开源，可以通过重写Text组件以支持渲染内嵌图片的效果。\n\n### quad标签的使用\n\n> \\<quad material=1 size=20 x=0.1 y=0.1 width=0.5 height=0.5>\n\nmaterial：渲染组件上引用的材质，值为材质数组的下表，从0开始。\n\nsize：决定内嵌图片的像素大小。\n\nx/y/width/height：决定材质贴图上渲染矩形区域的偏移和大小，它们的value代表百分比，类似于uv坐标。\n\n经过测试得知，实际渲染图片大小的关系：图片像素大小 = size \\*（width/height）。\n\n可以参考这篇[文章](https://blog.csdn.net/tom_221x/article/details/113456808 \"文章\")来推测。\n\n使用在UI Text组件上会出现乱码，其实乱码是字体贴图，放大后可以看见贴图上的文字，只不过缩放太小所以看不到。\n\n![](UGUIText组件实现图文混排——原理篇/image_rVuWhoO_3B.png)\n\n打开rich text设置才会解析标签，否则不解析：\n\n![](UGUIText组件实现图文混排——原理篇/image_7M009fCb6d.png)\n\n## 渲染内嵌图片\n\n虽然quad在UI上渲染不出图片，但是可以定义渲染区域大小，可以作为占位符。\n\n借助这个特效，渲染内嵌图片可以分三步：\n\n1.  使用quad标签占位\n\n2.  去除乱码\n\n3.  使用MaskableGraphic类渲染贴图，放置于占位符位置上\n\n项目规定，在渲染贴图之前，需要将所有用到的贴图打到一个spriteAsset上，并且将它引用到UIGraphicTextSprite组件上，UIGraphicTextSprite组件继承MaskableGraphic类，具体使用过程参考这篇[文章](http://wiki.info/pages/viewpage.action?pageId=13736289 \"文章\")。\n\n### 文字渲染原理\n\n![](UGUIText组件实现图文混排——原理篇/image_n9LveM62tZ.png)\n\n1.左边文本会生成100个顶点数据，100来自假设，但顶点数肯定是4的倍数\n\n2.前8个顶点代表两个中文的位置\n\n3.后面的顶点都是quad标签的顶点，但是unity会做处理，只有前4个代表quad标签的区域，后面顶点位置都位于一个点上，不会渲染内容\n\n### 流程讲解\n\nUGUI Text组件渲染文字代码流程图：\n\n![](UGUIText组件实现图文混排——原理篇/image_hn-XI1mBjn.png)\n\n重写渲染流程：\n\n![](UGUIText组件实现图文混排——原理篇/image_0ifY5wkaqd.png)\n\n重写渲染流程详细介绍：\n\n![](UGUIText组件实现图文混排——原理篇/image_OTeaUItO0F.png)\n\n### 代码实现\n\n正则表达式匹配quad标签\n\n```c#\nprivate static readonly Regex m_spriteTagRegex =\n          new Regex(@\"<quad name=(.+?) size=(\\d*\\.?\\d+%?) width=(\\d*\\.?\\d+%?) des=(.+?) />\", RegexOptions.Singleline);\n\nforeach (Match match in m_spriteTagRegex.Matches(m_OutputText))\n{\n  ...\n}\n```\n\n清除乱码\n\n```c#\n//清楚乱码\nfor (int i = 0; i < listTagInfor.Count; i++)\n{\n    //UGUIText不支持<quad/>标签，表现为乱码，我这里将他的uv全设置为0,清除乱码\n    for (int m = listTagInfor[i].index * 4; m < listTagInfor[i].index * 4 + 4; m++)\n    {\n        //超出可视范围的不会绘制，即leftBottomIndex >= verts.Count。\n        //所以这里不需要处理也不应该处理。若处理，则数组越界。\n        if (m >= verts.Count)\n        {\n            break;\n        }\n        UIVertex tempVertex = verts[m];\n        tempVertex.uv0 = Vector2.zero;\n        verts[m] = tempVertex;\n    }\n}\n```\n\n生成网格数据\n\n```c#\n  public struct InlineSpriteInfor\n    {\n        // 文字的最后的位置\n        public Vector3 textpos;\n        // 4 顶点 \n        public Vector3[] vertices;\n        //4 uv\n        public Vector2[] uv;\n        //6 三角顶点顺序\n        public int[] triangles;\n        public bool isEmptySprite;\n        public Texture texture;\n        public string name;\n    }\n    void CalcQuadTag(IList<UIVertex> verts)\n    {\n        m_AnimSpriteInfo = new Dictionary<int, InlineSpriteInfor[]>();\n\n        //通过标签信息来设置需要绘制的图片的信息\n        listSprite = new List<InlineSpriteInfor>();\n        for (int i = 0; i < listTagInfor.Count; i++)\n        {                                                                         3    2\n            var leftBottomIndex = ((listTagInfor[i].index + 1) * 4) - 1;\n            if (leftBottomIndex >= verts.Count)\n            {\n                break;\n            }\n            InlineSpriteInfor tempSprite = new InlineSpriteInfor();\n            tempSprite.name = listTagInfor[i].name;\n            tempSprite.isEmptySprite = listTagInfor[i].isEmptySprite;\n            \n            tempSprite.textpos = verts[leftBottomIndex].position;\n            //设置图片的位置\n            tempSprite.vertices = new Vector3[4];\n            tempSprite.vertices[0] = new Vector3(0, 0, 0) + tempSprite.textpos;\n            tempSprite.vertices[1] = new Vector3(listTagInfor[i].size.x, listTagInfor[i].size.y, 0) + tempSprite.textpos;\n            tempSprite.vertices[2] = new Vector3(listTagInfor[i].size.x, 0, 0) + tempSprite.textpos;\n            tempSprite.vertices[3] = new Vector3(0, listTagInfor[i].size.y, 0) + tempSprite.textpos;\n\n            //计算其uv\n            Sprite sprite;\n            m_nameToSpriteDict.TryGetValue(listTagInfor[i].name, out sprite);\n            Rect spriteRect = sprite.textureRect;\n            Texture texSource = sprite.texture;\n            tempSprite.texture = texSource;\n            Vector2 texSize = new Vector2(texSource.width, texSource.height);\n            tempSprite.uv = new Vector2[4];\n            tempSprite.uv[0] = new Vector2(spriteRect.x / texSize.x, spriteRect.y / texSize.y);\n            tempSprite.uv[1] = new Vector2((spriteRect.x + spriteRect.width) / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);\n            tempSprite.uv[2] = new Vector2((spriteRect.x + spriteRect.width) / texSize.x, spriteRect.y / texSize.y);\n            tempSprite.uv[3] = new Vector2(spriteRect.x / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);\n\n            //声明三角顶点所需要的数组\n            tempSprite.triangles = new int[6];\n            listSprite.Add(tempSprite);\n         }\n```\n\n渲染贴图\n\n```c#\nvoid DrawSprite(UIGraphicTextSprites spriteGraphic, List<InlineSpriteInfor> listInlineSprite)\n{\n  var spriteCanvasRenderer = spriteGraphic.GetComponentInChildren<CanvasRenderer>();\n  if (m_spriteMesh == null)\n  {\n    m_spriteMesh = new Mesh();\n  }\n\n  if (drawSpriteVertices == null) drawSpriteVertices = new List<Vector3>();\n  else drawSpriteVertices.Clear();\n  if (drawSpriteUv == null) drawSpriteUv = new List<Vector2>();\n  else drawSpriteUv.Clear();\n  if (drawSpriteTriangles == null) drawSpriteTriangles = new List<int>();\n  else drawSpriteTriangles.Clear();\n\n  for (int i = 0; i < listInlineSprite.Count; i++)\n  {\n      var inlineSprite = listInlineSprite[i];\n      if (inlineSprite.isEmptySprite) \n      {\n          continue;\n      }\n      for (int j = 0; j < inlineSprite.vertices.Length; j++)\n      {\n          drawSpriteVertices.Add(inlineSprite.vertices[j]);\n      }\n      for (int j = 0; j < inlineSprite.uv.Length; j++)\n      {\n          drawSpriteUv.Add(inlineSprite.uv[j]);\n      }\n      for (int j = 0; j < inlineSprite.triangles.Length; j++)\n      {\n          drawSpriteTriangles.Add(inlineSprite.triangles[j]);\n      }\n  }\n  //计算顶点绘制顺序\n  for (int i = 0; i < drawSpriteTriangles.Count; i++)\n  {\n      if (i % 6 == 0)\n      {\n          int num = i / 6;\n          drawSpriteTriangles[i] = 0 + 4 * num;\n          drawSpriteTriangles[i + 1] = 1 + 4 * num;\n          drawSpriteTriangles[i + 2] = 2 + 4 * num;\n\n          drawSpriteTriangles[i + 3] = 1 + 4 * num;\n          drawSpriteTriangles[i + 4] = 0 + 4 * num;\n          drawSpriteTriangles[i + 5] = 3 + 4 * num;\n      }\n  }\n  m_spriteMesh.vertices = drawSpriteVertices.ToArray ();\n  m_spriteMesh.uv = drawSpriteUv.ToArray ();\n  m_spriteMesh.triangles = drawSpriteTriangles.ToArray ();\n  \n  spriteCanvasRenderer.SetMesh(m_spriteMesh);\n  spriteGraphic.UpdateMaterial();\n}\n```\n\n动态图片是按一定频率切换主贴图和网格数据实现的\n\n```c#\nfloat fTime = 0.0f;\n//int iIndex = 0;\nvoid Update()\n{\nif(listSprite == null || listSprite.Count==0 || m_hasAnimTag==false) return;\n\nfTime += Time.deltaTime;\nif (fTime >= DynamicTagSwitchInterval)\n{\n        UpdateAnimSprite();\n  fTime = 0.0f;\n}\n\n}\n\nvoid UpdateAnimSprite() {\n    for (int i = 0; i < m_AnimIndex.Count; i++)\n    {\n        var animIndex = m_AnimIndex[i];\n        if (!m_AnimSpriteInfo.ContainsKey(animIndex)) continue;\n\n        m_AnimSpriteStep[animIndex]++;\n        if (m_AnimSpriteStep[animIndex] >= m_AnimSpriteInfo[animIndex].Length)\n        {\n            m_AnimSpriteStep[animIndex] = 0;\n        }\n        var step = m_AnimSpriteStep[animIndex];\n        var inlineSprite = m_AnimSpriteInfo[animIndex][step];\n        Sprite sprite;\n        m_nameToSpriteDict.TryGetValue(inlineSprite.name, out sprite);\n        var spriteGraphic = m_spriteGraphicArray[animIndex];\n        spriteGraphic.SetMainTexture(sprite.texture);\n        DrawSprite(spriteGraphic, new List<InlineSpriteInfor>(){inlineSprite});\n    }\n\n}\n```\n\n## 超链接实现\n\n### 超链接处理流程\n\n![](UGUIText组件实现图文混排——原理篇/image_TwT2GLPl7b.png)\n\n### 响应点击事件\n\n1.  UIGraphicText组件继承IPointerClickHandler接口，实现OnPointerClick方法\n\n2.  RectTransformUtility.ScreenPointToLocalPointInRectangle方法将屏幕坐标转成local坐标\n\n3.  判断是否点击在包围盒上，从而响应预先绑定的点击事件\n\n源代码\n\n[UIGraphicText.cs](UGUIText组件实现图文混排——原理篇/UIGraphicText__lKh67xRzm.cs)\n\n[UIGraphicTextSpritesMgr.cs](UGUIText组件实现图文混排——原理篇/UIGraphicTextSpritesMgr_VeAnnPQruV.cs)\n\n[EmojiSpriteAsset.cs](UGUIText组件实现图文混排——原理篇/EmojiSpriteAsset_m_7Wcnb4Es.cs)\n\n[UIGraphicTextSprites.cs](UGUIText组件实现图文混排——原理篇/UIGraphicTextSprites_SJ0ts213El.cs)\n","slug":"UGUIText组件实现图文混排——原理篇","published":1,"updated":"2022-12-07T13:37:07.617Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv42000vmcq04e4j74u5","content":"<span id=\"more\"></span>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#ugui-text组件实现图文混排\">UGUI Text组件实现图文混排</a><ul>\n<li><a href=\"#实现图文混排原理\">实现图文混排原理</a><ul>\n<li><a href=\"#quad标签的使用\">quad标签的使用</a></li>\n</ul>\n</li>\n<li><a href=\"#渲染内嵌图片\">渲染内嵌图片</a><ul>\n<li><a href=\"#文字渲染原理\">文字渲染原理</a></li>\n<li><a href=\"#流程讲解\">流程讲解</a></li>\n<li><a href=\"#代码实现\">代码实现</a></li>\n</ul>\n</li>\n<li><a href=\"#超链接实现\">超链接实现</a><ul>\n<li><a href=\"#超链接处理流程\">超链接处理流程</a></li>\n<li><a href=\"#响应点击事件\">响应点击事件</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"UGUI-Text组件实现图文混排\"><a href=\"#UGUI-Text组件实现图文混排\" class=\"headerlink\" title=\"UGUI Text组件实现图文混排\"></a>UGUI Text组件实现图文混排</h1><h2 id=\"实现图文混排原理\"><a href=\"#实现图文混排原理\" class=\"headerlink\" title=\"实现图文混排原理\"></a>实现图文混排原理</h2><p>Unity手册上介绍UI系统和传统的GUI系统都支持<a target=\"_blank\" rel=\"noopener\" href=\"https://docs.unity3d.com/2017.4/Documentation/Manual/StyledText.html\" title=\"富文本\">富文本</a>，Text、GUIStyle、GUIText和TextMesh类上有rich text的设置选项，开启它后Unity会解析文本中标记标签。</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image__hVtRDjd_h.png\" class=\"\">\n<p>unity中支持的文本标签如下：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_yhRARumho4.png\" class=\"\">\n<p>其中quad标签可以渲染出行内内嵌的图片，但是只是对TextMesh组件有效。</p>\n<blockquote>\n<p>This is only useful for text meshes and renders an image inline with the text.</p>\n</blockquote>\n<p>TextMesh是用来生成3D图形字体，不能直接用在UI Canvas下。</p>\n<blockquote>\n<p>Text Meshes can be used for rendering road signs, graffiti etc. The Text Mesh places text in the 3D scene. To make generic 2D text for GUIs, use a <a href=\"class-GUIText.html\" title=\"GUI Text\">GUI Text</a> component instead.</p>\n</blockquote>\n<p>2D文本渲染需要用GUI Text组件，它属于传统GUI系统，UI系统（即UGUI）下的Text组件也是一样的用途，正如本节开头说到他们都有rich text的设置。</p>\n<p>但是UI的文本组件并不支持内嵌的图片，使用quad标签会出现乱码。好在UGUI开源，可以通过重写Text组件以支持渲染内嵌图片的效果。</p>\n<h3 id=\"quad标签的使用\"><a href=\"#quad标签的使用\" class=\"headerlink\" title=\"quad标签的使用\"></a>quad标签的使用</h3><blockquote>\n<p>\\<quad material=1 size=20 x=0.1 y=0.1 width=0.5 height=0.5></p>\n</blockquote>\n<p>material：渲染组件上引用的材质，值为材质数组的下表，从0开始。</p>\n<p>size：决定内嵌图片的像素大小。</p>\n<p>x/y/width/height：决定材质贴图上渲染矩形区域的偏移和大小，它们的value代表百分比，类似于uv坐标。</p>\n<p>经过测试得知，实际渲染图片大小的关系：图片像素大小 = size *（width/height）。</p>\n<p>可以参考这篇<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/tom_221x/article/details/113456808\" title=\"文章\">文章</a>来推测。</p>\n<p>使用在UI Text组件上会出现乱码，其实乱码是字体贴图，放大后可以看见贴图上的文字，只不过缩放太小所以看不到。</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_rVuWhoO_3B.png\" class=\"\">\n<p>打开rich text设置才会解析标签，否则不解析：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_7M009fCb6d.png\" class=\"\">\n<h2 id=\"渲染内嵌图片\"><a href=\"#渲染内嵌图片\" class=\"headerlink\" title=\"渲染内嵌图片\"></a>渲染内嵌图片</h2><p>虽然quad在UI上渲染不出图片，但是可以定义渲染区域大小，可以作为占位符。</p>\n<p>借助这个特效，渲染内嵌图片可以分三步：</p>\n<ol>\n<li><p>使用quad标签占位</p>\n</li>\n<li><p>去除乱码</p>\n</li>\n<li><p>使用MaskableGraphic类渲染贴图，放置于占位符位置上</p>\n</li>\n</ol>\n<p>项目规定，在渲染贴图之前，需要将所有用到的贴图打到一个spriteAsset上，并且将它引用到UIGraphicTextSprite组件上，UIGraphicTextSprite组件继承MaskableGraphic类，具体使用过程参考这篇<a target=\"_blank\" rel=\"noopener\" href=\"http://wiki.info/pages/viewpage.action?pageId=13736289\" title=\"文章\">文章</a>。</p>\n<h3 id=\"文字渲染原理\"><a href=\"#文字渲染原理\" class=\"headerlink\" title=\"文字渲染原理\"></a>文字渲染原理</h3><img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_n9LveM62tZ.png\" class=\"\">\n<p>1.左边文本会生成100个顶点数据，100来自假设，但顶点数肯定是4的倍数</p>\n<p>2.前8个顶点代表两个中文的位置</p>\n<p>3.后面的顶点都是quad标签的顶点，但是unity会做处理，只有前4个代表quad标签的区域，后面顶点位置都位于一个点上，不会渲染内容</p>\n<h3 id=\"流程讲解\"><a href=\"#流程讲解\" class=\"headerlink\" title=\"流程讲解\"></a>流程讲解</h3><p>UGUI Text组件渲染文字代码流程图：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_hn-XI1mBjn.png\" class=\"\">\n<p>重写渲染流程：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_0ifY5wkaqd.png\" class=\"\">\n<p>重写渲染流程详细介绍：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_OTeaUItO0F.png\" class=\"\">\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>正则表达式匹配quad标签</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> Regex m_spriteTagRegex =</span><br><span class=\"line\">          <span class=\"keyword\">new</span> Regex(<span class=\"string\">@&quot;&lt;quad name=(.+?) size=(\\d*\\.?\\d+%?) width=(\\d*\\.?\\d+%?) des=(.+?) /&gt;&quot;</span>, RegexOptions.Singleline);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (Match match <span class=\"keyword\">in</span> m_spriteTagRegex.Matches(m_OutputText))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>清除乱码</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//清楚乱码</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; listTagInfor.Count; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//UGUIText不支持&lt;quad/&gt;标签，表现为乱码，我这里将他的uv全设置为0,清除乱码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> m = listTagInfor[i].index * <span class=\"number\">4</span>; m &lt; listTagInfor[i].index * <span class=\"number\">4</span> + <span class=\"number\">4</span>; m++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//超出可视范围的不会绘制，即leftBottomIndex &gt;= verts.Count。</span></span><br><span class=\"line\">        <span class=\"comment\">//所以这里不需要处理也不应该处理。若处理，则数组越界。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m &gt;= verts.Count)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        UIVertex tempVertex = verts[m];</span><br><span class=\"line\">        tempVertex.uv0 = Vector2.zero;</span><br><span class=\"line\">        verts[m] = tempVertex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>生成网格数据</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> InlineSpriteInfor</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 文字的最后的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> Vector3 textpos;</span><br><span class=\"line\">      <span class=\"comment\">// 4 顶点 </span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> Vector3[] vertices;</span><br><span class=\"line\">      <span class=\"comment\">//4 uv</span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> Vector2[] uv;</span><br><span class=\"line\">      <span class=\"comment\">//6 三角顶点顺序</span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span>[] triangles;</span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> isEmptySprite;</span><br><span class=\"line\">      <span class=\"keyword\">public</span> Texture texture;</span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CalcQuadTag</span>(<span class=\"params\">IList&lt;UIVertex&gt; verts</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      m_AnimSpriteInfo = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">int</span>, InlineSpriteInfor[]&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//通过标签信息来设置需要绘制的图片的信息</span></span><br><span class=\"line\">      listSprite = <span class=\"keyword\">new</span> List&lt;InlineSpriteInfor&gt;();</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; listTagInfor.Count; i++)</span><br><span class=\"line\">      &#123;                                                                         <span class=\"number\">3</span>    <span class=\"number\">2</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> leftBottomIndex = ((listTagInfor[i].index + <span class=\"number\">1</span>) * <span class=\"number\">4</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (leftBottomIndex &gt;= verts.Count)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          InlineSpriteInfor tempSprite = <span class=\"keyword\">new</span> InlineSpriteInfor();</span><br><span class=\"line\">          tempSprite.name = listTagInfor[i].name;</span><br><span class=\"line\">          tempSprite.isEmptySprite = listTagInfor[i].isEmptySprite;</span><br><span class=\"line\">          </span><br><span class=\"line\">          tempSprite.textpos = verts[leftBottomIndex].position;</span><br><span class=\"line\">          <span class=\"comment\">//设置图片的位置</span></span><br><span class=\"line\">          tempSprite.vertices = <span class=\"keyword\">new</span> Vector3[<span class=\"number\">4</span>];</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> Vector3(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> Vector3(listTagInfor[i].size.x, listTagInfor[i].size.y, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> Vector3(listTagInfor[i].size.x, <span class=\"number\">0</span>, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> Vector3(<span class=\"number\">0</span>, listTagInfor[i].size.y, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">//计算其uv</span></span><br><span class=\"line\">          Sprite sprite;</span><br><span class=\"line\">          m_nameToSpriteDict.TryGetValue(listTagInfor[i].name, <span class=\"keyword\">out</span> sprite);</span><br><span class=\"line\">          Rect spriteRect = sprite.textureRect;</span><br><span class=\"line\">          Texture texSource = sprite.texture;</span><br><span class=\"line\">          tempSprite.texture = texSource;</span><br><span class=\"line\">          Vector2 texSize = <span class=\"keyword\">new</span> Vector2(texSource.width, texSource.height);</span><br><span class=\"line\">          tempSprite.uv = <span class=\"keyword\">new</span> Vector2[<span class=\"number\">4</span>];</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> Vector2(spriteRect.x / texSize.x, spriteRect.y / texSize.y);</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> Vector2((spriteRect.x + spriteRect.width) / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> Vector2((spriteRect.x + spriteRect.width) / texSize.x, spriteRect.y / texSize.y);</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> Vector2(spriteRect.x / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">//声明三角顶点所需要的数组</span></span><br><span class=\"line\">          tempSprite.triangles = <span class=\"keyword\">new</span> <span class=\"built_in\">int</span>[<span class=\"number\">6</span>];</span><br><span class=\"line\">          listSprite.Add(tempSprite);</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<p>渲染贴图</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DrawSprite</span>(<span class=\"params\">UIGraphicTextSprites spriteGraphic, List&lt;InlineSpriteInfor&gt; listInlineSprite</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> spriteCanvasRenderer = spriteGraphic.GetComponentInChildren&lt;CanvasRenderer&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (m_spriteMesh == <span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    m_spriteMesh = <span class=\"keyword\">new</span> Mesh();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (drawSpriteVertices == <span class=\"literal\">null</span>) drawSpriteVertices = <span class=\"keyword\">new</span> List&lt;Vector3&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">else</span> drawSpriteVertices.Clear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (drawSpriteUv == <span class=\"literal\">null</span>) drawSpriteUv = <span class=\"keyword\">new</span> List&lt;Vector2&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">else</span> drawSpriteUv.Clear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (drawSpriteTriangles == <span class=\"literal\">null</span>) drawSpriteTriangles = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">else</span> drawSpriteTriangles.Clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; listInlineSprite.Count; i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> inlineSprite = listInlineSprite[i];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (inlineSprite.isEmptySprite) </span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; inlineSprite.vertices.Length; j++)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          drawSpriteVertices.Add(inlineSprite.vertices[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; inlineSprite.uv.Length; j++)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          drawSpriteUv.Add(inlineSprite.uv[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; inlineSprite.triangles.Length; j++)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          drawSpriteTriangles.Add(inlineSprite.triangles[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//计算顶点绘制顺序</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; drawSpriteTriangles.Count; i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i % <span class=\"number\">6</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> num = i / <span class=\"number\">6</span>;</span><br><span class=\"line\">          drawSpriteTriangles[i] = <span class=\"number\">0</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">1</span>] = <span class=\"number\">1</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">2</span>] = <span class=\"number\">2</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\"></span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">3</span>] = <span class=\"number\">1</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">4</span>] = <span class=\"number\">0</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">5</span>] = <span class=\"number\">3</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  m_spriteMesh.vertices = drawSpriteVertices.ToArray ();</span><br><span class=\"line\">  m_spriteMesh.uv = drawSpriteUv.ToArray ();</span><br><span class=\"line\">  m_spriteMesh.triangles = drawSpriteTriangles.ToArray ();</span><br><span class=\"line\">  </span><br><span class=\"line\">  spriteCanvasRenderer.SetMesh(m_spriteMesh);</span><br><span class=\"line\">  spriteGraphic.UpdateMaterial();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>动态图片是按一定频率切换主贴图和网格数据实现的</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">float</span> fTime = <span class=\"number\">0.0f</span>;</span><br><span class=\"line\"><span class=\"comment\">//int iIndex = 0;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(listSprite == <span class=\"literal\">null</span> || listSprite.Count==<span class=\"number\">0</span> || m_hasAnimTag==<span class=\"literal\">false</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">fTime += Time.deltaTime;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (fTime &gt;= DynamicTagSwitchInterval)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        UpdateAnimSprite();</span><br><span class=\"line\">  fTime = <span class=\"number\">0.0f</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">UpdateAnimSprite</span>()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; m_AnimIndex.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> animIndex = m_AnimIndex[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!m_AnimSpriteInfo.ContainsKey(animIndex)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        m_AnimSpriteStep[animIndex]++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_AnimSpriteStep[animIndex] &gt;= m_AnimSpriteInfo[animIndex].Length)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m_AnimSpriteStep[animIndex] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> step = m_AnimSpriteStep[animIndex];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> inlineSprite = m_AnimSpriteInfo[animIndex][step];</span><br><span class=\"line\">        Sprite sprite;</span><br><span class=\"line\">        m_nameToSpriteDict.TryGetValue(inlineSprite.name, <span class=\"keyword\">out</span> sprite);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> spriteGraphic = m_spriteGraphicArray[animIndex];</span><br><span class=\"line\">        spriteGraphic.SetMainTexture(sprite.texture);</span><br><span class=\"line\">        DrawSprite(spriteGraphic, <span class=\"keyword\">new</span> List&lt;InlineSpriteInfor&gt;()&#123;inlineSprite&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"超链接实现\"><a href=\"#超链接实现\" class=\"headerlink\" title=\"超链接实现\"></a>超链接实现</h2><h3 id=\"超链接处理流程\"><a href=\"#超链接处理流程\" class=\"headerlink\" title=\"超链接处理流程\"></a>超链接处理流程</h3><img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_TwT2GLPl7b.png\" class=\"\">\n<h3 id=\"响应点击事件\"><a href=\"#响应点击事件\" class=\"headerlink\" title=\"响应点击事件\"></a>响应点击事件</h3><ol>\n<li><p>UIGraphicText组件继承IPointerClickHandler接口，实现OnPointerClick方法</p>\n</li>\n<li><p>RectTransformUtility.ScreenPointToLocalPointInRectangle方法将屏幕坐标转成local坐标</p>\n</li>\n<li><p>判断是否点击在包围盒上，从而响应预先绑定的点击事件</p>\n</li>\n</ol>\n<p>源代码</p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/UIGraphicText__lKh67xRzm.cs\">UIGraphicText.cs</a></p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/UIGraphicTextSpritesMgr_VeAnnPQruV.cs\">UIGraphicTextSpritesMgr.cs</a></p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/EmojiSpriteAsset_m_7Wcnb4Es.cs\">EmojiSpriteAsset.cs</a></p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/UIGraphicTextSprites_SJ0ts213El.cs\">UIGraphicTextSprites.cs</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#ugui-text组件实现图文混排\">UGUI Text组件实现图文混排</a><ul>\n<li><a href=\"#实现图文混排原理\">实现图文混排原理</a><ul>\n<li><a href=\"#quad标签的使用\">quad标签的使用</a></li>\n</ul>\n</li>\n<li><a href=\"#渲染内嵌图片\">渲染内嵌图片</a><ul>\n<li><a href=\"#文字渲染原理\">文字渲染原理</a></li>\n<li><a href=\"#流程讲解\">流程讲解</a></li>\n<li><a href=\"#代码实现\">代码实现</a></li>\n</ul>\n</li>\n<li><a href=\"#超链接实现\">超链接实现</a><ul>\n<li><a href=\"#超链接处理流程\">超链接处理流程</a></li>\n<li><a href=\"#响应点击事件\">响应点击事件</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"UGUI-Text组件实现图文混排\"><a href=\"#UGUI-Text组件实现图文混排\" class=\"headerlink\" title=\"UGUI Text组件实现图文混排\"></a>UGUI Text组件实现图文混排</h1><h2 id=\"实现图文混排原理\"><a href=\"#实现图文混排原理\" class=\"headerlink\" title=\"实现图文混排原理\"></a>实现图文混排原理</h2><p>Unity手册上介绍UI系统和传统的GUI系统都支持<a target=\"_blank\" rel=\"noopener\" href=\"https://docs.unity3d.com/2017.4/Documentation/Manual/StyledText.html\" title=\"富文本\">富文本</a>，Text、GUIStyle、GUIText和TextMesh类上有rich text的设置选项，开启它后Unity会解析文本中标记标签。</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image__hVtRDjd_h.png\" class=\"\">\n<p>unity中支持的文本标签如下：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_yhRARumho4.png\" class=\"\">\n<p>其中quad标签可以渲染出行内内嵌的图片，但是只是对TextMesh组件有效。</p>\n<blockquote>\n<p>This is only useful for text meshes and renders an image inline with the text.</p>\n</blockquote>\n<p>TextMesh是用来生成3D图形字体，不能直接用在UI Canvas下。</p>\n<blockquote>\n<p>Text Meshes can be used for rendering road signs, graffiti etc. The Text Mesh places text in the 3D scene. To make generic 2D text for GUIs, use a <a href=\"class-GUIText.html\" title=\"GUI Text\">GUI Text</a> component instead.</p>\n</blockquote>\n<p>2D文本渲染需要用GUI Text组件，它属于传统GUI系统，UI系统（即UGUI）下的Text组件也是一样的用途，正如本节开头说到他们都有rich text的设置。</p>\n<p>但是UI的文本组件并不支持内嵌的图片，使用quad标签会出现乱码。好在UGUI开源，可以通过重写Text组件以支持渲染内嵌图片的效果。</p>\n<h3 id=\"quad标签的使用\"><a href=\"#quad标签的使用\" class=\"headerlink\" title=\"quad标签的使用\"></a>quad标签的使用</h3><blockquote>\n<p>\\<quad material=1 size=20 x=0.1 y=0.1 width=0.5 height=0.5></p>\n</blockquote>\n<p>material：渲染组件上引用的材质，值为材质数组的下表，从0开始。</p>\n<p>size：决定内嵌图片的像素大小。</p>\n<p>x/y/width/height：决定材质贴图上渲染矩形区域的偏移和大小，它们的value代表百分比，类似于uv坐标。</p>\n<p>经过测试得知，实际渲染图片大小的关系：图片像素大小 = size *（width/height）。</p>\n<p>可以参考这篇<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/tom_221x/article/details/113456808\" title=\"文章\">文章</a>来推测。</p>\n<p>使用在UI Text组件上会出现乱码，其实乱码是字体贴图，放大后可以看见贴图上的文字，只不过缩放太小所以看不到。</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_rVuWhoO_3B.png\" class=\"\">\n<p>打开rich text设置才会解析标签，否则不解析：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_7M009fCb6d.png\" class=\"\">\n<h2 id=\"渲染内嵌图片\"><a href=\"#渲染内嵌图片\" class=\"headerlink\" title=\"渲染内嵌图片\"></a>渲染内嵌图片</h2><p>虽然quad在UI上渲染不出图片，但是可以定义渲染区域大小，可以作为占位符。</p>\n<p>借助这个特效，渲染内嵌图片可以分三步：</p>\n<ol>\n<li><p>使用quad标签占位</p>\n</li>\n<li><p>去除乱码</p>\n</li>\n<li><p>使用MaskableGraphic类渲染贴图，放置于占位符位置上</p>\n</li>\n</ol>\n<p>项目规定，在渲染贴图之前，需要将所有用到的贴图打到一个spriteAsset上，并且将它引用到UIGraphicTextSprite组件上，UIGraphicTextSprite组件继承MaskableGraphic类，具体使用过程参考这篇<a target=\"_blank\" rel=\"noopener\" href=\"http://wiki.info/pages/viewpage.action?pageId=13736289\" title=\"文章\">文章</a>。</p>\n<h3 id=\"文字渲染原理\"><a href=\"#文字渲染原理\" class=\"headerlink\" title=\"文字渲染原理\"></a>文字渲染原理</h3><img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_n9LveM62tZ.png\" class=\"\">\n<p>1.左边文本会生成100个顶点数据，100来自假设，但顶点数肯定是4的倍数</p>\n<p>2.前8个顶点代表两个中文的位置</p>\n<p>3.后面的顶点都是quad标签的顶点，但是unity会做处理，只有前4个代表quad标签的区域，后面顶点位置都位于一个点上，不会渲染内容</p>\n<h3 id=\"流程讲解\"><a href=\"#流程讲解\" class=\"headerlink\" title=\"流程讲解\"></a>流程讲解</h3><p>UGUI Text组件渲染文字代码流程图：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_hn-XI1mBjn.png\" class=\"\">\n<p>重写渲染流程：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_0ifY5wkaqd.png\" class=\"\">\n<p>重写渲染流程详细介绍：</p>\n<img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_OTeaUItO0F.png\" class=\"\">\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>正则表达式匹配quad标签</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> Regex m_spriteTagRegex =</span><br><span class=\"line\">          <span class=\"keyword\">new</span> Regex(<span class=\"string\">@&quot;&lt;quad name=(.+?) size=(\\d*\\.?\\d+%?) width=(\\d*\\.?\\d+%?) des=(.+?) /&gt;&quot;</span>, RegexOptions.Singleline);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (Match match <span class=\"keyword\">in</span> m_spriteTagRegex.Matches(m_OutputText))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>清除乱码</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//清楚乱码</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; listTagInfor.Count; i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//UGUIText不支持&lt;quad/&gt;标签，表现为乱码，我这里将他的uv全设置为0,清除乱码</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> m = listTagInfor[i].index * <span class=\"number\">4</span>; m &lt; listTagInfor[i].index * <span class=\"number\">4</span> + <span class=\"number\">4</span>; m++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//超出可视范围的不会绘制，即leftBottomIndex &gt;= verts.Count。</span></span><br><span class=\"line\">        <span class=\"comment\">//所以这里不需要处理也不应该处理。若处理，则数组越界。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m &gt;= verts.Count)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        UIVertex tempVertex = verts[m];</span><br><span class=\"line\">        tempVertex.uv0 = Vector2.zero;</span><br><span class=\"line\">        verts[m] = tempVertex;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>生成网格数据</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">struct</span> InlineSpriteInfor</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 文字的最后的位置</span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> Vector3 textpos;</span><br><span class=\"line\">      <span class=\"comment\">// 4 顶点 </span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> Vector3[] vertices;</span><br><span class=\"line\">      <span class=\"comment\">//4 uv</span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> Vector2[] uv;</span><br><span class=\"line\">      <span class=\"comment\">//6 三角顶点顺序</span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">int</span>[] triangles;</span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> isEmptySprite;</span><br><span class=\"line\">      <span class=\"keyword\">public</span> Texture texture;</span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CalcQuadTag</span>(<span class=\"params\">IList&lt;UIVertex&gt; verts</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      m_AnimSpriteInfo = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"built_in\">int</span>, InlineSpriteInfor[]&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//通过标签信息来设置需要绘制的图片的信息</span></span><br><span class=\"line\">      listSprite = <span class=\"keyword\">new</span> List&lt;InlineSpriteInfor&gt;();</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; listTagInfor.Count; i++)</span><br><span class=\"line\">      &#123;                                                                         <span class=\"number\">3</span>    <span class=\"number\">2</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> leftBottomIndex = ((listTagInfor[i].index + <span class=\"number\">1</span>) * <span class=\"number\">4</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (leftBottomIndex &gt;= verts.Count)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          InlineSpriteInfor tempSprite = <span class=\"keyword\">new</span> InlineSpriteInfor();</span><br><span class=\"line\">          tempSprite.name = listTagInfor[i].name;</span><br><span class=\"line\">          tempSprite.isEmptySprite = listTagInfor[i].isEmptySprite;</span><br><span class=\"line\">          </span><br><span class=\"line\">          tempSprite.textpos = verts[leftBottomIndex].position;</span><br><span class=\"line\">          <span class=\"comment\">//设置图片的位置</span></span><br><span class=\"line\">          tempSprite.vertices = <span class=\"keyword\">new</span> Vector3[<span class=\"number\">4</span>];</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> Vector3(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> Vector3(listTagInfor[i].size.x, listTagInfor[i].size.y, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> Vector3(listTagInfor[i].size.x, <span class=\"number\">0</span>, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\">          tempSprite.vertices[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> Vector3(<span class=\"number\">0</span>, listTagInfor[i].size.y, <span class=\"number\">0</span>) + tempSprite.textpos;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">//计算其uv</span></span><br><span class=\"line\">          Sprite sprite;</span><br><span class=\"line\">          m_nameToSpriteDict.TryGetValue(listTagInfor[i].name, <span class=\"keyword\">out</span> sprite);</span><br><span class=\"line\">          Rect spriteRect = sprite.textureRect;</span><br><span class=\"line\">          Texture texSource = sprite.texture;</span><br><span class=\"line\">          tempSprite.texture = texSource;</span><br><span class=\"line\">          Vector2 texSize = <span class=\"keyword\">new</span> Vector2(texSource.width, texSource.height);</span><br><span class=\"line\">          tempSprite.uv = <span class=\"keyword\">new</span> Vector2[<span class=\"number\">4</span>];</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> Vector2(spriteRect.x / texSize.x, spriteRect.y / texSize.y);</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> Vector2((spriteRect.x + spriteRect.width) / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> Vector2((spriteRect.x + spriteRect.width) / texSize.x, spriteRect.y / texSize.y);</span><br><span class=\"line\">          tempSprite.uv[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> Vector2(spriteRect.x / texSize.x, (spriteRect.y + spriteRect.height) / texSize.y);</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">//声明三角顶点所需要的数组</span></span><br><span class=\"line\">          tempSprite.triangles = <span class=\"keyword\">new</span> <span class=\"built_in\">int</span>[<span class=\"number\">6</span>];</span><br><span class=\"line\">          listSprite.Add(tempSprite);</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<p>渲染贴图</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DrawSprite</span>(<span class=\"params\">UIGraphicTextSprites spriteGraphic, List&lt;InlineSpriteInfor&gt; listInlineSprite</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> spriteCanvasRenderer = spriteGraphic.GetComponentInChildren&lt;CanvasRenderer&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (m_spriteMesh == <span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    m_spriteMesh = <span class=\"keyword\">new</span> Mesh();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (drawSpriteVertices == <span class=\"literal\">null</span>) drawSpriteVertices = <span class=\"keyword\">new</span> List&lt;Vector3&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">else</span> drawSpriteVertices.Clear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (drawSpriteUv == <span class=\"literal\">null</span>) drawSpriteUv = <span class=\"keyword\">new</span> List&lt;Vector2&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">else</span> drawSpriteUv.Clear();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (drawSpriteTriangles == <span class=\"literal\">null</span>) drawSpriteTriangles = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">int</span>&gt;();</span><br><span class=\"line\">  <span class=\"keyword\">else</span> drawSpriteTriangles.Clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; listInlineSprite.Count; i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> inlineSprite = listInlineSprite[i];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (inlineSprite.isEmptySprite) </span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; inlineSprite.vertices.Length; j++)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          drawSpriteVertices.Add(inlineSprite.vertices[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; inlineSprite.uv.Length; j++)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          drawSpriteUv.Add(inlineSprite.uv[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; inlineSprite.triangles.Length; j++)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          drawSpriteTriangles.Add(inlineSprite.triangles[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//计算顶点绘制顺序</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; drawSpriteTriangles.Count; i++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i % <span class=\"number\">6</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> num = i / <span class=\"number\">6</span>;</span><br><span class=\"line\">          drawSpriteTriangles[i] = <span class=\"number\">0</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">1</span>] = <span class=\"number\">1</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">2</span>] = <span class=\"number\">2</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\"></span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">3</span>] = <span class=\"number\">1</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">4</span>] = <span class=\"number\">0</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">          drawSpriteTriangles[i + <span class=\"number\">5</span>] = <span class=\"number\">3</span> + <span class=\"number\">4</span> * num;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  m_spriteMesh.vertices = drawSpriteVertices.ToArray ();</span><br><span class=\"line\">  m_spriteMesh.uv = drawSpriteUv.ToArray ();</span><br><span class=\"line\">  m_spriteMesh.triangles = drawSpriteTriangles.ToArray ();</span><br><span class=\"line\">  </span><br><span class=\"line\">  spriteCanvasRenderer.SetMesh(m_spriteMesh);</span><br><span class=\"line\">  spriteGraphic.UpdateMaterial();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>动态图片是按一定频率切换主贴图和网格数据实现的</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">float</span> fTime = <span class=\"number\">0.0f</span>;</span><br><span class=\"line\"><span class=\"comment\">//int iIndex = 0;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(listSprite == <span class=\"literal\">null</span> || listSprite.Count==<span class=\"number\">0</span> || m_hasAnimTag==<span class=\"literal\">false</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">fTime += Time.deltaTime;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (fTime &gt;= DynamicTagSwitchInterval)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        UpdateAnimSprite();</span><br><span class=\"line\">  fTime = <span class=\"number\">0.0f</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">UpdateAnimSprite</span>()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; m_AnimIndex.Count; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> animIndex = m_AnimIndex[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!m_AnimSpriteInfo.ContainsKey(animIndex)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        m_AnimSpriteStep[animIndex]++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_AnimSpriteStep[animIndex] &gt;= m_AnimSpriteInfo[animIndex].Length)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            m_AnimSpriteStep[animIndex] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> step = m_AnimSpriteStep[animIndex];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> inlineSprite = m_AnimSpriteInfo[animIndex][step];</span><br><span class=\"line\">        Sprite sprite;</span><br><span class=\"line\">        m_nameToSpriteDict.TryGetValue(inlineSprite.name, <span class=\"keyword\">out</span> sprite);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> spriteGraphic = m_spriteGraphicArray[animIndex];</span><br><span class=\"line\">        spriteGraphic.SetMainTexture(sprite.texture);</span><br><span class=\"line\">        DrawSprite(spriteGraphic, <span class=\"keyword\">new</span> List&lt;InlineSpriteInfor&gt;()&#123;inlineSprite&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"超链接实现\"><a href=\"#超链接实现\" class=\"headerlink\" title=\"超链接实现\"></a>超链接实现</h2><h3 id=\"超链接处理流程\"><a href=\"#超链接处理流程\" class=\"headerlink\" title=\"超链接处理流程\"></a>超链接处理流程</h3><img src=\"/2021/12/27/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E5%8E%9F%E7%90%86%E7%AF%87/image_TwT2GLPl7b.png\" class=\"\">\n<h3 id=\"响应点击事件\"><a href=\"#响应点击事件\" class=\"headerlink\" title=\"响应点击事件\"></a>响应点击事件</h3><ol>\n<li><p>UIGraphicText组件继承IPointerClickHandler接口，实现OnPointerClick方法</p>\n</li>\n<li><p>RectTransformUtility.ScreenPointToLocalPointInRectangle方法将屏幕坐标转成local坐标</p>\n</li>\n<li><p>判断是否点击在包围盒上，从而响应预先绑定的点击事件</p>\n</li>\n</ol>\n<p>源代码</p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/UIGraphicText__lKh67xRzm.cs\">UIGraphicText.cs</a></p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/UIGraphicTextSpritesMgr_VeAnnPQruV.cs\">UIGraphicTextSpritesMgr.cs</a></p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/EmojiSpriteAsset_m_7Wcnb4Es.cs\">EmojiSpriteAsset.cs</a></p>\n<p><a href=\"UGUIText组件实现图文混排——原理篇/UIGraphicTextSprites_SJ0ts213El.cs\">UIGraphicTextSprites.cs</a></p>"},{"title":"UIGraphicText表情渲染优化-支持表情来自不同图集","date":"2021-02-24T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n# UIGraphicText表情渲染优化-支持表情来自不同图集\n\n## 背景\n\n当表情sprite没有被打到一个图集上，UIGraphicText类渲染表情或会错乱。\n\n## 表情的渲染过程\n\n聊天窗口表情的渲染过程大致如何：\n\n![C:\\\\454369bfe7514cfa65961fb357f5a99b](UGUIText组件实现图文混排——项目优化/620aa9915773654e87c2ed8201b32736.png)\n\n-   ui_emoji.asset包含所有emoji sprite信息，包括name、引用等。\n-   UIGraphicText主要是解析输入内容字符串，得出sprite的顶点几何参数等。\n-   CanvasRender应是负责渲染的。\n-   UIGraphicTextSprites继承自[MaskableGraphic](https://docs.unity.cn/cn/current/ScriptReference/UI.MaskableGraphic.html)类，这个类的作用是管理源图集，截取源图集的某个区域。\n\n获取源图集的代码：\n\n![C:\\\\5c36480e5fd362841a9fda19931987af](UGUIText组件实现图文混排——项目优化/78a230605169741abf7b42ea9cf32942.tmp)\n\n表情的源图集引用被写死，默认第一个表情的源图集。这就是当表情来自其他图集时，显示错误的原因。\n\n## 优化\n\n目前所有的表情会打到一个图集上，下面两种场景会导致表情打到不同图集：\n\n1.  表情增加，直到2048\\*2048大小装不下（图集maxsize为2048是项目组限制，因为在一些低端机上加载不了大于2048的图）\n2.  表情sprite的tag不一致，需要用别的tag划分表情（tag决定sprite所属的图集）\n\n为了满足以上两种场景，需要对这个系统进行优化，支持表情来自不同的图集。\n\n有两个步骤：\n\n1.  更改mainTexture获取\n\n展开源码\n\n// UIGraphicTextSprites.cs\n\npublic class UIGraphicTextSprites : MaskableGraphic\n\n{\n\n...\n\nprivate Texture \\_texSource; // 由外部传入改写mainTexture\n\npublic override Texture mainTexture\n\n{\n\nget\n\n{\n\nif (m_spriteAsset == null)\n\nreturn s_WhiteTexture;\n\nif (m_spriteAsset.listSpriteInfor == null \\|\\| m_spriteAsset.listSpriteInfor.Count == 0)\n\n{\n\nreturn s_WhiteTexture;\n\n}\n\nif (_texSource != null)\n\n{\n\nreturn \\_texSource;\n\n}\n\nvar texSource = m_spriteAsset.listSpriteInfor[0].sprite.texture;\n\nif (texSource == null)\n\nreturn s_WhiteTexture;\n\nelse\n\nreturn texSource;\n\n}\n\n}\n\npublic void SetMainTexture(Texture t)\n\n{\n\n\\_texSource = t;\n\n}\n\n...\n\n}\n\n2\\. 更改对应的源图集\n\n展开源码\n\n// UIGraphicText.cs\n\nvoid CalcQuadTag(IList\\<UIVertex\\> verts)\n\n{\n\n...\n\nTexture texSource = listSpriteInfor[0].sprite.texture;\n\nfor (int j = 0; j \\< listSpriteInfor.Count; j++)\n\n{\n\n//通过标签的名称去索引spriteAsset里所对应的sprite的名称\n\nif (listTagInfor[i].name == listSpriteInfor[j].name) {\n\nspriteRect = listSpriteInfor[j].sprite.textureRect;\n\ntexSource = listSpriteInfor[j].sprite.texture;\n\nm_spriteGraphic.SetMainTexture(texSource);\n\nbreak;\n\n}\n\n}\n\n// Texture texSource = listSpriteInfor[0].sprite.texture;\n\n...\n\n}\n\n\n### 0714更新\n\n发现动态表情在pc上不打图集情况下显示有问题，表情并没有想预期一样动，有的甚至不动。\n\n动态表情的实现原理是按一定的帧率改变sprite的顶点、uv和网格三角形参数，通过CanvasRenderer组件和UIGraphicTextSprites组件（继承MaskableGraphic），截取源图texture（sprite或者图集）得到显示区域。\n\n原因是不打图集时，动态表情的源图获取不正确，截取的源图永远是第一张。\n\n解决方法是在Update()中切换sprite截取参数同时改变UIGraphicTextSprites的mainTexture。\n\n更改commit看这里。\n\n## 检验\n\n我的unity目标平台是android，先将textureImporter对安卓图片压缩格式更改代码注释掉，否则更改压缩格式会被重置。\n\n![C:\\\\c1b700ce925f6782c0ddfad7ebaff16d](UGUIText组件实现图文混排——项目优化/3dbde81dd90a3504f493adc0aeb348f5.tmp)\n\n更改1601_1,1602_1,1603_1的format为区别于ETC2_RGBA8的其他格式，测试不同压缩格式打包不同图集的场景：\n\n![C:\\\\fe883496df4caacccd989e850fccc8ca](UGUIText组件实现图文混排——项目优化/03742e0b64e62e87941c5ff8441ee88a.tmp)\n\n更改1604_1,1605_1的tag，测试不同tag打包到不同图集的场景：\n\n![C:\\\\f99e868b89f1a7b9ab3af6a5c9fdac1d](UGUIText组件实现图文混排——项目优化/c9e62ff06615ff8ab9ab1b914721f146.tmp)\n\nsprite packer上pack图集，检查表情的确打到了三个不同的图集：\n\n![C:\\\\883fd9a545661d5f5811d3edac78f399](UGUIText组件实现图文混排——项目优化/10e1096586b53ed9f944e9d5101c4241.tmp)![C:\\\\c0bf4aa254b650fb676bfa50bfbec15f](UGUIText组件实现图文混排——项目优化/dc44a3625ccf585467173a0f9a8e574f.tmp) ![C:\\\\094eb1d714aefb5993a488081c763144](UGUIText组件实现图文混排——项目优化/1b0894421887907ac78332cb31b81eca.tmp) ![C:\\\\e4ce0e9521e9b633c56b0d462711f669](UGUIText组件实现图文混排——项目优化/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp)\n\npc上测试，正常。\n\n安卓上测试，正常。\n","source":"_posts/UGUIText组件实现图文混排——项目优化.md","raw":"---\ntitle: UIGraphicText表情渲染优化-支持表情来自不同图集\ndate: 2021-02-25\ntags: [UGUI,emoji,图文混排]\ncategories: [Unity游戏开发,业务系统,图文混排]\n---\n\n<!-- more -->\n\n\n# UIGraphicText表情渲染优化-支持表情来自不同图集\n\n## 背景\n\n当表情sprite没有被打到一个图集上，UIGraphicText类渲染表情或会错乱。\n\n## 表情的渲染过程\n\n聊天窗口表情的渲染过程大致如何：\n\n![C:\\\\454369bfe7514cfa65961fb357f5a99b](UGUIText组件实现图文混排——项目优化/620aa9915773654e87c2ed8201b32736.png)\n\n-   ui_emoji.asset包含所有emoji sprite信息，包括name、引用等。\n-   UIGraphicText主要是解析输入内容字符串，得出sprite的顶点几何参数等。\n-   CanvasRender应是负责渲染的。\n-   UIGraphicTextSprites继承自[MaskableGraphic](https://docs.unity.cn/cn/current/ScriptReference/UI.MaskableGraphic.html)类，这个类的作用是管理源图集，截取源图集的某个区域。\n\n获取源图集的代码：\n\n![C:\\\\5c36480e5fd362841a9fda19931987af](UGUIText组件实现图文混排——项目优化/78a230605169741abf7b42ea9cf32942.tmp)\n\n表情的源图集引用被写死，默认第一个表情的源图集。这就是当表情来自其他图集时，显示错误的原因。\n\n## 优化\n\n目前所有的表情会打到一个图集上，下面两种场景会导致表情打到不同图集：\n\n1.  表情增加，直到2048\\*2048大小装不下（图集maxsize为2048是项目组限制，因为在一些低端机上加载不了大于2048的图）\n2.  表情sprite的tag不一致，需要用别的tag划分表情（tag决定sprite所属的图集）\n\n为了满足以上两种场景，需要对这个系统进行优化，支持表情来自不同的图集。\n\n有两个步骤：\n\n1.  更改mainTexture获取\n\n展开源码\n\n// UIGraphicTextSprites.cs\n\npublic class UIGraphicTextSprites : MaskableGraphic\n\n{\n\n...\n\nprivate Texture \\_texSource; // 由外部传入改写mainTexture\n\npublic override Texture mainTexture\n\n{\n\nget\n\n{\n\nif (m_spriteAsset == null)\n\nreturn s_WhiteTexture;\n\nif (m_spriteAsset.listSpriteInfor == null \\|\\| m_spriteAsset.listSpriteInfor.Count == 0)\n\n{\n\nreturn s_WhiteTexture;\n\n}\n\nif (_texSource != null)\n\n{\n\nreturn \\_texSource;\n\n}\n\nvar texSource = m_spriteAsset.listSpriteInfor[0].sprite.texture;\n\nif (texSource == null)\n\nreturn s_WhiteTexture;\n\nelse\n\nreturn texSource;\n\n}\n\n}\n\npublic void SetMainTexture(Texture t)\n\n{\n\n\\_texSource = t;\n\n}\n\n...\n\n}\n\n2\\. 更改对应的源图集\n\n展开源码\n\n// UIGraphicText.cs\n\nvoid CalcQuadTag(IList\\<UIVertex\\> verts)\n\n{\n\n...\n\nTexture texSource = listSpriteInfor[0].sprite.texture;\n\nfor (int j = 0; j \\< listSpriteInfor.Count; j++)\n\n{\n\n//通过标签的名称去索引spriteAsset里所对应的sprite的名称\n\nif (listTagInfor[i].name == listSpriteInfor[j].name) {\n\nspriteRect = listSpriteInfor[j].sprite.textureRect;\n\ntexSource = listSpriteInfor[j].sprite.texture;\n\nm_spriteGraphic.SetMainTexture(texSource);\n\nbreak;\n\n}\n\n}\n\n// Texture texSource = listSpriteInfor[0].sprite.texture;\n\n...\n\n}\n\n\n### 0714更新\n\n发现动态表情在pc上不打图集情况下显示有问题，表情并没有想预期一样动，有的甚至不动。\n\n动态表情的实现原理是按一定的帧率改变sprite的顶点、uv和网格三角形参数，通过CanvasRenderer组件和UIGraphicTextSprites组件（继承MaskableGraphic），截取源图texture（sprite或者图集）得到显示区域。\n\n原因是不打图集时，动态表情的源图获取不正确，截取的源图永远是第一张。\n\n解决方法是在Update()中切换sprite截取参数同时改变UIGraphicTextSprites的mainTexture。\n\n更改commit看这里。\n\n## 检验\n\n我的unity目标平台是android，先将textureImporter对安卓图片压缩格式更改代码注释掉，否则更改压缩格式会被重置。\n\n![C:\\\\c1b700ce925f6782c0ddfad7ebaff16d](UGUIText组件实现图文混排——项目优化/3dbde81dd90a3504f493adc0aeb348f5.tmp)\n\n更改1601_1,1602_1,1603_1的format为区别于ETC2_RGBA8的其他格式，测试不同压缩格式打包不同图集的场景：\n\n![C:\\\\fe883496df4caacccd989e850fccc8ca](UGUIText组件实现图文混排——项目优化/03742e0b64e62e87941c5ff8441ee88a.tmp)\n\n更改1604_1,1605_1的tag，测试不同tag打包到不同图集的场景：\n\n![C:\\\\f99e868b89f1a7b9ab3af6a5c9fdac1d](UGUIText组件实现图文混排——项目优化/c9e62ff06615ff8ab9ab1b914721f146.tmp)\n\nsprite packer上pack图集，检查表情的确打到了三个不同的图集：\n\n![C:\\\\883fd9a545661d5f5811d3edac78f399](UGUIText组件实现图文混排——项目优化/10e1096586b53ed9f944e9d5101c4241.tmp)![C:\\\\c0bf4aa254b650fb676bfa50bfbec15f](UGUIText组件实现图文混排——项目优化/dc44a3625ccf585467173a0f9a8e574f.tmp) ![C:\\\\094eb1d714aefb5993a488081c763144](UGUIText组件实现图文混排——项目优化/1b0894421887907ac78332cb31b81eca.tmp) ![C:\\\\e4ce0e9521e9b633c56b0d462711f669](UGUIText组件实现图文混排——项目优化/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp)\n\npc上测试，正常。\n\n安卓上测试，正常。\n","slug":"UGUIText组件实现图文混排——项目优化","published":1,"updated":"2022-12-07T13:35:21.071Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv43000zmcq0841w46oa","content":"<span id=\"more\"></span>\n<h1 id=\"UIGraphicText表情渲染优化-支持表情来自不同图集\"><a href=\"#UIGraphicText表情渲染优化-支持表情来自不同图集\" class=\"headerlink\" title=\"UIGraphicText表情渲染优化-支持表情来自不同图集\"></a>UIGraphicText表情渲染优化-支持表情来自不同图集</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>当表情sprite没有被打到一个图集上，UIGraphicText类渲染表情或会错乱。</p>\n<h2 id=\"表情的渲染过程\"><a href=\"#表情的渲染过程\" class=\"headerlink\" title=\"表情的渲染过程\"></a>表情的渲染过程</h2><p>聊天窗口表情的渲染过程大致如何：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/620aa9915773654e87c2ed8201b32736.png\" class=\"\" title=\"C:\\\\454369bfe7514cfa65961fb357f5a99b\">\n<ul>\n<li>ui_emoji.asset包含所有emoji sprite信息，包括name、引用等。</li>\n<li>UIGraphicText主要是解析输入内容字符串，得出sprite的顶点几何参数等。</li>\n<li>CanvasRender应是负责渲染的。</li>\n<li>UIGraphicTextSprites继承自<a target=\"_blank\" rel=\"noopener\" href=\"https://docs.unity.cn/cn/current/ScriptReference/UI.MaskableGraphic.html\">MaskableGraphic</a>类，这个类的作用是管理源图集，截取源图集的某个区域。</li>\n</ul>\n<p>获取源图集的代码：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/78a230605169741abf7b42ea9cf32942.tmp\" class=\"\" title=\"C:\\\\5c36480e5fd362841a9fda19931987af\">\n<p>表情的源图集引用被写死，默认第一个表情的源图集。这就是当表情来自其他图集时，显示错误的原因。</p>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>目前所有的表情会打到一个图集上，下面两种场景会导致表情打到不同图集：</p>\n<ol>\n<li>表情增加，直到2048*2048大小装不下（图集maxsize为2048是项目组限制，因为在一些低端机上加载不了大于2048的图）</li>\n<li>表情sprite的tag不一致，需要用别的tag划分表情（tag决定sprite所属的图集）</li>\n</ol>\n<p>为了满足以上两种场景，需要对这个系统进行优化，支持表情来自不同的图集。</p>\n<p>有两个步骤：</p>\n<ol>\n<li>更改mainTexture获取</li>\n</ol>\n<p>展开源码</p>\n<p>// UIGraphicTextSprites.cs</p>\n<p>public class UIGraphicTextSprites : MaskableGraphic</p>\n<p>{</p>\n<p>…</p>\n<p>private Texture _texSource; // 由外部传入改写mainTexture</p>\n<p>public override Texture mainTexture</p>\n<p>{</p>\n<p>get</p>\n<p>{</p>\n<p>if (m_spriteAsset == null)</p>\n<p>return s_WhiteTexture;</p>\n<p>if (m_spriteAsset.listSpriteInfor == null || m_spriteAsset.listSpriteInfor.Count == 0)</p>\n<p>{</p>\n<p>return s_WhiteTexture;</p>\n<p>}</p>\n<p>if (_texSource != null)</p>\n<p>{</p>\n<p>return _texSource;</p>\n<p>}</p>\n<p>var texSource = m_spriteAsset.listSpriteInfor[0].sprite.texture;</p>\n<p>if (texSource == null)</p>\n<p>return s_WhiteTexture;</p>\n<p>else</p>\n<p>return texSource;</p>\n<p>}</p>\n<p>}</p>\n<p>public void SetMainTexture(Texture t)</p>\n<p>{</p>\n<p>_texSource = t;</p>\n<p>}</p>\n<p>…</p>\n<p>}</p>\n<p>2. 更改对应的源图集</p>\n<p>展开源码</p>\n<p>// UIGraphicText.cs</p>\n<p>void CalcQuadTag(IList\\&lt;UIVertex> verts)</p>\n<p>{</p>\n<p>…</p>\n<p>Texture texSource = listSpriteInfor[0].sprite.texture;</p>\n<p>for (int j = 0; j \\&lt; listSpriteInfor.Count; j++)</p>\n<p>{</p>\n<p>//通过标签的名称去索引spriteAsset里所对应的sprite的名称</p>\n<p>if (listTagInfor[i].name == listSpriteInfor[j].name) {</p>\n<p>spriteRect = listSpriteInfor[j].sprite.textureRect;</p>\n<p>texSource = listSpriteInfor[j].sprite.texture;</p>\n<p>m_spriteGraphic.SetMainTexture(texSource);</p>\n<p>break;</p>\n<p>}</p>\n<p>}</p>\n<p>// Texture texSource = listSpriteInfor[0].sprite.texture;</p>\n<p>…</p>\n<p>}</p>\n<h3 id=\"0714更新\"><a href=\"#0714更新\" class=\"headerlink\" title=\"0714更新\"></a>0714更新</h3><p>发现动态表情在pc上不打图集情况下显示有问题，表情并没有想预期一样动，有的甚至不动。</p>\n<p>动态表情的实现原理是按一定的帧率改变sprite的顶点、uv和网格三角形参数，通过CanvasRenderer组件和UIGraphicTextSprites组件（继承MaskableGraphic），截取源图texture（sprite或者图集）得到显示区域。</p>\n<p>原因是不打图集时，动态表情的源图获取不正确，截取的源图永远是第一张。</p>\n<p>解决方法是在Update()中切换sprite截取参数同时改变UIGraphicTextSprites的mainTexture。</p>\n<p>更改commit看这里。</p>\n<h2 id=\"检验\"><a href=\"#检验\" class=\"headerlink\" title=\"检验\"></a>检验</h2><p>我的unity目标平台是android，先将textureImporter对安卓图片压缩格式更改代码注释掉，否则更改压缩格式会被重置。</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/3dbde81dd90a3504f493adc0aeb348f5.tmp\" class=\"\" title=\"C:\\\\c1b700ce925f6782c0ddfad7ebaff16d\">\n<p>更改1601_1,1602_1,1603_1的format为区别于ETC2_RGBA8的其他格式，测试不同压缩格式打包不同图集的场景：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/03742e0b64e62e87941c5ff8441ee88a.tmp\" class=\"\" title=\"C:\\\\fe883496df4caacccd989e850fccc8ca\">\n<p>更改1604_1,1605_1的tag，测试不同tag打包到不同图集的场景：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/c9e62ff06615ff8ab9ab1b914721f146.tmp\" class=\"\" title=\"C:\\\\f99e868b89f1a7b9ab3af6a5c9fdac1d\">\n<p>sprite packer上pack图集，检查表情的确打到了三个不同的图集：</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化/10e1096586b53ed9f944e9d5101c4241.tmp\" alt=\"C:\\\\883fd9a545661d5f5811d3edac78f399\"><img src=\"UGUIText组件实现图文混排——项目优化/dc44a3625ccf585467173a0f9a8e574f.tmp\" alt=\"C:\\\\c0bf4aa254b650fb676bfa50bfbec15f\"> <img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/1b0894421887907ac78332cb31b81eca.tmp\" class=\"\" title=\"C:\\\\094eb1d714aefb5993a488081c763144\"> <img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp\" class=\"\" title=\"C:\\\\e4ce0e9521e9b633c56b0d462711f669\"></p>\n<p>pc上测试，正常。</p>\n<p>安卓上测试，正常。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"UIGraphicText表情渲染优化-支持表情来自不同图集\"><a href=\"#UIGraphicText表情渲染优化-支持表情来自不同图集\" class=\"headerlink\" title=\"UIGraphicText表情渲染优化-支持表情来自不同图集\"></a>UIGraphicText表情渲染优化-支持表情来自不同图集</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>当表情sprite没有被打到一个图集上，UIGraphicText类渲染表情或会错乱。</p>\n<h2 id=\"表情的渲染过程\"><a href=\"#表情的渲染过程\" class=\"headerlink\" title=\"表情的渲染过程\"></a>表情的渲染过程</h2><p>聊天窗口表情的渲染过程大致如何：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/620aa9915773654e87c2ed8201b32736.png\" class=\"\" title=\"C:\\\\454369bfe7514cfa65961fb357f5a99b\">\n<ul>\n<li>ui_emoji.asset包含所有emoji sprite信息，包括name、引用等。</li>\n<li>UIGraphicText主要是解析输入内容字符串，得出sprite的顶点几何参数等。</li>\n<li>CanvasRender应是负责渲染的。</li>\n<li>UIGraphicTextSprites继承自<a target=\"_blank\" rel=\"noopener\" href=\"https://docs.unity.cn/cn/current/ScriptReference/UI.MaskableGraphic.html\">MaskableGraphic</a>类，这个类的作用是管理源图集，截取源图集的某个区域。</li>\n</ul>\n<p>获取源图集的代码：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/78a230605169741abf7b42ea9cf32942.tmp\" class=\"\" title=\"C:\\\\5c36480e5fd362841a9fda19931987af\">\n<p>表情的源图集引用被写死，默认第一个表情的源图集。这就是当表情来自其他图集时，显示错误的原因。</p>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>目前所有的表情会打到一个图集上，下面两种场景会导致表情打到不同图集：</p>\n<ol>\n<li>表情增加，直到2048*2048大小装不下（图集maxsize为2048是项目组限制，因为在一些低端机上加载不了大于2048的图）</li>\n<li>表情sprite的tag不一致，需要用别的tag划分表情（tag决定sprite所属的图集）</li>\n</ol>\n<p>为了满足以上两种场景，需要对这个系统进行优化，支持表情来自不同的图集。</p>\n<p>有两个步骤：</p>\n<ol>\n<li>更改mainTexture获取</li>\n</ol>\n<p>展开源码</p>\n<p>// UIGraphicTextSprites.cs</p>\n<p>public class UIGraphicTextSprites : MaskableGraphic</p>\n<p>{</p>\n<p>…</p>\n<p>private Texture _texSource; // 由外部传入改写mainTexture</p>\n<p>public override Texture mainTexture</p>\n<p>{</p>\n<p>get</p>\n<p>{</p>\n<p>if (m_spriteAsset == null)</p>\n<p>return s_WhiteTexture;</p>\n<p>if (m_spriteAsset.listSpriteInfor == null || m_spriteAsset.listSpriteInfor.Count == 0)</p>\n<p>{</p>\n<p>return s_WhiteTexture;</p>\n<p>}</p>\n<p>if (_texSource != null)</p>\n<p>{</p>\n<p>return _texSource;</p>\n<p>}</p>\n<p>var texSource = m_spriteAsset.listSpriteInfor[0].sprite.texture;</p>\n<p>if (texSource == null)</p>\n<p>return s_WhiteTexture;</p>\n<p>else</p>\n<p>return texSource;</p>\n<p>}</p>\n<p>}</p>\n<p>public void SetMainTexture(Texture t)</p>\n<p>{</p>\n<p>_texSource = t;</p>\n<p>}</p>\n<p>…</p>\n<p>}</p>\n<p>2. 更改对应的源图集</p>\n<p>展开源码</p>\n<p>// UIGraphicText.cs</p>\n<p>void CalcQuadTag(IList\\&lt;UIVertex> verts)</p>\n<p>{</p>\n<p>…</p>\n<p>Texture texSource = listSpriteInfor[0].sprite.texture;</p>\n<p>for (int j = 0; j \\&lt; listSpriteInfor.Count; j++)</p>\n<p>{</p>\n<p>//通过标签的名称去索引spriteAsset里所对应的sprite的名称</p>\n<p>if (listTagInfor[i].name == listSpriteInfor[j].name) {</p>\n<p>spriteRect = listSpriteInfor[j].sprite.textureRect;</p>\n<p>texSource = listSpriteInfor[j].sprite.texture;</p>\n<p>m_spriteGraphic.SetMainTexture(texSource);</p>\n<p>break;</p>\n<p>}</p>\n<p>}</p>\n<p>// Texture texSource = listSpriteInfor[0].sprite.texture;</p>\n<p>…</p>\n<p>}</p>\n<h3 id=\"0714更新\"><a href=\"#0714更新\" class=\"headerlink\" title=\"0714更新\"></a>0714更新</h3><p>发现动态表情在pc上不打图集情况下显示有问题，表情并没有想预期一样动，有的甚至不动。</p>\n<p>动态表情的实现原理是按一定的帧率改变sprite的顶点、uv和网格三角形参数，通过CanvasRenderer组件和UIGraphicTextSprites组件（继承MaskableGraphic），截取源图texture（sprite或者图集）得到显示区域。</p>\n<p>原因是不打图集时，动态表情的源图获取不正确，截取的源图永远是第一张。</p>\n<p>解决方法是在Update()中切换sprite截取参数同时改变UIGraphicTextSprites的mainTexture。</p>\n<p>更改commit看这里。</p>\n<h2 id=\"检验\"><a href=\"#检验\" class=\"headerlink\" title=\"检验\"></a>检验</h2><p>我的unity目标平台是android，先将textureImporter对安卓图片压缩格式更改代码注释掉，否则更改压缩格式会被重置。</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/3dbde81dd90a3504f493adc0aeb348f5.tmp\" class=\"\" title=\"C:\\\\c1b700ce925f6782c0ddfad7ebaff16d\">\n<p>更改1601_1,1602_1,1603_1的format为区别于ETC2_RGBA8的其他格式，测试不同压缩格式打包不同图集的场景：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/03742e0b64e62e87941c5ff8441ee88a.tmp\" class=\"\" title=\"C:\\\\fe883496df4caacccd989e850fccc8ca\">\n<p>更改1604_1,1605_1的tag，测试不同tag打包到不同图集的场景：</p>\n<img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/c9e62ff06615ff8ab9ab1b914721f146.tmp\" class=\"\" title=\"C:\\\\f99e868b89f1a7b9ab3af6a5c9fdac1d\">\n<p>sprite packer上pack图集，检查表情的确打到了三个不同的图集：</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化/10e1096586b53ed9f944e9d5101c4241.tmp\" alt=\"C:\\\\883fd9a545661d5f5811d3edac78f399\"><img src=\"UGUIText组件实现图文混排——项目优化/dc44a3625ccf585467173a0f9a8e574f.tmp\" alt=\"C:\\\\c0bf4aa254b650fb676bfa50bfbec15f\"> <img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/1b0894421887907ac78332cb31b81eca.tmp\" class=\"\" title=\"C:\\\\094eb1d714aefb5993a488081c763144\"> <img src=\"/2021/02/25/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp\" class=\"\" title=\"C:\\\\e4ce0e9521e9b633c56b0d462711f669\"></p>\n<p>pc上测试，正常。</p>\n<p>安卓上测试，正常。</p>"},{"title":"图文混排-支持多个不同emoji来自不同图集和散图","date":"2021-11-10T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n\n# 图文混排-支持多个不同emoji来自不同图集和散图\n\n之前针对表情不支持多图集的问题优化过一板，可以回顾下这篇文章：[UIGraphicText组件表情渲染优化-支持表情来之不同图集](./UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96.md)\n\n但后来发现图文混排场景不支持多个不同emoji来自不同图集和散图，下面是问题描述。\n\nPC下不打图集下发现，多个不同的emoji标签显示同一个emoji sprite。\n\n![C:\\\\88534cc8db9f6423fece8da47e598d32](UGUIText组件实现图文混排——项目优化2/4c1118d6cb20ce80f3105b95502455c3.tmp)![C:\\\\53fba21b5a4b310d26e01fbc92b36a2e](UGUIText组件实现图文混排——项目优化2/7975d77768f66dd5b45d9ef03f066e45.tmp)\n\n## **原因分析**\n\n每个text组件下只分配一个maskableGraphic组件，如其名可遮罩图形，该组件可以根据uv坐标来截取自身mainTexture上的区域，以渲染emoji。\n\n当不打图集，uv坐标就代表整个mainTexture，也就是整张单图，而mainTexture同一时刻只能代表一张单图。\n\n所以在这个例子中，所有的emoji都显示同一张图。\n\n按照这个原理，即使在打图集的情况下，假如一行消息上的emoji并不是都来自同一个图集，那么显示上也会出问题。\n\n## **解决方案**\n\n这个问题的瓶颈在于maskableGraphic组件的数量，可以根据不同的texture来分配maskableGraphic组件来渲染emoji，这样就可以支持同时显示来自不同texture的emoji。\n\n问题分拆：\n\n1.  分组，按sprite的texture的不同来决定分配UIGraphiTextSprites组件（继承maskableGraphic），每个UIGraphiTextSprites组件负责渲染这个texture的emoji。\n2.  重构drawSprites方法逻辑以支持分组渲染emoji\n3.  处理Update逻辑以支持渲染动图\n\n但实践结果发现，按texture不同来分配maskableGraphic组件的方式并不适用于多个动图（动图即多个sprite切换）的情况，比如不打图集情况下有两个一样的动图emoji，当动图切换sprite texture时候，因为按texture分配组件所以两个一样的动图emoji只分配一个组件，前一个emoji会被后一个emoji抢占组件而不渲染。\n\n![C:\\\\7a9f240bac4cb3c6c539f8bad0891c12](UGUIText组件实现图文混排——项目优化2/1b068870d1847acdd585381f49f9127c.tmp)![C:\\\\ad1a89e4b9b73f312118b21ca07bab28](UGUIText组件实现图文混排——项目优化2/b1ea6bccc642c35685b0dd0f5671b303.tmp)\n\n所以最终的方案为：\n\n1.  区分静图和动图的emoji，静图的emoji按texture分配UIGraphiTextSprites组件\n2.  动图的emoji分配单独一个UIGraphiTextSprites组件负责渲染\n3.  UIGraphicTextSpritesMgr池化UIGraphiTextSprites组件，避免在消息列表界面频繁创建和销毁组件\n\n分配策略代码如下：\n\n展开源码\n\nUIGraphicTextSprites[] m_spriteGraphicArray;\n\nprivate void DistributeTextSprite(List\\<SpriteTagInfor\\> listTag)\n\n{\n\nvar staticEmojiDict = new Dictionary\\<Texture, List\\<int\\>\\>();\n\nfor (var i=0;i\\<listTag.Count;i++)\n\n{\n\nvar tagInfor = listTag[i];\n\nvar animTagArray = m_AnimSpriteTag[i];\n\nif (animTagArray.Length\\>1)\n\n{\n\nvar textSprite = CreateTextSprite();\n\nm_spriteGraphicArray[i] = textSprite;\n\n}\n\nelse\n\n{\n\nvar sprite = m_nameToSpriteDict[tagInfor.name];\n\nif (!staticEmojiDict.ContainsKey(sprite.texture)) {\n\nstaticEmojiDict[sprite.texture] = new List\\<int\\>(){i};\n\n}\n\nstaticEmojiDict[sprite.texture].Add(i);\n\n}\n\n}\n\n// staticEmojiDict：{texture1=\\>{1，3}}\n\nforeach (var item in staticEmojiDict)\n\n{\n\nvar textSprite = CreateTextSprite();\n\nforeach(var index in item.Value)\n\n{\n\nm_spriteGraphicArray[index] = textSprite;\n\n}\n\n}\n\n}\n\n## **具体实现**\n\n下面以渲染emoji的流程图来讲解讲解改造的过程。\n\n![C:\\\\97daee51e2a0dadd426d08e8b46ba127](UGUIText组件实现图文混排——项目优化2/ebee4d8b9fab274fef93b95923e20796.tmp)\n\n## **遇到的问题**\n\n1.OnPopulateMesh中控制gameObject的slefActive会导致报错，与onLogCallBack有冲突。\n\n![C:\\\\c8e64b17c775c1a4b44a6a7a6a6354ce](UGUIText组件实现图文混排——项目优化2/949ad5756a5f0697641e2267e54b6a2a.tmp)\n\n“Trying to add...... while we are already inside a graphic rebuild loop.”这句是UGUI的报错，查看了UGUI的源码发现：\n\ncanvas刷新时，会将标记为dirty的UIElement重新构建，graphic类会生成网格时调用OnPopulateMesh。\n\n这个时候Graphic类不能更改，更改会让canvas标记setDirty加入到待构建队列，而且在canvas刷新时不能禁止入队，所以报了这个错。\n\n下面是UGUI的源码：\n\n![C:\\\\8671ab9a5ec1a5f297a33d24684e119b](UGUIText组件实现图文混排——项目优化2/889d57042c9cc1a988458e23e9617d0d.tmp)![C:\\\\3b0528cdf5e8756c32cae65ffba1311a](UGUIText组件实现图文混排——项目优化2/1ed8f3c55e63efc72047784eb2d715ec.tmp)![C:\\\\11e53b162bb563663b032f919afcab4a](UGUIText组件实现图文混排——项目优化2/35ae882a0e5fee85b1b7a102ba20976f.tmp)\n\n即在OnPopulateMesh方法里不能执行setActive方法，可以放在base.SetCVerticesDirty方法里做。\n\n2.重用cell的带sprite的text没有更新文本，只是调用了disable后调了enable，log：\n\n因为是base.SetVertivesDirty方法前提前返回了，没有加入到canvas的待更新队列不会更新图形，所以不能这样做。\n\n下面是引起错误的代码：\n\n![C:\\\\56a7b0dce321c762d3affc70752c805e](UGUIText组件实现图文混排——项目优化2/83146e7e3d81e80b54edf6131d3203e2.tmp)\n\n## **测试与规范**\n\n兼容性排查，排查修改类被引用到的地方是否正常？\n\n修改了UIGraphicText类和UIGraphicTextSprites类，两者在项目中引用我排查过，变更代码不会引起错误，但UIGraphicTextSprites类属于submodule的框架层，不知其他项目的情况。\n\n测试案例如下：\n\n![C:\\\\b7c4a0986ebdf75c5ef2bda9f54b15cf](UGUIText组件实现图文混排——项目优化2/584310e308f30ee963734e6004db68f7.tmp)![C:\\\\b40295cf6f4f0fca2550c102727d03d9](UGUIText组件实现图文混排——项目优化2/4e5d287689f65ab1fab2db8cc848f218.tmp)\n\n观察在各个平台上打不打图集的表现情况：\n\n| **测试平台** | **是否打图集** | **结果（emoji、多个emoji、动图emoji、动图）** |\n|--------------|----------------|-----------------------------------------------|\n| Unity        | 不打           | 正常                                          |\n| Unity        | 打             | 正常                                          |\n| 安卓         | 打             | 正常                                          |\n| IOS          | 打             | 正常                                          |\n","source":"_posts/UGUIText组件实现图文混排——项目优化2.md","raw":"---\ntitle: 图文混排-支持多个不同emoji来自不同图集和散图\ndate: 2021-11-11\ntags: [emoji,图文混排]\ncategories: [Unity游戏开发,业务系统,图文混排]\n---\n\n<!-- more -->\n\n\n\n# 图文混排-支持多个不同emoji来自不同图集和散图\n\n之前针对表情不支持多图集的问题优化过一板，可以回顾下这篇文章：[UIGraphicText组件表情渲染优化-支持表情来之不同图集](./UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96.md)\n\n但后来发现图文混排场景不支持多个不同emoji来自不同图集和散图，下面是问题描述。\n\nPC下不打图集下发现，多个不同的emoji标签显示同一个emoji sprite。\n\n![C:\\\\88534cc8db9f6423fece8da47e598d32](UGUIText组件实现图文混排——项目优化2/4c1118d6cb20ce80f3105b95502455c3.tmp)![C:\\\\53fba21b5a4b310d26e01fbc92b36a2e](UGUIText组件实现图文混排——项目优化2/7975d77768f66dd5b45d9ef03f066e45.tmp)\n\n## **原因分析**\n\n每个text组件下只分配一个maskableGraphic组件，如其名可遮罩图形，该组件可以根据uv坐标来截取自身mainTexture上的区域，以渲染emoji。\n\n当不打图集，uv坐标就代表整个mainTexture，也就是整张单图，而mainTexture同一时刻只能代表一张单图。\n\n所以在这个例子中，所有的emoji都显示同一张图。\n\n按照这个原理，即使在打图集的情况下，假如一行消息上的emoji并不是都来自同一个图集，那么显示上也会出问题。\n\n## **解决方案**\n\n这个问题的瓶颈在于maskableGraphic组件的数量，可以根据不同的texture来分配maskableGraphic组件来渲染emoji，这样就可以支持同时显示来自不同texture的emoji。\n\n问题分拆：\n\n1.  分组，按sprite的texture的不同来决定分配UIGraphiTextSprites组件（继承maskableGraphic），每个UIGraphiTextSprites组件负责渲染这个texture的emoji。\n2.  重构drawSprites方法逻辑以支持分组渲染emoji\n3.  处理Update逻辑以支持渲染动图\n\n但实践结果发现，按texture不同来分配maskableGraphic组件的方式并不适用于多个动图（动图即多个sprite切换）的情况，比如不打图集情况下有两个一样的动图emoji，当动图切换sprite texture时候，因为按texture分配组件所以两个一样的动图emoji只分配一个组件，前一个emoji会被后一个emoji抢占组件而不渲染。\n\n![C:\\\\7a9f240bac4cb3c6c539f8bad0891c12](UGUIText组件实现图文混排——项目优化2/1b068870d1847acdd585381f49f9127c.tmp)![C:\\\\ad1a89e4b9b73f312118b21ca07bab28](UGUIText组件实现图文混排——项目优化2/b1ea6bccc642c35685b0dd0f5671b303.tmp)\n\n所以最终的方案为：\n\n1.  区分静图和动图的emoji，静图的emoji按texture分配UIGraphiTextSprites组件\n2.  动图的emoji分配单独一个UIGraphiTextSprites组件负责渲染\n3.  UIGraphicTextSpritesMgr池化UIGraphiTextSprites组件，避免在消息列表界面频繁创建和销毁组件\n\n分配策略代码如下：\n\n展开源码\n\nUIGraphicTextSprites[] m_spriteGraphicArray;\n\nprivate void DistributeTextSprite(List\\<SpriteTagInfor\\> listTag)\n\n{\n\nvar staticEmojiDict = new Dictionary\\<Texture, List\\<int\\>\\>();\n\nfor (var i=0;i\\<listTag.Count;i++)\n\n{\n\nvar tagInfor = listTag[i];\n\nvar animTagArray = m_AnimSpriteTag[i];\n\nif (animTagArray.Length\\>1)\n\n{\n\nvar textSprite = CreateTextSprite();\n\nm_spriteGraphicArray[i] = textSprite;\n\n}\n\nelse\n\n{\n\nvar sprite = m_nameToSpriteDict[tagInfor.name];\n\nif (!staticEmojiDict.ContainsKey(sprite.texture)) {\n\nstaticEmojiDict[sprite.texture] = new List\\<int\\>(){i};\n\n}\n\nstaticEmojiDict[sprite.texture].Add(i);\n\n}\n\n}\n\n// staticEmojiDict：{texture1=\\>{1，3}}\n\nforeach (var item in staticEmojiDict)\n\n{\n\nvar textSprite = CreateTextSprite();\n\nforeach(var index in item.Value)\n\n{\n\nm_spriteGraphicArray[index] = textSprite;\n\n}\n\n}\n\n}\n\n## **具体实现**\n\n下面以渲染emoji的流程图来讲解讲解改造的过程。\n\n![C:\\\\97daee51e2a0dadd426d08e8b46ba127](UGUIText组件实现图文混排——项目优化2/ebee4d8b9fab274fef93b95923e20796.tmp)\n\n## **遇到的问题**\n\n1.OnPopulateMesh中控制gameObject的slefActive会导致报错，与onLogCallBack有冲突。\n\n![C:\\\\c8e64b17c775c1a4b44a6a7a6a6354ce](UGUIText组件实现图文混排——项目优化2/949ad5756a5f0697641e2267e54b6a2a.tmp)\n\n“Trying to add...... while we are already inside a graphic rebuild loop.”这句是UGUI的报错，查看了UGUI的源码发现：\n\ncanvas刷新时，会将标记为dirty的UIElement重新构建，graphic类会生成网格时调用OnPopulateMesh。\n\n这个时候Graphic类不能更改，更改会让canvas标记setDirty加入到待构建队列，而且在canvas刷新时不能禁止入队，所以报了这个错。\n\n下面是UGUI的源码：\n\n![C:\\\\8671ab9a5ec1a5f297a33d24684e119b](UGUIText组件实现图文混排——项目优化2/889d57042c9cc1a988458e23e9617d0d.tmp)![C:\\\\3b0528cdf5e8756c32cae65ffba1311a](UGUIText组件实现图文混排——项目优化2/1ed8f3c55e63efc72047784eb2d715ec.tmp)![C:\\\\11e53b162bb563663b032f919afcab4a](UGUIText组件实现图文混排——项目优化2/35ae882a0e5fee85b1b7a102ba20976f.tmp)\n\n即在OnPopulateMesh方法里不能执行setActive方法，可以放在base.SetCVerticesDirty方法里做。\n\n2.重用cell的带sprite的text没有更新文本，只是调用了disable后调了enable，log：\n\n因为是base.SetVertivesDirty方法前提前返回了，没有加入到canvas的待更新队列不会更新图形，所以不能这样做。\n\n下面是引起错误的代码：\n\n![C:\\\\56a7b0dce321c762d3affc70752c805e](UGUIText组件实现图文混排——项目优化2/83146e7e3d81e80b54edf6131d3203e2.tmp)\n\n## **测试与规范**\n\n兼容性排查，排查修改类被引用到的地方是否正常？\n\n修改了UIGraphicText类和UIGraphicTextSprites类，两者在项目中引用我排查过，变更代码不会引起错误，但UIGraphicTextSprites类属于submodule的框架层，不知其他项目的情况。\n\n测试案例如下：\n\n![C:\\\\b7c4a0986ebdf75c5ef2bda9f54b15cf](UGUIText组件实现图文混排——项目优化2/584310e308f30ee963734e6004db68f7.tmp)![C:\\\\b40295cf6f4f0fca2550c102727d03d9](UGUIText组件实现图文混排——项目优化2/4e5d287689f65ab1fab2db8cc848f218.tmp)\n\n观察在各个平台上打不打图集的表现情况：\n\n| **测试平台** | **是否打图集** | **结果（emoji、多个emoji、动图emoji、动图）** |\n|--------------|----------------|-----------------------------------------------|\n| Unity        | 不打           | 正常                                          |\n| Unity        | 打             | 正常                                          |\n| 安卓         | 打             | 正常                                          |\n| IOS          | 打             | 正常                                          |\n","slug":"UGUIText组件实现图文混排——项目优化2","published":1,"updated":"2022-12-07T13:37:02.710Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv430011mcq0aoyd7xxc","content":"<span id=\"more\"></span>\n<h1 id=\"图文混排-支持多个不同emoji来自不同图集和散图\"><a href=\"#图文混排-支持多个不同emoji来自不同图集和散图\" class=\"headerlink\" title=\"图文混排-支持多个不同emoji来自不同图集和散图\"></a>图文混排-支持多个不同emoji来自不同图集和散图</h1><p>之前针对表情不支持多图集的问题优化过一板，可以回顾下这篇文章：<a href=\"./UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96.md\">UIGraphicText组件表情渲染优化-支持表情来之不同图集</a></p>\n<p>但后来发现图文混排场景不支持多个不同emoji来自不同图集和散图，下面是问题描述。</p>\n<p>PC下不打图集下发现，多个不同的emoji标签显示同一个emoji sprite。</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/4c1118d6cb20ce80f3105b95502455c3.tmp\" alt=\"C:\\\\88534cc8db9f6423fece8da47e598d32\"><img src=\"UGUIText组件实现图文混排——项目优化2/7975d77768f66dd5b45d9ef03f066e45.tmp\" alt=\"C:\\\\53fba21b5a4b310d26e01fbc92b36a2e\"></p>\n<h2 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a><strong>原因分析</strong></h2><p>每个text组件下只分配一个maskableGraphic组件，如其名可遮罩图形，该组件可以根据uv坐标来截取自身mainTexture上的区域，以渲染emoji。</p>\n<p>当不打图集，uv坐标就代表整个mainTexture，也就是整张单图，而mainTexture同一时刻只能代表一张单图。</p>\n<p>所以在这个例子中，所有的emoji都显示同一张图。</p>\n<p>按照这个原理，即使在打图集的情况下，假如一行消息上的emoji并不是都来自同一个图集，那么显示上也会出问题。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a><strong>解决方案</strong></h2><p>这个问题的瓶颈在于maskableGraphic组件的数量，可以根据不同的texture来分配maskableGraphic组件来渲染emoji，这样就可以支持同时显示来自不同texture的emoji。</p>\n<p>问题分拆：</p>\n<ol>\n<li>分组，按sprite的texture的不同来决定分配UIGraphiTextSprites组件（继承maskableGraphic），每个UIGraphiTextSprites组件负责渲染这个texture的emoji。</li>\n<li>重构drawSprites方法逻辑以支持分组渲染emoji</li>\n<li>处理Update逻辑以支持渲染动图</li>\n</ol>\n<p>但实践结果发现，按texture不同来分配maskableGraphic组件的方式并不适用于多个动图（动图即多个sprite切换）的情况，比如不打图集情况下有两个一样的动图emoji，当动图切换sprite texture时候，因为按texture分配组件所以两个一样的动图emoji只分配一个组件，前一个emoji会被后一个emoji抢占组件而不渲染。</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/1b068870d1847acdd585381f49f9127c.tmp\" alt=\"C:\\\\7a9f240bac4cb3c6c539f8bad0891c12\"><img src=\"UGUIText组件实现图文混排——项目优化2/b1ea6bccc642c35685b0dd0f5671b303.tmp\" alt=\"C:\\\\ad1a89e4b9b73f312118b21ca07bab28\"></p>\n<p>所以最终的方案为：</p>\n<ol>\n<li>区分静图和动图的emoji，静图的emoji按texture分配UIGraphiTextSprites组件</li>\n<li>动图的emoji分配单独一个UIGraphiTextSprites组件负责渲染</li>\n<li>UIGraphicTextSpritesMgr池化UIGraphiTextSprites组件，避免在消息列表界面频繁创建和销毁组件</li>\n</ol>\n<p>分配策略代码如下：</p>\n<p>展开源码</p>\n<p>UIGraphicTextSprites[] m_spriteGraphicArray;</p>\n<p>private void DistributeTextSprite(List\\&lt;SpriteTagInfor> listTag)</p>\n<p>{</p>\n<p>var staticEmojiDict = new Dictionary\\&lt;Texture, List\\&lt;int>>();</p>\n<p>for (var i=0;i\\&lt;listTag.Count;i++)</p>\n<p>{</p>\n<p>var tagInfor = listTag[i];</p>\n<p>var animTagArray = m_AnimSpriteTag[i];</p>\n<p>if (animTagArray.Length>1)</p>\n<p>{</p>\n<p>var textSprite = CreateTextSprite();</p>\n<p>m_spriteGraphicArray[i] = textSprite;</p>\n<p>}</p>\n<p>else</p>\n<p>{</p>\n<p>var sprite = m_nameToSpriteDict[tagInfor.name];</p>\n<p>if (!staticEmojiDict.ContainsKey(sprite.texture)) {</p>\n<p>staticEmojiDict[sprite.texture] = new List\\&lt;int>(){i};</p>\n<p>}</p>\n<p>staticEmojiDict[sprite.texture].Add(i);</p>\n<p>}</p>\n<p>}</p>\n<p>// staticEmojiDict：{texture1=>{1，3}}</p>\n<p>foreach (var item in staticEmojiDict)</p>\n<p>{</p>\n<p>var textSprite = CreateTextSprite();</p>\n<p>foreach(var index in item.Value)</p>\n<p>{</p>\n<p>m_spriteGraphicArray[index] = textSprite;</p>\n<p>}</p>\n<p>}</p>\n<p>}</p>\n<h2 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a><strong>具体实现</strong></h2><p>下面以渲染emoji的流程图来讲解讲解改造的过程。</p>\n<img src=\"/2021/11/11/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%962/ebee4d8b9fab274fef93b95923e20796.tmp\" class=\"\" title=\"C:\\\\97daee51e2a0dadd426d08e8b46ba127\">\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a><strong>遇到的问题</strong></h2><p>1.OnPopulateMesh中控制gameObject的slefActive会导致报错，与onLogCallBack有冲突。</p>\n<img src=\"/2021/11/11/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%962/949ad5756a5f0697641e2267e54b6a2a.tmp\" class=\"\" title=\"C:\\\\c8e64b17c775c1a4b44a6a7a6a6354ce\">\n<p>“Trying to add…… while we are already inside a graphic rebuild loop.”这句是UGUI的报错，查看了UGUI的源码发现：</p>\n<p>canvas刷新时，会将标记为dirty的UIElement重新构建，graphic类会生成网格时调用OnPopulateMesh。</p>\n<p>这个时候Graphic类不能更改，更改会让canvas标记setDirty加入到待构建队列，而且在canvas刷新时不能禁止入队，所以报了这个错。</p>\n<p>下面是UGUI的源码：</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/889d57042c9cc1a988458e23e9617d0d.tmp\" alt=\"C:\\\\8671ab9a5ec1a5f297a33d24684e119b\"><img src=\"UGUIText组件实现图文混排——项目优化2/1ed8f3c55e63efc72047784eb2d715ec.tmp\" alt=\"C:\\\\3b0528cdf5e8756c32cae65ffba1311a\"><img src=\"UGUIText组件实现图文混排——项目优化2/35ae882a0e5fee85b1b7a102ba20976f.tmp\" alt=\"C:\\\\11e53b162bb563663b032f919afcab4a\"></p>\n<p>即在OnPopulateMesh方法里不能执行setActive方法，可以放在base.SetCVerticesDirty方法里做。</p>\n<p>2.重用cell的带sprite的text没有更新文本，只是调用了disable后调了enable，log：</p>\n<p>因为是base.SetVertivesDirty方法前提前返回了，没有加入到canvas的待更新队列不会更新图形，所以不能这样做。</p>\n<p>下面是引起错误的代码：</p>\n<img src=\"/2021/11/11/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%962/83146e7e3d81e80b54edf6131d3203e2.tmp\" class=\"\" title=\"C:\\\\56a7b0dce321c762d3affc70752c805e\">\n<h2 id=\"测试与规范\"><a href=\"#测试与规范\" class=\"headerlink\" title=\"测试与规范\"></a><strong>测试与规范</strong></h2><p>兼容性排查，排查修改类被引用到的地方是否正常？</p>\n<p>修改了UIGraphicText类和UIGraphicTextSprites类，两者在项目中引用我排查过，变更代码不会引起错误，但UIGraphicTextSprites类属于submodule的框架层，不知其他项目的情况。</p>\n<p>测试案例如下：</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/584310e308f30ee963734e6004db68f7.tmp\" alt=\"C:\\\\b7c4a0986ebdf75c5ef2bda9f54b15cf\"><img src=\"UGUIText组件实现图文混排——项目优化2/4e5d287689f65ab1fab2db8cc848f218.tmp\" alt=\"C:\\\\b40295cf6f4f0fca2550c102727d03d9\"></p>\n<p>观察在各个平台上打不打图集的表现情况：</p>\n<table>\n<thead>\n<tr>\n<th><strong>测试平台</strong></th>\n<th><strong>是否打图集</strong></th>\n<th><strong>结果（emoji、多个emoji、动图emoji、动图）</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Unity</td>\n<td>不打</td>\n<td>正常</td>\n</tr>\n<tr>\n<td>Unity</td>\n<td>打</td>\n<td>正常</td>\n</tr>\n<tr>\n<td>安卓</td>\n<td>打</td>\n<td>正常</td>\n</tr>\n<tr>\n<td>IOS</td>\n<td>打</td>\n<td>正常</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"图文混排-支持多个不同emoji来自不同图集和散图\"><a href=\"#图文混排-支持多个不同emoji来自不同图集和散图\" class=\"headerlink\" title=\"图文混排-支持多个不同emoji来自不同图集和散图\"></a>图文混排-支持多个不同emoji来自不同图集和散图</h1><p>之前针对表情不支持多图集的问题优化过一板，可以回顾下这篇文章：<a href=\"./UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%96.md\">UIGraphicText组件表情渲染优化-支持表情来之不同图集</a></p>\n<p>但后来发现图文混排场景不支持多个不同emoji来自不同图集和散图，下面是问题描述。</p>\n<p>PC下不打图集下发现，多个不同的emoji标签显示同一个emoji sprite。</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/4c1118d6cb20ce80f3105b95502455c3.tmp\" alt=\"C:\\\\88534cc8db9f6423fece8da47e598d32\"><img src=\"UGUIText组件实现图文混排——项目优化2/7975d77768f66dd5b45d9ef03f066e45.tmp\" alt=\"C:\\\\53fba21b5a4b310d26e01fbc92b36a2e\"></p>\n<h2 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a><strong>原因分析</strong></h2><p>每个text组件下只分配一个maskableGraphic组件，如其名可遮罩图形，该组件可以根据uv坐标来截取自身mainTexture上的区域，以渲染emoji。</p>\n<p>当不打图集，uv坐标就代表整个mainTexture，也就是整张单图，而mainTexture同一时刻只能代表一张单图。</p>\n<p>所以在这个例子中，所有的emoji都显示同一张图。</p>\n<p>按照这个原理，即使在打图集的情况下，假如一行消息上的emoji并不是都来自同一个图集，那么显示上也会出问题。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a><strong>解决方案</strong></h2><p>这个问题的瓶颈在于maskableGraphic组件的数量，可以根据不同的texture来分配maskableGraphic组件来渲染emoji，这样就可以支持同时显示来自不同texture的emoji。</p>\n<p>问题分拆：</p>\n<ol>\n<li>分组，按sprite的texture的不同来决定分配UIGraphiTextSprites组件（继承maskableGraphic），每个UIGraphiTextSprites组件负责渲染这个texture的emoji。</li>\n<li>重构drawSprites方法逻辑以支持分组渲染emoji</li>\n<li>处理Update逻辑以支持渲染动图</li>\n</ol>\n<p>但实践结果发现，按texture不同来分配maskableGraphic组件的方式并不适用于多个动图（动图即多个sprite切换）的情况，比如不打图集情况下有两个一样的动图emoji，当动图切换sprite texture时候，因为按texture分配组件所以两个一样的动图emoji只分配一个组件，前一个emoji会被后一个emoji抢占组件而不渲染。</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/1b068870d1847acdd585381f49f9127c.tmp\" alt=\"C:\\\\7a9f240bac4cb3c6c539f8bad0891c12\"><img src=\"UGUIText组件实现图文混排——项目优化2/b1ea6bccc642c35685b0dd0f5671b303.tmp\" alt=\"C:\\\\ad1a89e4b9b73f312118b21ca07bab28\"></p>\n<p>所以最终的方案为：</p>\n<ol>\n<li>区分静图和动图的emoji，静图的emoji按texture分配UIGraphiTextSprites组件</li>\n<li>动图的emoji分配单独一个UIGraphiTextSprites组件负责渲染</li>\n<li>UIGraphicTextSpritesMgr池化UIGraphiTextSprites组件，避免在消息列表界面频繁创建和销毁组件</li>\n</ol>\n<p>分配策略代码如下：</p>\n<p>展开源码</p>\n<p>UIGraphicTextSprites[] m_spriteGraphicArray;</p>\n<p>private void DistributeTextSprite(List\\&lt;SpriteTagInfor> listTag)</p>\n<p>{</p>\n<p>var staticEmojiDict = new Dictionary\\&lt;Texture, List\\&lt;int>>();</p>\n<p>for (var i=0;i\\&lt;listTag.Count;i++)</p>\n<p>{</p>\n<p>var tagInfor = listTag[i];</p>\n<p>var animTagArray = m_AnimSpriteTag[i];</p>\n<p>if (animTagArray.Length>1)</p>\n<p>{</p>\n<p>var textSprite = CreateTextSprite();</p>\n<p>m_spriteGraphicArray[i] = textSprite;</p>\n<p>}</p>\n<p>else</p>\n<p>{</p>\n<p>var sprite = m_nameToSpriteDict[tagInfor.name];</p>\n<p>if (!staticEmojiDict.ContainsKey(sprite.texture)) {</p>\n<p>staticEmojiDict[sprite.texture] = new List\\&lt;int>(){i};</p>\n<p>}</p>\n<p>staticEmojiDict[sprite.texture].Add(i);</p>\n<p>}</p>\n<p>}</p>\n<p>// staticEmojiDict：{texture1=>{1，3}}</p>\n<p>foreach (var item in staticEmojiDict)</p>\n<p>{</p>\n<p>var textSprite = CreateTextSprite();</p>\n<p>foreach(var index in item.Value)</p>\n<p>{</p>\n<p>m_spriteGraphicArray[index] = textSprite;</p>\n<p>}</p>\n<p>}</p>\n<p>}</p>\n<h2 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a><strong>具体实现</strong></h2><p>下面以渲染emoji的流程图来讲解讲解改造的过程。</p>\n<img src=\"/2021/11/11/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%962/ebee4d8b9fab274fef93b95923e20796.tmp\" class=\"\" title=\"C:\\\\97daee51e2a0dadd426d08e8b46ba127\">\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a><strong>遇到的问题</strong></h2><p>1.OnPopulateMesh中控制gameObject的slefActive会导致报错，与onLogCallBack有冲突。</p>\n<img src=\"/2021/11/11/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%962/949ad5756a5f0697641e2267e54b6a2a.tmp\" class=\"\" title=\"C:\\\\c8e64b17c775c1a4b44a6a7a6a6354ce\">\n<p>“Trying to add…… while we are already inside a graphic rebuild loop.”这句是UGUI的报错，查看了UGUI的源码发现：</p>\n<p>canvas刷新时，会将标记为dirty的UIElement重新构建，graphic类会生成网格时调用OnPopulateMesh。</p>\n<p>这个时候Graphic类不能更改，更改会让canvas标记setDirty加入到待构建队列，而且在canvas刷新时不能禁止入队，所以报了这个错。</p>\n<p>下面是UGUI的源码：</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/889d57042c9cc1a988458e23e9617d0d.tmp\" alt=\"C:\\\\8671ab9a5ec1a5f297a33d24684e119b\"><img src=\"UGUIText组件实现图文混排——项目优化2/1ed8f3c55e63efc72047784eb2d715ec.tmp\" alt=\"C:\\\\3b0528cdf5e8756c32cae65ffba1311a\"><img src=\"UGUIText组件实现图文混排——项目优化2/35ae882a0e5fee85b1b7a102ba20976f.tmp\" alt=\"C:\\\\11e53b162bb563663b032f919afcab4a\"></p>\n<p>即在OnPopulateMesh方法里不能执行setActive方法，可以放在base.SetCVerticesDirty方法里做。</p>\n<p>2.重用cell的带sprite的text没有更新文本，只是调用了disable后调了enable，log：</p>\n<p>因为是base.SetVertivesDirty方法前提前返回了，没有加入到canvas的待更新队列不会更新图形，所以不能这样做。</p>\n<p>下面是引起错误的代码：</p>\n<img src=\"/2021/11/11/UGUIText%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9B%BE%E6%96%87%E6%B7%B7%E6%8E%92%E2%80%94%E2%80%94%E9%A1%B9%E7%9B%AE%E4%BC%98%E5%8C%962/83146e7e3d81e80b54edf6131d3203e2.tmp\" class=\"\" title=\"C:\\\\56a7b0dce321c762d3affc70752c805e\">\n<h2 id=\"测试与规范\"><a href=\"#测试与规范\" class=\"headerlink\" title=\"测试与规范\"></a><strong>测试与规范</strong></h2><p>兼容性排查，排查修改类被引用到的地方是否正常？</p>\n<p>修改了UIGraphicText类和UIGraphicTextSprites类，两者在项目中引用我排查过，变更代码不会引起错误，但UIGraphicTextSprites类属于submodule的框架层，不知其他项目的情况。</p>\n<p>测试案例如下：</p>\n<p><img src=\"UGUIText组件实现图文混排——项目优化2/584310e308f30ee963734e6004db68f7.tmp\" alt=\"C:\\\\b7c4a0986ebdf75c5ef2bda9f54b15cf\"><img src=\"UGUIText组件实现图文混排——项目优化2/4e5d287689f65ab1fab2db8cc848f218.tmp\" alt=\"C:\\\\b40295cf6f4f0fca2550c102727d03d9\"></p>\n<p>观察在各个平台上打不打图集的表现情况：</p>\n<table>\n<thead>\n<tr>\n<th><strong>测试平台</strong></th>\n<th><strong>是否打图集</strong></th>\n<th><strong>结果（emoji、多个emoji、动图emoji、动图）</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Unity</td>\n<td>不打</td>\n<td>正常</td>\n</tr>\n<tr>\n<td>Unity</td>\n<td>打</td>\n<td>正常</td>\n</tr>\n<tr>\n<td>安卓</td>\n<td>打</td>\n<td>正常</td>\n</tr>\n<tr>\n<td>IOS</td>\n<td>打</td>\n<td>正常</td>\n</tr>\n</tbody>\n</table>"},{"title":"UIParticle@4.0.0研究","date":"2022-03-17T16:00:00.000Z","_content":"\n\n# UIParticle\\@4.0.0研究\n\n## 背景\n\nUIParticle刚开始引进项目中的版本是@3.3.10，发现的问题比较多，材质数不能超8个的问题也在github上提了[bug#122](https://github.com/mob-sakai/ParticleEffectForUGUI/issues/122 \"bug#122\")。\n\n<!-- more -->\n\n作者最近升级UIParticle到v4，解决了一些问题和增加了新特性，其中包括bug#122。\n\n所以来研究一下，这个新版本的优化内容对项目有没有价值，考虑是否有必要升级版本。\n\n## bug修复\n\n1.submesh can not over 8问题修复\n\n即使是使用很多材质的特效，都没有输出警告了。\n\n2.使用meshRenderer和uv动画实现的烟雾渲染层级不在UI layer问题\n\n使用meshRenderer的粒子不会被UIParticle渲染，因为UIParticle使用了新类UIParticleRenderer进行渲染，同样不会处理非粒子系统下的网格和材质。\n\n3.共享材质问题\n\n动画修改材质属性，共享材质不会同步变化，估计是内部实现已经不使用sharedMaterial属性。\n\n4.ParticleSystem的所有的粒子都能被UIParticle渲染出来吗？\n\n还是拿家具抽奖的那个特效ui\\_jiajuchoujiang来测试，依然有部分没有渲染出来，而且跟渲染顺序无关。\n\n5.勾选ignoreCanvasScale后不同分辨率下大小不对问题\n\n放弃了ignoreCanvasScale属性，重构了ui缩放逻辑，所以这么问题应该是解决了。\n\n## 新特性\n\n1.UI自适应缩放\n\n也就是上述第5点。\n\n2.新增吸引子组件\n\n可以吸引粒子沿着某种路径到某个位置，属于效果扩展上的新特性。\n\n3.网格共享组\n\n渲染大量相同粒子时可以使用相同的网格共享组，属于性能优化上的改进。\n\n4.add overlay window\n\noverlay window是unity2021.2开始提供的scene window的覆盖窗口特性，可以自定义菜单，unity2020没有这个特效。\n\n另外Inspector面板做了优化，去掉了IgnoreCanvasScale属性，新增了mesh sharing接口，也支持输出一些警告。\n\n详细看看[更新日志](https://github.com/mob-sakai/ParticleEffectForUGUI/releases \"更新日志\")。\n\n**有个问题就是，升级后需要对UIparticle特效的scale重新调整，这点比较麻烦。**\n","source":"_posts/UIParticle@4.0.0研究.md","raw":"---\ntitle: UIParticle@4.0.0研究\ndate: 2022-03-18\ntags: [UIParticle,特效]\ncategories: [Unity游戏开发,Unity,特效]\n---\n\n\n# UIParticle\\@4.0.0研究\n\n## 背景\n\nUIParticle刚开始引进项目中的版本是@3.3.10，发现的问题比较多，材质数不能超8个的问题也在github上提了[bug#122](https://github.com/mob-sakai/ParticleEffectForUGUI/issues/122 \"bug#122\")。\n\n<!-- more -->\n\n作者最近升级UIParticle到v4，解决了一些问题和增加了新特性，其中包括bug#122。\n\n所以来研究一下，这个新版本的优化内容对项目有没有价值，考虑是否有必要升级版本。\n\n## bug修复\n\n1.submesh can not over 8问题修复\n\n即使是使用很多材质的特效，都没有输出警告了。\n\n2.使用meshRenderer和uv动画实现的烟雾渲染层级不在UI layer问题\n\n使用meshRenderer的粒子不会被UIParticle渲染，因为UIParticle使用了新类UIParticleRenderer进行渲染，同样不会处理非粒子系统下的网格和材质。\n\n3.共享材质问题\n\n动画修改材质属性，共享材质不会同步变化，估计是内部实现已经不使用sharedMaterial属性。\n\n4.ParticleSystem的所有的粒子都能被UIParticle渲染出来吗？\n\n还是拿家具抽奖的那个特效ui\\_jiajuchoujiang来测试，依然有部分没有渲染出来，而且跟渲染顺序无关。\n\n5.勾选ignoreCanvasScale后不同分辨率下大小不对问题\n\n放弃了ignoreCanvasScale属性，重构了ui缩放逻辑，所以这么问题应该是解决了。\n\n## 新特性\n\n1.UI自适应缩放\n\n也就是上述第5点。\n\n2.新增吸引子组件\n\n可以吸引粒子沿着某种路径到某个位置，属于效果扩展上的新特性。\n\n3.网格共享组\n\n渲染大量相同粒子时可以使用相同的网格共享组，属于性能优化上的改进。\n\n4.add overlay window\n\noverlay window是unity2021.2开始提供的scene window的覆盖窗口特性，可以自定义菜单，unity2020没有这个特效。\n\n另外Inspector面板做了优化，去掉了IgnoreCanvasScale属性，新增了mesh sharing接口，也支持输出一些警告。\n\n详细看看[更新日志](https://github.com/mob-sakai/ParticleEffectForUGUI/releases \"更新日志\")。\n\n**有个问题就是，升级后需要对UIparticle特效的scale重新调整，这点比较麻烦。**\n","slug":"UIParticle@4.0.0研究","published":1,"updated":"2022-12-17T13:56:18.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv440014mcq002h4cq2g","content":"<h1 id=\"UIParticle-4-0-0研究\"><a href=\"#UIParticle-4-0-0研究\" class=\"headerlink\" title=\"UIParticle\\@4.0.0研究\"></a>UIParticle\\@4.0.0研究</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>UIParticle刚开始引进项目中的版本是@3.3.10，发现的问题比较多，材质数不能超8个的问题也在github上提了<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI/issues/122\" title=\"bug#122\">bug#122</a>。</p>\n<span id=\"more\"></span>\n<p>作者最近升级UIParticle到v4，解决了一些问题和增加了新特性，其中包括bug#122。</p>\n<p>所以来研究一下，这个新版本的优化内容对项目有没有价值，考虑是否有必要升级版本。</p>\n<h2 id=\"bug修复\"><a href=\"#bug修复\" class=\"headerlink\" title=\"bug修复\"></a>bug修复</h2><p>1.submesh can not over 8问题修复</p>\n<p>即使是使用很多材质的特效，都没有输出警告了。</p>\n<p>2.使用meshRenderer和uv动画实现的烟雾渲染层级不在UI layer问题</p>\n<p>使用meshRenderer的粒子不会被UIParticle渲染，因为UIParticle使用了新类UIParticleRenderer进行渲染，同样不会处理非粒子系统下的网格和材质。</p>\n<p>3.共享材质问题</p>\n<p>动画修改材质属性，共享材质不会同步变化，估计是内部实现已经不使用sharedMaterial属性。</p>\n<p>4.ParticleSystem的所有的粒子都能被UIParticle渲染出来吗？</p>\n<p>还是拿家具抽奖的那个特效ui_jiajuchoujiang来测试，依然有部分没有渲染出来，而且跟渲染顺序无关。</p>\n<p>5.勾选ignoreCanvasScale后不同分辨率下大小不对问题</p>\n<p>放弃了ignoreCanvasScale属性，重构了ui缩放逻辑，所以这么问题应该是解决了。</p>\n<h2 id=\"新特性\"><a href=\"#新特性\" class=\"headerlink\" title=\"新特性\"></a>新特性</h2><p>1.UI自适应缩放</p>\n<p>也就是上述第5点。</p>\n<p>2.新增吸引子组件</p>\n<p>可以吸引粒子沿着某种路径到某个位置，属于效果扩展上的新特性。</p>\n<p>3.网格共享组</p>\n<p>渲染大量相同粒子时可以使用相同的网格共享组，属于性能优化上的改进。</p>\n<p>4.add overlay window</p>\n<p>overlay window是unity2021.2开始提供的scene window的覆盖窗口特性，可以自定义菜单，unity2020没有这个特效。</p>\n<p>另外Inspector面板做了优化，去掉了IgnoreCanvasScale属性，新增了mesh sharing接口，也支持输出一些警告。</p>\n<p>详细看看<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI/releases\" title=\"更新日志\">更新日志</a>。</p>\n<p><strong>有个问题就是，升级后需要对UIparticle特效的scale重新调整，这点比较麻烦。</strong></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"UIParticle-4-0-0研究\"><a href=\"#UIParticle-4-0-0研究\" class=\"headerlink\" title=\"UIParticle\\@4.0.0研究\"></a>UIParticle\\@4.0.0研究</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>UIParticle刚开始引进项目中的版本是@3.3.10，发现的问题比较多，材质数不能超8个的问题也在github上提了<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI/issues/122\" title=\"bug#122\">bug#122</a>。</p>","more":"<p>作者最近升级UIParticle到v4，解决了一些问题和增加了新特性，其中包括bug#122。</p>\n<p>所以来研究一下，这个新版本的优化内容对项目有没有价值，考虑是否有必要升级版本。</p>\n<h2 id=\"bug修复\"><a href=\"#bug修复\" class=\"headerlink\" title=\"bug修复\"></a>bug修复</h2><p>1.submesh can not over 8问题修复</p>\n<p>即使是使用很多材质的特效，都没有输出警告了。</p>\n<p>2.使用meshRenderer和uv动画实现的烟雾渲染层级不在UI layer问题</p>\n<p>使用meshRenderer的粒子不会被UIParticle渲染，因为UIParticle使用了新类UIParticleRenderer进行渲染，同样不会处理非粒子系统下的网格和材质。</p>\n<p>3.共享材质问题</p>\n<p>动画修改材质属性，共享材质不会同步变化，估计是内部实现已经不使用sharedMaterial属性。</p>\n<p>4.ParticleSystem的所有的粒子都能被UIParticle渲染出来吗？</p>\n<p>还是拿家具抽奖的那个特效ui_jiajuchoujiang来测试，依然有部分没有渲染出来，而且跟渲染顺序无关。</p>\n<p>5.勾选ignoreCanvasScale后不同分辨率下大小不对问题</p>\n<p>放弃了ignoreCanvasScale属性，重构了ui缩放逻辑，所以这么问题应该是解决了。</p>\n<h2 id=\"新特性\"><a href=\"#新特性\" class=\"headerlink\" title=\"新特性\"></a>新特性</h2><p>1.UI自适应缩放</p>\n<p>也就是上述第5点。</p>\n<p>2.新增吸引子组件</p>\n<p>可以吸引粒子沿着某种路径到某个位置，属于效果扩展上的新特性。</p>\n<p>3.网格共享组</p>\n<p>渲染大量相同粒子时可以使用相同的网格共享组，属于性能优化上的改进。</p>\n<p>4.add overlay window</p>\n<p>overlay window是unity2021.2开始提供的scene window的覆盖窗口特性，可以自定义菜单，unity2020没有这个特效。</p>\n<p>另外Inspector面板做了优化，去掉了IgnoreCanvasScale属性，新增了mesh sharing接口，也支持输出一些警告。</p>\n<p>详细看看<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI/releases\" title=\"更新日志\">更新日志</a>。</p>\n<p><strong>有个问题就是，升级后需要对UIparticle特效的scale重新调整，这点比较麻烦。</strong></p>"},{"title":"UIParticle组件的使用问题","date":"2022-03-04T16:00:00.000Z","_content":"\n\n\n# UIParticle组件的使用问题\n\n## 一、背景\n\n假如能通过代码，对原本的粒子特效prefab，动态添加UIPartcle组件，并且表现效果和RT一样，这样就能够自动化的优化项目中RT特效。\n\n<!-- more -->\n## 二、demo测试\n\n写个demo测试效果，各种RT规格特效选取几个，观察转换前后的效果。\n\n![](UIParticle组件的使用问题/uiparticleCompare.gif)\n\n## 三、发现问题\n\n没有带动画的特效播放正常，带动画的特效发现几个问题，比如ui\\_jiajuchoujiang特效：\n\n1.代码上暂时没有找到更改Animatable Properties属性的接口，只能在Inspector上更改。\n\n2.代码上刚添加UIParticle组件，首次调用RefreshParticles函数刷新没效果。\n\n3.动画控制着材质属性Material.\\_Main Tex\\_ST，用UIParticle方式播放时，播放的起始时间对不上，一下子全出来没有先后顺序。\n\n![](UIParticle组件的使用问题/anim3__eYFZGZolQ.gif)\n\n上图，Inspector上添加动画属性\\_Main Tex\\_ST，点击Refresh按钮，然后动画属性\\_Main Tex\\_ST播放的起始时间不对。\n\n4.当特效下的网格数大于8个时会报警告：Mesh '' has more than the 8 submeshes. Extra submeshes will be ignored.\n\n```lua\nMesh '' has more than the 8 submeshes. Extra submeshes will be ignored.\nUnityEngine.StackTraceUtility:ExtractStackTrace ()\nCoffee.UIExtensions.UIParticleUpdater:Refresh (Coffee.UIExtensions.UIParticle) (at Library/PackageCache/com.coffee.ui-particle@5a8f1263ef/Scripts/UIParticleUpdater.cs:85)\nCoffee.UIExtensions.UIParticleUpdater:Refresh () (at Library/PackageCache/com.coffee.ui-particle@5a8f1263ef/Scripts/UIParticleUpdater.cs:54)\nUnityEngine.Canvas:SendWillRenderCanvases ()\n```\n\n网格数有限制，大于8个会被忽略，但是效果上看不出啥区别，github上有[提问bug](https://github.com/mob-sakai/ParticleEffectForUGUI/issues/186 \"提问bug\")，但没有回复。\n\n## 四、问题分析\n\n### 1.为什么粒子材质会同时播放？\n\n查看源码发现，动画材质属性更改是通过从ParticleSystemRenderer拿出ShadeMaterials和MaterialPropertyBlock，传给CanvasRenderer，根据Inspector设置好的Animatable material ProPerties来更新Canvas上的材质。\n\n![](UIParticle组件的使用问题/image_NcuDmPJzjI.png)\n\n![](UIParticle组件的使用问题/image_ywMcu33ZPf.png)\n\n所以引起问题的是特效的几个节点引用了同一个材质，而这个材质设置数据后，几个节点就同步更新了。\n\n这里应该复制多个同个材质，分别设置上去，观察效果正常了。\n\n![](UIParticle组件的使用问题/anim4_tx9hVKst4O.gif)\n\n上图引用同个材质，材质同时更新了。\n\n![](UIParticle组件的使用问题/anim5_GKfO5IVVAN.gif)\n\n上图复制了材质，单独引用，正常了。\n\n为了证实这个问题，可以自制一个UIparticle特效，下面有两种粒子（1白1蓝），都分别引用同一个材质，另外制作一个animator，只改动第一个粒子的材质颜色，由白到黑再到白。\n\n![](UIParticle组件的使用问题/image_Uj6XZU2I6p.png)\n\n![](UIParticle组件的使用问题/image_67GP1vl5zt.png)\n\nanimation上只是改了第一个粒子的材质颜色，但是另一个粒子也受到影响。\n\n![](UIParticle组件的使用问题/anim6_MAvMAv1XJM.gif)\n\n### 2.子网格数限制问题\n\n网格数大于8会出现不渲染元素的情况，下图tiao03、tiao04的渲染位置从排在后面调整为排在前面，两种情况都有元素丢失，但排在前面的显示出来了：\n\n![](UIParticle组件的使用问题/anim2_ocvF-p7l04.gif)\n\n暂不清楚为什么要限制8个网格数，使用时注意引用材质不能太多，否则出现显示丢失元素情况。\n\n这个限制估计是CanvasRenderer的限制，写了段测试代码，CanvasRenderer的mesh合并超过8个子网格数：\n\n```lua\nusing UnityEngine;\nusing UnityEngine.UI;\n \npublic class MeshCombineForCanvas : Graphic\n{\n    private CanvasRenderer m_canvasRenderer ;\n    private Mesh m_mesh ;\n \n    protected override void Start()\n    {\n        if (!m_canvasRenderer) {\n            m_canvasRenderer = gameObject.GetComponent<CanvasRenderer>() ?? gameObject.AddComponent<CanvasRenderer>();\n        }\n        m_mesh = CreateMesh();\n        // CombineMeshes(m_mesh, 8);\n        CombineMeshes(m_mesh, 10);\n        m_canvasRenderer.SetMesh(m_mesh);\n    }\n \n    private Mesh CreateMesh()\n    {\n        Vector3[] vertices = new Vector3[4];\n        vertices[0] = new Vector3(0,0,0);\n        vertices[1] = new Vector3(0,0,1);\n        vertices[2] = new Vector3(1,0,1);\n        vertices[3] = new Vector3(1,0,0);\n        int[] triangles = new int[6];\n        triangles[0] = 0;\n        triangles[1] = 1;\n        triangles[2] = 2;\n        triangles[3] = 2;\n        triangles[4] = 3;\n        triangles[5] = 0;\n        Mesh mesh = new Mesh();\n        mesh.vertices = vertices;\n        mesh.triangles = triangles;\n        return mesh;\n    }\n \n    private void CombineMeshes(Mesh meshContainer, int count)\n    {\n        CombineInstance[] src = new CombineInstance[count];\n        for (int i=0; i<count; i++)\n        {\n            Mesh mesh = CreateMesh();\n            CombineInstance inst = new CombineInstance{ mesh = mesh };\n            src[i] = inst;\n        }\n        meshContainer.CombineMeshes(src, false, false) ;\n    }\n}\n```\n\n运行后同样会报Warning：\n\n![](UIParticle组件的使用问题/image_db_KmLvzYS.png)\n","source":"_posts/UIParticle组件的使用问题.md","raw":"---\ntitle: UIParticle组件的使用问题\ndate: 2022-03-05\ntags: [UIParticle,特效]\ncategories: [Unity游戏开发,Unity,特效]\n---\n\n\n\n# UIParticle组件的使用问题\n\n## 一、背景\n\n假如能通过代码，对原本的粒子特效prefab，动态添加UIPartcle组件，并且表现效果和RT一样，这样就能够自动化的优化项目中RT特效。\n\n<!-- more -->\n## 二、demo测试\n\n写个demo测试效果，各种RT规格特效选取几个，观察转换前后的效果。\n\n![](UIParticle组件的使用问题/uiparticleCompare.gif)\n\n## 三、发现问题\n\n没有带动画的特效播放正常，带动画的特效发现几个问题，比如ui\\_jiajuchoujiang特效：\n\n1.代码上暂时没有找到更改Animatable Properties属性的接口，只能在Inspector上更改。\n\n2.代码上刚添加UIParticle组件，首次调用RefreshParticles函数刷新没效果。\n\n3.动画控制着材质属性Material.\\_Main Tex\\_ST，用UIParticle方式播放时，播放的起始时间对不上，一下子全出来没有先后顺序。\n\n![](UIParticle组件的使用问题/anim3__eYFZGZolQ.gif)\n\n上图，Inspector上添加动画属性\\_Main Tex\\_ST，点击Refresh按钮，然后动画属性\\_Main Tex\\_ST播放的起始时间不对。\n\n4.当特效下的网格数大于8个时会报警告：Mesh '' has more than the 8 submeshes. Extra submeshes will be ignored.\n\n```lua\nMesh '' has more than the 8 submeshes. Extra submeshes will be ignored.\nUnityEngine.StackTraceUtility:ExtractStackTrace ()\nCoffee.UIExtensions.UIParticleUpdater:Refresh (Coffee.UIExtensions.UIParticle) (at Library/PackageCache/com.coffee.ui-particle@5a8f1263ef/Scripts/UIParticleUpdater.cs:85)\nCoffee.UIExtensions.UIParticleUpdater:Refresh () (at Library/PackageCache/com.coffee.ui-particle@5a8f1263ef/Scripts/UIParticleUpdater.cs:54)\nUnityEngine.Canvas:SendWillRenderCanvases ()\n```\n\n网格数有限制，大于8个会被忽略，但是效果上看不出啥区别，github上有[提问bug](https://github.com/mob-sakai/ParticleEffectForUGUI/issues/186 \"提问bug\")，但没有回复。\n\n## 四、问题分析\n\n### 1.为什么粒子材质会同时播放？\n\n查看源码发现，动画材质属性更改是通过从ParticleSystemRenderer拿出ShadeMaterials和MaterialPropertyBlock，传给CanvasRenderer，根据Inspector设置好的Animatable material ProPerties来更新Canvas上的材质。\n\n![](UIParticle组件的使用问题/image_NcuDmPJzjI.png)\n\n![](UIParticle组件的使用问题/image_ywMcu33ZPf.png)\n\n所以引起问题的是特效的几个节点引用了同一个材质，而这个材质设置数据后，几个节点就同步更新了。\n\n这里应该复制多个同个材质，分别设置上去，观察效果正常了。\n\n![](UIParticle组件的使用问题/anim4_tx9hVKst4O.gif)\n\n上图引用同个材质，材质同时更新了。\n\n![](UIParticle组件的使用问题/anim5_GKfO5IVVAN.gif)\n\n上图复制了材质，单独引用，正常了。\n\n为了证实这个问题，可以自制一个UIparticle特效，下面有两种粒子（1白1蓝），都分别引用同一个材质，另外制作一个animator，只改动第一个粒子的材质颜色，由白到黑再到白。\n\n![](UIParticle组件的使用问题/image_Uj6XZU2I6p.png)\n\n![](UIParticle组件的使用问题/image_67GP1vl5zt.png)\n\nanimation上只是改了第一个粒子的材质颜色，但是另一个粒子也受到影响。\n\n![](UIParticle组件的使用问题/anim6_MAvMAv1XJM.gif)\n\n### 2.子网格数限制问题\n\n网格数大于8会出现不渲染元素的情况，下图tiao03、tiao04的渲染位置从排在后面调整为排在前面，两种情况都有元素丢失，但排在前面的显示出来了：\n\n![](UIParticle组件的使用问题/anim2_ocvF-p7l04.gif)\n\n暂不清楚为什么要限制8个网格数，使用时注意引用材质不能太多，否则出现显示丢失元素情况。\n\n这个限制估计是CanvasRenderer的限制，写了段测试代码，CanvasRenderer的mesh合并超过8个子网格数：\n\n```lua\nusing UnityEngine;\nusing UnityEngine.UI;\n \npublic class MeshCombineForCanvas : Graphic\n{\n    private CanvasRenderer m_canvasRenderer ;\n    private Mesh m_mesh ;\n \n    protected override void Start()\n    {\n        if (!m_canvasRenderer) {\n            m_canvasRenderer = gameObject.GetComponent<CanvasRenderer>() ?? gameObject.AddComponent<CanvasRenderer>();\n        }\n        m_mesh = CreateMesh();\n        // CombineMeshes(m_mesh, 8);\n        CombineMeshes(m_mesh, 10);\n        m_canvasRenderer.SetMesh(m_mesh);\n    }\n \n    private Mesh CreateMesh()\n    {\n        Vector3[] vertices = new Vector3[4];\n        vertices[0] = new Vector3(0,0,0);\n        vertices[1] = new Vector3(0,0,1);\n        vertices[2] = new Vector3(1,0,1);\n        vertices[3] = new Vector3(1,0,0);\n        int[] triangles = new int[6];\n        triangles[0] = 0;\n        triangles[1] = 1;\n        triangles[2] = 2;\n        triangles[3] = 2;\n        triangles[4] = 3;\n        triangles[5] = 0;\n        Mesh mesh = new Mesh();\n        mesh.vertices = vertices;\n        mesh.triangles = triangles;\n        return mesh;\n    }\n \n    private void CombineMeshes(Mesh meshContainer, int count)\n    {\n        CombineInstance[] src = new CombineInstance[count];\n        for (int i=0; i<count; i++)\n        {\n            Mesh mesh = CreateMesh();\n            CombineInstance inst = new CombineInstance{ mesh = mesh };\n            src[i] = inst;\n        }\n        meshContainer.CombineMeshes(src, false, false) ;\n    }\n}\n```\n\n运行后同样会报Warning：\n\n![](UIParticle组件的使用问题/image_db_KmLvzYS.png)\n","slug":"UIParticle组件的使用问题","published":1,"updated":"2022-12-17T13:56:51.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv450016mcq0b3es37ae","content":"<h1 id=\"UIParticle组件的使用问题\"><a href=\"#UIParticle组件的使用问题\" class=\"headerlink\" title=\"UIParticle组件的使用问题\"></a>UIParticle组件的使用问题</h1><h2 id=\"一、背景\"><a href=\"#一、背景\" class=\"headerlink\" title=\"一、背景\"></a>一、背景</h2><p>假如能通过代码，对原本的粒子特效prefab，动态添加UIPartcle组件，并且表现效果和RT一样，这样就能够自动化的优化项目中RT特效。</p>\n<span id=\"more\"></span>\n<h2 id=\"二、demo测试\"><a href=\"#二、demo测试\" class=\"headerlink\" title=\"二、demo测试\"></a>二、demo测试</h2><p>写个demo测试效果，各种RT规格特效选取几个，观察转换前后的效果。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/uiparticleCompare.gif\" class=\"\">\n<h2 id=\"三、发现问题\"><a href=\"#三、发现问题\" class=\"headerlink\" title=\"三、发现问题\"></a>三、发现问题</h2><p>没有带动画的特效播放正常，带动画的特效发现几个问题，比如ui_jiajuchoujiang特效：</p>\n<p>1.代码上暂时没有找到更改Animatable Properties属性的接口，只能在Inspector上更改。</p>\n<p>2.代码上刚添加UIParticle组件，首次调用RefreshParticles函数刷新没效果。</p>\n<p>3.动画控制着材质属性Material._Main Tex_ST，用UIParticle方式播放时，播放的起始时间对不上，一下子全出来没有先后顺序。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim3__eYFZGZolQ.gif\" class=\"\">\n<p>上图，Inspector上添加动画属性_Main Tex_ST，点击Refresh按钮，然后动画属性_Main Tex_ST播放的起始时间不对。</p>\n<p>4.当特效下的网格数大于8个时会报警告：Mesh ‘’ has more than the 8 submeshes. Extra submeshes will be ignored.</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mesh <span class=\"string\">&#x27;&#x27;</span> has more than the <span class=\"number\">8</span> submeshes. Extra submeshes will be ignored.</span><br><span class=\"line\">UnityEngine.StackTraceUtility:ExtractStackTrace ()</span><br><span class=\"line\">Coffee.UIExtensions.UIParticleUpdater:Refresh (Coffee.UIExtensions.UIParticle) (at Library/PackageCache/com.coffee.ui-particle@<span class=\"number\">5</span>a8f1263ef/Scripts/UIParticleUpdater.cs:<span class=\"number\">85</span>)</span><br><span class=\"line\">Coffee.UIExtensions.UIParticleUpdater:Refresh () (at Library/PackageCache/com.coffee.ui-particle@<span class=\"number\">5</span>a8f1263ef/Scripts/UIParticleUpdater.cs:<span class=\"number\">54</span>)</span><br><span class=\"line\">UnityEngine.Canvas:SendWillRenderCanvases ()</span><br></pre></td></tr></table></figure>\n<p>网格数有限制，大于8个会被忽略，但是效果上看不出啥区别，github上有<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI/issues/186\" title=\"提问bug\">提问bug</a>，但没有回复。</p>\n<h2 id=\"四、问题分析\"><a href=\"#四、问题分析\" class=\"headerlink\" title=\"四、问题分析\"></a>四、问题分析</h2><h3 id=\"1-为什么粒子材质会同时播放？\"><a href=\"#1-为什么粒子材质会同时播放？\" class=\"headerlink\" title=\"1.为什么粒子材质会同时播放？\"></a>1.为什么粒子材质会同时播放？</h3><p>查看源码发现，动画材质属性更改是通过从ParticleSystemRenderer拿出ShadeMaterials和MaterialPropertyBlock，传给CanvasRenderer，根据Inspector设置好的Animatable material ProPerties来更新Canvas上的材质。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_NcuDmPJzjI.png\" class=\"\">\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_ywMcu33ZPf.png\" class=\"\">\n<p>所以引起问题的是特效的几个节点引用了同一个材质，而这个材质设置数据后，几个节点就同步更新了。</p>\n<p>这里应该复制多个同个材质，分别设置上去，观察效果正常了。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim4_tx9hVKst4O.gif\" class=\"\">\n<p>上图引用同个材质，材质同时更新了。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim5_GKfO5IVVAN.gif\" class=\"\">\n<p>上图复制了材质，单独引用，正常了。</p>\n<p>为了证实这个问题，可以自制一个UIparticle特效，下面有两种粒子（1白1蓝），都分别引用同一个材质，另外制作一个animator，只改动第一个粒子的材质颜色，由白到黑再到白。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_Uj6XZU2I6p.png\" class=\"\">\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_67GP1vl5zt.png\" class=\"\">\n<p>animation上只是改了第一个粒子的材质颜色，但是另一个粒子也受到影响。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim6_MAvMAv1XJM.gif\" class=\"\">\n<h3 id=\"2-子网格数限制问题\"><a href=\"#2-子网格数限制问题\" class=\"headerlink\" title=\"2.子网格数限制问题\"></a>2.子网格数限制问题</h3><p>网格数大于8会出现不渲染元素的情况，下图tiao03、tiao04的渲染位置从排在后面调整为排在前面，两种情况都有元素丢失，但排在前面的显示出来了：</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim2_ocvF-p7l04.gif\" class=\"\">\n<p>暂不清楚为什么要限制8个网格数，使用时注意引用材质不能太多，否则出现显示丢失元素情况。</p>\n<p>这个限制估计是CanvasRenderer的限制，写了段测试代码，CanvasRenderer的mesh合并超过8个子网格数：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br><span class=\"line\">using UnityEngine.UI;</span><br><span class=\"line\"> </span><br><span class=\"line\">public class MeshCombineForCanvas : Graphic</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    private CanvasRenderer m_canvasRenderer ;</span><br><span class=\"line\">    private Mesh m_mesh ;</span><br><span class=\"line\"> </span><br><span class=\"line\">    protected override void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!m_canvasRenderer) &#123;</span><br><span class=\"line\">            m_canvasRenderer = gameObject.GetComponent&lt;CanvasRenderer&gt;() ?? gameObject.AddComponent&lt;CanvasRenderer&gt;();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        m_mesh = CreateMesh();</span><br><span class=\"line\">        // CombineMeshes(m_mesh, <span class=\"number\">8</span>);</span><br><span class=\"line\">        CombineMeshes(m_mesh, <span class=\"number\">10</span>);</span><br><span class=\"line\">        m_canvasRenderer.SetMesh(m_mesh);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    private Mesh CreateMesh()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3[] vertices = new Vector3[<span class=\"number\">4</span>];</span><br><span class=\"line\">        vertices[<span class=\"number\">0</span>] = new Vector3(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        vertices[<span class=\"number\">1</span>] = new Vector3(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        vertices[<span class=\"number\">2</span>] = new Vector3(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        vertices[<span class=\"number\">3</span>] = new Vector3(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        int[] triangles = new int[<span class=\"number\">6</span>];</span><br><span class=\"line\">        triangles[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">3</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">4</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">5</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Mesh mesh = new Mesh();</span><br><span class=\"line\">        mesh.vertices = vertices;</span><br><span class=\"line\">        mesh.triangles = triangles;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mesh;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    private void CombineMeshes(Mesh meshContainer, int count)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        CombineInstance[] src = new CombineInstance[count];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (int i=<span class=\"number\">0</span>; i&lt;count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Mesh mesh = CreateMesh();</span><br><span class=\"line\">            CombineInstance inst = new CombineInstance&#123; mesh = mesh &#125;;</span><br><span class=\"line\">            src[i] = inst;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        meshContainer.CombineMeshes(src, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>) ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行后同样会报Warning：</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_db_KmLvzYS.png\" class=\"\">\n","site":{"data":{}},"excerpt":"<h1 id=\"UIParticle组件的使用问题\"><a href=\"#UIParticle组件的使用问题\" class=\"headerlink\" title=\"UIParticle组件的使用问题\"></a>UIParticle组件的使用问题</h1><h2 id=\"一、背景\"><a href=\"#一、背景\" class=\"headerlink\" title=\"一、背景\"></a>一、背景</h2><p>假如能通过代码，对原本的粒子特效prefab，动态添加UIPartcle组件，并且表现效果和RT一样，这样就能够自动化的优化项目中RT特效。</p>","more":"<h2 id=\"二、demo测试\"><a href=\"#二、demo测试\" class=\"headerlink\" title=\"二、demo测试\"></a>二、demo测试</h2><p>写个demo测试效果，各种RT规格特效选取几个，观察转换前后的效果。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/uiparticleCompare.gif\" class=\"\">\n<h2 id=\"三、发现问题\"><a href=\"#三、发现问题\" class=\"headerlink\" title=\"三、发现问题\"></a>三、发现问题</h2><p>没有带动画的特效播放正常，带动画的特效发现几个问题，比如ui_jiajuchoujiang特效：</p>\n<p>1.代码上暂时没有找到更改Animatable Properties属性的接口，只能在Inspector上更改。</p>\n<p>2.代码上刚添加UIParticle组件，首次调用RefreshParticles函数刷新没效果。</p>\n<p>3.动画控制着材质属性Material._Main Tex_ST，用UIParticle方式播放时，播放的起始时间对不上，一下子全出来没有先后顺序。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim3__eYFZGZolQ.gif\" class=\"\">\n<p>上图，Inspector上添加动画属性_Main Tex_ST，点击Refresh按钮，然后动画属性_Main Tex_ST播放的起始时间不对。</p>\n<p>4.当特效下的网格数大于8个时会报警告：Mesh ‘’ has more than the 8 submeshes. Extra submeshes will be ignored.</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mesh <span class=\"string\">&#x27;&#x27;</span> has more than the <span class=\"number\">8</span> submeshes. Extra submeshes will be ignored.</span><br><span class=\"line\">UnityEngine.StackTraceUtility:ExtractStackTrace ()</span><br><span class=\"line\">Coffee.UIExtensions.UIParticleUpdater:Refresh (Coffee.UIExtensions.UIParticle) (at Library/PackageCache/com.coffee.ui-particle@<span class=\"number\">5</span>a8f1263ef/Scripts/UIParticleUpdater.cs:<span class=\"number\">85</span>)</span><br><span class=\"line\">Coffee.UIExtensions.UIParticleUpdater:Refresh () (at Library/PackageCache/com.coffee.ui-particle@<span class=\"number\">5</span>a8f1263ef/Scripts/UIParticleUpdater.cs:<span class=\"number\">54</span>)</span><br><span class=\"line\">UnityEngine.Canvas:SendWillRenderCanvases ()</span><br></pre></td></tr></table></figure>\n<p>网格数有限制，大于8个会被忽略，但是效果上看不出啥区别，github上有<a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/mob-sakai/ParticleEffectForUGUI/issues/186\" title=\"提问bug\">提问bug</a>，但没有回复。</p>\n<h2 id=\"四、问题分析\"><a href=\"#四、问题分析\" class=\"headerlink\" title=\"四、问题分析\"></a>四、问题分析</h2><h3 id=\"1-为什么粒子材质会同时播放？\"><a href=\"#1-为什么粒子材质会同时播放？\" class=\"headerlink\" title=\"1.为什么粒子材质会同时播放？\"></a>1.为什么粒子材质会同时播放？</h3><p>查看源码发现，动画材质属性更改是通过从ParticleSystemRenderer拿出ShadeMaterials和MaterialPropertyBlock，传给CanvasRenderer，根据Inspector设置好的Animatable material ProPerties来更新Canvas上的材质。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_NcuDmPJzjI.png\" class=\"\">\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_ywMcu33ZPf.png\" class=\"\">\n<p>所以引起问题的是特效的几个节点引用了同一个材质，而这个材质设置数据后，几个节点就同步更新了。</p>\n<p>这里应该复制多个同个材质，分别设置上去，观察效果正常了。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim4_tx9hVKst4O.gif\" class=\"\">\n<p>上图引用同个材质，材质同时更新了。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim5_GKfO5IVVAN.gif\" class=\"\">\n<p>上图复制了材质，单独引用，正常了。</p>\n<p>为了证实这个问题，可以自制一个UIparticle特效，下面有两种粒子（1白1蓝），都分别引用同一个材质，另外制作一个animator，只改动第一个粒子的材质颜色，由白到黑再到白。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_Uj6XZU2I6p.png\" class=\"\">\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_67GP1vl5zt.png\" class=\"\">\n<p>animation上只是改了第一个粒子的材质颜色，但是另一个粒子也受到影响。</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim6_MAvMAv1XJM.gif\" class=\"\">\n<h3 id=\"2-子网格数限制问题\"><a href=\"#2-子网格数限制问题\" class=\"headerlink\" title=\"2.子网格数限制问题\"></a>2.子网格数限制问题</h3><p>网格数大于8会出现不渲染元素的情况，下图tiao03、tiao04的渲染位置从排在后面调整为排在前面，两种情况都有元素丢失，但排在前面的显示出来了：</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/anim2_ocvF-p7l04.gif\" class=\"\">\n<p>暂不清楚为什么要限制8个网格数，使用时注意引用材质不能太多，否则出现显示丢失元素情况。</p>\n<p>这个限制估计是CanvasRenderer的限制，写了段测试代码，CanvasRenderer的mesh合并超过8个子网格数：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br><span class=\"line\">using UnityEngine.UI;</span><br><span class=\"line\"> </span><br><span class=\"line\">public class MeshCombineForCanvas : Graphic</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    private CanvasRenderer m_canvasRenderer ;</span><br><span class=\"line\">    private Mesh m_mesh ;</span><br><span class=\"line\"> </span><br><span class=\"line\">    protected override void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!m_canvasRenderer) &#123;</span><br><span class=\"line\">            m_canvasRenderer = gameObject.GetComponent&lt;CanvasRenderer&gt;() ?? gameObject.AddComponent&lt;CanvasRenderer&gt;();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        m_mesh = CreateMesh();</span><br><span class=\"line\">        // CombineMeshes(m_mesh, <span class=\"number\">8</span>);</span><br><span class=\"line\">        CombineMeshes(m_mesh, <span class=\"number\">10</span>);</span><br><span class=\"line\">        m_canvasRenderer.SetMesh(m_mesh);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    private Mesh CreateMesh()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Vector3[] vertices = new Vector3[<span class=\"number\">4</span>];</span><br><span class=\"line\">        vertices[<span class=\"number\">0</span>] = new Vector3(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        vertices[<span class=\"number\">1</span>] = new Vector3(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        vertices[<span class=\"number\">2</span>] = new Vector3(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        vertices[<span class=\"number\">3</span>] = new Vector3(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">        int[] triangles = new int[<span class=\"number\">6</span>];</span><br><span class=\"line\">        triangles[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">3</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">4</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">        triangles[<span class=\"number\">5</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Mesh mesh = new Mesh();</span><br><span class=\"line\">        mesh.vertices = vertices;</span><br><span class=\"line\">        mesh.triangles = triangles;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mesh;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    private void CombineMeshes(Mesh meshContainer, int count)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        CombineInstance[] src = new CombineInstance[count];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (int i=<span class=\"number\">0</span>; i&lt;count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Mesh mesh = CreateMesh();</span><br><span class=\"line\">            CombineInstance inst = new CombineInstance&#123; mesh = mesh &#125;;</span><br><span class=\"line\">            src[i] = inst;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        meshContainer.CombineMeshes(src, <span class=\"literal\">false</span>, <span class=\"literal\">false</span>) ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行后同样会报Warning：</p>\n<img src=\"/2022/03/05/UIParticle%E7%BB%84%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/image_db_KmLvzYS.png\" class=\"\">"},{"title":"Unity Addressable Asset System介绍、教程和原理讲解","date":"2021-01-14T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n# Unity Addressable Asset System介绍、教程和原理讲解\n\n## 1. 背景（怎么来的）\n\nUnity Addressable Asset System是官方推出的资源加载和资源管理的一套解决方案。\n\n它使用异步加载的方式加载资源，提供统一的加载接口，不管资源放在哪个目录，不管资源的依赖有多复杂。\n\n传统的资源管理方式严重将组织、构建、加载Asset的逻辑捆绑在一起，比如\n\n1. 资源存放在Resource文件，那加载资源必须要用到Resources.Load方法，并且提供资源路径\n2. 加载ab中的asset时，加载代码需要和构建策略捆绑在一起，先找出资源对应的bundle加载完成后，再加载需要的资源。\n3. 以路径加载的代码，当资源路径发生改变往往要多次更改代码，这个更改可能涉及多处。\n4. 资源位于远程，需要写代码管理资源的下载、加载、卸载和缓存。\n![](UnityAddressable/image.png \"\")\n基于以上种种不便，Unity Addressable Asset System（下文称AA系统）的一个重要好处就是解决以上种种痛点。\n## 2. 特点（有何用）\n- 快速迭代：解耦组织、构建、加载Asset的逻辑，通过[address]和统一接口加载资源，不管资源放是否来自Resources目录，或者将来重命名或者路径变更，不管资源如何构建，都不用再修改加载代码。\n- 依赖管理：当加载一个资源的时候，AA系统会先加载完这个资源的所有依赖，然后再返回这个资源。\n- 内存管理：自动管理资源加载卸载的引用计数，并提供工具探测内存泄露问题。\n- 内容打包：当资源变更时能够有效打包资源，更容易管理本地和远程打包资源和有效减小应用大小。\n- 配置文件：统一管理资源如何打包的变量，避免配置分散多处修改问题。\n\n## 3. 概念\n\n### Group\n\ngroup定义一组在构建时可处理的Addressable Asset集合。\n\n默认有两个group，如上图：\n\n- Built In Data。内置的group，包含Resources文件夹，这个group不支持修改。\n- Default Local Group。在Inspector标记Addresables的Asset会默认添加进这里，支持修改，包括改名和添加Schema。\n\n### Group Schema\n\ngroup schema定义一组分配给group在构建使用的数据，可视为配置数据，决定group中Asset如何打包、打包粒度等等。\n\n点击group，查看这个group中添加的schema，和schema的配置：\n\n![](UnityAddressable/image_1.png \"\")\n\n包括三种Schema：\n\n1. Content Updage Restriction 主要决定ab可不可以更改\n\tUpdate Restriction：决定改组内容打包成ab后，可不可以动态更新。can change post release：允许发布后变更；cannot change post release：不允许发布后变更。\n2. Content Packing & Loading **决定打包方式和加载的配置**，包括构建目录、压缩、打包模式等等\n\t下面是几个重要的配置，鼠标移动到变量名上可以显示该配置作用介绍：\n\tBuild Path：打包后的发布路径。可分为本地和远程路径。\n\tLoad Path：加载ab的路径，可分为本地和远程路径。\n\t这些的路径变量来自Profiles中定义的变量，Profiles的解析请看下面。\n\tCompression：支持三种压缩方式，包括不压缩、LZ4和LZMA。\n\tInclude In Build：勾选才会将该group纳入构建进程中。\n\tUse Asset Bundle Cache：勾选会将加载的ab加进缓存目录中，远程bundle才需要勾选。\n\tBundle Mode：打包模式，分别是Pack Separately单独打包，Pack Together全部达成一个包，Pack Together By Label根据label划分打包。\n\tBundle Naming：bundle的命名规则。\n\tAsset Provider：加载和解析Asset的类，不同的资源类型对应不同的provider。\n\tAsset bundle Provider：加载和解析Asset bundle的类，默认为AssetBundleProvider。\n3. Resources and Build In Scenes** 是否将Resources和Build Setting Scenes包含进来打包**\n\tInclude Resources Folders：是否将Resources文件夹下的Asset包含进group。Resources下的Asset会打包进包体，一般不需要勾选。\n\tInclude Build Setting Scenes：是否包含Build Setting添加的Scenes。\n\n### Addressable Asset Settings\n\n作为AA系统全局的配置文件，在初始化的时候生成。以下介绍几个重要的变量：\n\n属性介绍：\n\nDisable Catalog Update on Startup：勾选则在AA系统初始化时候不检查catalog文件更新。\n\n**Build Remote Catalog**： 勾选则生成远程ab的catalog文件，需要配置remote catalog文件的build path和load path。\n\nSend Profiler Event：勾选则开启分析器。\n\nUnique Bundle IDs：给bundle分配独一无二的ID。因为catalog文件可以在初始化以外的时候更新，当旧资源已经在内存中时，但unity无法下载两个同internal name的资源，这种情况资源无法及时更新。要么先卸载重新资源重新下载，要么分配给bundle单独的id来区分。开启这个选项，当资源更新时不仅仅是更新该资源，也会更新依赖链，带来一定的性能花销。\n\nContiguous Bundle：基于源资源的排序来排序Bundle，可以加快Asset加载速度。\n\n**Build and Play Mode Scripts**\n\nUse Asset Database （fastest）：加载源文件模式，不用打ab和分析。\n\nSimulate Groups（Advanced）：模拟组模式，以不打ab方式来分析内容的布局和依赖。用类似加载ab的方式，通过ResourceManager从AssetDatabase加载。这个模式用于模拟加载策略，调整和平衡内容的分布。\n\nUse Existing Build：使用构建好的ab加载，需要提前构建好ab。\n\nDefault Build Script：默认的构建脚本。\n\n可选的Build Script都是ScriptableObject的Asset。假如需要扩展，可以新建脚本，继承IDataBuilder接口。添加可以选择左下角+，添加Build Script Asset。\n\n前三个Play Mode Script分别对应Assetables Groups-》Play Mode Script下的三个模式。\n\nDefault Build Script对应Assetables Groups-》Build-》New Build-》Default Build Script。\n\nAsset Group Template：group模板，Assetables Groups面板下Create→Group下，或者group右键菜单可以选择。在Project面板目录上右键菜单Create-》Addressables-》Group Templates-》Blank Group Template可以创建模板。\n\n## 4. 使用流程（怎么用）\n\n### step1 安装\n\n到Package Manager安装以下两个package：\n\n- Addressables，基本包，本文章使用的版本是1.16.15\n- Scriptable Build Pipeline package，依赖包\n\n### step2 初始化\n\n安装包后，通过菜单栏Window->Asset Management->Addressables→Groups 可以打开AA系统的管理面板\n\n未初始化会出现初始化按钮，点击后Asset目录下会出现一个AddressableAssetsData目录，存放着一些配置文件。\n\n### step3 标记可寻址\n\n需要将Asset标记为Addressable，才能纳入AA系统的管理。标记为Addressable Asset有两个途径：\n\n通过Inspector。勾选，会将Asset添加进默认的group（Default Local Group），以相对Assets目录的地址作为AA系统寻找该Asset的【address】，这个地址支持修改。\n\n1. 拖动Asset进group。\n### step4 配置远程打包路径\nunity官方推荐新建一个profile为hosting service所用，配置正确的build path和load path，可以上可以填上Hosting Service 变量：\n并在需要在AddressableAssetSettings上开启构建远程catelog，选用Editor Hosted Profile，选择build path 和 load path：\nAddressables Group面板上选择Editor Hosted Profile\n最后在group Inspector面板中选择内容构建输出的目录，若为远程资源则选择RemoteBuildPath。\n这就配置完了Hosting Services的使用流程。\n### step5 打包\n前面已经了解到Group Schema控制打包方式，主要用到两个Schema：content update restriction 和 content packing & loading\n打出的ab类型可分为远程和本地，静态和非静态（can change post release为非静态）。两两结合可以分为四个组，每个组下各包含两个资源：\n点击Addressables Groups菜单栏build-》new build-》default build script，开始构建。\nab构建完成后，可以看到本地ab和远程ab分别打包到了各自的目录：\nlocal和remote各自有一份catalog json文件，remote多了一份hash文件，记录catalog文件的hash值，用于判断catalog文件的更新。\ncatalog文件里记录了address到资源的映射关系，用于定位资源和决定如何加载资源（where和how），每当资源发生变动后构建完成时，catalog文件重新生成。\n### step6 更新\n再看看更新资源后，各组间的资源打包后如何组织？\n每个组更改第一个资源后，点击Tools-》check for content update restriction，检查更新\n这时候会打开窗口选择addressables_content_state.bin文件，文件位于Assets/AddressableAssetsData/[platform]下，发布哪个平台选择哪个平台，一般是Android和Windows。\n为什么要选择这个bin文件？\n使用过BuildPipeline构建ab都知道有个manifest文件记录资源间依赖关系，AA系统会将资源间依赖关系记录进这个bin文件，作为对比找出更改的资源。\n这步过后，会检查出更改的资源：\n为什么所有资源都有更改，只检查出两个有更新，并且两个资源都来自静态组？\nunity推荐打包内容分两种类型：\n- can change post release：期望更新的动态内容。一般打成小包，以控制精准更新，减少包中其他没有更新的资源的不必要更新。\n- cannot change post release：不期望更新的静态内容。一般打到一个很少更新的大包中。\n\naddressables_content_state.bin文件只是记录了静态资源的hash和依赖关系，动态资源的依赖关系动态计算没有记录到bin文件中，所以check for content update restriction只是作用于static组，对nonStatic组没有作用，也即是对设置了can change post release的组没有作用。\n\n点击apply changes按钮，groups会出现变化：\n\nstatic组中更改的资源会移动到一个新组content update group：\n\ncontent update group属于remote non static组\n\n点击build-》update a previous build，选择刚才的bin文件，增量更新\n\n对比发现：\n\ncatalog json和hash文件会更新，被重写。\n\n静态组资源bundle并不会被重写更改或者重生生成，静态组中更改的资源会被移动进content update group重新打包到remote目录。\n\n非静态资源组的bundle包虽然不会被重写，但是会被重新生成，hash值也会更新。\n\n旧的非静态资源组bundle会在catalog文件中失去连接和记录，成为无效资源（这个无效资源会保留在用户设备上成为垃圾资源，应该要有个机制及时清理）。\n\nnote：每次full build，bundle和catalog文件会重新生成，localBuildpath目录会清空，但是remoteBuildPath目录并不会清空，新生成的资源会跟旧资源混合。\n\n用一张图来阐述官方推荐的AA系统资源更新生命周期：\n\n![](UnityAddressable/image_2.png \"\")\n\n![](UnityAddressable/image_3.png \"\")\n\n\n\n## 5. 工具\n\n### Profiles\n\n通过菜单栏Window->Asset Management→Addressables→Profiles 或者 group面板的菜单栏tools→Profiles 打开Profiles面板。\n\n这个是AA系统用来管理一组组变量的解决方案。\n\n默认有以上5个变量，见名知义。\n\n从变量的值中发现有两种符号：[]和{}。\n\n[]：定义编辑时的变量。比如UnityEditor.EditorUserBuildSettings.activeBuildTarget，在编辑时就可以得到的值。\n\n{}：定义运行时的变量。比如UnityEngine.AddressableAssets.Addressables.RuntimePath，在运行时才知道值。\n\n左上角可以添加变量和Profile，在变量上右键可以删除和更名变量。\n\n在AddressableAssetSettings Inspector上可以选择使用哪一份Profilles，这里使用Default Profiles。\n\n### Hosting Services\n\nAA系统提供本地资源服务器，模拟远程资源加载。被设计的目的是为了在测试打包内容时加快迭代速度，不需要另外写一套远程资源下载加载代码。它能够为本地或者远端的客户端提供内容。\n\nAddressables Groups-》tools-》Hosting Services-》Create-》Local Hosting创建本地资源服务器：\n\n勾选Enable会分配端口号启动服务器，也可以指定端口号。\n\n开启后，hosting services会以每个group的build path为资源目录提供内容。\n\n### 内存管理memory management\n\nAA系统通过Addressables API来管理资源的引用计数，提供Event Viewer工具监测资源对象被引用和内存占用情况。\n\nAddressables常见的资源加卸载API：\n\n- Addressables.LoadAssetAsync & Addressables.Release \n- Addressables.LoadSceneAsync & Addressables.UnloadSceneAsync\n- Addressables.InstantiateAsync & Addressables.ReleaseInstance\n\n写段测试代码观察资源的引用情况：\n```\nusing UnityEngine;\nusing UnityEngine.AddressableAssets;\nusing UnityEngine.ResourceManagement.AsyncOperations;\n\npublic class Loader : MonoBehaviour\n{\n  private void OnEnable()\n  {\n    InstByLoadAssetAsync(\"Assets/Local_static 1.prefab\");\n    InstByLoadAssetAsync(\"Assets/Local_non_static.prefab\");\n    InstByLoadAssetAsync(\"Assets/Remote_static 1.prefab\");\n    InstByLoadAssetAsync(\"Assets/Remote_non_static.prefab\");\n    InstByLoadAssetAsync(\"Assets/Local_static.prefab\");\n    InstByInstantiateAsync(\"Assets/Local_static 1.prefab\");\n    InstByInstantiateAsync(\"Assets/Local_non_static.prefab\");\n    InstByInstantiateAsync(\"Assets/Remote_static 1.prefab\");\n    InstByInstantiateAsync(\"Assets/Remote_non_static.prefab\");\n    InstByInstantiateAsync(\"Assets/Local_static.prefab\");\n  }\n\n  private void InstByLoadAssetAsync(string address)\n  {\n    AsyncOperationHandle<GameObject> handle = Addressables.LoadAssetAsync<GameObject>(address);\n    handle.Completed += OnLoadDone;\n  }\n\n  private void OnLoadDone(AsyncOperationHandle<GameObject> handle)\n  {\n    Instantiate(handle.Result);\n  }\n\n  private void InstByInstantiateAsync(string address)\n  {\n    Addressables.InstantiateAsync(address);\n  }\n```\n\nplay mode script选择use existing build，因为use asset database 模式没有统计资源依赖数据（实际上只有fps和Monoheap），线上是ab加载模式所以数据更加准确。\n\n通过tools-》Event Viewer打开面板：\n\n- FPS: 帧率\n- MonoHeap：内存占用\n- Event Count：每帧事件数\n- Instantiation Counts：通过Addressables.InstantiateAsync实例化的资源\n- Resource Request：每个资源的引用计数\n\n注意：当资源的引用计数为零时，并不代表该资源被回收，比如AB中的a资源引用未0，但AB自身的引用不为0，AB未被释放所以a也未释放。\n\n## 6. 代码层加载资源过程（如何实现）\n\n第一步初始化，加载catalog文件，解析出资源定位信息。\n\n![](UnityAddressable/image_4.png \"\")\n\n接下来的过程可以简单分为两步：寻址和加载。\n\n![](UnityAddressable/image_5.png \"\")\n\n1. catalog文件会被加载并解析得出所有的Locator对象，Locator对象包括资源及其依赖的信息。\n2. 遍历所有的Locator对象，匹配address key，找出对应的Locator，Locator下包含了资源的Location对象，这个对象管理资源地址及其依赖信息。\n3. ResourceManager类根据Locations对象上记录的ProviderId找到Provider对象，调用返回自身和其依赖的异步操作对象AsyncOperation，执行异步操作加载资源通过回调函数返回。\n\n**Location对象：**\n\n可以看到上面记录的InternalId，Dependencies、ProviderId、LocatorId等信息。\n\ncatalog文件中记录有LocatorId，能被它解析出map信息：\n\n\n\n**参考资料：**\n\nAddressables官方文档\n\nAddressable Asset System\n\n","source":"_posts/UnityAddressable.md","raw":"---\ntitle: Unity Addressable Asset System介绍、教程和原理讲解\ndate: 2021-01-15\ntags: [Addressable]\ncategories: [Unity游戏开发,Unity,资源管理]\n---\n\n<!-- more -->\n\n\n# Unity Addressable Asset System介绍、教程和原理讲解\n\n## 1. 背景（怎么来的）\n\nUnity Addressable Asset System是官方推出的资源加载和资源管理的一套解决方案。\n\n它使用异步加载的方式加载资源，提供统一的加载接口，不管资源放在哪个目录，不管资源的依赖有多复杂。\n\n传统的资源管理方式严重将组织、构建、加载Asset的逻辑捆绑在一起，比如\n\n1. 资源存放在Resource文件，那加载资源必须要用到Resources.Load方法，并且提供资源路径\n2. 加载ab中的asset时，加载代码需要和构建策略捆绑在一起，先找出资源对应的bundle加载完成后，再加载需要的资源。\n3. 以路径加载的代码，当资源路径发生改变往往要多次更改代码，这个更改可能涉及多处。\n4. 资源位于远程，需要写代码管理资源的下载、加载、卸载和缓存。\n![](UnityAddressable/image.png \"\")\n基于以上种种不便，Unity Addressable Asset System（下文称AA系统）的一个重要好处就是解决以上种种痛点。\n## 2. 特点（有何用）\n- 快速迭代：解耦组织、构建、加载Asset的逻辑，通过[address]和统一接口加载资源，不管资源放是否来自Resources目录，或者将来重命名或者路径变更，不管资源如何构建，都不用再修改加载代码。\n- 依赖管理：当加载一个资源的时候，AA系统会先加载完这个资源的所有依赖，然后再返回这个资源。\n- 内存管理：自动管理资源加载卸载的引用计数，并提供工具探测内存泄露问题。\n- 内容打包：当资源变更时能够有效打包资源，更容易管理本地和远程打包资源和有效减小应用大小。\n- 配置文件：统一管理资源如何打包的变量，避免配置分散多处修改问题。\n\n## 3. 概念\n\n### Group\n\ngroup定义一组在构建时可处理的Addressable Asset集合。\n\n默认有两个group，如上图：\n\n- Built In Data。内置的group，包含Resources文件夹，这个group不支持修改。\n- Default Local Group。在Inspector标记Addresables的Asset会默认添加进这里，支持修改，包括改名和添加Schema。\n\n### Group Schema\n\ngroup schema定义一组分配给group在构建使用的数据，可视为配置数据，决定group中Asset如何打包、打包粒度等等。\n\n点击group，查看这个group中添加的schema，和schema的配置：\n\n![](UnityAddressable/image_1.png \"\")\n\n包括三种Schema：\n\n1. Content Updage Restriction 主要决定ab可不可以更改\n\tUpdate Restriction：决定改组内容打包成ab后，可不可以动态更新。can change post release：允许发布后变更；cannot change post release：不允许发布后变更。\n2. Content Packing & Loading **决定打包方式和加载的配置**，包括构建目录、压缩、打包模式等等\n\t下面是几个重要的配置，鼠标移动到变量名上可以显示该配置作用介绍：\n\tBuild Path：打包后的发布路径。可分为本地和远程路径。\n\tLoad Path：加载ab的路径，可分为本地和远程路径。\n\t这些的路径变量来自Profiles中定义的变量，Profiles的解析请看下面。\n\tCompression：支持三种压缩方式，包括不压缩、LZ4和LZMA。\n\tInclude In Build：勾选才会将该group纳入构建进程中。\n\tUse Asset Bundle Cache：勾选会将加载的ab加进缓存目录中，远程bundle才需要勾选。\n\tBundle Mode：打包模式，分别是Pack Separately单独打包，Pack Together全部达成一个包，Pack Together By Label根据label划分打包。\n\tBundle Naming：bundle的命名规则。\n\tAsset Provider：加载和解析Asset的类，不同的资源类型对应不同的provider。\n\tAsset bundle Provider：加载和解析Asset bundle的类，默认为AssetBundleProvider。\n3. Resources and Build In Scenes** 是否将Resources和Build Setting Scenes包含进来打包**\n\tInclude Resources Folders：是否将Resources文件夹下的Asset包含进group。Resources下的Asset会打包进包体，一般不需要勾选。\n\tInclude Build Setting Scenes：是否包含Build Setting添加的Scenes。\n\n### Addressable Asset Settings\n\n作为AA系统全局的配置文件，在初始化的时候生成。以下介绍几个重要的变量：\n\n属性介绍：\n\nDisable Catalog Update on Startup：勾选则在AA系统初始化时候不检查catalog文件更新。\n\n**Build Remote Catalog**： 勾选则生成远程ab的catalog文件，需要配置remote catalog文件的build path和load path。\n\nSend Profiler Event：勾选则开启分析器。\n\nUnique Bundle IDs：给bundle分配独一无二的ID。因为catalog文件可以在初始化以外的时候更新，当旧资源已经在内存中时，但unity无法下载两个同internal name的资源，这种情况资源无法及时更新。要么先卸载重新资源重新下载，要么分配给bundle单独的id来区分。开启这个选项，当资源更新时不仅仅是更新该资源，也会更新依赖链，带来一定的性能花销。\n\nContiguous Bundle：基于源资源的排序来排序Bundle，可以加快Asset加载速度。\n\n**Build and Play Mode Scripts**\n\nUse Asset Database （fastest）：加载源文件模式，不用打ab和分析。\n\nSimulate Groups（Advanced）：模拟组模式，以不打ab方式来分析内容的布局和依赖。用类似加载ab的方式，通过ResourceManager从AssetDatabase加载。这个模式用于模拟加载策略，调整和平衡内容的分布。\n\nUse Existing Build：使用构建好的ab加载，需要提前构建好ab。\n\nDefault Build Script：默认的构建脚本。\n\n可选的Build Script都是ScriptableObject的Asset。假如需要扩展，可以新建脚本，继承IDataBuilder接口。添加可以选择左下角+，添加Build Script Asset。\n\n前三个Play Mode Script分别对应Assetables Groups-》Play Mode Script下的三个模式。\n\nDefault Build Script对应Assetables Groups-》Build-》New Build-》Default Build Script。\n\nAsset Group Template：group模板，Assetables Groups面板下Create→Group下，或者group右键菜单可以选择。在Project面板目录上右键菜单Create-》Addressables-》Group Templates-》Blank Group Template可以创建模板。\n\n## 4. 使用流程（怎么用）\n\n### step1 安装\n\n到Package Manager安装以下两个package：\n\n- Addressables，基本包，本文章使用的版本是1.16.15\n- Scriptable Build Pipeline package，依赖包\n\n### step2 初始化\n\n安装包后，通过菜单栏Window->Asset Management->Addressables→Groups 可以打开AA系统的管理面板\n\n未初始化会出现初始化按钮，点击后Asset目录下会出现一个AddressableAssetsData目录，存放着一些配置文件。\n\n### step3 标记可寻址\n\n需要将Asset标记为Addressable，才能纳入AA系统的管理。标记为Addressable Asset有两个途径：\n\n通过Inspector。勾选，会将Asset添加进默认的group（Default Local Group），以相对Assets目录的地址作为AA系统寻找该Asset的【address】，这个地址支持修改。\n\n1. 拖动Asset进group。\n### step4 配置远程打包路径\nunity官方推荐新建一个profile为hosting service所用，配置正确的build path和load path，可以上可以填上Hosting Service 变量：\n并在需要在AddressableAssetSettings上开启构建远程catelog，选用Editor Hosted Profile，选择build path 和 load path：\nAddressables Group面板上选择Editor Hosted Profile\n最后在group Inspector面板中选择内容构建输出的目录，若为远程资源则选择RemoteBuildPath。\n这就配置完了Hosting Services的使用流程。\n### step5 打包\n前面已经了解到Group Schema控制打包方式，主要用到两个Schema：content update restriction 和 content packing & loading\n打出的ab类型可分为远程和本地，静态和非静态（can change post release为非静态）。两两结合可以分为四个组，每个组下各包含两个资源：\n点击Addressables Groups菜单栏build-》new build-》default build script，开始构建。\nab构建完成后，可以看到本地ab和远程ab分别打包到了各自的目录：\nlocal和remote各自有一份catalog json文件，remote多了一份hash文件，记录catalog文件的hash值，用于判断catalog文件的更新。\ncatalog文件里记录了address到资源的映射关系，用于定位资源和决定如何加载资源（where和how），每当资源发生变动后构建完成时，catalog文件重新生成。\n### step6 更新\n再看看更新资源后，各组间的资源打包后如何组织？\n每个组更改第一个资源后，点击Tools-》check for content update restriction，检查更新\n这时候会打开窗口选择addressables_content_state.bin文件，文件位于Assets/AddressableAssetsData/[platform]下，发布哪个平台选择哪个平台，一般是Android和Windows。\n为什么要选择这个bin文件？\n使用过BuildPipeline构建ab都知道有个manifest文件记录资源间依赖关系，AA系统会将资源间依赖关系记录进这个bin文件，作为对比找出更改的资源。\n这步过后，会检查出更改的资源：\n为什么所有资源都有更改，只检查出两个有更新，并且两个资源都来自静态组？\nunity推荐打包内容分两种类型：\n- can change post release：期望更新的动态内容。一般打成小包，以控制精准更新，减少包中其他没有更新的资源的不必要更新。\n- cannot change post release：不期望更新的静态内容。一般打到一个很少更新的大包中。\n\naddressables_content_state.bin文件只是记录了静态资源的hash和依赖关系，动态资源的依赖关系动态计算没有记录到bin文件中，所以check for content update restriction只是作用于static组，对nonStatic组没有作用，也即是对设置了can change post release的组没有作用。\n\n点击apply changes按钮，groups会出现变化：\n\nstatic组中更改的资源会移动到一个新组content update group：\n\ncontent update group属于remote non static组\n\n点击build-》update a previous build，选择刚才的bin文件，增量更新\n\n对比发现：\n\ncatalog json和hash文件会更新，被重写。\n\n静态组资源bundle并不会被重写更改或者重生生成，静态组中更改的资源会被移动进content update group重新打包到remote目录。\n\n非静态资源组的bundle包虽然不会被重写，但是会被重新生成，hash值也会更新。\n\n旧的非静态资源组bundle会在catalog文件中失去连接和记录，成为无效资源（这个无效资源会保留在用户设备上成为垃圾资源，应该要有个机制及时清理）。\n\nnote：每次full build，bundle和catalog文件会重新生成，localBuildpath目录会清空，但是remoteBuildPath目录并不会清空，新生成的资源会跟旧资源混合。\n\n用一张图来阐述官方推荐的AA系统资源更新生命周期：\n\n![](UnityAddressable/image_2.png \"\")\n\n![](UnityAddressable/image_3.png \"\")\n\n\n\n## 5. 工具\n\n### Profiles\n\n通过菜单栏Window->Asset Management→Addressables→Profiles 或者 group面板的菜单栏tools→Profiles 打开Profiles面板。\n\n这个是AA系统用来管理一组组变量的解决方案。\n\n默认有以上5个变量，见名知义。\n\n从变量的值中发现有两种符号：[]和{}。\n\n[]：定义编辑时的变量。比如UnityEditor.EditorUserBuildSettings.activeBuildTarget，在编辑时就可以得到的值。\n\n{}：定义运行时的变量。比如UnityEngine.AddressableAssets.Addressables.RuntimePath，在运行时才知道值。\n\n左上角可以添加变量和Profile，在变量上右键可以删除和更名变量。\n\n在AddressableAssetSettings Inspector上可以选择使用哪一份Profilles，这里使用Default Profiles。\n\n### Hosting Services\n\nAA系统提供本地资源服务器，模拟远程资源加载。被设计的目的是为了在测试打包内容时加快迭代速度，不需要另外写一套远程资源下载加载代码。它能够为本地或者远端的客户端提供内容。\n\nAddressables Groups-》tools-》Hosting Services-》Create-》Local Hosting创建本地资源服务器：\n\n勾选Enable会分配端口号启动服务器，也可以指定端口号。\n\n开启后，hosting services会以每个group的build path为资源目录提供内容。\n\n### 内存管理memory management\n\nAA系统通过Addressables API来管理资源的引用计数，提供Event Viewer工具监测资源对象被引用和内存占用情况。\n\nAddressables常见的资源加卸载API：\n\n- Addressables.LoadAssetAsync & Addressables.Release \n- Addressables.LoadSceneAsync & Addressables.UnloadSceneAsync\n- Addressables.InstantiateAsync & Addressables.ReleaseInstance\n\n写段测试代码观察资源的引用情况：\n```\nusing UnityEngine;\nusing UnityEngine.AddressableAssets;\nusing UnityEngine.ResourceManagement.AsyncOperations;\n\npublic class Loader : MonoBehaviour\n{\n  private void OnEnable()\n  {\n    InstByLoadAssetAsync(\"Assets/Local_static 1.prefab\");\n    InstByLoadAssetAsync(\"Assets/Local_non_static.prefab\");\n    InstByLoadAssetAsync(\"Assets/Remote_static 1.prefab\");\n    InstByLoadAssetAsync(\"Assets/Remote_non_static.prefab\");\n    InstByLoadAssetAsync(\"Assets/Local_static.prefab\");\n    InstByInstantiateAsync(\"Assets/Local_static 1.prefab\");\n    InstByInstantiateAsync(\"Assets/Local_non_static.prefab\");\n    InstByInstantiateAsync(\"Assets/Remote_static 1.prefab\");\n    InstByInstantiateAsync(\"Assets/Remote_non_static.prefab\");\n    InstByInstantiateAsync(\"Assets/Local_static.prefab\");\n  }\n\n  private void InstByLoadAssetAsync(string address)\n  {\n    AsyncOperationHandle<GameObject> handle = Addressables.LoadAssetAsync<GameObject>(address);\n    handle.Completed += OnLoadDone;\n  }\n\n  private void OnLoadDone(AsyncOperationHandle<GameObject> handle)\n  {\n    Instantiate(handle.Result);\n  }\n\n  private void InstByInstantiateAsync(string address)\n  {\n    Addressables.InstantiateAsync(address);\n  }\n```\n\nplay mode script选择use existing build，因为use asset database 模式没有统计资源依赖数据（实际上只有fps和Monoheap），线上是ab加载模式所以数据更加准确。\n\n通过tools-》Event Viewer打开面板：\n\n- FPS: 帧率\n- MonoHeap：内存占用\n- Event Count：每帧事件数\n- Instantiation Counts：通过Addressables.InstantiateAsync实例化的资源\n- Resource Request：每个资源的引用计数\n\n注意：当资源的引用计数为零时，并不代表该资源被回收，比如AB中的a资源引用未0，但AB自身的引用不为0，AB未被释放所以a也未释放。\n\n## 6. 代码层加载资源过程（如何实现）\n\n第一步初始化，加载catalog文件，解析出资源定位信息。\n\n![](UnityAddressable/image_4.png \"\")\n\n接下来的过程可以简单分为两步：寻址和加载。\n\n![](UnityAddressable/image_5.png \"\")\n\n1. catalog文件会被加载并解析得出所有的Locator对象，Locator对象包括资源及其依赖的信息。\n2. 遍历所有的Locator对象，匹配address key，找出对应的Locator，Locator下包含了资源的Location对象，这个对象管理资源地址及其依赖信息。\n3. ResourceManager类根据Locations对象上记录的ProviderId找到Provider对象，调用返回自身和其依赖的异步操作对象AsyncOperation，执行异步操作加载资源通过回调函数返回。\n\n**Location对象：**\n\n可以看到上面记录的InternalId，Dependencies、ProviderId、LocatorId等信息。\n\ncatalog文件中记录有LocatorId，能被它解析出map信息：\n\n\n\n**参考资料：**\n\nAddressables官方文档\n\nAddressable Asset System\n\n","slug":"UnityAddressable","published":1,"updated":"2022-12-06T15:30:38.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv450019mcq07tuh5nwy","content":"<span id=\"more\"></span>\n<h1 id=\"Unity-Addressable-Asset-System介绍、教程和原理讲解\"><a href=\"#Unity-Addressable-Asset-System介绍、教程和原理讲解\" class=\"headerlink\" title=\"Unity Addressable Asset System介绍、教程和原理讲解\"></a>Unity Addressable Asset System介绍、教程和原理讲解</h1><h2 id=\"1-背景（怎么来的）\"><a href=\"#1-背景（怎么来的）\" class=\"headerlink\" title=\"1. 背景（怎么来的）\"></a>1. 背景（怎么来的）</h2><p>Unity Addressable Asset System是官方推出的资源加载和资源管理的一套解决方案。</p>\n<p>它使用异步加载的方式加载资源，提供统一的加载接口，不管资源放在哪个目录，不管资源的依赖有多复杂。</p>\n<p>传统的资源管理方式严重将组织、构建、加载Asset的逻辑捆绑在一起，比如</p>\n<ol>\n<li>资源存放在Resource文件，那加载资源必须要用到Resources.Load方法，并且提供资源路径</li>\n<li>加载ab中的asset时，加载代码需要和构建策略捆绑在一起，先找出资源对应的bundle加载完成后，再加载需要的资源。</li>\n<li>以路径加载的代码，当资源路径发生改变往往要多次更改代码，这个更改可能涉及多处。</li>\n<li>资源位于远程，需要写代码管理资源的下载、加载、卸载和缓存。<img src=\"/2021/01/15/UnityAddressable/image.png\" class=\"\">\n基于以上种种不便，Unity Addressable Asset System（下文称AA系统）的一个重要好处就是解决以上种种痛点。<h2 id=\"2-特点（有何用）\"><a href=\"#2-特点（有何用）\" class=\"headerlink\" title=\"2. 特点（有何用）\"></a>2. 特点（有何用）</h2></li>\n</ol>\n<ul>\n<li>快速迭代：解耦组织、构建、加载Asset的逻辑，通过[address]和统一接口加载资源，不管资源放是否来自Resources目录，或者将来重命名或者路径变更，不管资源如何构建，都不用再修改加载代码。</li>\n<li>依赖管理：当加载一个资源的时候，AA系统会先加载完这个资源的所有依赖，然后再返回这个资源。</li>\n<li>内存管理：自动管理资源加载卸载的引用计数，并提供工具探测内存泄露问题。</li>\n<li>内容打包：当资源变更时能够有效打包资源，更容易管理本地和远程打包资源和有效减小应用大小。</li>\n<li>配置文件：统一管理资源如何打包的变量，避免配置分散多处修改问题。</li>\n</ul>\n<h2 id=\"3-概念\"><a href=\"#3-概念\" class=\"headerlink\" title=\"3. 概念\"></a>3. 概念</h2><h3 id=\"Group\"><a href=\"#Group\" class=\"headerlink\" title=\"Group\"></a>Group</h3><p>group定义一组在构建时可处理的Addressable Asset集合。</p>\n<p>默认有两个group，如上图：</p>\n<ul>\n<li>Built In Data。内置的group，包含Resources文件夹，这个group不支持修改。</li>\n<li>Default Local Group。在Inspector标记Addresables的Asset会默认添加进这里，支持修改，包括改名和添加Schema。</li>\n</ul>\n<h3 id=\"Group-Schema\"><a href=\"#Group-Schema\" class=\"headerlink\" title=\"Group Schema\"></a>Group Schema</h3><p>group schema定义一组分配给group在构建使用的数据，可视为配置数据，决定group中Asset如何打包、打包粒度等等。</p>\n<p>点击group，查看这个group中添加的schema，和schema的配置：</p>\n<img src=\"/2021/01/15/UnityAddressable/image_1.png\" class=\"\">\n<p>包括三种Schema：</p>\n<ol>\n<li>Content Updage Restriction 主要决定ab可不可以更改<br> Update Restriction：决定改组内容打包成ab后，可不可以动态更新。can change post release：允许发布后变更；cannot change post release：不允许发布后变更。</li>\n<li>Content Packing &amp; Loading <strong>决定打包方式和加载的配置</strong>，包括构建目录、压缩、打包模式等等<br> 下面是几个重要的配置，鼠标移动到变量名上可以显示该配置作用介绍：<br> Build Path：打包后的发布路径。可分为本地和远程路径。<br> Load Path：加载ab的路径，可分为本地和远程路径。<br> 这些的路径变量来自Profiles中定义的变量，Profiles的解析请看下面。<br> Compression：支持三种压缩方式，包括不压缩、LZ4和LZMA。<br> Include In Build：勾选才会将该group纳入构建进程中。<br> Use Asset Bundle Cache：勾选会将加载的ab加进缓存目录中，远程bundle才需要勾选。<br> Bundle Mode：打包模式，分别是Pack Separately单独打包，Pack Together全部达成一个包，Pack Together By Label根据label划分打包。<br> Bundle Naming：bundle的命名规则。<br> Asset Provider：加载和解析Asset的类，不同的资源类型对应不同的provider。<br> Asset bundle Provider：加载和解析Asset bundle的类，默认为AssetBundleProvider。</li>\n<li>Resources and Build In Scenes<strong> 是否将Resources和Build Setting Scenes包含进来打包</strong><br> Include Resources Folders：是否将Resources文件夹下的Asset包含进group。Resources下的Asset会打包进包体，一般不需要勾选。<br> Include Build Setting Scenes：是否包含Build Setting添加的Scenes。</li>\n</ol>\n<h3 id=\"Addressable-Asset-Settings\"><a href=\"#Addressable-Asset-Settings\" class=\"headerlink\" title=\"Addressable Asset Settings\"></a>Addressable Asset Settings</h3><p>作为AA系统全局的配置文件，在初始化的时候生成。以下介绍几个重要的变量：</p>\n<p>属性介绍：</p>\n<p>Disable Catalog Update on Startup：勾选则在AA系统初始化时候不检查catalog文件更新。</p>\n<p><strong>Build Remote Catalog</strong>： 勾选则生成远程ab的catalog文件，需要配置remote catalog文件的build path和load path。</p>\n<p>Send Profiler Event：勾选则开启分析器。</p>\n<p>Unique Bundle IDs：给bundle分配独一无二的ID。因为catalog文件可以在初始化以外的时候更新，当旧资源已经在内存中时，但unity无法下载两个同internal name的资源，这种情况资源无法及时更新。要么先卸载重新资源重新下载，要么分配给bundle单独的id来区分。开启这个选项，当资源更新时不仅仅是更新该资源，也会更新依赖链，带来一定的性能花销。</p>\n<p>Contiguous Bundle：基于源资源的排序来排序Bundle，可以加快Asset加载速度。</p>\n<p><strong>Build and Play Mode Scripts</strong></p>\n<p>Use Asset Database （fastest）：加载源文件模式，不用打ab和分析。</p>\n<p>Simulate Groups（Advanced）：模拟组模式，以不打ab方式来分析内容的布局和依赖。用类似加载ab的方式，通过ResourceManager从AssetDatabase加载。这个模式用于模拟加载策略，调整和平衡内容的分布。</p>\n<p>Use Existing Build：使用构建好的ab加载，需要提前构建好ab。</p>\n<p>Default Build Script：默认的构建脚本。</p>\n<p>可选的Build Script都是ScriptableObject的Asset。假如需要扩展，可以新建脚本，继承IDataBuilder接口。添加可以选择左下角+，添加Build Script Asset。</p>\n<p>前三个Play Mode Script分别对应Assetables Groups-》Play Mode Script下的三个模式。</p>\n<p>Default Build Script对应Assetables Groups-》Build-》New Build-》Default Build Script。</p>\n<p>Asset Group Template：group模板，Assetables Groups面板下Create→Group下，或者group右键菜单可以选择。在Project面板目录上右键菜单Create-》Addressables-》Group Templates-》Blank Group Template可以创建模板。</p>\n<h2 id=\"4-使用流程（怎么用）\"><a href=\"#4-使用流程（怎么用）\" class=\"headerlink\" title=\"4. 使用流程（怎么用）\"></a>4. 使用流程（怎么用）</h2><h3 id=\"step1-安装\"><a href=\"#step1-安装\" class=\"headerlink\" title=\"step1 安装\"></a>step1 安装</h3><p>到Package Manager安装以下两个package：</p>\n<ul>\n<li>Addressables，基本包，本文章使用的版本是1.16.15</li>\n<li>Scriptable Build Pipeline package，依赖包</li>\n</ul>\n<h3 id=\"step2-初始化\"><a href=\"#step2-初始化\" class=\"headerlink\" title=\"step2 初始化\"></a>step2 初始化</h3><p>安装包后，通过菜单栏Window-&gt;Asset Management-&gt;Addressables→Groups 可以打开AA系统的管理面板</p>\n<p>未初始化会出现初始化按钮，点击后Asset目录下会出现一个AddressableAssetsData目录，存放着一些配置文件。</p>\n<h3 id=\"step3-标记可寻址\"><a href=\"#step3-标记可寻址\" class=\"headerlink\" title=\"step3 标记可寻址\"></a>step3 标记可寻址</h3><p>需要将Asset标记为Addressable，才能纳入AA系统的管理。标记为Addressable Asset有两个途径：</p>\n<p>通过Inspector。勾选，会将Asset添加进默认的group（Default Local Group），以相对Assets目录的地址作为AA系统寻找该Asset的【address】，这个地址支持修改。</p>\n<ol>\n<li>拖动Asset进group。<h3 id=\"step4-配置远程打包路径\"><a href=\"#step4-配置远程打包路径\" class=\"headerlink\" title=\"step4 配置远程打包路径\"></a>step4 配置远程打包路径</h3>unity官方推荐新建一个profile为hosting service所用，配置正确的build path和load path，可以上可以填上Hosting Service 变量：<br>并在需要在AddressableAssetSettings上开启构建远程catelog，选用Editor Hosted Profile，选择build path 和 load path：<br>Addressables Group面板上选择Editor Hosted Profile<br>最后在group Inspector面板中选择内容构建输出的目录，若为远程资源则选择RemoteBuildPath。<br>这就配置完了Hosting Services的使用流程。<h3 id=\"step5-打包\"><a href=\"#step5-打包\" class=\"headerlink\" title=\"step5 打包\"></a>step5 打包</h3>前面已经了解到Group Schema控制打包方式，主要用到两个Schema：content update restriction 和 content packing &amp; loading<br>打出的ab类型可分为远程和本地，静态和非静态（can change post release为非静态）。两两结合可以分为四个组，每个组下各包含两个资源：<br>点击Addressables Groups菜单栏build-》new build-》default build script，开始构建。<br>ab构建完成后，可以看到本地ab和远程ab分别打包到了各自的目录：<br>local和remote各自有一份catalog json文件，remote多了一份hash文件，记录catalog文件的hash值，用于判断catalog文件的更新。<br>catalog文件里记录了address到资源的映射关系，用于定位资源和决定如何加载资源（where和how），每当资源发生变动后构建完成时，catalog文件重新生成。<h3 id=\"step6-更新\"><a href=\"#step6-更新\" class=\"headerlink\" title=\"step6 更新\"></a>step6 更新</h3>再看看更新资源后，各组间的资源打包后如何组织？<br>每个组更改第一个资源后，点击Tools-》check for content update restriction，检查更新<br>这时候会打开窗口选择addressables_content_state.bin文件，文件位于Assets/AddressableAssetsData/[platform]下，发布哪个平台选择哪个平台，一般是Android和Windows。<br>为什么要选择这个bin文件？<br>使用过BuildPipeline构建ab都知道有个manifest文件记录资源间依赖关系，AA系统会将资源间依赖关系记录进这个bin文件，作为对比找出更改的资源。<br>这步过后，会检查出更改的资源：<br>为什么所有资源都有更改，只检查出两个有更新，并且两个资源都来自静态组？<br>unity推荐打包内容分两种类型：</li>\n</ol>\n<ul>\n<li>can change post release：期望更新的动态内容。一般打成小包，以控制精准更新，减少包中其他没有更新的资源的不必要更新。</li>\n<li>cannot change post release：不期望更新的静态内容。一般打到一个很少更新的大包中。</li>\n</ul>\n<p>addressables_content_state.bin文件只是记录了静态资源的hash和依赖关系，动态资源的依赖关系动态计算没有记录到bin文件中，所以check for content update restriction只是作用于static组，对nonStatic组没有作用，也即是对设置了can change post release的组没有作用。</p>\n<p>点击apply changes按钮，groups会出现变化：</p>\n<p>static组中更改的资源会移动到一个新组content update group：</p>\n<p>content update group属于remote non static组</p>\n<p>点击build-》update a previous build，选择刚才的bin文件，增量更新</p>\n<p>对比发现：</p>\n<p>catalog json和hash文件会更新，被重写。</p>\n<p>静态组资源bundle并不会被重写更改或者重生生成，静态组中更改的资源会被移动进content update group重新打包到remote目录。</p>\n<p>非静态资源组的bundle包虽然不会被重写，但是会被重新生成，hash值也会更新。</p>\n<p>旧的非静态资源组bundle会在catalog文件中失去连接和记录，成为无效资源（这个无效资源会保留在用户设备上成为垃圾资源，应该要有个机制及时清理）。</p>\n<p>note：每次full build，bundle和catalog文件会重新生成，localBuildpath目录会清空，但是remoteBuildPath目录并不会清空，新生成的资源会跟旧资源混合。</p>\n<p>用一张图来阐述官方推荐的AA系统资源更新生命周期：</p>\n<img src=\"/2021/01/15/UnityAddressable/image_2.png\" class=\"\">\n<img src=\"/2021/01/15/UnityAddressable/image_3.png\" class=\"\">\n<h2 id=\"5-工具\"><a href=\"#5-工具\" class=\"headerlink\" title=\"5. 工具\"></a>5. 工具</h2><h3 id=\"Profiles\"><a href=\"#Profiles\" class=\"headerlink\" title=\"Profiles\"></a>Profiles</h3><p>通过菜单栏Window-&gt;Asset Management→Addressables→Profiles 或者 group面板的菜单栏tools→Profiles 打开Profiles面板。</p>\n<p>这个是AA系统用来管理一组组变量的解决方案。</p>\n<p>默认有以上5个变量，见名知义。</p>\n<p>从变量的值中发现有两种符号：[]和{}。</p>\n<p>[]：定义编辑时的变量。比如UnityEditor.EditorUserBuildSettings.activeBuildTarget，在编辑时就可以得到的值。</p>\n<p>{}：定义运行时的变量。比如UnityEngine.AddressableAssets.Addressables.RuntimePath，在运行时才知道值。</p>\n<p>左上角可以添加变量和Profile，在变量上右键可以删除和更名变量。</p>\n<p>在AddressableAssetSettings Inspector上可以选择使用哪一份Profilles，这里使用Default Profiles。</p>\n<h3 id=\"Hosting-Services\"><a href=\"#Hosting-Services\" class=\"headerlink\" title=\"Hosting Services\"></a>Hosting Services</h3><p>AA系统提供本地资源服务器，模拟远程资源加载。被设计的目的是为了在测试打包内容时加快迭代速度，不需要另外写一套远程资源下载加载代码。它能够为本地或者远端的客户端提供内容。</p>\n<p>Addressables Groups-》tools-》Hosting Services-》Create-》Local Hosting创建本地资源服务器：</p>\n<p>勾选Enable会分配端口号启动服务器，也可以指定端口号。</p>\n<p>开启后，hosting services会以每个group的build path为资源目录提供内容。</p>\n<h3 id=\"内存管理memory-management\"><a href=\"#内存管理memory-management\" class=\"headerlink\" title=\"内存管理memory management\"></a>内存管理memory management</h3><p>AA系统通过Addressables API来管理资源的引用计数，提供Event Viewer工具监测资源对象被引用和内存占用情况。</p>\n<p>Addressables常见的资源加卸载API：</p>\n<ul>\n<li>Addressables.LoadAssetAsync &amp; Addressables.Release </li>\n<li>Addressables.LoadSceneAsync &amp; Addressables.UnloadSceneAsync</li>\n<li>Addressables.InstantiateAsync &amp; Addressables.ReleaseInstance</li>\n</ul>\n<p>写段测试代码观察资源的引用情况：<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AddressableAssets;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.ResourceManagement.AsyncOperations;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Loader</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>()</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Local_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Local_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Remote_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Remote_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Local_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Local_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Local_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Remote_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Remote_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Local_static.prefab&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">InstByLoadAssetAsync</span>(<span class=\"params\"><span class=\"built_in\">string</span> address</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    AsyncOperationHandle&lt;GameObject&gt; handle = Addressables.LoadAssetAsync&lt;GameObject&gt;(address);</span><br><span class=\"line\">    handle.Completed += OnLoadDone;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnLoadDone</span>(<span class=\"params\">AsyncOperationHandle&lt;GameObject&gt; handle</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Instantiate(handle.Result);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">InstByInstantiateAsync</span>(<span class=\"params\"><span class=\"built_in\">string</span> address</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Addressables.InstantiateAsync(address);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>play mode script选择use existing build，因为use asset database 模式没有统计资源依赖数据（实际上只有fps和Monoheap），线上是ab加载模式所以数据更加准确。</p>\n<p>通过tools-》Event Viewer打开面板：</p>\n<ul>\n<li>FPS: 帧率</li>\n<li>MonoHeap：内存占用</li>\n<li>Event Count：每帧事件数</li>\n<li>Instantiation Counts：通过Addressables.InstantiateAsync实例化的资源</li>\n<li>Resource Request：每个资源的引用计数</li>\n</ul>\n<p>注意：当资源的引用计数为零时，并不代表该资源被回收，比如AB中的a资源引用未0，但AB自身的引用不为0，AB未被释放所以a也未释放。</p>\n<h2 id=\"6-代码层加载资源过程（如何实现）\"><a href=\"#6-代码层加载资源过程（如何实现）\" class=\"headerlink\" title=\"6. 代码层加载资源过程（如何实现）\"></a>6. 代码层加载资源过程（如何实现）</h2><p>第一步初始化，加载catalog文件，解析出资源定位信息。</p>\n<img src=\"/2021/01/15/UnityAddressable/image_4.png\" class=\"\">\n<p>接下来的过程可以简单分为两步：寻址和加载。</p>\n<img src=\"/2021/01/15/UnityAddressable/image_5.png\" class=\"\">\n<ol>\n<li>catalog文件会被加载并解析得出所有的Locator对象，Locator对象包括资源及其依赖的信息。</li>\n<li>遍历所有的Locator对象，匹配address key，找出对应的Locator，Locator下包含了资源的Location对象，这个对象管理资源地址及其依赖信息。</li>\n<li>ResourceManager类根据Locations对象上记录的ProviderId找到Provider对象，调用返回自身和其依赖的异步操作对象AsyncOperation，执行异步操作加载资源通过回调函数返回。</li>\n</ol>\n<p><strong>Location对象：</strong></p>\n<p>可以看到上面记录的InternalId，Dependencies、ProviderId、LocatorId等信息。</p>\n<p>catalog文件中记录有LocatorId，能被它解析出map信息：</p>\n<p><strong>参考资料：</strong></p>\n<p>Addressables官方文档</p>\n<p>Addressable Asset System</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Unity-Addressable-Asset-System介绍、教程和原理讲解\"><a href=\"#Unity-Addressable-Asset-System介绍、教程和原理讲解\" class=\"headerlink\" title=\"Unity Addressable Asset System介绍、教程和原理讲解\"></a>Unity Addressable Asset System介绍、教程和原理讲解</h1><h2 id=\"1-背景（怎么来的）\"><a href=\"#1-背景（怎么来的）\" class=\"headerlink\" title=\"1. 背景（怎么来的）\"></a>1. 背景（怎么来的）</h2><p>Unity Addressable Asset System是官方推出的资源加载和资源管理的一套解决方案。</p>\n<p>它使用异步加载的方式加载资源，提供统一的加载接口，不管资源放在哪个目录，不管资源的依赖有多复杂。</p>\n<p>传统的资源管理方式严重将组织、构建、加载Asset的逻辑捆绑在一起，比如</p>\n<ol>\n<li>资源存放在Resource文件，那加载资源必须要用到Resources.Load方法，并且提供资源路径</li>\n<li>加载ab中的asset时，加载代码需要和构建策略捆绑在一起，先找出资源对应的bundle加载完成后，再加载需要的资源。</li>\n<li>以路径加载的代码，当资源路径发生改变往往要多次更改代码，这个更改可能涉及多处。</li>\n<li>资源位于远程，需要写代码管理资源的下载、加载、卸载和缓存。<img src=\"/2021/01/15/UnityAddressable/image.png\" class=\"\">\n基于以上种种不便，Unity Addressable Asset System（下文称AA系统）的一个重要好处就是解决以上种种痛点。<h2 id=\"2-特点（有何用）\"><a href=\"#2-特点（有何用）\" class=\"headerlink\" title=\"2. 特点（有何用）\"></a>2. 特点（有何用）</h2></li>\n</ol>\n<ul>\n<li>快速迭代：解耦组织、构建、加载Asset的逻辑，通过[address]和统一接口加载资源，不管资源放是否来自Resources目录，或者将来重命名或者路径变更，不管资源如何构建，都不用再修改加载代码。</li>\n<li>依赖管理：当加载一个资源的时候，AA系统会先加载完这个资源的所有依赖，然后再返回这个资源。</li>\n<li>内存管理：自动管理资源加载卸载的引用计数，并提供工具探测内存泄露问题。</li>\n<li>内容打包：当资源变更时能够有效打包资源，更容易管理本地和远程打包资源和有效减小应用大小。</li>\n<li>配置文件：统一管理资源如何打包的变量，避免配置分散多处修改问题。</li>\n</ul>\n<h2 id=\"3-概念\"><a href=\"#3-概念\" class=\"headerlink\" title=\"3. 概念\"></a>3. 概念</h2><h3 id=\"Group\"><a href=\"#Group\" class=\"headerlink\" title=\"Group\"></a>Group</h3><p>group定义一组在构建时可处理的Addressable Asset集合。</p>\n<p>默认有两个group，如上图：</p>\n<ul>\n<li>Built In Data。内置的group，包含Resources文件夹，这个group不支持修改。</li>\n<li>Default Local Group。在Inspector标记Addresables的Asset会默认添加进这里，支持修改，包括改名和添加Schema。</li>\n</ul>\n<h3 id=\"Group-Schema\"><a href=\"#Group-Schema\" class=\"headerlink\" title=\"Group Schema\"></a>Group Schema</h3><p>group schema定义一组分配给group在构建使用的数据，可视为配置数据，决定group中Asset如何打包、打包粒度等等。</p>\n<p>点击group，查看这个group中添加的schema，和schema的配置：</p>\n<img src=\"/2021/01/15/UnityAddressable/image_1.png\" class=\"\">\n<p>包括三种Schema：</p>\n<ol>\n<li>Content Updage Restriction 主要决定ab可不可以更改<br> Update Restriction：决定改组内容打包成ab后，可不可以动态更新。can change post release：允许发布后变更；cannot change post release：不允许发布后变更。</li>\n<li>Content Packing &amp; Loading <strong>决定打包方式和加载的配置</strong>，包括构建目录、压缩、打包模式等等<br> 下面是几个重要的配置，鼠标移动到变量名上可以显示该配置作用介绍：<br> Build Path：打包后的发布路径。可分为本地和远程路径。<br> Load Path：加载ab的路径，可分为本地和远程路径。<br> 这些的路径变量来自Profiles中定义的变量，Profiles的解析请看下面。<br> Compression：支持三种压缩方式，包括不压缩、LZ4和LZMA。<br> Include In Build：勾选才会将该group纳入构建进程中。<br> Use Asset Bundle Cache：勾选会将加载的ab加进缓存目录中，远程bundle才需要勾选。<br> Bundle Mode：打包模式，分别是Pack Separately单独打包，Pack Together全部达成一个包，Pack Together By Label根据label划分打包。<br> Bundle Naming：bundle的命名规则。<br> Asset Provider：加载和解析Asset的类，不同的资源类型对应不同的provider。<br> Asset bundle Provider：加载和解析Asset bundle的类，默认为AssetBundleProvider。</li>\n<li>Resources and Build In Scenes<strong> 是否将Resources和Build Setting Scenes包含进来打包</strong><br> Include Resources Folders：是否将Resources文件夹下的Asset包含进group。Resources下的Asset会打包进包体，一般不需要勾选。<br> Include Build Setting Scenes：是否包含Build Setting添加的Scenes。</li>\n</ol>\n<h3 id=\"Addressable-Asset-Settings\"><a href=\"#Addressable-Asset-Settings\" class=\"headerlink\" title=\"Addressable Asset Settings\"></a>Addressable Asset Settings</h3><p>作为AA系统全局的配置文件，在初始化的时候生成。以下介绍几个重要的变量：</p>\n<p>属性介绍：</p>\n<p>Disable Catalog Update on Startup：勾选则在AA系统初始化时候不检查catalog文件更新。</p>\n<p><strong>Build Remote Catalog</strong>： 勾选则生成远程ab的catalog文件，需要配置remote catalog文件的build path和load path。</p>\n<p>Send Profiler Event：勾选则开启分析器。</p>\n<p>Unique Bundle IDs：给bundle分配独一无二的ID。因为catalog文件可以在初始化以外的时候更新，当旧资源已经在内存中时，但unity无法下载两个同internal name的资源，这种情况资源无法及时更新。要么先卸载重新资源重新下载，要么分配给bundle单独的id来区分。开启这个选项，当资源更新时不仅仅是更新该资源，也会更新依赖链，带来一定的性能花销。</p>\n<p>Contiguous Bundle：基于源资源的排序来排序Bundle，可以加快Asset加载速度。</p>\n<p><strong>Build and Play Mode Scripts</strong></p>\n<p>Use Asset Database （fastest）：加载源文件模式，不用打ab和分析。</p>\n<p>Simulate Groups（Advanced）：模拟组模式，以不打ab方式来分析内容的布局和依赖。用类似加载ab的方式，通过ResourceManager从AssetDatabase加载。这个模式用于模拟加载策略，调整和平衡内容的分布。</p>\n<p>Use Existing Build：使用构建好的ab加载，需要提前构建好ab。</p>\n<p>Default Build Script：默认的构建脚本。</p>\n<p>可选的Build Script都是ScriptableObject的Asset。假如需要扩展，可以新建脚本，继承IDataBuilder接口。添加可以选择左下角+，添加Build Script Asset。</p>\n<p>前三个Play Mode Script分别对应Assetables Groups-》Play Mode Script下的三个模式。</p>\n<p>Default Build Script对应Assetables Groups-》Build-》New Build-》Default Build Script。</p>\n<p>Asset Group Template：group模板，Assetables Groups面板下Create→Group下，或者group右键菜单可以选择。在Project面板目录上右键菜单Create-》Addressables-》Group Templates-》Blank Group Template可以创建模板。</p>\n<h2 id=\"4-使用流程（怎么用）\"><a href=\"#4-使用流程（怎么用）\" class=\"headerlink\" title=\"4. 使用流程（怎么用）\"></a>4. 使用流程（怎么用）</h2><h3 id=\"step1-安装\"><a href=\"#step1-安装\" class=\"headerlink\" title=\"step1 安装\"></a>step1 安装</h3><p>到Package Manager安装以下两个package：</p>\n<ul>\n<li>Addressables，基本包，本文章使用的版本是1.16.15</li>\n<li>Scriptable Build Pipeline package，依赖包</li>\n</ul>\n<h3 id=\"step2-初始化\"><a href=\"#step2-初始化\" class=\"headerlink\" title=\"step2 初始化\"></a>step2 初始化</h3><p>安装包后，通过菜单栏Window-&gt;Asset Management-&gt;Addressables→Groups 可以打开AA系统的管理面板</p>\n<p>未初始化会出现初始化按钮，点击后Asset目录下会出现一个AddressableAssetsData目录，存放着一些配置文件。</p>\n<h3 id=\"step3-标记可寻址\"><a href=\"#step3-标记可寻址\" class=\"headerlink\" title=\"step3 标记可寻址\"></a>step3 标记可寻址</h3><p>需要将Asset标记为Addressable，才能纳入AA系统的管理。标记为Addressable Asset有两个途径：</p>\n<p>通过Inspector。勾选，会将Asset添加进默认的group（Default Local Group），以相对Assets目录的地址作为AA系统寻找该Asset的【address】，这个地址支持修改。</p>\n<ol>\n<li>拖动Asset进group。<h3 id=\"step4-配置远程打包路径\"><a href=\"#step4-配置远程打包路径\" class=\"headerlink\" title=\"step4 配置远程打包路径\"></a>step4 配置远程打包路径</h3>unity官方推荐新建一个profile为hosting service所用，配置正确的build path和load path，可以上可以填上Hosting Service 变量：<br>并在需要在AddressableAssetSettings上开启构建远程catelog，选用Editor Hosted Profile，选择build path 和 load path：<br>Addressables Group面板上选择Editor Hosted Profile<br>最后在group Inspector面板中选择内容构建输出的目录，若为远程资源则选择RemoteBuildPath。<br>这就配置完了Hosting Services的使用流程。<h3 id=\"step5-打包\"><a href=\"#step5-打包\" class=\"headerlink\" title=\"step5 打包\"></a>step5 打包</h3>前面已经了解到Group Schema控制打包方式，主要用到两个Schema：content update restriction 和 content packing &amp; loading<br>打出的ab类型可分为远程和本地，静态和非静态（can change post release为非静态）。两两结合可以分为四个组，每个组下各包含两个资源：<br>点击Addressables Groups菜单栏build-》new build-》default build script，开始构建。<br>ab构建完成后，可以看到本地ab和远程ab分别打包到了各自的目录：<br>local和remote各自有一份catalog json文件，remote多了一份hash文件，记录catalog文件的hash值，用于判断catalog文件的更新。<br>catalog文件里记录了address到资源的映射关系，用于定位资源和决定如何加载资源（where和how），每当资源发生变动后构建完成时，catalog文件重新生成。<h3 id=\"step6-更新\"><a href=\"#step6-更新\" class=\"headerlink\" title=\"step6 更新\"></a>step6 更新</h3>再看看更新资源后，各组间的资源打包后如何组织？<br>每个组更改第一个资源后，点击Tools-》check for content update restriction，检查更新<br>这时候会打开窗口选择addressables_content_state.bin文件，文件位于Assets/AddressableAssetsData/[platform]下，发布哪个平台选择哪个平台，一般是Android和Windows。<br>为什么要选择这个bin文件？<br>使用过BuildPipeline构建ab都知道有个manifest文件记录资源间依赖关系，AA系统会将资源间依赖关系记录进这个bin文件，作为对比找出更改的资源。<br>这步过后，会检查出更改的资源：<br>为什么所有资源都有更改，只检查出两个有更新，并且两个资源都来自静态组？<br>unity推荐打包内容分两种类型：</li>\n</ol>\n<ul>\n<li>can change post release：期望更新的动态内容。一般打成小包，以控制精准更新，减少包中其他没有更新的资源的不必要更新。</li>\n<li>cannot change post release：不期望更新的静态内容。一般打到一个很少更新的大包中。</li>\n</ul>\n<p>addressables_content_state.bin文件只是记录了静态资源的hash和依赖关系，动态资源的依赖关系动态计算没有记录到bin文件中，所以check for content update restriction只是作用于static组，对nonStatic组没有作用，也即是对设置了can change post release的组没有作用。</p>\n<p>点击apply changes按钮，groups会出现变化：</p>\n<p>static组中更改的资源会移动到一个新组content update group：</p>\n<p>content update group属于remote non static组</p>\n<p>点击build-》update a previous build，选择刚才的bin文件，增量更新</p>\n<p>对比发现：</p>\n<p>catalog json和hash文件会更新，被重写。</p>\n<p>静态组资源bundle并不会被重写更改或者重生生成，静态组中更改的资源会被移动进content update group重新打包到remote目录。</p>\n<p>非静态资源组的bundle包虽然不会被重写，但是会被重新生成，hash值也会更新。</p>\n<p>旧的非静态资源组bundle会在catalog文件中失去连接和记录，成为无效资源（这个无效资源会保留在用户设备上成为垃圾资源，应该要有个机制及时清理）。</p>\n<p>note：每次full build，bundle和catalog文件会重新生成，localBuildpath目录会清空，但是remoteBuildPath目录并不会清空，新生成的资源会跟旧资源混合。</p>\n<p>用一张图来阐述官方推荐的AA系统资源更新生命周期：</p>\n<img src=\"/2021/01/15/UnityAddressable/image_2.png\" class=\"\">\n<img src=\"/2021/01/15/UnityAddressable/image_3.png\" class=\"\">\n<h2 id=\"5-工具\"><a href=\"#5-工具\" class=\"headerlink\" title=\"5. 工具\"></a>5. 工具</h2><h3 id=\"Profiles\"><a href=\"#Profiles\" class=\"headerlink\" title=\"Profiles\"></a>Profiles</h3><p>通过菜单栏Window-&gt;Asset Management→Addressables→Profiles 或者 group面板的菜单栏tools→Profiles 打开Profiles面板。</p>\n<p>这个是AA系统用来管理一组组变量的解决方案。</p>\n<p>默认有以上5个变量，见名知义。</p>\n<p>从变量的值中发现有两种符号：[]和{}。</p>\n<p>[]：定义编辑时的变量。比如UnityEditor.EditorUserBuildSettings.activeBuildTarget，在编辑时就可以得到的值。</p>\n<p>{}：定义运行时的变量。比如UnityEngine.AddressableAssets.Addressables.RuntimePath，在运行时才知道值。</p>\n<p>左上角可以添加变量和Profile，在变量上右键可以删除和更名变量。</p>\n<p>在AddressableAssetSettings Inspector上可以选择使用哪一份Profilles，这里使用Default Profiles。</p>\n<h3 id=\"Hosting-Services\"><a href=\"#Hosting-Services\" class=\"headerlink\" title=\"Hosting Services\"></a>Hosting Services</h3><p>AA系统提供本地资源服务器，模拟远程资源加载。被设计的目的是为了在测试打包内容时加快迭代速度，不需要另外写一套远程资源下载加载代码。它能够为本地或者远端的客户端提供内容。</p>\n<p>Addressables Groups-》tools-》Hosting Services-》Create-》Local Hosting创建本地资源服务器：</p>\n<p>勾选Enable会分配端口号启动服务器，也可以指定端口号。</p>\n<p>开启后，hosting services会以每个group的build path为资源目录提供内容。</p>\n<h3 id=\"内存管理memory-management\"><a href=\"#内存管理memory-management\" class=\"headerlink\" title=\"内存管理memory management\"></a>内存管理memory management</h3><p>AA系统通过Addressables API来管理资源的引用计数，提供Event Viewer工具监测资源对象被引用和内存占用情况。</p>\n<p>Addressables常见的资源加卸载API：</p>\n<ul>\n<li>Addressables.LoadAssetAsync &amp; Addressables.Release </li>\n<li>Addressables.LoadSceneAsync &amp; Addressables.UnloadSceneAsync</li>\n<li>Addressables.InstantiateAsync &amp; Addressables.ReleaseInstance</li>\n</ul>\n<p>写段测试代码观察资源的引用情况：<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AddressableAssets;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.ResourceManagement.AsyncOperations;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Loader</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>()</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Local_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Local_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Remote_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Remote_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByLoadAssetAsync(<span class=\"string\">&quot;Assets/Local_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Local_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Local_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Remote_static 1.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Remote_non_static.prefab&quot;</span>);</span><br><span class=\"line\">    InstByInstantiateAsync(<span class=\"string\">&quot;Assets/Local_static.prefab&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">InstByLoadAssetAsync</span>(<span class=\"params\"><span class=\"built_in\">string</span> address</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    AsyncOperationHandle&lt;GameObject&gt; handle = Addressables.LoadAssetAsync&lt;GameObject&gt;(address);</span><br><span class=\"line\">    handle.Completed += OnLoadDone;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnLoadDone</span>(<span class=\"params\">AsyncOperationHandle&lt;GameObject&gt; handle</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Instantiate(handle.Result);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">InstByInstantiateAsync</span>(<span class=\"params\"><span class=\"built_in\">string</span> address</span>)</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    Addressables.InstantiateAsync(address);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>play mode script选择use existing build，因为use asset database 模式没有统计资源依赖数据（实际上只有fps和Monoheap），线上是ab加载模式所以数据更加准确。</p>\n<p>通过tools-》Event Viewer打开面板：</p>\n<ul>\n<li>FPS: 帧率</li>\n<li>MonoHeap：内存占用</li>\n<li>Event Count：每帧事件数</li>\n<li>Instantiation Counts：通过Addressables.InstantiateAsync实例化的资源</li>\n<li>Resource Request：每个资源的引用计数</li>\n</ul>\n<p>注意：当资源的引用计数为零时，并不代表该资源被回收，比如AB中的a资源引用未0，但AB自身的引用不为0，AB未被释放所以a也未释放。</p>\n<h2 id=\"6-代码层加载资源过程（如何实现）\"><a href=\"#6-代码层加载资源过程（如何实现）\" class=\"headerlink\" title=\"6. 代码层加载资源过程（如何实现）\"></a>6. 代码层加载资源过程（如何实现）</h2><p>第一步初始化，加载catalog文件，解析出资源定位信息。</p>\n<img src=\"/2021/01/15/UnityAddressable/image_4.png\" class=\"\">\n<p>接下来的过程可以简单分为两步：寻址和加载。</p>\n<img src=\"/2021/01/15/UnityAddressable/image_5.png\" class=\"\">\n<ol>\n<li>catalog文件会被加载并解析得出所有的Locator对象，Locator对象包括资源及其依赖的信息。</li>\n<li>遍历所有的Locator对象，匹配address key，找出对应的Locator，Locator下包含了资源的Location对象，这个对象管理资源地址及其依赖信息。</li>\n<li>ResourceManager类根据Locations对象上记录的ProviderId找到Provider对象，调用返回自身和其依赖的异步操作对象AsyncOperation，执行异步操作加载资源通过回调函数返回。</li>\n</ol>\n<p><strong>Location对象：</strong></p>\n<p>可以看到上面记录的InternalId，Dependencies、ProviderId、LocatorId等信息。</p>\n<p>catalog文件中记录有LocatorId，能被它解析出map信息：</p>\n<p><strong>参考资料：</strong></p>\n<p>Addressables官方文档</p>\n<p>Addressable Asset System</p>"},{"title":"github使用心得","date":"2016-05-10T15:46:00.000Z","_content":"\n> 仅以此文提醒下次不会再犯之错\n<!--more-->\n\n* 在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）\n***\n* hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。\n第二种可行方法：checkout到master分支上，merge hexi分支后，\n再push到远程库的hexi分支（git push origin master:hexi） 括号里master是\n本地master分支，hexi是远程的hexi分支\n\n* hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去\n***\n* git remote add （自取的主机名） （地址）\n目录下有了该本机，才能pull和push\n\n* 更新fork的远程库\nadd主机 》》 pull到本地库 》》push到远程库\n命令如下：\ngit remote add itxiehui https://itxiehui/itxiehui.github.io\ngit pull itxiehui develop\ngit remote add IT https://github.com/LaoLeo/itxiehui.github.io.git\ngit push IT develop\n解析：\nIT表示push到自己的远程仓库，该目录下要有该主机\nitxiehui是指owner的主机，IT是member即我fork到我仓库的主机\n\n\n\n","source":"_posts/github使用心得.md","raw":"\n---\ntitle: github使用心得\ndate: 2016-05-10 23:46:00\ntags: [github,基础]\n---\n\n> 仅以此文提醒下次不会再犯之错\n<!--more-->\n\n* 在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）\n***\n* hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。\n第二种可行方法：checkout到master分支上，merge hexi分支后，\n再push到远程库的hexi分支（git push origin master:hexi） 括号里master是\n本地master分支，hexi是远程的hexi分支\n\n* hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去\n***\n* git remote add （自取的主机名） （地址）\n目录下有了该本机，才能pull和push\n\n* 更新fork的远程库\nadd主机 》》 pull到本地库 》》push到远程库\n命令如下：\ngit remote add itxiehui https://itxiehui/itxiehui.github.io\ngit pull itxiehui develop\ngit remote add IT https://github.com/LaoLeo/itxiehui.github.io.git\ngit push IT develop\n解析：\nIT表示push到自己的远程仓库，该目录下要有该主机\nitxiehui是指owner的主机，IT是member即我fork到我仓库的主机\n\n\n\n","slug":"github使用心得","published":1,"updated":"2022-12-06T15:30:38.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv46001cmcq07mif71or","content":"<blockquote>\n<p>仅以此文提醒下次不会再犯之错<br><span id=\"more\"></span></p>\n</blockquote>\n<ul>\n<li>在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）</li>\n</ul>\n<hr>\n<ul>\n<li><p>hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。<br>第二种可行方法：checkout到master分支上，merge hexi分支后，<br>再push到远程库的hexi分支（git push origin master:hexi） 括号里master是<br>本地master分支，hexi是远程的hexi分支</p>\n</li>\n<li><p>hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>git remote add （自取的主机名） （地址）<br>目录下有了该本机，才能pull和push</p>\n</li>\n<li><p>更新fork的远程库<br>add主机 》》 pull到本地库 》》push到远程库<br>命令如下：<br>git remote add itxiehui <a target=\"_blank\" rel=\"noopener\" href=\"https://itxiehui/itxiehui.github.io\">https://itxiehui/itxiehui.github.io</a><br>git pull itxiehui develop<br>git remote add IT <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/LaoLeo/itxiehui.github.io.git\">https://github.com/LaoLeo/itxiehui.github.io.git</a><br>git push IT develop<br>解析：<br>IT表示push到自己的远程仓库，该目录下要有该主机<br>itxiehui是指owner的主机，IT是member即我fork到我仓库的主机</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>仅以此文提醒下次不会再犯之错<br>","more":"</p>\n</blockquote>\n<ul>\n<li>在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）</li>\n</ul>\n<hr>\n<ul>\n<li><p>hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。<br>第二种可行方法：checkout到master分支上，merge hexi分支后，<br>再push到远程库的hexi分支（git push origin master:hexi） 括号里master是<br>本地master分支，hexi是远程的hexi分支</p>\n</li>\n<li><p>hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>git remote add （自取的主机名） （地址）<br>目录下有了该本机，才能pull和push</p>\n</li>\n<li><p>更新fork的远程库<br>add主机 》》 pull到本地库 》》push到远程库<br>命令如下：<br>git remote add itxiehui <a target=\"_blank\" rel=\"noopener\" href=\"https://itxiehui/itxiehui.github.io\">https://itxiehui/itxiehui.github.io</a><br>git pull itxiehui develop<br>git remote add IT <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/LaoLeo/itxiehui.github.io.git\">https://github.com/LaoLeo/itxiehui.github.io.git</a><br>git push IT develop<br>解析：<br>IT表示push到自己的远程仓库，该目录下要有该主机<br>itxiehui是指owner的主机，IT是member即我fork到我仓库的主机</p>\n</li>\n</ul>"},{"title":"js控制运动框架animation","date":"2017-07-19T16:00:00.000Z","_content":"\n## js控制运动框架animation\n\n目标：做一个通过按钮控制旋转的动画，下面的是效果图：\n![image](http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&shareKey=fb6cd7994e20ce6c6ea7f94a1609b490)\n\n想想都很简单，就写个css框架，然后用js给img节点添加animation样式。\n所以一开始是这样的的：\n```css\n/*旋转动画*/\n@keyframes rotation{\n\tfrom{\n\t\ttransform: rotate(0deg);\n\t\t-webkit-transform: rotate(0deg);\n\t\t-moz-transform: rotate(0deg);\n\t\t-o-transform: rotate(0deg);\n\t}\n\tto{\n\t\ttransform: rotate(360deg);\n\t\t-webkit-transform: rotate(360deg);\n\t\t-moz-transform: rotate(360deg);\n\t\t-o-transform: rotate(360deg);\n\t}\n}\n```\n```js\n$positer.css('animation', 'rotation 30s linear infinite'); //开始旋转动画\n\n$positer.css('animation', ''); //停止旋转动画\n```\n\n然而，问题就来了。停止的时候图片直接回归原始状态。  \n这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？\n好说干就干\n```js\nvar deg = 0;  //记录旋转角度\nvar rotateTimer;\n\nfunction startRotation($obj, speed) {\n\tclearInterval(rotateTimer);\n\trotateTimer = setInterval(function(){\n\t\tdeg++;\n\t\tif(deg >= 360){\n\t\t\tdeg = 0\n\t\t}\n\t\t\n\t\t$obj.css('-webkit-transform', 'rotate('+ deg +'deg)');\n\t}, speed)\n\n}\nfunction stopRotation() {\n\tclearInterval(rotateTimer);\n}\n\n//调用\nvar $positer = $('#playerPage .positer img');\n\nstartRotation($positer, 80); //转\nstopRotation() //停\n```\n哈哈，就是这么简单。  \n。。。  \n阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。\n\n一百度，果真有！\n```css\nanimation-play-state: paused || running;\n```\n\n代码：\n```css\n#playerPage .positer img{\n    animation: rotation 30s linear infinite;\n    -webkit-animation: rotation 30s linear infinite;\n    -moz-animation: rotation 30s linear infinite;\n    animation-play-state: paused;\n    -webkit-animation-play-state: paused;\n    -moz-animation-play-state: paused;\n}\n```\n```js\n$positer.css('animation-play-state', 'running'); //开始旋转动画\n\n$positer.css('animation-play-state', 'paused'); //停止旋转\n```","source":"_posts/js控制运动框架animation.md","raw":"---\ntitle: js控制运动框架animation\ndate: 2017-7-20\ntags: [js,css,animation]\n---\n\n## js控制运动框架animation\n\n目标：做一个通过按钮控制旋转的动画，下面的是效果图：\n![image](http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&shareKey=fb6cd7994e20ce6c6ea7f94a1609b490)\n\n想想都很简单，就写个css框架，然后用js给img节点添加animation样式。\n所以一开始是这样的的：\n```css\n/*旋转动画*/\n@keyframes rotation{\n\tfrom{\n\t\ttransform: rotate(0deg);\n\t\t-webkit-transform: rotate(0deg);\n\t\t-moz-transform: rotate(0deg);\n\t\t-o-transform: rotate(0deg);\n\t}\n\tto{\n\t\ttransform: rotate(360deg);\n\t\t-webkit-transform: rotate(360deg);\n\t\t-moz-transform: rotate(360deg);\n\t\t-o-transform: rotate(360deg);\n\t}\n}\n```\n```js\n$positer.css('animation', 'rotation 30s linear infinite'); //开始旋转动画\n\n$positer.css('animation', ''); //停止旋转动画\n```\n\n然而，问题就来了。停止的时候图片直接回归原始状态。  \n这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？\n好说干就干\n```js\nvar deg = 0;  //记录旋转角度\nvar rotateTimer;\n\nfunction startRotation($obj, speed) {\n\tclearInterval(rotateTimer);\n\trotateTimer = setInterval(function(){\n\t\tdeg++;\n\t\tif(deg >= 360){\n\t\t\tdeg = 0\n\t\t}\n\t\t\n\t\t$obj.css('-webkit-transform', 'rotate('+ deg +'deg)');\n\t}, speed)\n\n}\nfunction stopRotation() {\n\tclearInterval(rotateTimer);\n}\n\n//调用\nvar $positer = $('#playerPage .positer img');\n\nstartRotation($positer, 80); //转\nstopRotation() //停\n```\n哈哈，就是这么简单。  \n。。。  \n阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。\n\n一百度，果真有！\n```css\nanimation-play-state: paused || running;\n```\n\n代码：\n```css\n#playerPage .positer img{\n    animation: rotation 30s linear infinite;\n    -webkit-animation: rotation 30s linear infinite;\n    -moz-animation: rotation 30s linear infinite;\n    animation-play-state: paused;\n    -webkit-animation-play-state: paused;\n    -moz-animation-play-state: paused;\n}\n```\n```js\n$positer.css('animation-play-state', 'running'); //开始旋转动画\n\n$positer.css('animation-play-state', 'paused'); //停止旋转\n```","slug":"js控制运动框架animation","published":1,"updated":"2022-12-06T15:30:38.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv47001gmcq0g87d6akb","content":"<h2 id=\"js控制运动框架animation\"><a href=\"#js控制运动框架animation\" class=\"headerlink\" title=\"js控制运动框架animation\"></a>js控制运动框架animation</h2><p>目标：做一个通过按钮控制旋转的动画，下面的是效果图：<br><img src=\"http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&amp;shareKey=fb6cd7994e20ce6c6ea7f94a1609b490\" alt=\"image\"></p>\n<p>想想都很简单，就写个css框架，然后用js给img节点添加animation样式。<br>所以一开始是这样的的：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*旋转动画*/</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> rotation&#123;</span><br><span class=\"line\">\t<span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t\t-webkit-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t\t-moz-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t\t-o-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t\t-webkit-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t\t-moz-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t\t-o-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation&#x27;</span>, <span class=\"string\">&#x27;rotation 30s linear infinite&#x27;</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>); <span class=\"comment\">//停止旋转动画</span></span><br></pre></td></tr></table></figure></p>\n<p>然而，问题就来了。停止的时候图片直接回归原始状态。<br>这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？<br>好说干就干<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deg = <span class=\"number\">0</span>;  <span class=\"comment\">//记录旋转角度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rotateTimer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">startRotation</span>(<span class=\"params\">$obj, speed</span>) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">clearInterval</span>(rotateTimer);</span><br><span class=\"line\">\trotateTimer = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\tdeg++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(deg &gt;= <span class=\"number\">360</span>)&#123;</span><br><span class=\"line\">\t\t\tdeg = <span class=\"number\">0</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t$obj.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;-webkit-transform&#x27;</span>, <span class=\"string\">&#x27;rotate(&#x27;</span>+ deg +<span class=\"string\">&#x27;deg)&#x27;</span>);</span><br><span class=\"line\">\t&#125;, speed)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">stopRotation</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">clearInterval</span>(rotateTimer);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $positer = $(<span class=\"string\">&#x27;#playerPage .positer img&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">startRotation</span>($positer, <span class=\"number\">80</span>); <span class=\"comment\">//转</span></span><br><span class=\"line\"><span class=\"title function_\">stopRotation</span>() <span class=\"comment\">//停</span></span><br></pre></td></tr></table></figure><br>哈哈，就是这么简单。<br>。。。<br>阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。</p>\n<p>一百度，果真有！<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">animation-play-state</span>: paused || running;</span><br></pre></td></tr></table></figure></p>\n<p>代码：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#playerPage</span> <span class=\"selector-class\">.positer</span> <span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    -moz-<span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">    -webkit-<span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">    -moz-<span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation-play-state&#x27;</span>, <span class=\"string\">&#x27;running&#x27;</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation-play-state&#x27;</span>, <span class=\"string\">&#x27;paused&#x27;</span>); <span class=\"comment\">//停止旋转</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"js控制运动框架animation\"><a href=\"#js控制运动框架animation\" class=\"headerlink\" title=\"js控制运动框架animation\"></a>js控制运动框架animation</h2><p>目标：做一个通过按钮控制旋转的动画，下面的是效果图：<br><img src=\"http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&amp;shareKey=fb6cd7994e20ce6c6ea7f94a1609b490\" alt=\"image\"></p>\n<p>想想都很简单，就写个css框架，然后用js给img节点添加animation样式。<br>所以一开始是这样的的：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*旋转动画*/</span></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> rotation&#123;</span><br><span class=\"line\">\t<span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t\t-webkit-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t\t-moz-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t\t-o-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">0deg</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t\t-webkit-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t\t-moz-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t\t-o-<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">360deg</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation&#x27;</span>, <span class=\"string\">&#x27;rotation 30s linear infinite&#x27;</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>); <span class=\"comment\">//停止旋转动画</span></span><br></pre></td></tr></table></figure></p>\n<p>然而，问题就来了。停止的时候图片直接回归原始状态。<br>这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？<br>好说干就干<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deg = <span class=\"number\">0</span>;  <span class=\"comment\">//记录旋转角度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rotateTimer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">startRotation</span>(<span class=\"params\">$obj, speed</span>) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">clearInterval</span>(rotateTimer);</span><br><span class=\"line\">\trotateTimer = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\tdeg++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(deg &gt;= <span class=\"number\">360</span>)&#123;</span><br><span class=\"line\">\t\t\tdeg = <span class=\"number\">0</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t$obj.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;-webkit-transform&#x27;</span>, <span class=\"string\">&#x27;rotate(&#x27;</span>+ deg +<span class=\"string\">&#x27;deg)&#x27;</span>);</span><br><span class=\"line\">\t&#125;, speed)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">stopRotation</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">clearInterval</span>(rotateTimer);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $positer = $(<span class=\"string\">&#x27;#playerPage .positer img&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">startRotation</span>($positer, <span class=\"number\">80</span>); <span class=\"comment\">//转</span></span><br><span class=\"line\"><span class=\"title function_\">stopRotation</span>() <span class=\"comment\">//停</span></span><br></pre></td></tr></table></figure><br>哈哈，就是这么简单。<br>。。。<br>阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。</p>\n<p>一百度，果真有！<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">animation-play-state</span>: paused || running;</span><br></pre></td></tr></table></figure></p>\n<p>代码：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#playerPage</span> <span class=\"selector-class\">.positer</span> <span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    -webkit-<span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    -moz-<span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">    -webkit-<span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">    -moz-<span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation-play-state&#x27;</span>, <span class=\"string\">&#x27;running&#x27;</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;animation-play-state&#x27;</span>, <span class=\"string\">&#x27;paused&#x27;</span>); <span class=\"comment\">//停止旋转</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"js系列之BOM基础","date":"2016-05-19T16:00:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n***\n## open\n\n> window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身\n\n* 在文本窗口写代码，新窗口打开执行\n ```javascript\n <script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn1');\n\t\tvar oTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oNewWin = window.open('about:blank');\n\t\t\toNewWin.document.write(oTxt.value);\n\t\t}\n\t}\n</script>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\"></textarea>\n\t<br>\n\t<button id=\"btn1\" value=\"运行\">运行</button>\n</body>\n```\n\n## close\n\n> close的页面需要是有js打开的页面\n比如：\n在open.html上 关键js代码：window.open(‘close.html’,’_blank’);\n在close.html上 关键js代码：window.close();\nclose.html是js代码打开的页面\n\n## userAgent\n\n> 查看浏览器版本\nalert（window.navigator.userAgent）;\n\n```javascript\n<script>\n\talert(window.navigator.userAgent)//查看浏览器的版本\n</script>\n```\n\n## location\n\n> window.location   当前页面的地址\nwindow.location ='http://www.github.com';   打开一个新地址\n\n\n## 系统对话框：\n> 警告框：alert（） ,没有返回值\n选择框：confirm（“提问的内容”），返回boolen\n输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。\n\n \n## 窗口尺寸，工作区尺寸\n> 可视区尺寸\ndocument.documentElement.clientWidth\ndocument.documentElement.clientHeight\n滚动距离\ndocument.body.scrollTop\ndocument.documentElement.scrollTop\t*这两句是为了更好的兼容性，chrome和firefox只认识前者*\n\n* 侧边栏\n ```javascript\n <style>\n\t#div1{\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tposition: absolute;\n\t\tright: 0;\n\t\tbackground: pink;\n\t}\n</style>\n<script>\nwindow.onresize = window.onload = window.onscroll  = function (){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar t = (document.documentElement.clientHeight-oDiv.offsetHeight)/2;\n\n\t\toDiv.style.top = scrollTop + t +'px';\n\t}\n</script>\n<body style=\"height:1000px;\">\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 回到顶部\n ```javascript\n<style>\n\t#btn{\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tright: 0;\n\t}\n</style>\n<script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn');\n\t\tvar timer =null;\n\t\tvar bSys = null;\n\n\t\t//如何检测到用户操作了滚动条\n\t\twindow.onscroll = function(){\n\t\t\tif (!bSys) {\n\t\t\t\tclearInterval(timer);\n\t\t\t};\n\t\t\tbSys = false;\n\t\t}\n\t\toBtn.onclick = function(){\n\n\t\t\ttimer =setInterval(function(){\n\t\t\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tvar iSpeed = Math.floor(-scrollTop/8);\n\t\t\t\tif (scrollTop == 0) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t};\n\t\t\t\tdocument.documentElement.scrollTop = scrollTop +iSpeed;\n\t\t\t\tbSys = true;\n\t\t\t},30)\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<button id=\"btn\">回到顶部</button>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t...\n</body>\n ```\n \n> **小结**\n>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n \n","source":"_posts/js系列之BOM基础.md","raw":"---\ntitle: js系列之BOM基础\ndate: 2016-5-20\ntags: [编程,javacript,BOM]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n***\n## open\n\n> window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身\n\n* 在文本窗口写代码，新窗口打开执行\n ```javascript\n <script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn1');\n\t\tvar oTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oNewWin = window.open('about:blank');\n\t\t\toNewWin.document.write(oTxt.value);\n\t\t}\n\t}\n</script>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\"></textarea>\n\t<br>\n\t<button id=\"btn1\" value=\"运行\">运行</button>\n</body>\n```\n\n## close\n\n> close的页面需要是有js打开的页面\n比如：\n在open.html上 关键js代码：window.open(‘close.html’,’_blank’);\n在close.html上 关键js代码：window.close();\nclose.html是js代码打开的页面\n\n## userAgent\n\n> 查看浏览器版本\nalert（window.navigator.userAgent）;\n\n```javascript\n<script>\n\talert(window.navigator.userAgent)//查看浏览器的版本\n</script>\n```\n\n## location\n\n> window.location   当前页面的地址\nwindow.location ='http://www.github.com';   打开一个新地址\n\n\n## 系统对话框：\n> 警告框：alert（） ,没有返回值\n选择框：confirm（“提问的内容”），返回boolen\n输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。\n\n \n## 窗口尺寸，工作区尺寸\n> 可视区尺寸\ndocument.documentElement.clientWidth\ndocument.documentElement.clientHeight\n滚动距离\ndocument.body.scrollTop\ndocument.documentElement.scrollTop\t*这两句是为了更好的兼容性，chrome和firefox只认识前者*\n\n* 侧边栏\n ```javascript\n <style>\n\t#div1{\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tposition: absolute;\n\t\tright: 0;\n\t\tbackground: pink;\n\t}\n</style>\n<script>\nwindow.onresize = window.onload = window.onscroll  = function (){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar t = (document.documentElement.clientHeight-oDiv.offsetHeight)/2;\n\n\t\toDiv.style.top = scrollTop + t +'px';\n\t}\n</script>\n<body style=\"height:1000px;\">\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 回到顶部\n ```javascript\n<style>\n\t#btn{\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tright: 0;\n\t}\n</style>\n<script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn');\n\t\tvar timer =null;\n\t\tvar bSys = null;\n\n\t\t//如何检测到用户操作了滚动条\n\t\twindow.onscroll = function(){\n\t\t\tif (!bSys) {\n\t\t\t\tclearInterval(timer);\n\t\t\t};\n\t\t\tbSys = false;\n\t\t}\n\t\toBtn.onclick = function(){\n\n\t\t\ttimer =setInterval(function(){\n\t\t\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tvar iSpeed = Math.floor(-scrollTop/8);\n\t\t\t\tif (scrollTop == 0) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t};\n\t\t\t\tdocument.documentElement.scrollTop = scrollTop +iSpeed;\n\t\t\t\tbSys = true;\n\t\t\t},30)\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<button id=\"btn\">回到顶部</button>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t...\n</body>\n ```\n \n> **小结**\n>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n \n","slug":"js系列之BOM基础","published":1,"updated":"2022-12-06T15:30:38.469Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv47001kmcq0a0zn5v8p","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<span id=\"more\"></span>\n<hr>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><blockquote>\n<p>window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身</p>\n</blockquote>\n<ul>\n<li>在文本窗口写代码，新窗口打开执行<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oTxt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oNewWin = <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;about:blank&#x27;</span>);</span><br><span class=\"line\">\t\t\toNewWin.<span class=\"property\">document</span>.<span class=\"title function_\">write</span>(oTxt.<span class=\"property\">value</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;txt1&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn1&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;运行&quot;</span>&gt;</span>运行<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"close\"><a href=\"#close\" class=\"headerlink\" title=\"close\"></a>close</h2><blockquote>\n<p>close的页面需要是有js打开的页面<br>比如：<br>在open.html上 关键js代码：window.open(‘close.html’,’_blank’);<br>在close.html上 关键js代码：window.close();<br>close.html是js代码打开的页面</p>\n</blockquote>\n<h2 id=\"userAgent\"><a href=\"#userAgent\" class=\"headerlink\" title=\"userAgent\"></a>userAgent</h2><blockquote>\n<p>查看浏览器版本<br>alert（window.navigator.userAgent）;</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">userAgent</span>)<span class=\"comment\">//查看浏览器的版本</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h2><blockquote>\n<p>window.location   当前页面的地址<br>window.location =’<a target=\"_blank\" rel=\"noopener\" href=\"http://www.github.com&#39;\">http://www.github.com&#39;</a>;   打开一个新地址</p>\n</blockquote>\n<h2 id=\"系统对话框：\"><a href=\"#系统对话框：\" class=\"headerlink\" title=\"系统对话框：\"></a>系统对话框：</h2><blockquote>\n<p>警告框：alert（） ,没有返回值<br>选择框：confirm（“提问的内容”），返回boolen<br>输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。</p>\n</blockquote>\n<h2 id=\"窗口尺寸，工作区尺寸\"><a href=\"#窗口尺寸，工作区尺寸\" class=\"headerlink\" title=\"窗口尺寸，工作区尺寸\"></a>窗口尺寸，工作区尺寸</h2><blockquote>\n<p>可视区尺寸<br>document.documentElement.clientWidth<br>document.documentElement.clientHeight<br>滚动距离<br>document.body.scrollTop<br>document.documentElement.scrollTop    <em>这两句是为了更好的兼容性，chrome和firefox只认识前者</em></p>\n</blockquote>\n<ul>\n<li><p>侧边栏</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;style&gt;</span><br><span class=\"line\">\t#div1&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attr\">background</span>: pink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span>  = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> t = (<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>-oDiv.<span class=\"property\">offsetHeight</span>)/<span class=\"number\">2</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = scrollTop + t +<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;height:1000px;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>回到顶部</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t#btn&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">position</span>: fixed;</span><br><span class=\"line\">\t\t<span class=\"attr\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> timer =<span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> bSys = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"comment\">//如何检测到用户操作了滚动条</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">if</span> (!bSys) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"built_in\">clearInterval</span>(timer);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\tbSys = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toBtn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\ttimer =<span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">var</span> iSpeed = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(-scrollTop/<span class=\"number\">8</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">if</span> (scrollTop == <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(timer);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t&#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> = scrollTop +iSpeed;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\tbSys = <span class=\"literal\">true</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;,<span class=\"number\">30</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>回到顶部<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t...</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><strong>小结</strong><br>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码</p>\n</blockquote>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/20/js%E7%B3%BB%E5%88%97%E4%B9%8BBOM%E5%9F%BA%E7%A1%80/\">  { {title} }  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<hr>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><blockquote>\n<p>window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身</p>\n</blockquote>\n<ul>\n<li>在文本窗口写代码，新窗口打开执行<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oTxt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oNewWin = <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;about:blank&#x27;</span>);</span><br><span class=\"line\">\t\t\toNewWin.<span class=\"property\">document</span>.<span class=\"title function_\">write</span>(oTxt.<span class=\"property\">value</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;txt1&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;30&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn1&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;运行&quot;</span>&gt;</span>运行<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"close\"><a href=\"#close\" class=\"headerlink\" title=\"close\"></a>close</h2><blockquote>\n<p>close的页面需要是有js打开的页面<br>比如：<br>在open.html上 关键js代码：window.open(‘close.html’,’_blank’);<br>在close.html上 关键js代码：window.close();<br>close.html是js代码打开的页面</p>\n</blockquote>\n<h2 id=\"userAgent\"><a href=\"#userAgent\" class=\"headerlink\" title=\"userAgent\"></a>userAgent</h2><blockquote>\n<p>查看浏览器版本<br>alert（window.navigator.userAgent）;</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"title function_\">alert</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">userAgent</span>)<span class=\"comment\">//查看浏览器的版本</span></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h2><blockquote>\n<p>window.location   当前页面的地址<br>window.location =’<a target=\"_blank\" rel=\"noopener\" href=\"http://www.github.com&#39;\">http://www.github.com&#39;</a>;   打开一个新地址</p>\n</blockquote>\n<h2 id=\"系统对话框：\"><a href=\"#系统对话框：\" class=\"headerlink\" title=\"系统对话框：\"></a>系统对话框：</h2><blockquote>\n<p>警告框：alert（） ,没有返回值<br>选择框：confirm（“提问的内容”），返回boolen<br>输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。</p>\n</blockquote>\n<h2 id=\"窗口尺寸，工作区尺寸\"><a href=\"#窗口尺寸，工作区尺寸\" class=\"headerlink\" title=\"窗口尺寸，工作区尺寸\"></a>窗口尺寸，工作区尺寸</h2><blockquote>\n<p>可视区尺寸<br>document.documentElement.clientWidth<br>document.documentElement.clientHeight<br>滚动距离<br>document.body.scrollTop<br>document.documentElement.scrollTop    <em>这两句是为了更好的兼容性，chrome和firefox只认识前者</em></p>\n</blockquote>\n<ul>\n<li><p>侧边栏</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;style&gt;</span><br><span class=\"line\">\t#div1&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">width</span>: 100px;</span><br><span class=\"line\">\t\t<span class=\"attr\">height</span>: 100px;</span><br><span class=\"line\">\t\t<span class=\"attr\">position</span>: absolute;</span><br><span class=\"line\">\t\t<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attr\">background</span>: pink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"><span class=\"variable language_\">window</span>.<span class=\"property\">onresize</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span>  = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oDiv = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;div1&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> t = (<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>-oDiv.<span class=\"property\">offsetHeight</span>)/<span class=\"number\">2</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toDiv.<span class=\"property\">style</span>.<span class=\"property\">top</span> = scrollTop + t +<span class=\"string\">&#x27;px&#x27;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;height:1000px;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>回到顶部</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t#btn&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">position</span>: fixed;</span><br><span class=\"line\">\t\t<span class=\"attr\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"attr\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> oBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn&#x27;</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> timer =<span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"keyword\">var</span> bSys = <span class=\"literal\">null</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"comment\">//如何检测到用户操作了滚动条</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t<span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t<span class=\"keyword\">if</span> (!bSys) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"built_in\">clearInterval</span>(timer);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\tbSys = <span class=\"literal\">false</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\toBtn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\ttimer =<span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">var</span> scrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> || <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">var</span> iSpeed = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(-scrollTop/<span class=\"number\">8</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"keyword\">if</span> (scrollTop == <span class=\"number\">0</span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(timer);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t&#125;;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\t<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> = scrollTop +iSpeed;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t\tbSys = <span class=\"literal\">true</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t&#125;,<span class=\"number\">30</span>)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t\t</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span>回到顶部<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>**<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t...</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><strong>小结</strong><br>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码</p>\n</blockquote>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/05/20/js%E7%B3%BB%E5%88%97%E4%B9%8BBOM%E5%9F%BA%E7%A1%80/\">  { {title} }  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"js系列之DOM基础","date":"2016-04-23T05:55:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n<!--more-->\n##DOM节点\n\n###childNodes，nodeType和children\n\n* childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。\n\n* nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。\n\n* children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。\n\n###练习代码：\n```javascript\n<script>\n\nwindow.onload= function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i=0;\n\nalert(oUl.childNodes.length)//无论在火狐或者ie，360，谷歌都显示11\n\n/* for(i=0; i<oUl.childNodes.length;i++)\n\n{\n\n//oUl.childNodes[i].style.background == 'red'\n\nif (oUl.childNodes[i].nodeType == 1)\n\n{\n\noUl.childNodes[i].style.background = 'red';\n\n};\n\n}\n\nalert(oUl.children.length) //children是childNodes的兼容版*/\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li>333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n\n</body>\n```\n\n\n###parentNode\n```javascript\n<script>\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\nvar aA = oUl.getElementsByTagName('a');\n\nfor(i=0;i< aA.length; i++){\n\naA[i].onclick = function(){\n\nthis.parentNode.style.display = 'none';\n\n}\n\n}\n\n};\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>jjjj<a href=\"javascript:;\">隐藏</a></li> <!--避免a链接点击立即刷新来不及显示效果-->\n\n<li>啊啊j<a href=\"javascript:\">隐藏</a></li>\n\n<li>的<a href=\"javascript:\">隐藏</a></li>\n\n<li>j得到j<a href=\"javascript:\">隐藏</a></li>\n\n</ul>\n\n</body>\n```\n###offsetParent\n\n\n* offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 \"none\"时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素\n\n```javascript\n<body>\n\n<div id=\"div1\" style=\"width:100px; height:100px;background:red; position:relative;margin:100px;\">\n\n<div id=\"div2\" onclick=\"alert(this.offsetParent.id)\" style=\"width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;\"></div></div>\n\n</body>\n```\n\n###firstChild与firstElementChild\n\n\n* firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild\n\n* 还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling\n\n```javascript\n<script type=\"text/javascript\">\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\n//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用\n\n//oUl.firstChild.style.background = 'red';\n\n//新一代firstElementChild兼容版\n\noUl.firstElementChild.style.background = 'red';\n\n//以前解决这一问题的方法\n\noFirst = oUl.firstElementChild || oUl.firstChild\n\noFirst.style.background = 'red'\n\n//同理也有lastChild 和 lastElementChild\n\n//兄弟节点\n\nvar oLi = document.getElementById('li1');\n\n//oLi.nextSibling.style.background = 'red';\n\noLi.nextElementSibling.style.background = 'red';\n\n//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li id=\"li1\">333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n```\n##DOM方法操作元素属性\n***\n```javascript   \n<script>\n\nwindow.onload = function(){\n\noTxt = document.getElementById('txt1');\n\n//1\n\n//oTxt.value = 'asdd';\n\n//2\n\n//oTxt['value'] = 'aswerr';\n\n//3\n\noTxt.setAttribute(\"value\", \"jhgf\");\n\nalert(oTxt.getAttribute('id'));\n\n}\n\n</script>\n\n<body>\n\n<input type=\"text\" id=\"txt1\">\n\n</body>\n```\n##DOM元素灵活查找\n\n###className\n\n* 通过class选取元素，一般分两步：\n\n1. 把所有的子元素选出来\n\n2. 用className作为条件筛选出来处理\n```javascript\n<script>\n\n//通过class来选元素\n\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aLi = oUl.getElementsByTagName('li');\n\nvar i;\n\nfor (var i = 0; i < aLi.length; i++) {\n\nif (aLi[i].className == 'double') {\n\naLi[i].style.background = 'green';\n\n};\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n**进一步改进**，写一个函数完成选class的功能\n```javacript\n//通过class来选元素的函数\n\nfunction getByClass(oParent, sClass){\n\nvar aEle =oParent.getElementsByTagName('*');\n\nvar aResult = new Array();\n\nfor (var i = 0; i < aEle.length; i++) {\n\nif (aEle[i].className == sClass) { //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了\n\naResult.push(aEle[i]);\n\n};\n\n};\n\nreturn aResult;\n\n};\n```\n引用如下：\n```javascript\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aDou = getByClass(oUl,'double');\n\nvar i;\n\nfor (i = 0; i < aDou.length; i++) {\n\naDou[i].style.background = 'yellow';\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n##创建、插入、和删除元素\n***\n###创建DOM元素\n\n* creatElement（标签名）  创建一个节点\n* appendChild（节点）\t\t追加一个节点\n\t-例子：为ul插入li\n\t\n###插入元素\n\n* insertBefore（节点，原有节点）\t\t在已有元素前插入\n\t-例子：倒序插入li\n\t\n###删除DOM元素\n\n* removeChild（节点）\t\t删除一个元素\n\t-例子删除li\n\t\n###练习代码：\n①创建插入li \n```javascript\n<script>\n\twindow.onload = function(){\n\t\toUl = document.getElementById('ul1');\n\t\toBtn = document.getElementById('btn1');\n\t\toTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oLi = document.createElement('li');\n\t\t\tvar aLi = oUl.getElementsByTagName('li');\n\n\t\t\toLi.innerHTML = oTxt.value;\n\t\t\tif (aLi.length == 0) {\n\t\t\t\toUl.appendChild(oLi);\n\t\t\t}else{\n\t\t\t\toUl.insertBefore(oLi, aLi[0]);\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<label for=\"txt1\"></label><input type=\"text\" id=\"txt1\">\n\t<button id=\"btn1\">插入</button>\n\n\t<ul id=\"ul1\"></ul>\n</body>\n```\n\n**注意**：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）\n\t\n②删除元素\n```javascript   \n<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\t\tvar aA = document.getElementsByTagName('a');\n\t\tvar i;\n\n\t\tfor (i = 0; i < aA.length; i++) {\n\t\t\taA[i].onclick = function (){\n\t\t\t\toUl.removeChild(this.parentNode);\n\t\t\t}\n\t\t};\n\t}\n</script>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>li1<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li2<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li3<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li4<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li5<a href=\"javascript:;\">删除</a></li>\n\t</ul>\n</body>\n```\n**注意**：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。\n\n>**小结**\n 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考[wschoolDOM参考手册](http://www.w3school.com.cn/htmldom/index.asp)或者阅读[JavaScript DOM编程艺术（第二版）](http://www.javascriptcn.com/read-42.html)一书\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>","source":"_posts/js系列之DOM基础.md","raw":"\n---\ntitle: js系列之DOM基础\ndate: 2016-04-23 13:55:00\ntags: [javacript,DOM]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n<!--more-->\n##DOM节点\n\n###childNodes，nodeType和children\n\n* childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。\n\n* nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。\n\n* children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。\n\n###练习代码：\n```javascript\n<script>\n\nwindow.onload= function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i=0;\n\nalert(oUl.childNodes.length)//无论在火狐或者ie，360，谷歌都显示11\n\n/* for(i=0; i<oUl.childNodes.length;i++)\n\n{\n\n//oUl.childNodes[i].style.background == 'red'\n\nif (oUl.childNodes[i].nodeType == 1)\n\n{\n\noUl.childNodes[i].style.background = 'red';\n\n};\n\n}\n\nalert(oUl.children.length) //children是childNodes的兼容版*/\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li>333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n\n</body>\n```\n\n\n###parentNode\n```javascript\n<script>\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\nvar aA = oUl.getElementsByTagName('a');\n\nfor(i=0;i< aA.length; i++){\n\naA[i].onclick = function(){\n\nthis.parentNode.style.display = 'none';\n\n}\n\n}\n\n};\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>jjjj<a href=\"javascript:;\">隐藏</a></li> <!--避免a链接点击立即刷新来不及显示效果-->\n\n<li>啊啊j<a href=\"javascript:\">隐藏</a></li>\n\n<li>的<a href=\"javascript:\">隐藏</a></li>\n\n<li>j得到j<a href=\"javascript:\">隐藏</a></li>\n\n</ul>\n\n</body>\n```\n###offsetParent\n\n\n* offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 \"none\"时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素\n\n```javascript\n<body>\n\n<div id=\"div1\" style=\"width:100px; height:100px;background:red; position:relative;margin:100px;\">\n\n<div id=\"div2\" onclick=\"alert(this.offsetParent.id)\" style=\"width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;\"></div></div>\n\n</body>\n```\n\n###firstChild与firstElementChild\n\n\n* firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild\n\n* 还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling\n\n```javascript\n<script type=\"text/javascript\">\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\n//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用\n\n//oUl.firstChild.style.background = 'red';\n\n//新一代firstElementChild兼容版\n\noUl.firstElementChild.style.background = 'red';\n\n//以前解决这一问题的方法\n\noFirst = oUl.firstElementChild || oUl.firstChild\n\noFirst.style.background = 'red'\n\n//同理也有lastChild 和 lastElementChild\n\n//兄弟节点\n\nvar oLi = document.getElementById('li1');\n\n//oLi.nextSibling.style.background = 'red';\n\noLi.nextElementSibling.style.background = 'red';\n\n//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li id=\"li1\">333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n```\n##DOM方法操作元素属性\n***\n```javascript   \n<script>\n\nwindow.onload = function(){\n\noTxt = document.getElementById('txt1');\n\n//1\n\n//oTxt.value = 'asdd';\n\n//2\n\n//oTxt['value'] = 'aswerr';\n\n//3\n\noTxt.setAttribute(\"value\", \"jhgf\");\n\nalert(oTxt.getAttribute('id'));\n\n}\n\n</script>\n\n<body>\n\n<input type=\"text\" id=\"txt1\">\n\n</body>\n```\n##DOM元素灵活查找\n\n###className\n\n* 通过class选取元素，一般分两步：\n\n1. 把所有的子元素选出来\n\n2. 用className作为条件筛选出来处理\n```javascript\n<script>\n\n//通过class来选元素\n\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aLi = oUl.getElementsByTagName('li');\n\nvar i;\n\nfor (var i = 0; i < aLi.length; i++) {\n\nif (aLi[i].className == 'double') {\n\naLi[i].style.background = 'green';\n\n};\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n**进一步改进**，写一个函数完成选class的功能\n```javacript\n//通过class来选元素的函数\n\nfunction getByClass(oParent, sClass){\n\nvar aEle =oParent.getElementsByTagName('*');\n\nvar aResult = new Array();\n\nfor (var i = 0; i < aEle.length; i++) {\n\nif (aEle[i].className == sClass) { //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了\n\naResult.push(aEle[i]);\n\n};\n\n};\n\nreturn aResult;\n\n};\n```\n引用如下：\n```javascript\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aDou = getByClass(oUl,'double');\n\nvar i;\n\nfor (i = 0; i < aDou.length; i++) {\n\naDou[i].style.background = 'yellow';\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n##创建、插入、和删除元素\n***\n###创建DOM元素\n\n* creatElement（标签名）  创建一个节点\n* appendChild（节点）\t\t追加一个节点\n\t-例子：为ul插入li\n\t\n###插入元素\n\n* insertBefore（节点，原有节点）\t\t在已有元素前插入\n\t-例子：倒序插入li\n\t\n###删除DOM元素\n\n* removeChild（节点）\t\t删除一个元素\n\t-例子删除li\n\t\n###练习代码：\n①创建插入li \n```javascript\n<script>\n\twindow.onload = function(){\n\t\toUl = document.getElementById('ul1');\n\t\toBtn = document.getElementById('btn1');\n\t\toTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oLi = document.createElement('li');\n\t\t\tvar aLi = oUl.getElementsByTagName('li');\n\n\t\t\toLi.innerHTML = oTxt.value;\n\t\t\tif (aLi.length == 0) {\n\t\t\t\toUl.appendChild(oLi);\n\t\t\t}else{\n\t\t\t\toUl.insertBefore(oLi, aLi[0]);\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<label for=\"txt1\"></label><input type=\"text\" id=\"txt1\">\n\t<button id=\"btn1\">插入</button>\n\n\t<ul id=\"ul1\"></ul>\n</body>\n```\n\n**注意**：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）\n\t\n②删除元素\n```javascript   \n<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\t\tvar aA = document.getElementsByTagName('a');\n\t\tvar i;\n\n\t\tfor (i = 0; i < aA.length; i++) {\n\t\t\taA[i].onclick = function (){\n\t\t\t\toUl.removeChild(this.parentNode);\n\t\t\t}\n\t\t};\n\t}\n</script>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>li1<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li2<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li3<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li4<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li5<a href=\"javascript:;\">删除</a></li>\n\t</ul>\n</body>\n```\n**注意**：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。\n\n>**小结**\n 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考[wschoolDOM参考手册](http://www.w3school.com.cn/htmldom/index.asp)或者阅读[JavaScript DOM编程艺术（第二版）](http://www.javascriptcn.com/read-42.html)一书\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>","slug":"js系列之DOM基础","published":1,"updated":"2022-12-06T15:30:38.472Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv49001nmcq03a8131h8","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。<br><span id=\"more\"></span></p>\n<p>##DOM节点</p>\n<p>###childNodes，nodeType和children</p>\n<ul>\n<li><p>childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。</p>\n</li>\n<li><p>nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。</p>\n</li>\n<li><p>children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。</p>\n</li>\n</ul>\n<p>###练习代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span>= <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(oUl.<span class=\"property\">childNodes</span>.<span class=\"property\">length</span>)<span class=\"comment\">//无论在火狐或者ie，360，谷歌都显示11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* for(i=0; i&lt;oUl.childNodes.length;i++)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">//oUl.childNodes[i].style.background == &#x27;red&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">if (oUl.childNodes[i].nodeType == 1)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">oUl.childNodes[i].style.background = &#x27;red&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#125;;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">alert(oUl.children.length) //children是childNodes的兼容版*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>###parentNode<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aA = oUl.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt; aA.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aA[i].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">parentNode</span>.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>jjjj<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span> <span class=\"comment\">&lt;!--避免a链接点击立即刷新来不及显示效果--&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>啊啊j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>的<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>j得到j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>###offsetParent</p>\n<ul>\n<li>offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 “none”时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100px; height:100px;background:red; position:relative;margin:100px;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div2&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;alert(this.offsetParent.id)&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p>###firstChild与firstElementChild</p>\n<ul>\n<li><p>firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild</p>\n</li>\n<li><p>还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oUl.firstChild.style.background = &#x27;red&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//新一代firstElementChild兼容版</span></span><br><span class=\"line\"></span><br><span class=\"line\">oUl.<span class=\"property\">firstElementChild</span>.<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以前解决这一问题的方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">oFirst = oUl.<span class=\"property\">firstElementChild</span> || oUl.<span class=\"property\">firstChild</span></span><br><span class=\"line\"></span><br><span class=\"line\">oFirst.<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;red&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//同理也有lastChild 和 lastElementChild</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oLi = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;li1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oLi.nextSibling.style.background = &#x27;red&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\">oLi.<span class=\"property\">nextElementSibling</span>.<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;li1&quot;</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>##DOM方法操作元素属性</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">oTxt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oTxt.value = &#x27;asdd&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oTxt[&#x27;value&#x27;] = &#x27;aswerr&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3</span></span><br><span class=\"line\"></span><br><span class=\"line\">oTxt.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;value&quot;</span>, <span class=\"string\">&quot;jhgf&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(oTxt.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;id&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;txt1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>##DOM元素灵活查找</p>\n<p>###className</p>\n<ul>\n<li>通过class选取元素，一般分两步：</li>\n</ul>\n<ol>\n<li><p>把所有的子元素选出来</p>\n</li>\n<li><p>用className作为条件筛选出来处理</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//通过class来选元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aLi = oUl.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; aLi.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (aLi[i].<span class=\"property\">className</span> == <span class=\"string\">&#x27;double&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aLi[i].<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;green&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><strong>进一步改进</strong>，写一个函数完成选class的功能</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//通过class来选元素的函数</span><br><span class=\"line\"></span><br><span class=\"line\">function getByClass(oParent, sClass)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var aEle =oParent.getElementsByTagName(&#x27;*&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">var aResult = new Array();</span><br><span class=\"line\"></span><br><span class=\"line\">for (var i = 0; i &lt; aEle.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">if (aEle[i].className == sClass) &#123; //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了</span><br><span class=\"line\"></span><br><span class=\"line\">aResult.push(aEle[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">return aResult;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>引用如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aDou = <span class=\"title function_\">getByClass</span>(oUl,<span class=\"string\">&#x27;double&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; aDou.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aDou[i].<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>##创建、插入、和删除元素</p>\n</li>\n</ol>\n<hr>\n<p>###创建DOM元素</p>\n<ul>\n<li>creatElement（标签名）  创建一个节点</li>\n<li>appendChild（节点）        追加一个节点<br>  -例子：为ul插入li</li>\n</ul>\n<p>###插入元素</p>\n<ul>\n<li>insertBefore（节点，原有节点）        在已有元素前插入<br>  -例子：倒序插入li</li>\n</ul>\n<p>###删除DOM元素</p>\n<ul>\n<li>removeChild（节点）        删除一个元素<br>  -例子删除li</li>\n</ul>\n<p>###练习代码：<br>①创建插入li<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\toUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\">\t\toBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span><br><span class=\"line\">\t\toTxt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oLi = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> aLi = oUl.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toLi.<span class=\"property\">innerHTML</span> = oTxt.<span class=\"property\">value</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (aLi.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\toUl.<span class=\"title function_\">appendChild</span>(oLi);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\toUl.<span class=\"title function_\">insertBefore</span>(oLi, aLi[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;txt1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;txt1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn1&quot;</span>&gt;</span>插入<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）</p>\n<p>②删除元素<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> aA = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; aA.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\taA[i].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\toUl.<span class=\"title function_\">removeChild</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">parentNode</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li1<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li2<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li3<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li4<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li5<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><strong>注意</strong>：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。</p>\n<blockquote>\n<p><strong>小结</strong><br> 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考<a target=\"_blank\" rel=\"noopener\" href=\"http://www.w3school.com.cn/htmldom/index.asp\">wschoolDOM参考手册</a>或者阅读<a target=\"_blank\" rel=\"noopener\" href=\"http://www.javascriptcn.com/read-42.html\">JavaScript DOM编程艺术（第二版）</a>一书</p>\n</blockquote>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/04/23/js%E7%B3%BB%E5%88%97%E4%B9%8BDOM%E5%9F%BA%E7%A1%80/\">  { {title} }  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。<br>","more":"</p>\n<p>##DOM节点</p>\n<p>###childNodes，nodeType和children</p>\n<ul>\n<li><p>childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。</p>\n</li>\n<li><p>nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。</p>\n</li>\n<li><p>children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。</p>\n</li>\n</ul>\n<p>###练习代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span>= <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(oUl.<span class=\"property\">childNodes</span>.<span class=\"property\">length</span>)<span class=\"comment\">//无论在火狐或者ie，360，谷歌都显示11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* for(i=0; i&lt;oUl.childNodes.length;i++)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">//oUl.childNodes[i].style.background == &#x27;red&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">if (oUl.childNodes[i].nodeType == 1)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">oUl.childNodes[i].style.background = &#x27;red&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#125;;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">alert(oUl.children.length) //children是childNodes的兼容版*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>###parentNode<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aA = oUl.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt; aA.<span class=\"property\">length</span>; i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aA[i].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">parentNode</span>.<span class=\"property\">style</span>.<span class=\"property\">display</span> = <span class=\"string\">&#x27;none&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>jjjj<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span> <span class=\"comment\">&lt;!--避免a链接点击立即刷新来不及显示效果--&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>啊啊j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>的<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>j得到j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:&quot;</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>###offsetParent</p>\n<ul>\n<li>offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 “none”时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100px; height:100px;background:red; position:relative;margin:100px;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div2&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;alert(this.offsetParent.id)&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p>###firstChild与firstElementChild</p>\n<ul>\n<li><p>firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild</p>\n</li>\n<li><p>还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oUl.firstChild.style.background = &#x27;red&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//新一代firstElementChild兼容版</span></span><br><span class=\"line\"></span><br><span class=\"line\">oUl.<span class=\"property\">firstElementChild</span>.<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以前解决这一问题的方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">oFirst = oUl.<span class=\"property\">firstElementChild</span> || oUl.<span class=\"property\">firstChild</span></span><br><span class=\"line\"></span><br><span class=\"line\">oFirst.<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;red&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//同理也有lastChild 和 lastElementChild</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//兄弟节点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oLi = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;li1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oLi.nextSibling.style.background = &#x27;red&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\">oLi.<span class=\"property\">nextElementSibling</span>.<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;red&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;li1&quot;</span>&gt;</span>333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>555<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>##DOM方法操作元素属性</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">oTxt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oTxt.value = &#x27;asdd&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//oTxt[&#x27;value&#x27;] = &#x27;aswerr&#x27;;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3</span></span><br><span class=\"line\"></span><br><span class=\"line\">oTxt.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&quot;value&quot;</span>, <span class=\"string\">&quot;jhgf&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(oTxt.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;id&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;txt1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>##DOM元素灵活查找</p>\n<p>###className</p>\n<ul>\n<li>通过class选取元素，一般分两步：</li>\n</ul>\n<ol>\n<li><p>把所有的子元素选出来</p>\n</li>\n<li><p>用className作为条件筛选出来处理</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//通过class来选元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aLi = oUl.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; aLi.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (aLi[i].<span class=\"property\">className</span> == <span class=\"string\">&#x27;double&#x27;</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aLi[i].<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;green&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p><strong>进一步改进</strong>，写一个函数完成选class的功能</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//通过class来选元素的函数</span><br><span class=\"line\"></span><br><span class=\"line\">function getByClass(oParent, sClass)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var aEle =oParent.getElementsByTagName(&#x27;*&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">var aResult = new Array();</span><br><span class=\"line\"></span><br><span class=\"line\">for (var i = 0; i &lt; aEle.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">if (aEle[i].className == sClass) &#123; //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了</span><br><span class=\"line\"></span><br><span class=\"line\">aResult.push(aEle[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">return aResult;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>引用如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aDou = <span class=\"title function_\">getByClass</span>(oUl,<span class=\"string\">&#x27;double&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; aDou.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aDou[i].<span class=\"property\">style</span>.<span class=\"property\">background</span> = <span class=\"string\">&#x27;yellow&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;double&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<p>##创建、插入、和删除元素</p>\n</li>\n</ol>\n<hr>\n<p>###创建DOM元素</p>\n<ul>\n<li>creatElement（标签名）  创建一个节点</li>\n<li>appendChild（节点）        追加一个节点<br>  -例子：为ul插入li</li>\n</ul>\n<p>###插入元素</p>\n<ul>\n<li>insertBefore（节点，原有节点）        在已有元素前插入<br>  -例子：倒序插入li</li>\n</ul>\n<p>###删除DOM元素</p>\n<ul>\n<li>removeChild（节点）        删除一个元素<br>  -例子删除li</li>\n</ul>\n<p>###练习代码：<br>①创建插入li<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\toUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\">\t\toBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;btn1&#x27;</span>);</span><br><span class=\"line\">\t\toTxt = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;txt1&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oLi = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> aLi = oUl.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toLi.<span class=\"property\">innerHTML</span> = oTxt.<span class=\"property\">value</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (aLi.<span class=\"property\">length</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\toUl.<span class=\"title function_\">appendChild</span>(oLi);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\toUl.<span class=\"title function_\">insertBefore</span>(oLi, aLi[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;txt1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;txt1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn1&quot;</span>&gt;</span>插入<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）</p>\n<p>②删除元素<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> oUl = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;ul1&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> aA = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; aA.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">\t\t\taA[i].<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\toUl.<span class=\"title function_\">removeChild</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">parentNode</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ul1&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li1<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li2<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li3<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li4<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>li5<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br><strong>注意</strong>：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。</p>\n<blockquote>\n<p><strong>小结</strong><br> 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考<a target=\"_blank\" rel=\"noopener\" href=\"http://www.w3school.com.cn/htmldom/index.asp\">wschoolDOM参考手册</a>或者阅读<a target=\"_blank\" rel=\"noopener\" href=\"http://www.javascriptcn.com/read-42.html\">JavaScript DOM编程艺术（第二版）</a>一书</p>\n</blockquote>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"https://laoleo.github.io/2016/04/23/js%E7%B3%BB%E5%88%97%E4%B9%8BDOM%E5%9F%BA%E7%A1%80/\">  { {title} }  </a><br>文章作者: <a target=\"_blank\" rel=\"noopener\" href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license noopener\" target=\"_blank\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"js面向对象编程之继承","date":"2016-05-28T16:00:00.000Z","_content":"\n![我是图片](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&fm=27&gp=0.jpg)\n\n# 前言\n> javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？\n\n<!--more-->\n\n# 什么是继承？\n\n继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。\n\n我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。\n\n而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。\n\n# 继承的方式\n\n## 构造函数伪装继承属性\n\n我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。\n\n```js\nfunction Drag(id)\n{\n\tvar _this=this;\n\t\n\tthis.disX=0;\n\tthis.disY=0;\n\tthis.oDiv=document.getElementById(id);\n\t\n\tthis.oDiv.onmousedown=function (ev)\n\t{\n\t\t_this.fnDown(ev);\n\t\t\n\t\treturn false;\n\t};\n}\n\nDrag.prototype.fnDown=function (ev)\n{\n\tvar _this=this;\n\tvar oEvent=ev||event;\n\tthis.disX=oEvent.clientX-this.oDiv.offsetLeft;\n\tthis.disY=oEvent.clientY-this.oDiv.offsetTop;\n\t\n\tdocument.onmousemove=function (ev)\n\t{\n\t\t_this.fnMove(ev);\n\t};\n\t\n\tdocument.onmouseup=function ()\n\t{\n\t\t_this.fnUp();\n\t};\n};\n\nDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\t\n\tthis.oDiv.style.left=oEvent.clientX-this.disX+'px';\n\tthis.oDiv.style.top=oEvent.clientY-this.disY+'px';\n};\n\nDrag.prototype.fnUp=function ()\n{\n\tdocument.onmousemove=null;\n\tdocument.onmouseup=null;\n};\n```\n\n现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。\n```js\nfunction LimitDrag(id)\n{\n\tDrag.call(this, id); //(1)\n}\n```\n\n要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。\n\n## 原型对象实现方法继承\n\n我们先用这种方式实现方法的继承\n\n```js\nLimitDrag.prototype=Drag.prototype;\n```\n\n然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。\n\n解决这个问题有两种思路：\n* 把原型对象上的方法拷贝一份\n* 将子类的原型对象的__proto__属性指向父类原型对象\n\n```js\n//方法一\nfor(var i in Drag.prototype)\n{\n\tLimitDrag.prototype[i]=Drag.prototype[i];\n}\n```\n\n```js\nLimitDrag.prototype.__proto__ = Drag.prototype\nLimitDrag.prototype.constructor = LimitDrag;\n```\n\n其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。\n\n在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的__proto__属性的指向到另一个构造器的原型对象上，来实现继承的效果。\n\n所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了\n\n```js\nLimitDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\tvar l=oEvent.clientX-this.disX;\n\tvar t=oEvent.clientY-this.disY;\n\t\n\tif(l<0)\n\t{\n\t\tl=0;\n\t}\n\telse if(l>document.documentElement.clientWidth-this.oDiv.offsetWidth)\n\t{\n\t\tl=document.documentElement.clientWidth-this.oDiv.offsetWidth;\n\t}\n\t\n\tif(t<0)\n\t{\n\t\tt=0;\n\t}\n\telse if(t>document.documentElement.clientHeight-this.oDiv.offsetHeight)\n\t{\n\t\tt=document.documentElement.clientHeight-this.oDiv.offsetHeight;\n\t}\n\t\n\tthis.oDiv.style.left=l+'px';\n\tthis.oDiv.style.top=t+'px';\n};\n```\n\n# 结语\n\njs是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。\n\n继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。","source":"_posts/js面向对象编程之继承.md","raw":"---\ntitle: js面向对象编程之继承\ndate: 2016-5-29\ntags: [js, 继承]\ncategories: [js]\n---\n\n![我是图片](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&fm=27&gp=0.jpg)\n\n# 前言\n> javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？\n\n<!--more-->\n\n# 什么是继承？\n\n继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。\n\n我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。\n\n而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。\n\n# 继承的方式\n\n## 构造函数伪装继承属性\n\n我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。\n\n```js\nfunction Drag(id)\n{\n\tvar _this=this;\n\t\n\tthis.disX=0;\n\tthis.disY=0;\n\tthis.oDiv=document.getElementById(id);\n\t\n\tthis.oDiv.onmousedown=function (ev)\n\t{\n\t\t_this.fnDown(ev);\n\t\t\n\t\treturn false;\n\t};\n}\n\nDrag.prototype.fnDown=function (ev)\n{\n\tvar _this=this;\n\tvar oEvent=ev||event;\n\tthis.disX=oEvent.clientX-this.oDiv.offsetLeft;\n\tthis.disY=oEvent.clientY-this.oDiv.offsetTop;\n\t\n\tdocument.onmousemove=function (ev)\n\t{\n\t\t_this.fnMove(ev);\n\t};\n\t\n\tdocument.onmouseup=function ()\n\t{\n\t\t_this.fnUp();\n\t};\n};\n\nDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\t\n\tthis.oDiv.style.left=oEvent.clientX-this.disX+'px';\n\tthis.oDiv.style.top=oEvent.clientY-this.disY+'px';\n};\n\nDrag.prototype.fnUp=function ()\n{\n\tdocument.onmousemove=null;\n\tdocument.onmouseup=null;\n};\n```\n\n现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。\n```js\nfunction LimitDrag(id)\n{\n\tDrag.call(this, id); //(1)\n}\n```\n\n要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。\n\n## 原型对象实现方法继承\n\n我们先用这种方式实现方法的继承\n\n```js\nLimitDrag.prototype=Drag.prototype;\n```\n\n然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。\n\n解决这个问题有两种思路：\n* 把原型对象上的方法拷贝一份\n* 将子类的原型对象的__proto__属性指向父类原型对象\n\n```js\n//方法一\nfor(var i in Drag.prototype)\n{\n\tLimitDrag.prototype[i]=Drag.prototype[i];\n}\n```\n\n```js\nLimitDrag.prototype.__proto__ = Drag.prototype\nLimitDrag.prototype.constructor = LimitDrag;\n```\n\n其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。\n\n在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的__proto__属性的指向到另一个构造器的原型对象上，来实现继承的效果。\n\n所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了\n\n```js\nLimitDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\tvar l=oEvent.clientX-this.disX;\n\tvar t=oEvent.clientY-this.disY;\n\t\n\tif(l<0)\n\t{\n\t\tl=0;\n\t}\n\telse if(l>document.documentElement.clientWidth-this.oDiv.offsetWidth)\n\t{\n\t\tl=document.documentElement.clientWidth-this.oDiv.offsetWidth;\n\t}\n\t\n\tif(t<0)\n\t{\n\t\tt=0;\n\t}\n\telse if(t>document.documentElement.clientHeight-this.oDiv.offsetHeight)\n\t{\n\t\tt=document.documentElement.clientHeight-this.oDiv.offsetHeight;\n\t}\n\t\n\tthis.oDiv.style.left=l+'px';\n\tthis.oDiv.style.top=t+'px';\n};\n```\n\n# 结语\n\njs是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。\n\n继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。","slug":"js面向对象编程之继承","published":1,"updated":"2022-12-06T15:30:38.474Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4a001rmcq040hr7ch4","content":"<p><img src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"什么是继承？\"><a href=\"#什么是继承？\" class=\"headerlink\" title=\"什么是继承？\"></a>什么是继承？</h1><p>继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。</p>\n<p>我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。</p>\n<p>而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。</p>\n<h1 id=\"继承的方式\"><a href=\"#继承的方式\" class=\"headerlink\" title=\"继承的方式\"></a>继承的方式</h1><h2 id=\"构造函数伪装继承属性\"><a href=\"#构造函数伪装继承属性\" class=\"headerlink\" title=\"构造函数伪装继承属性\"></a>构造函数伪装继承属性</h2><p>我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Drag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(id);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">onmousedown</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_this.<span class=\"title function_\">fnDown</span>(ev);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnDown</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>=oEvent.<span class=\"property\">clientX</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetLeft</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>=oEvent.<span class=\"property\">clientY</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetTop</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_this.<span class=\"title function_\">fnMove</span>(ev);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_this.<span class=\"title function_\">fnUp</span>();</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnMove</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span>=oEvent.<span class=\"property\">clientX</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">top</span>=oEvent.<span class=\"property\">clientY</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnUp</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"literal\">null</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span>=<span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">LimitDrag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title class_\">Drag</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, id); <span class=\"comment\">//(1)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。</p>\n<h2 id=\"原型对象实现方法继承\"><a href=\"#原型对象实现方法继承\" class=\"headerlink\" title=\"原型对象实现方法继承\"></a>原型对象实现方法继承</h2><p>我们先用这种方式实现方法的继承</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>;</span><br></pre></td></tr></table></figure>\n<p>然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。</p>\n<p>解决这个问题有两种思路：</p>\n<ul>\n<li>把原型对象上的方法拷贝一份</li>\n<li>将子类的原型对象的<strong>proto</strong>属性指向父类原型对象</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方法一</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> <span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>[i]=<span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">__proto__</span> = <span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span></span><br><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">LimitDrag</span>;</span><br></pre></td></tr></table></figure>\n<p>其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。</p>\n<p>在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的<strong>proto</strong>属性的指向到另一个构造器的原型对象上，来实现继承的效果。</p>\n<p>所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnMove</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> l=oEvent.<span class=\"property\">clientX</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> t=oEvent.<span class=\"property\">clientY</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(l&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetWidth</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(t&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetHeight</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span>=l+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">top</span>=t+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>js是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。</p>\n<p>继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？</p>\n</blockquote>","more":"<h1 id=\"什么是继承？\"><a href=\"#什么是继承？\" class=\"headerlink\" title=\"什么是继承？\"></a>什么是继承？</h1><p>继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。</p>\n<p>我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。</p>\n<p>而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。</p>\n<h1 id=\"继承的方式\"><a href=\"#继承的方式\" class=\"headerlink\" title=\"继承的方式\"></a>继承的方式</h1><h2 id=\"构造函数伪装继承属性\"><a href=\"#构造函数伪装继承属性\" class=\"headerlink\" title=\"构造函数伪装继承属性\"></a>构造函数伪装继承属性</h2><p>我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Drag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>=<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(id);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">onmousedown</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_this.<span class=\"title function_\">fnDown</span>(ev);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnDown</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>=oEvent.<span class=\"property\">clientX</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetLeft</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>=oEvent.<span class=\"property\">clientY</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetTop</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_this.<span class=\"title function_\">fnMove</span>(ev);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_this.<span class=\"title function_\">fnUp</span>();</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnMove</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span>=oEvent.<span class=\"property\">clientX</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">top</span>=oEvent.<span class=\"property\">clientY</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnUp</span>=<span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmousemove</span>=<span class=\"literal\">null</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">document</span>.<span class=\"property\">onmouseup</span>=<span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">LimitDrag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title class_\">Drag</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, id); <span class=\"comment\">//(1)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。</p>\n<h2 id=\"原型对象实现方法继承\"><a href=\"#原型对象实现方法继承\" class=\"headerlink\" title=\"原型对象实现方法继承\"></a>原型对象实现方法继承</h2><p>我们先用这种方式实现方法的继承</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>=<span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>;</span><br></pre></td></tr></table></figure>\n<p>然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。</p>\n<p>解决这个问题有两种思路：</p>\n<ul>\n<li>把原型对象上的方法拷贝一份</li>\n<li>将子类的原型对象的<strong>proto</strong>属性指向父类原型对象</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方法一</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> <span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>[i]=<span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">__proto__</span> = <span class=\"title class_\">Drag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span></span><br><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">LimitDrag</span>;</span><br></pre></td></tr></table></figure>\n<p>其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。</p>\n<p>在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的<strong>proto</strong>属性的指向到另一个构造器的原型对象上，来实现继承的效果。</p>\n<p>所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">LimitDrag</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fnMove</span>=<span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> l=oEvent.<span class=\"property\">clientX</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disX</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> t=oEvent.<span class=\"property\">clientY</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">disY</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(l&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetWidth</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientWidth</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetWidth</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(t&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetHeight</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>-<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">offsetHeight</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span>=l+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">oDiv</span>.<span class=\"property\">style</span>.<span class=\"property\">top</span>=t+<span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>js是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。</p>\n<p>继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。</p>"},{"title":"mongoDB常用知识整理","date":"2017-07-09T16:00:00.000Z","_content":"\n\n# mongoDB常用知识整理\n\n## 数据库恢复\n\n     cd bin \n进去bin目录，在该目录下有工具`mongorestore`，`mongoimport`，`mongodump`,`mongoexport`\n恢复数据库主要用`mongorestore`\n\n使用命令：`mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname`\n`--noIndexRestore`  是忽略数据库版本不同引起的索引问题\n`-d`后接数据库名\n`C://pathname`是数据库目录\n\n\n>注入此类请参考：[mongoDB数据库导入、导出、备份][1]\n\n## mongoDB基础命令\n\n    show dbs\n    use dbname\n    show collections\n    db.collectionName.insert({x :  1})\n    for(i = 3; i< 100; i++)db.collectionName.insert({ x ： 1})\n    db.collectionName.find()\n    db.collectionName.find({ x : 1 })\n    db.collectionName.find().count()\n    \n    \n    db.collectionsName.find().skip(3).limit(2).sort({ x : 1 })\n    db.collectionName.drop()\n    db.collectionName.update({ x : 1}, { x : 999 })    第二个json对象替换掉原有的对象\n    db.collectionName.update({ z : 100}, { $set : { y : 99} })   只是更新了y值\n    db.collectionName.update({ y : 100}, { y : 999 }, true)    假如更新的数据不存在就插入新数据\n    db.collectionName.update({ x : 1}, { $set : { x : 999} }, false, true)   将第四个参数设为true，更新多条x为1的数据\n    db.collectionName.remove( { x : 2 } )   删除x为2的数据\n    \n    db.collectionName.getIndexes()    获取索引\n    db.collectioname.ensureIndex( { x ： 1 } )     创建索引   \n    db,collectionName.ensureIndex( { x : 1  }, { exprieAfterSeconds : 30} )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n    \n    \n    db.collectionName.ensureIndex( { \"article\"  : \"text\"} )  创建全文索引\n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"}})  全文查询，默认是或查询\n    db.collectionName.find( $text : { $search : { \" aa  bb  -cc \"}}   包含aa或bb，但不包含cc\n    db.collectionName.find( $text : { $search : { \"  \\\"aa\\\"  \\\" bb\\\"   \\\"cc\\\" \" } } )  反斜杠是转义符， 既包含   \n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"} }, { score :{$meta : \"textScore\"}}  ).sort({ score :{$meta : \"textScore\"})   相识度查询，文档里 会增加一个相识度的值，sort排序\n    \n    地理位置查询\n    db.collectionName.ensureIndex({ \"w\"  : \"2d\"})\n    db.collectionName.insert( { w : [ 12, 12]})   经纬度  -180--180  -90--90\n    db.collectionName.find( { w :{$near : [1,1]}})    返回一百个距离这个点最近的地点\n    db.collectionName.find( { w :{$ geowithin : { $box : [ [0,0], [3,3] ]} } })    矩形内的点\n    db.collectionName.find( { w :{$ geowithin : { $center : [ [0,0], 5 ]} } })   圆型\n    db.collectionName.find( { w :{$ geowithin : { $ ploygon : [ [0,0], [3,3], [5,5] ]} } })  多边形\n    db.runCommand({ geoNear : \"collectionName\", near : [1,3], maxDistance : 10, num: 10})\n\n\n  [1]: http://www.cnblogs.com/yangxia-test/p/3983271.html","source":"_posts/mongoDB常用知识整理.md","raw":"---\ntitle: mongoDB常用知识整理\ndate: 2017-7-10\ntags: [mongoDB]\n---\n\n\n# mongoDB常用知识整理\n\n## 数据库恢复\n\n     cd bin \n进去bin目录，在该目录下有工具`mongorestore`，`mongoimport`，`mongodump`,`mongoexport`\n恢复数据库主要用`mongorestore`\n\n使用命令：`mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname`\n`--noIndexRestore`  是忽略数据库版本不同引起的索引问题\n`-d`后接数据库名\n`C://pathname`是数据库目录\n\n\n>注入此类请参考：[mongoDB数据库导入、导出、备份][1]\n\n## mongoDB基础命令\n\n    show dbs\n    use dbname\n    show collections\n    db.collectionName.insert({x :  1})\n    for(i = 3; i< 100; i++)db.collectionName.insert({ x ： 1})\n    db.collectionName.find()\n    db.collectionName.find({ x : 1 })\n    db.collectionName.find().count()\n    \n    \n    db.collectionsName.find().skip(3).limit(2).sort({ x : 1 })\n    db.collectionName.drop()\n    db.collectionName.update({ x : 1}, { x : 999 })    第二个json对象替换掉原有的对象\n    db.collectionName.update({ z : 100}, { $set : { y : 99} })   只是更新了y值\n    db.collectionName.update({ y : 100}, { y : 999 }, true)    假如更新的数据不存在就插入新数据\n    db.collectionName.update({ x : 1}, { $set : { x : 999} }, false, true)   将第四个参数设为true，更新多条x为1的数据\n    db.collectionName.remove( { x : 2 } )   删除x为2的数据\n    \n    db.collectionName.getIndexes()    获取索引\n    db.collectioname.ensureIndex( { x ： 1 } )     创建索引   \n    db,collectionName.ensureIndex( { x : 1  }, { exprieAfterSeconds : 30} )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n    \n    \n    db.collectionName.ensureIndex( { \"article\"  : \"text\"} )  创建全文索引\n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"}})  全文查询，默认是或查询\n    db.collectionName.find( $text : { $search : { \" aa  bb  -cc \"}}   包含aa或bb，但不包含cc\n    db.collectionName.find( $text : { $search : { \"  \\\"aa\\\"  \\\" bb\\\"   \\\"cc\\\" \" } } )  反斜杠是转义符， 既包含   \n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"} }, { score :{$meta : \"textScore\"}}  ).sort({ score :{$meta : \"textScore\"})   相识度查询，文档里 会增加一个相识度的值，sort排序\n    \n    地理位置查询\n    db.collectionName.ensureIndex({ \"w\"  : \"2d\"})\n    db.collectionName.insert( { w : [ 12, 12]})   经纬度  -180--180  -90--90\n    db.collectionName.find( { w :{$near : [1,1]}})    返回一百个距离这个点最近的地点\n    db.collectionName.find( { w :{$ geowithin : { $box : [ [0,0], [3,3] ]} } })    矩形内的点\n    db.collectionName.find( { w :{$ geowithin : { $center : [ [0,0], 5 ]} } })   圆型\n    db.collectionName.find( { w :{$ geowithin : { $ ploygon : [ [0,0], [3,3], [5,5] ]} } })  多边形\n    db.runCommand({ geoNear : \"collectionName\", near : [1,3], maxDistance : 10, num: 10})\n\n\n  [1]: http://www.cnblogs.com/yangxia-test/p/3983271.html","slug":"mongoDB常用知识整理","published":1,"updated":"2022-12-06T15:30:38.476Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4b001tmcq02n6eaobd","content":"<h1 id=\"mongoDB常用知识整理\"><a href=\"#mongoDB常用知识整理\" class=\"headerlink\" title=\"mongoDB常用知识整理\"></a>mongoDB常用知识整理</h1><h2 id=\"数据库恢复\"><a href=\"#数据库恢复\" class=\"headerlink\" title=\"数据库恢复\"></a>数据库恢复</h2><pre><code>cd bin \n</code></pre><p>进去bin目录，在该目录下有工具<code>mongorestore</code>，<code>mongoimport</code>，<code>mongodump</code>,<code>mongoexport</code><br>恢复数据库主要用<code>mongorestore</code></p>\n<p>使用命令：<code>mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname</code><br><code>--noIndexRestore</code>  是忽略数据库版本不同引起的索引问题<br><code>-d</code>后接数据库名<br><code>C://pathname</code>是数据库目录</p>\n<blockquote>\n<p>注入此类请参考：<a target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/yangxia-test/p/3983271.html\">mongoDB数据库导入、导出、备份</a></p>\n</blockquote>\n<h2 id=\"mongoDB基础命令\"><a href=\"#mongoDB基础命令\" class=\"headerlink\" title=\"mongoDB基础命令\"></a>mongoDB基础命令</h2><pre><code>show dbs\nuse dbname\nshow collections\ndb.collectionName.insert(&#123;x :  1&#125;)\nfor(i = 3; i&lt; 100; i++)db.collectionName.insert(&#123; x ： 1&#125;)\ndb.collectionName.find()\ndb.collectionName.find(&#123; x : 1 &#125;)\ndb.collectionName.find().count()\n\n\ndb.collectionsName.find().skip(3).limit(2).sort(&#123; x : 1 &#125;)\ndb.collectionName.drop()\ndb.collectionName.update(&#123; x : 1&#125;, &#123; x : 999 &#125;)    第二个json对象替换掉原有的对象\ndb.collectionName.update(&#123; z : 100&#125;, &#123; $set : &#123; y : 99&#125; &#125;)   只是更新了y值\ndb.collectionName.update(&#123; y : 100&#125;, &#123; y : 999 &#125;, true)    假如更新的数据不存在就插入新数据\ndb.collectionName.update(&#123; x : 1&#125;, &#123; $set : &#123; x : 999&#125; &#125;, false, true)   将第四个参数设为true，更新多条x为1的数据\ndb.collectionName.remove( &#123; x : 2 &#125; )   删除x为2的数据\n\ndb.collectionName.getIndexes()    获取索引\ndb.collectioname.ensureIndex( &#123; x ： 1 &#125; )     创建索引   \ndb,collectionName.ensureIndex( &#123; x : 1  &#125;, &#123; exprieAfterSeconds : 30&#125; )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n\n\ndb.collectionName.ensureIndex( &#123; &quot;article&quot;  : &quot;text&quot;&#125; )  创建全文索引\ndb.collectionName.find( $text : &#123; $search : &#123; &quot; aa  bb  cc &quot;&#125;&#125;)  全文查询，默认是或查询\ndb.collectionName.find( $text : &#123; $search : &#123; &quot; aa  bb  -cc &quot;&#125;&#125;   包含aa或bb，但不包含cc\ndb.collectionName.find( $text : &#123; $search : &#123; &quot;  \\&quot;aa\\&quot;  \\&quot; bb\\&quot;   \\&quot;cc\\&quot; &quot; &#125; &#125; )  反斜杠是转义符， 既包含   \ndb.collectionName.find( $text : &#123; $search : &#123; &quot; aa  bb  cc &quot;&#125; &#125;, &#123; score :&#123;$meta : &quot;textScore&quot;&#125;&#125;  ).sort(&#123; score :&#123;$meta : &quot;textScore&quot;&#125;)   相识度查询，文档里 会增加一个相识度的值，sort排序\n\n地理位置查询\ndb.collectionName.ensureIndex(&#123; &quot;w&quot;  : &quot;2d&quot;&#125;)\ndb.collectionName.insert( &#123; w : [ 12, 12]&#125;)   经纬度  -180--180  -90--90\ndb.collectionName.find( &#123; w :&#123;$near : [1,1]&#125;&#125;)    返回一百个距离这个点最近的地点\ndb.collectionName.find( &#123; w :&#123;$ geowithin : &#123; $box : [ [0,0], [3,3] ]&#125; &#125; &#125;)    矩形内的点\ndb.collectionName.find( &#123; w :&#123;$ geowithin : &#123; $center : [ [0,0], 5 ]&#125; &#125; &#125;)   圆型\ndb.collectionName.find( &#123; w :&#123;$ geowithin : &#123; $ ploygon : [ [0,0], [3,3], [5,5] ]&#125; &#125; &#125;)  多边形\ndb.runCommand(&#123; geoNear : &quot;collectionName&quot;, near : [1,3], maxDistance : 10, num: 10&#125;)\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mongoDB常用知识整理\"><a href=\"#mongoDB常用知识整理\" class=\"headerlink\" title=\"mongoDB常用知识整理\"></a>mongoDB常用知识整理</h1><h2 id=\"数据库恢复\"><a href=\"#数据库恢复\" class=\"headerlink\" title=\"数据库恢复\"></a>数据库恢复</h2><pre><code>cd bin \n</code></pre><p>进去bin目录，在该目录下有工具<code>mongorestore</code>，<code>mongoimport</code>，<code>mongodump</code>,<code>mongoexport</code><br>恢复数据库主要用<code>mongorestore</code></p>\n<p>使用命令：<code>mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname</code><br><code>--noIndexRestore</code>  是忽略数据库版本不同引起的索引问题<br><code>-d</code>后接数据库名<br><code>C://pathname</code>是数据库目录</p>\n<blockquote>\n<p>注入此类请参考：<a target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/yangxia-test/p/3983271.html\">mongoDB数据库导入、导出、备份</a></p>\n</blockquote>\n<h2 id=\"mongoDB基础命令\"><a href=\"#mongoDB基础命令\" class=\"headerlink\" title=\"mongoDB基础命令\"></a>mongoDB基础命令</h2><pre><code>show dbs\nuse dbname\nshow collections\ndb.collectionName.insert(&#123;x :  1&#125;)\nfor(i = 3; i&lt; 100; i++)db.collectionName.insert(&#123; x ： 1&#125;)\ndb.collectionName.find()\ndb.collectionName.find(&#123; x : 1 &#125;)\ndb.collectionName.find().count()\n\n\ndb.collectionsName.find().skip(3).limit(2).sort(&#123; x : 1 &#125;)\ndb.collectionName.drop()\ndb.collectionName.update(&#123; x : 1&#125;, &#123; x : 999 &#125;)    第二个json对象替换掉原有的对象\ndb.collectionName.update(&#123; z : 100&#125;, &#123; $set : &#123; y : 99&#125; &#125;)   只是更新了y值\ndb.collectionName.update(&#123; y : 100&#125;, &#123; y : 999 &#125;, true)    假如更新的数据不存在就插入新数据\ndb.collectionName.update(&#123; x : 1&#125;, &#123; $set : &#123; x : 999&#125; &#125;, false, true)   将第四个参数设为true，更新多条x为1的数据\ndb.collectionName.remove( &#123; x : 2 &#125; )   删除x为2的数据\n\ndb.collectionName.getIndexes()    获取索引\ndb.collectioname.ensureIndex( &#123; x ： 1 &#125; )     创建索引   \ndb,collectionName.ensureIndex( &#123; x : 1  &#125;, &#123; exprieAfterSeconds : 30&#125; )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n\n\ndb.collectionName.ensureIndex( &#123; &quot;article&quot;  : &quot;text&quot;&#125; )  创建全文索引\ndb.collectionName.find( $text : &#123; $search : &#123; &quot; aa  bb  cc &quot;&#125;&#125;)  全文查询，默认是或查询\ndb.collectionName.find( $text : &#123; $search : &#123; &quot; aa  bb  -cc &quot;&#125;&#125;   包含aa或bb，但不包含cc\ndb.collectionName.find( $text : &#123; $search : &#123; &quot;  \\&quot;aa\\&quot;  \\&quot; bb\\&quot;   \\&quot;cc\\&quot; &quot; &#125; &#125; )  反斜杠是转义符， 既包含   \ndb.collectionName.find( $text : &#123; $search : &#123; &quot; aa  bb  cc &quot;&#125; &#125;, &#123; score :&#123;$meta : &quot;textScore&quot;&#125;&#125;  ).sort(&#123; score :&#123;$meta : &quot;textScore&quot;&#125;)   相识度查询，文档里 会增加一个相识度的值，sort排序\n\n地理位置查询\ndb.collectionName.ensureIndex(&#123; &quot;w&quot;  : &quot;2d&quot;&#125;)\ndb.collectionName.insert( &#123; w : [ 12, 12]&#125;)   经纬度  -180--180  -90--90\ndb.collectionName.find( &#123; w :&#123;$near : [1,1]&#125;&#125;)    返回一百个距离这个点最近的地点\ndb.collectionName.find( &#123; w :&#123;$ geowithin : &#123; $box : [ [0,0], [3,3] ]&#125; &#125; &#125;)    矩形内的点\ndb.collectionName.find( &#123; w :&#123;$ geowithin : &#123; $center : [ [0,0], 5 ]&#125; &#125; &#125;)   圆型\ndb.collectionName.find( &#123; w :&#123;$ geowithin : &#123; $ ploygon : [ [0,0], [3,3], [5,5] ]&#125; &#125; &#125;)  多边形\ndb.runCommand(&#123; geoNear : &quot;collectionName&quot;, near : [1,3], maxDistance : 10, num: 10&#125;)\n</code></pre>"},{"title":"node开发公众号踩过的坑","date":"2017-06-12T16:00:00.000Z","_content":"\n\n> 1\n\n**错误**：\n```js\nrequest = Promise.promisify( require( ‘request’ ) )\n```\n调用\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true} ).then (function ( response ) {\n          \n                var data = response[1];\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n         \n        })\n  \n   })\n```\n\n\t\n\t**报错**：属性expires undefined\n\t\n\t本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n\t分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n\t分析报错信息，一步步追根溯源，才能找出问题所在。\n\n**解决**：\nRequest的使用改为：\n\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                console.log(data);\n            } else {\n                reject()\n            }\n        });     \n   })\n```\n\n没有使用promise化的then函数\n\n\n> 2\n\n**问题**：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“\n为什么会这样呢？\n第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题\n进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。\n反复的检查：发现发送过去的小xml格式如下：\n<xml>\n<ToUserName><![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]></ToUserName>\n <FromUserName><![CDATA[  gh_4a832c2991ae ]]></FromUserName>\n</xml>\n\n![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？\n二话不说，直接测试一下….\n丫的，还果真如此！哈哈，xml格式还真TM的严格\n以后一定要注意![CDATA][ ]里首字母不能有空格！\n\n\n\n> 3\n\n**错误**：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”\n**解决**：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了\n","source":"_posts/node开发公众号踩过的坑.md","raw":"---\ntitle: node开发公众号踩过的坑 \ndate: 2017-06-13\ntags: [nodejs,bug]\n---\n\n\n> 1\n\n**错误**：\n```js\nrequest = Promise.promisify( require( ‘request’ ) )\n```\n调用\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true} ).then (function ( response ) {\n          \n                var data = response[1];\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n         \n        })\n  \n   })\n```\n\n\t\n\t**报错**：属性expires undefined\n\t\n\t本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n\t分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n\t分析报错信息，一步步追根溯源，才能找出问题所在。\n\n**解决**：\nRequest的使用改为：\n\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                console.log(data);\n            } else {\n                reject()\n            }\n        });     \n   })\n```\n\n没有使用promise化的then函数\n\n\n> 2\n\n**问题**：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“\n为什么会这样呢？\n第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题\n进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。\n反复的检查：发现发送过去的小xml格式如下：\n<xml>\n<ToUserName><![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]></ToUserName>\n <FromUserName><![CDATA[  gh_4a832c2991ae ]]></FromUserName>\n</xml>\n\n![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？\n二话不说，直接测试一下….\n丫的，还果真如此！哈哈，xml格式还真TM的严格\n以后一定要注意![CDATA][ ]里首字母不能有空格！\n\n\n\n> 3\n\n**错误**：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”\n**解决**：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了\n","slug":"node开发公众号踩过的坑","published":1,"updated":"2022-12-06T15:30:38.478Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4c001xmcq022vbanhw","content":"<blockquote>\n<p>1</p>\n</blockquote>\n<p><strong>错误</strong>：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request = <span class=\"title class_\">Promise</span>.<span class=\"title function_\">promisify</span>( <span class=\"built_in\">require</span>( ‘request’ ) )</span><br></pre></td></tr></table></figure><br>调用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125; ).<span class=\"property\">then</span> (<span class=\"keyword\">function</span> (<span class=\"params\"> response </span>) &#123;</span><br><span class=\"line\">          </span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = response[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">         </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n<pre><code>**报错**：属性expires undefined\n\n本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n分析报错信息，一步步追根溯源，才能找出问题所在。\n</code></pre><p><strong>解决</strong>：<br>Request的使用改为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure>\n<p>没有使用promise化的then函数</p>\n<blockquote>\n<p>2</p>\n</blockquote>\n<p><strong>问题</strong>：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“<br>为什么会这样呢？<br>第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题<br>进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。<br>反复的检查：发现发送过去的小xml格式如下：</p>\n<xml><br><ToUserName>&lt;![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]&gt;</ToUserName><br> <FromUserName>&lt;![CDATA[  gh_4a832c2991ae ]]&gt;</FromUserName><br></xml>\n\n<p>![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？<br>二话不说，直接测试一下….<br>丫的，还果真如此！哈哈，xml格式还真TM的严格<br>以后一定要注意![CDATA][ ]里首字母不能有空格！</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<p><strong>错误</strong>：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”<br><strong>解决</strong>：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>1</p>\n</blockquote>\n<p><strong>错误</strong>：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request = <span class=\"title class_\">Promise</span>.<span class=\"title function_\">promisify</span>( <span class=\"built_in\">require</span>( ‘request’ ) )</span><br></pre></td></tr></table></figure><br>调用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125; ).<span class=\"property\">then</span> (<span class=\"keyword\">function</span> (<span class=\"params\"> response </span>) &#123;</span><br><span class=\"line\">          </span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = response[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">         </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n<pre><code>**报错**：属性expires undefined\n\n本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n分析报错信息，一步步追根溯源，才能找出问题所在。\n</code></pre><p><strong>解决</strong>：<br>Request的使用改为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure>\n<p>没有使用promise化的then函数</p>\n<blockquote>\n<p>2</p>\n</blockquote>\n<p><strong>问题</strong>：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“<br>为什么会这样呢？<br>第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题<br>进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。<br>反复的检查：发现发送过去的小xml格式如下：</p>\n<xml><br><ToUserName>&lt;![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]&gt;</ToUserName><br> <FromUserName>&lt;![CDATA[  gh_4a832c2991ae ]]&gt;</FromUserName><br></xml>\n\n<p>![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？<br>二话不说，直接测试一下….<br>丫的，还果真如此！哈哈，xml格式还真TM的严格<br>以后一定要注意![CDATA][ ]里首字母不能有空格！</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<p><strong>错误</strong>：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”<br><strong>解决</strong>：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了</p>\n"},{"title":"source map小知识","date":"2018-04-09T11:36:00.000Z","_content":"\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1524580962476&di=2bb2f9b1075674dbb2b22354e010b724&imgtype=0&src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg)\n\n\n## 前言\n前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：\n> 1. 合并能减少http请求数\n> 2. 压缩可以减少http请求量\n> 3. 经过编译后的得到的js，如es6，ts\n\n<!--more-->\n\n## source map文件\nsource map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件\n\n大概长这个样子\n```\n{\n    \"version\": 3,\n    \"sources\": [\"hello.js\"],\n    \"names\": [\"sayHello\", \"greeting\", \"Name\", \"console\", \"log\"],\n    \"mappings\": \"AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD\",\n    \"file\": \"hello.min.js\",\n    \"sourceRoot\": \"\",\n    \"sourcesContent\": [\"function sayHello()\\n{\\n    var name = \\\"Fundebug\\\";\\n    var greeting = \\\"Hello, \\\" + Name;\\n    console.log(greeting);\\n}\\n\\nsayHello();\\n\"]\n}\n```\n> version：Source Map的版本号。  \nsources：转换前的文件列表。  \nnames：转换前的所有变量名和属性名。  \nmappings：记录位置信息的字符串，经过编码。 \nfile：(可选)转换后的文件名。  \nsourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。 \nsourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。\n\nsource map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联\n```\nfunction o(){var o=\"Hello, \"+Name;console.log(o)}o();\n//# sourceMappingURL=hello.min.js.map\n```\n\n## webpack配置\nwebpack会把代码编译压缩，所以debug异常也需要source map文件的支持\n```\ndevtool: '#cheap-module-source-map'\n```\n\n要注意的是devtool配置source-map，常用的有一下几种模式：\n\n\n模式 | 作用\n---|---\neval | 每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.\nsource-map | 生成一个 SourceMap 文件\nhidden-source-map | 和 source-map 一样，但不会在 bundle 末尾追加注释\ninline-source-map | 生成一个 DataUrl 形式的 SourceMap 文件\neval-source-map | 每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap \ncheap-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）\ncheap-module-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。\n\n> 其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map\n\n* 在开发模式下  \n选择：cheap-module-source-map\n> 这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。\n\n* 生产模式下\n* 选择：cheap-module-source-map\n\n原因如下：\n\n1. 使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。\n2. 使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。\n3. 使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。\n4. 使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。","source":"_posts/source map小知识.md","raw":"---\ntitle: source map小知识\ndate: 2018-04-09 19:36:00\ntags: [webpack, sourceMap]\ncategories: [工具]\n---\n\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1524580962476&di=2bb2f9b1075674dbb2b22354e010b724&imgtype=0&src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg)\n\n\n## 前言\n前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：\n> 1. 合并能减少http请求数\n> 2. 压缩可以减少http请求量\n> 3. 经过编译后的得到的js，如es6，ts\n\n<!--more-->\n\n## source map文件\nsource map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件\n\n大概长这个样子\n```\n{\n    \"version\": 3,\n    \"sources\": [\"hello.js\"],\n    \"names\": [\"sayHello\", \"greeting\", \"Name\", \"console\", \"log\"],\n    \"mappings\": \"AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD\",\n    \"file\": \"hello.min.js\",\n    \"sourceRoot\": \"\",\n    \"sourcesContent\": [\"function sayHello()\\n{\\n    var name = \\\"Fundebug\\\";\\n    var greeting = \\\"Hello, \\\" + Name;\\n    console.log(greeting);\\n}\\n\\nsayHello();\\n\"]\n}\n```\n> version：Source Map的版本号。  \nsources：转换前的文件列表。  \nnames：转换前的所有变量名和属性名。  \nmappings：记录位置信息的字符串，经过编码。 \nfile：(可选)转换后的文件名。  \nsourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。 \nsourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。\n\nsource map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联\n```\nfunction o(){var o=\"Hello, \"+Name;console.log(o)}o();\n//# sourceMappingURL=hello.min.js.map\n```\n\n## webpack配置\nwebpack会把代码编译压缩，所以debug异常也需要source map文件的支持\n```\ndevtool: '#cheap-module-source-map'\n```\n\n要注意的是devtool配置source-map，常用的有一下几种模式：\n\n\n模式 | 作用\n---|---\neval | 每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.\nsource-map | 生成一个 SourceMap 文件\nhidden-source-map | 和 source-map 一样，但不会在 bundle 末尾追加注释\ninline-source-map | 生成一个 DataUrl 形式的 SourceMap 文件\neval-source-map | 每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap \ncheap-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）\ncheap-module-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。\n\n> 其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map\n\n* 在开发模式下  \n选择：cheap-module-source-map\n> 这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。\n\n* 生产模式下\n* 选择：cheap-module-source-map\n\n原因如下：\n\n1. 使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。\n2. 使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。\n3. 使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。\n4. 使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。","slug":"source map小知识","published":1,"updated":"2022-12-06T15:30:38.482Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4c001zmcq0c4oa449t","content":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1524580962476&amp;di=2bb2f9b1075674dbb2b22354e010b724&amp;imgtype=0&amp;src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：</p>\n<blockquote>\n<ol>\n<li>合并能减少http请求数</li>\n<li>压缩可以减少http请求量</li>\n<li>经过编译后的得到的js，如es6，ts</li>\n</ol>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"source-map文件\"><a href=\"#source-map文件\" class=\"headerlink\" title=\"source map文件\"></a>source map文件</h2><p>source map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件</p>\n<p>大概长这个样子<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;version&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;sources&quot;</span>: [<span class=\"string\">&quot;hello.js&quot;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;names&quot;</span>: [<span class=\"string\">&quot;sayHello&quot;</span>, <span class=\"string\">&quot;greeting&quot;</span>, <span class=\"string\">&quot;Name&quot;</span>, <span class=\"string\">&quot;console&quot;</span>, <span class=\"string\">&quot;log&quot;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;mappings&quot;</span>: <span class=\"string\">&quot;AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;file&quot;</span>: <span class=\"string\">&quot;hello.min.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;sourceRoot&quot;</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;sourcesContent&quot;</span>: [<span class=\"string\">&quot;function sayHello()<span class=\"subst\">\\n</span>&#123;<span class=\"subst\">\\n</span>    var name = <span class=\"subst\">\\&quot;</span>Fundebug<span class=\"subst\">\\&quot;</span>;<span class=\"subst\">\\n</span>    var greeting = <span class=\"subst\">\\&quot;</span>Hello, <span class=\"subst\">\\&quot;</span> + Name;<span class=\"subst\">\\n</span>    console.log(greeting);<span class=\"subst\">\\n</span>&#125;<span class=\"subst\">\\n</span><span class=\"subst\">\\n</span>sayHello();<span class=\"subst\">\\n</span>&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>version：Source Map的版本号。<br>sources：转换前的文件列表。<br>names：转换前的所有变量名和属性名。<br>mappings：记录位置信息的字符串，经过编码。<br>file：(可选)转换后的文件名。<br>sourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。<br>sourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。</p>\n</blockquote>\n<p>source map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联<br><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">o</span>(<span class=\"params\"></span>)&#123;<span class=\"keyword\">var</span> o=<span class=\"string\">&quot;Hello, &quot;</span>+Name;<span class=\"built_in\">console</span>.<span class=\"built_in\">log</span>(o)&#125;o();</span><br><span class=\"line\"><span class=\"comment\">//# sourceMappingURL=hello.min.js.map</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"webpack配置\"><a href=\"#webpack配置\" class=\"headerlink\" title=\"webpack配置\"></a>webpack配置</h2><p>webpack会把代码编译压缩，所以debug异常也需要source map文件的支持<br><figure class=\"highlight ldif\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">devtool</span>: &#x27;<span class=\"comment\">#cheap-module-source-map&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>要注意的是devtool配置source-map，常用的有一下几种模式：</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>eval</td>\n<td>每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.</td>\n</tr>\n<tr>\n<td>source-map</td>\n<td>生成一个 SourceMap 文件</td>\n</tr>\n<tr>\n<td>hidden-source-map</td>\n<td>和 source-map 一样，但不会在 bundle 末尾追加注释</td>\n</tr>\n<tr>\n<td>inline-source-map</td>\n<td>生成一个 DataUrl 形式的 SourceMap 文件</td>\n</tr>\n<tr>\n<td>eval-source-map</td>\n<td>每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap </td>\n</tr>\n<tr>\n<td>cheap-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）</td>\n</tr>\n<tr>\n<td>cheap-module-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map</p>\n</blockquote>\n<ul>\n<li><p>在开发模式下<br>选择：cheap-module-source-map</p>\n<blockquote>\n<p>这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。</p>\n</blockquote>\n</li>\n<li><p>生产模式下</p>\n</li>\n<li>选择：cheap-module-source-map</li>\n</ul>\n<p>原因如下：</p>\n<ol>\n<li>使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。</li>\n<li>使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。</li>\n<li>使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。</li>\n<li>使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1524580962476&amp;di=2bb2f9b1075674dbb2b22354e010b724&amp;imgtype=0&amp;src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：</p>\n<blockquote>\n<ol>\n<li>合并能减少http请求数</li>\n<li>压缩可以减少http请求量</li>\n<li>经过编译后的得到的js，如es6，ts</li>\n</ol>\n</blockquote>","more":"<h2 id=\"source-map文件\"><a href=\"#source-map文件\" class=\"headerlink\" title=\"source map文件\"></a>source map文件</h2><p>source map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件</p>\n<p>大概长这个样子<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;version&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;sources&quot;</span>: [<span class=\"string\">&quot;hello.js&quot;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;names&quot;</span>: [<span class=\"string\">&quot;sayHello&quot;</span>, <span class=\"string\">&quot;greeting&quot;</span>, <span class=\"string\">&quot;Name&quot;</span>, <span class=\"string\">&quot;console&quot;</span>, <span class=\"string\">&quot;log&quot;</span>],</span><br><span class=\"line\">    <span class=\"string\">&quot;mappings&quot;</span>: <span class=\"string\">&quot;AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;file&quot;</span>: <span class=\"string\">&quot;hello.min.js&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;sourceRoot&quot;</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;sourcesContent&quot;</span>: [<span class=\"string\">&quot;function sayHello()<span class=\"subst\">\\n</span>&#123;<span class=\"subst\">\\n</span>    var name = <span class=\"subst\">\\&quot;</span>Fundebug<span class=\"subst\">\\&quot;</span>;<span class=\"subst\">\\n</span>    var greeting = <span class=\"subst\">\\&quot;</span>Hello, <span class=\"subst\">\\&quot;</span> + Name;<span class=\"subst\">\\n</span>    console.log(greeting);<span class=\"subst\">\\n</span>&#125;<span class=\"subst\">\\n</span><span class=\"subst\">\\n</span>sayHello();<span class=\"subst\">\\n</span>&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>version：Source Map的版本号。<br>sources：转换前的文件列表。<br>names：转换前的所有变量名和属性名。<br>mappings：记录位置信息的字符串，经过编码。<br>file：(可选)转换后的文件名。<br>sourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。<br>sourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。</p>\n</blockquote>\n<p>source map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联<br><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">o</span>(<span class=\"params\"></span>)&#123;<span class=\"keyword\">var</span> o=<span class=\"string\">&quot;Hello, &quot;</span>+Name;<span class=\"built_in\">console</span>.<span class=\"built_in\">log</span>(o)&#125;o();</span><br><span class=\"line\"><span class=\"comment\">//# sourceMappingURL=hello.min.js.map</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"webpack配置\"><a href=\"#webpack配置\" class=\"headerlink\" title=\"webpack配置\"></a>webpack配置</h2><p>webpack会把代码编译压缩，所以debug异常也需要source map文件的支持<br><figure class=\"highlight ldif\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">devtool</span>: &#x27;<span class=\"comment\">#cheap-module-source-map&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>要注意的是devtool配置source-map，常用的有一下几种模式：</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>eval</td>\n<td>每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.</td>\n</tr>\n<tr>\n<td>source-map</td>\n<td>生成一个 SourceMap 文件</td>\n</tr>\n<tr>\n<td>hidden-source-map</td>\n<td>和 source-map 一样，但不会在 bundle 末尾追加注释</td>\n</tr>\n<tr>\n<td>inline-source-map</td>\n<td>生成一个 DataUrl 形式的 SourceMap 文件</td>\n</tr>\n<tr>\n<td>eval-source-map</td>\n<td>每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap </td>\n</tr>\n<tr>\n<td>cheap-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）</td>\n</tr>\n<tr>\n<td>cheap-module-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map</p>\n</blockquote>\n<ul>\n<li><p>在开发模式下<br>选择：cheap-module-source-map</p>\n<blockquote>\n<p>这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。</p>\n</blockquote>\n</li>\n<li><p>生产模式下</p>\n</li>\n<li>选择：cheap-module-source-map</li>\n</ul>\n<p>原因如下：</p>\n<ol>\n<li>使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。</li>\n<li>使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。</li>\n<li>使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。</li>\n<li>使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。</li>\n</ol>"},{"title":"webpack引入eslint","date":"2018-04-08T13:50:50.000Z","_content":"\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525174897&di=c0a06449ab438e83c3a8f2a245203535&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg)\n\n# 前言\neslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范\n\n<!--more-->\n\n在webpack搭建的项目中引入eslint语法检测，分以下两步  \n\n**首先node_modules下有以下包**  \neslint   \neslint-friendly-formatter : 格式化检测输出内容  \neslint-loader : webpack的支持eslint检测的加载器\neslint-config-standard ：标准语法规则  \n// 以下都是为eslint提供环境或者语法支持的包  \neslint-plugin-html  \neslint-plugin-import  \neslint-plugin-node  \neslint-plugin-promise  \neslint-plugin-standard\n\n\n1. 根目录下新建.eslintrc.js\n\n```\nnpm i -g eslint\neslint --init\n选择standard标准\n```\n.eslintrc.js配置\n```\n    // 设置为true，eslint就不会再往父级目录找配置文件了\n    root: true,\n    // 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点\n    parser: 'babel-eslint',\n    // 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过\n    env: {\n        browser: true,\n        node: true,\n        es6: true\n    },\n    // 标准规则模式\n    extends: \"standard\",\n    // eslint-plugin-html插件，在.html和.vue下提供eslint检测\n    plugins: [\n        'html'\n    ],\n    /*\n        'off'/0 关闭\n        'warn'/1 警告级别\n        'error'/2 错误级别\n    */\n    rules: {\n        'indent': ['error', 4, {\n            'SwitchCase': 1,\n            'VariableDeclarator': { 'var': 1, 'let': 1, 'const': 1 }\n        }],\n        'no-trailing-spaces': 'error',\n        'space-before-function-paren': ['error', 'never'],\n        'key-spacing': ['error', { \n            'beforeColon': false,\n            'afterColon': true\n        }],\n        'object-curly-newline': ['error', { \n            'ObjectExpression': 'always',\n            'ObjectPattern': 'never'\n        }],\n        'quotes': ['error', 'single'],\n        'curly': 'error',\n        'object-property-newline': 'error',\n        'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',\n        'no-cond-assign': ['error', 'always'],\n        'no-constant-condition': ['error', { 'checkLoops': false }],\n        'no-empty':['error'],\n        'no-var': ['error'],\n        'line-comment-position': ['error', { 'position': 'above' }]\n    }\n```\n可以查看一些常用的配置：[https://www.jianshu.com/p/a4966ddf9b0c](https://www.jianshu.com/p/a4966ddf9b0c)\n\n2. 在webpack中配置\n```\nmodule: {\n    rules: [\n        {\n            test: /\\.(js|vue)$/,\n            loader: 'eslint-loader',\n            // 强制在编译前检测\n            enforce: 'pre',\n            // 不包括的文件，所以可以不用.eslintignore文件\n            exclude: [path.resolve(__dirname, '../node_modules')],\n            options: {\n                formatter: require('eslint-friendly-formatter'),\n                // 有错自动修复，注意webpack解决不了会陷入死循环\n                fix: true,\n                // 有语法错误编译照样通过\n                emitWarning: true\n            }\n        }\n    ]\n}\n```","source":"_posts/webpack引入eslint.md","raw":"---\ntitle: webpack引入eslint\ndate: 2018-04-08 21:50:50\ntags: [webpack, eslint]\ncategories: [工具]\n---\n\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525174897&di=c0a06449ab438e83c3a8f2a245203535&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg)\n\n# 前言\neslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范\n\n<!--more-->\n\n在webpack搭建的项目中引入eslint语法检测，分以下两步  \n\n**首先node_modules下有以下包**  \neslint   \neslint-friendly-formatter : 格式化检测输出内容  \neslint-loader : webpack的支持eslint检测的加载器\neslint-config-standard ：标准语法规则  \n// 以下都是为eslint提供环境或者语法支持的包  \neslint-plugin-html  \neslint-plugin-import  \neslint-plugin-node  \neslint-plugin-promise  \neslint-plugin-standard\n\n\n1. 根目录下新建.eslintrc.js\n\n```\nnpm i -g eslint\neslint --init\n选择standard标准\n```\n.eslintrc.js配置\n```\n    // 设置为true，eslint就不会再往父级目录找配置文件了\n    root: true,\n    // 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点\n    parser: 'babel-eslint',\n    // 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过\n    env: {\n        browser: true,\n        node: true,\n        es6: true\n    },\n    // 标准规则模式\n    extends: \"standard\",\n    // eslint-plugin-html插件，在.html和.vue下提供eslint检测\n    plugins: [\n        'html'\n    ],\n    /*\n        'off'/0 关闭\n        'warn'/1 警告级别\n        'error'/2 错误级别\n    */\n    rules: {\n        'indent': ['error', 4, {\n            'SwitchCase': 1,\n            'VariableDeclarator': { 'var': 1, 'let': 1, 'const': 1 }\n        }],\n        'no-trailing-spaces': 'error',\n        'space-before-function-paren': ['error', 'never'],\n        'key-spacing': ['error', { \n            'beforeColon': false,\n            'afterColon': true\n        }],\n        'object-curly-newline': ['error', { \n            'ObjectExpression': 'always',\n            'ObjectPattern': 'never'\n        }],\n        'quotes': ['error', 'single'],\n        'curly': 'error',\n        'object-property-newline': 'error',\n        'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',\n        'no-cond-assign': ['error', 'always'],\n        'no-constant-condition': ['error', { 'checkLoops': false }],\n        'no-empty':['error'],\n        'no-var': ['error'],\n        'line-comment-position': ['error', { 'position': 'above' }]\n    }\n```\n可以查看一些常用的配置：[https://www.jianshu.com/p/a4966ddf9b0c](https://www.jianshu.com/p/a4966ddf9b0c)\n\n2. 在webpack中配置\n```\nmodule: {\n    rules: [\n        {\n            test: /\\.(js|vue)$/,\n            loader: 'eslint-loader',\n            // 强制在编译前检测\n            enforce: 'pre',\n            // 不包括的文件，所以可以不用.eslintignore文件\n            exclude: [path.resolve(__dirname, '../node_modules')],\n            options: {\n                formatter: require('eslint-friendly-formatter'),\n                // 有错自动修复，注意webpack解决不了会陷入死循环\n                fix: true,\n                // 有语法错误编译照样通过\n                emitWarning: true\n            }\n        }\n    ]\n}\n```","slug":"webpack引入eslint","published":1,"updated":"2022-12-06T15:30:38.486Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4d0022mcq06dg94lqt","content":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525174897&amp;di=c0a06449ab438e83c3a8f2a245203535&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>eslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范</p>\n<span id=\"more\"></span>\n<p>在webpack搭建的项目中引入eslint语法检测，分以下两步  </p>\n<p><strong>首先node_modules下有以下包</strong><br>eslint<br>eslint-friendly-formatter : 格式化检测输出内容<br>eslint-loader : webpack的支持eslint检测的加载器<br>eslint-config-standard ：标准语法规则<br>// 以下都是为eslint提供环境或者语法支持的包<br>eslint-plugin-html<br>eslint-plugin-import<br>eslint-plugin-node<br>eslint-plugin-promise<br>eslint-plugin-standard</p>\n<ol>\n<li>根目录下新建.eslintrc.js</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> -g eslint</span><br><span class=\"line\">eslint <span class=\"attr\">--init</span></span><br><span class=\"line\">选择standard标准</span><br></pre></td></tr></table></figure>\n<p>.eslintrc.js配置<br><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置为true，eslint就不会再往父级目录找配置文件了</span></span><br><span class=\"line\">root: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点</span></span><br><span class=\"line\">parser: <span class=\"string\">&#x27;babel-eslint&#x27;</span>,</span><br><span class=\"line\"><span class=\"comment\">// 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过</span></span><br><span class=\"line\">env: &#123;</span><br><span class=\"line\">    browser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    node: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    es6: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 标准规则模式</span></span><br><span class=\"line\"><span class=\"keyword\">extends</span>: <span class=\"string\">&quot;standard&quot;</span>,</span><br><span class=\"line\"><span class=\"comment\">// eslint-plugin-html插件，在.html和.vue下提供eslint检测</span></span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;html&#x27;</span></span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    &#x27;off&#x27;/0 关闭</span></span><br><span class=\"line\"><span class=\"comment\">    &#x27;warn&#x27;/1 警告级别</span></span><br><span class=\"line\"><span class=\"comment\">    &#x27;error&#x27;/2 错误级别</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;indent&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"number\">4</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;SwitchCase&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;VariableDeclarator&#x27;</span>: &#123; <span class=\"string\">&#x27;var&#x27;</span>: <span class=\"number\">1</span>, <span class=\"string\">&#x27;let&#x27;</span>: <span class=\"number\">1</span>, <span class=\"string\">&#x27;const&#x27;</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-trailing-spaces&#x27;</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;space-before-function-paren&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;never&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;key-spacing&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">&#x27;beforeColon&#x27;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;afterColon&#x27;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;object-curly-newline&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">&#x27;ObjectExpression&#x27;</span>: <span class=\"string\">&#x27;always&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;ObjectPattern&#x27;</span>: <span class=\"string\">&#x27;never&#x27;</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;quotes&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;single&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;curly&#x27;</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;object-property-newline&#x27;</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-console&#x27;</span>: process.env.NODE_ENV === <span class=\"string\">&#x27;production&#x27;</span> ? <span class=\"string\">&#x27;error&#x27;</span> : <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-cond-assign&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;always&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-constant-condition&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"string\">&#x27;checkLoops&#x27;</span>: <span class=\"literal\">false</span> &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-empty&#x27;</span>:[<span class=\"string\">&#x27;error&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-var&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;line-comment-position&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"string\">&#x27;position&#x27;</span>: <span class=\"string\">&#x27;above&#x27;</span> &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>可以查看一些常用的配置：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/a4966ddf9b0c\">https://www.jianshu.com/p/a4966ddf9b0c</a></p>\n<ol start=\"2\">\n<li>在webpack中配置<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(js|vue)$/</span>,</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;eslint-loader&#x27;</span>,</span><br><span class=\"line\">            <span class=\"regexp\">//</span> 强制在编译前检测</span><br><span class=\"line\">            enforce: <span class=\"string\">&#x27;pre&#x27;</span>,</span><br><span class=\"line\">            <span class=\"regexp\">//</span> 不包括的文件，所以可以不用.eslintignore文件</span><br><span class=\"line\">            exclude: [path.resolve(__dirname, <span class=\"string\">&#x27;../node_modules&#x27;</span>)],</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                formatter: require(<span class=\"string\">&#x27;eslint-friendly-formatter&#x27;</span>),</span><br><span class=\"line\">                <span class=\"regexp\">//</span> 有错自动修复，注意webpack解决不了会陷入死循环</span><br><span class=\"line\">                fix: true,</span><br><span class=\"line\">                <span class=\"regexp\">//</span> 有语法错误编译照样通过</span><br><span class=\"line\">                emitWarning: true</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525174897&amp;di=c0a06449ab438e83c3a8f2a245203535&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>eslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范</p>","more":"<p>在webpack搭建的项目中引入eslint语法检测，分以下两步  </p>\n<p><strong>首先node_modules下有以下包</strong><br>eslint<br>eslint-friendly-formatter : 格式化检测输出内容<br>eslint-loader : webpack的支持eslint检测的加载器<br>eslint-config-standard ：标准语法规则<br>// 以下都是为eslint提供环境或者语法支持的包<br>eslint-plugin-html<br>eslint-plugin-import<br>eslint-plugin-node<br>eslint-plugin-promise<br>eslint-plugin-standard</p>\n<ol>\n<li>根目录下新建.eslintrc.js</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> -g eslint</span><br><span class=\"line\">eslint <span class=\"attr\">--init</span></span><br><span class=\"line\">选择standard标准</span><br></pre></td></tr></table></figure>\n<p>.eslintrc.js配置<br><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置为true，eslint就不会再往父级目录找配置文件了</span></span><br><span class=\"line\">root: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点</span></span><br><span class=\"line\">parser: <span class=\"string\">&#x27;babel-eslint&#x27;</span>,</span><br><span class=\"line\"><span class=\"comment\">// 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过</span></span><br><span class=\"line\">env: &#123;</span><br><span class=\"line\">    browser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    node: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    es6: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 标准规则模式</span></span><br><span class=\"line\"><span class=\"keyword\">extends</span>: <span class=\"string\">&quot;standard&quot;</span>,</span><br><span class=\"line\"><span class=\"comment\">// eslint-plugin-html插件，在.html和.vue下提供eslint检测</span></span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;html&#x27;</span></span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    &#x27;off&#x27;/0 关闭</span></span><br><span class=\"line\"><span class=\"comment\">    &#x27;warn&#x27;/1 警告级别</span></span><br><span class=\"line\"><span class=\"comment\">    &#x27;error&#x27;/2 错误级别</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;indent&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"number\">4</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;SwitchCase&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;VariableDeclarator&#x27;</span>: &#123; <span class=\"string\">&#x27;var&#x27;</span>: <span class=\"number\">1</span>, <span class=\"string\">&#x27;let&#x27;</span>: <span class=\"number\">1</span>, <span class=\"string\">&#x27;const&#x27;</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-trailing-spaces&#x27;</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;space-before-function-paren&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;never&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;key-spacing&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">&#x27;beforeColon&#x27;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;afterColon&#x27;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;object-curly-newline&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">&#x27;ObjectExpression&#x27;</span>: <span class=\"string\">&#x27;always&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;ObjectPattern&#x27;</span>: <span class=\"string\">&#x27;never&#x27;</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;quotes&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;single&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;curly&#x27;</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;object-property-newline&#x27;</span>: <span class=\"string\">&#x27;error&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-console&#x27;</span>: process.env.NODE_ENV === <span class=\"string\">&#x27;production&#x27;</span> ? <span class=\"string\">&#x27;error&#x27;</span> : <span class=\"string\">&#x27;off&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-cond-assign&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, <span class=\"string\">&#x27;always&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-constant-condition&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"string\">&#x27;checkLoops&#x27;</span>: <span class=\"literal\">false</span> &#125;],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-empty&#x27;</span>:[<span class=\"string\">&#x27;error&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;no-var&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;line-comment-position&#x27;</span>: [<span class=\"string\">&#x27;error&#x27;</span>, &#123; <span class=\"string\">&#x27;position&#x27;</span>: <span class=\"string\">&#x27;above&#x27;</span> &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>可以查看一些常用的配置：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/a4966ddf9b0c\">https://www.jianshu.com/p/a4966ddf9b0c</a></p>\n<ol start=\"2\">\n<li>在webpack中配置<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: <span class=\"regexp\">/\\.(js|vue)$/</span>,</span><br><span class=\"line\">            loader: <span class=\"string\">&#x27;eslint-loader&#x27;</span>,</span><br><span class=\"line\">            <span class=\"regexp\">//</span> 强制在编译前检测</span><br><span class=\"line\">            enforce: <span class=\"string\">&#x27;pre&#x27;</span>,</span><br><span class=\"line\">            <span class=\"regexp\">//</span> 不包括的文件，所以可以不用.eslintignore文件</span><br><span class=\"line\">            exclude: [path.resolve(__dirname, <span class=\"string\">&#x27;../node_modules&#x27;</span>)],</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                formatter: require(<span class=\"string\">&#x27;eslint-friendly-formatter&#x27;</span>),</span><br><span class=\"line\">                <span class=\"regexp\">//</span> 有错自动修复，注意webpack解决不了会陷入死循环</span><br><span class=\"line\">                fix: true,</span><br><span class=\"line\">                <span class=\"regexp\">//</span> 有语法错误编译照样通过</span><br><span class=\"line\">                emitWarning: true</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"Web离线应用","date":"2017-06-12T16:00:00.000Z","_content":"\n## 前言\n\n编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。\n\n## Application cache\n\n如果要启用应用缓存，就需要在html标签加manifest属性\n```html\n<!DOCTPYE HTML>\n<html manifest=\"demo.appcache\">\n...\n</html>\n```\ndemo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  \n### manifest文件\n告知浏览器需要（或不需要）缓存的文件，包括三部分：  \n* **CACHE MANIFEST** 此标题下出现的文件将在首次下载后进行缓存\n* **NETWORK** 此标题下列出的文件需要在访问服务器，且不被缓存\n* **FALLBACK** 此标题下列出的文件是页面无法被访问时退回的页面\n\n第一行写CACHE MANIFEST是必须的，写法为\n```\nCACHE MANIFEST\n# 2017-06-10 v1.0.0\nindex.html \njqury.min.js\n```\n#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。**一般写修改不频繁的文件**\n\n```\nNETWORK:\n*\n```\n一般写星号，也就是其他的页面都要通过访问服务器\n\n```\nFALLBACK:\n/html/ /offline.html\n```\n如果无法建立因特网连接，则用 \"offline.html\" 替代 /html5/ 目录中的所有文件。\n\n### 更新缓存的情况\n* 用户清空浏览器缓存\n* manifest文件被修改\n* 由程序文件来更新应用缓存\n\n### 设置MIME-type\n需要给manifest文件设置MIME-type为text/cache-manifest\n* 在Apache服务器\n可以在根目录下添加.htaccess文件\n```\nAddType text/cache-manifest manifest\n```\n或者在manifest文件开头添加（前提是文件是php后缀名）\n```\n<?php\nheader(\"Content-Type: text/cache-manifest\");\n?>\n```\n==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==\n\n## localStorage/sessionStorage\n在浏览器上（本地）储存用户的浏览数据\n两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。\n\n两者的API都是相同的，主要有一下：\n* 保存数据：localStorage.setItem(key,value);\n* 读取数据：localStorage.getItem(key);\n* 删除单个数据：localStorage.removeItem(key);\n* 删除所有数据：localStorage.clear();\n* 得到某个索引的key：localStorage.key(index);\n保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value  \n**一般储存变更频繁的文件**\n\n\n## web SQL\n位于浏览器中的关系型数据库\n核心的方法就三个：\n* openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。\n\n* transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。\n\n* executeSql：这个方法用于执行真实的SQL查询。\n\n### 打开数据库\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n```\nopenDatebase方法接受五个参数，分别是：\n* 数据名称\n* 数据库版本（写死就行）\n* 数据库描述\n* 大小\n* 回调（可选）\n\n### 插入和读取数据\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n \ndb.transaction(function (tx) {\n   tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, \"菜鸟教程\")');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, \"www.runoob.com\")');\n});\n \ndb.transaction(function (tx) {\n   tx.executeSql('SELECT * FROM LOGS', [], function (tx, results) {\n      var len = results.rows.length, i;\n      msg = \"<p>查询记录条数: \" + len + \"</p>\";\n      document.querySelector('#status').innerHTML +=  msg;\n    \n      for (i = 0; i < len; i++){\n         alert(results.rows.item(i).log );\n      }\n    \n   }, null);\n});\n```\n\n## 采用MVC思想写js代码\n* applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用\n\n* articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面\n\n* article.js //article模型，调用更底层的database对象（对数据库操作的封装）\n\n* database.js //更底层的M层，封装对数据库的操作\n\n* templates.js //V层，插入html节点\n\n程序的入口就只有一个\n```\n//applicationController.js\n//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready\n    function start(resources, storeResources) {\n        APP.database.open(function() {\n            //监听hash的变化\n            $(window).bind(\"hashchange\", route);\n\n            //往DOM里添加CSS\n            $(\"head\").append('<style>' +　resources.css + '</style>');\n\n            //创造app应用名称节点\n            $('body').html(APP.templates.application());\n\n            //移除下载提示\n            $('#loading').remove();\n\n            route();\n        });\n\n        if(storeResources) {\n            localStorage.resources = JSON.stringify(resources);\n        }\n    }\n```\n在index.html调用\n```JavaScript\n$(document).ready(function() {\n            console.log('ready %o', new Date()); //%o代替javascript对象\n\n            var APP_START_FAILED = \"I'm sorry, the app can't start right now.\"\n\n            function startWithResources(resources, storeResources) {\n                //执行加载的js函数\n                try {\n                    //eval(resources.js)\n                    insertScript(resources.js);\n                    setTimeout(function() {\n                        APP.applicationController.start(resources, storeResources);  //程序入口\n                    }, 500); \n\n                } catch(e) {\n                    alert(APP_START_FAILED);\n                    console.log('%o', e);\n                } \n            }\n\n            function startWithOnlineResources(resources) {\n                startWithResources(resources, true);\n            }\n\n            function startWithOfflineResources() {\n                var resources;\n\n                //假如之前已经访问了并且js文件已经缓存进localStorage，执行以下\n                if(localStorage && localStorage.resources) {\n                    resources = JSON.parse(localStorage.resources);\n                    startWithResources(resources, false);\n\n                    //否则输出提醒信息\n                }else {\n                    alert(APP_START_FAILED);\n                }\n            }\n            \n            function insertScript(script) {\n                var node = document.createElement('script');\n                node.innerHTML = script;\n                document.head.appendChild(node);\n            }\n\n            //假如设备离线，则执行离线操作\n            if(navigator && navigator.onLine === false) {\n                startWithOfflineResources();\n\n                //否则，下载资源并执行，假如成功就把资源添加进local storage。\n            }else {\n                $.ajax({\n                    url: 'api/resources',\n                    success: startWithOnlineResources,\n                    error: startWithOfflineResources,\n                    dataType: 'json'\n                });\n            }\n\n            \n        })\n```\n程序的设计就类似于树形的结构：\n\n```\ngraph TD\n    A[程序入口]-->B[主控制器]\n    B-->C[各种次控制器]\n    C-->D[模型]\n    C-->E[视图]\n    B-->E\n```\n主控制器的第一步工作是打开数据库\n\n### 对象的封装\n全局就一个APP对象，为window的全局变量\n```\nwindow.APP = {};\n(function(APP){\n    APP.applicationController = (function(){\n        ...\n        \n        return {\n            start: start\n        }\n    }());\n    \n    APP.articleController = (funcion(){\n       ...\n       \n       return {\n            synchronizeWithServer:　synchronizeWithServer,\n            showArticle: showArticle,\n            showArticleList: showArticleList\n        }\n    }());\n    \n    \n    \n    APP.templates = (function(){}(\n        ...\n        \n        return {\n            application: application,\n            home: home,\n            articleList: articleList,\n            article: article,\n            articleLoading:　articleLoading\n        }\n        \n    )()};\n    \n    APP.database = (function(){}(\n        ...\n        \n        return {\n            open: open,\n            runQuery: runQuery\n        }\n    )()};\n    \n    APP.article = (function(){}(\n        ...\n        \n        return {\n            deleteArticles: deleteArticles,\n            insertArticles: insertArticles,\n            selectBasicArticles: selectBasicArticles,\n            selectFullArticle: selectFullArticle\n        }\n    )()};\n}(APP))\n```\n这里运用的JS的闭包思想，每一个(function(){...}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.\n \n\n\n\n\n\n","source":"_posts/web离线应用.md","raw":"---\ntitle: Web离线应用\ndate: 2017-06-13\ntags: [ApplicationCache,localStorage,webSQL,闭包]\n---\n\n## 前言\n\n编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。\n\n## Application cache\n\n如果要启用应用缓存，就需要在html标签加manifest属性\n```html\n<!DOCTPYE HTML>\n<html manifest=\"demo.appcache\">\n...\n</html>\n```\ndemo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  \n### manifest文件\n告知浏览器需要（或不需要）缓存的文件，包括三部分：  \n* **CACHE MANIFEST** 此标题下出现的文件将在首次下载后进行缓存\n* **NETWORK** 此标题下列出的文件需要在访问服务器，且不被缓存\n* **FALLBACK** 此标题下列出的文件是页面无法被访问时退回的页面\n\n第一行写CACHE MANIFEST是必须的，写法为\n```\nCACHE MANIFEST\n# 2017-06-10 v1.0.0\nindex.html \njqury.min.js\n```\n#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。**一般写修改不频繁的文件**\n\n```\nNETWORK:\n*\n```\n一般写星号，也就是其他的页面都要通过访问服务器\n\n```\nFALLBACK:\n/html/ /offline.html\n```\n如果无法建立因特网连接，则用 \"offline.html\" 替代 /html5/ 目录中的所有文件。\n\n### 更新缓存的情况\n* 用户清空浏览器缓存\n* manifest文件被修改\n* 由程序文件来更新应用缓存\n\n### 设置MIME-type\n需要给manifest文件设置MIME-type为text/cache-manifest\n* 在Apache服务器\n可以在根目录下添加.htaccess文件\n```\nAddType text/cache-manifest manifest\n```\n或者在manifest文件开头添加（前提是文件是php后缀名）\n```\n<?php\nheader(\"Content-Type: text/cache-manifest\");\n?>\n```\n==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==\n\n## localStorage/sessionStorage\n在浏览器上（本地）储存用户的浏览数据\n两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。\n\n两者的API都是相同的，主要有一下：\n* 保存数据：localStorage.setItem(key,value);\n* 读取数据：localStorage.getItem(key);\n* 删除单个数据：localStorage.removeItem(key);\n* 删除所有数据：localStorage.clear();\n* 得到某个索引的key：localStorage.key(index);\n保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value  \n**一般储存变更频繁的文件**\n\n\n## web SQL\n位于浏览器中的关系型数据库\n核心的方法就三个：\n* openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。\n\n* transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。\n\n* executeSql：这个方法用于执行真实的SQL查询。\n\n### 打开数据库\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n```\nopenDatebase方法接受五个参数，分别是：\n* 数据名称\n* 数据库版本（写死就行）\n* 数据库描述\n* 大小\n* 回调（可选）\n\n### 插入和读取数据\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n \ndb.transaction(function (tx) {\n   tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, \"菜鸟教程\")');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, \"www.runoob.com\")');\n});\n \ndb.transaction(function (tx) {\n   tx.executeSql('SELECT * FROM LOGS', [], function (tx, results) {\n      var len = results.rows.length, i;\n      msg = \"<p>查询记录条数: \" + len + \"</p>\";\n      document.querySelector('#status').innerHTML +=  msg;\n    \n      for (i = 0; i < len; i++){\n         alert(results.rows.item(i).log );\n      }\n    \n   }, null);\n});\n```\n\n## 采用MVC思想写js代码\n* applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用\n\n* articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面\n\n* article.js //article模型，调用更底层的database对象（对数据库操作的封装）\n\n* database.js //更底层的M层，封装对数据库的操作\n\n* templates.js //V层，插入html节点\n\n程序的入口就只有一个\n```\n//applicationController.js\n//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready\n    function start(resources, storeResources) {\n        APP.database.open(function() {\n            //监听hash的变化\n            $(window).bind(\"hashchange\", route);\n\n            //往DOM里添加CSS\n            $(\"head\").append('<style>' +　resources.css + '</style>');\n\n            //创造app应用名称节点\n            $('body').html(APP.templates.application());\n\n            //移除下载提示\n            $('#loading').remove();\n\n            route();\n        });\n\n        if(storeResources) {\n            localStorage.resources = JSON.stringify(resources);\n        }\n    }\n```\n在index.html调用\n```JavaScript\n$(document).ready(function() {\n            console.log('ready %o', new Date()); //%o代替javascript对象\n\n            var APP_START_FAILED = \"I'm sorry, the app can't start right now.\"\n\n            function startWithResources(resources, storeResources) {\n                //执行加载的js函数\n                try {\n                    //eval(resources.js)\n                    insertScript(resources.js);\n                    setTimeout(function() {\n                        APP.applicationController.start(resources, storeResources);  //程序入口\n                    }, 500); \n\n                } catch(e) {\n                    alert(APP_START_FAILED);\n                    console.log('%o', e);\n                } \n            }\n\n            function startWithOnlineResources(resources) {\n                startWithResources(resources, true);\n            }\n\n            function startWithOfflineResources() {\n                var resources;\n\n                //假如之前已经访问了并且js文件已经缓存进localStorage，执行以下\n                if(localStorage && localStorage.resources) {\n                    resources = JSON.parse(localStorage.resources);\n                    startWithResources(resources, false);\n\n                    //否则输出提醒信息\n                }else {\n                    alert(APP_START_FAILED);\n                }\n            }\n            \n            function insertScript(script) {\n                var node = document.createElement('script');\n                node.innerHTML = script;\n                document.head.appendChild(node);\n            }\n\n            //假如设备离线，则执行离线操作\n            if(navigator && navigator.onLine === false) {\n                startWithOfflineResources();\n\n                //否则，下载资源并执行，假如成功就把资源添加进local storage。\n            }else {\n                $.ajax({\n                    url: 'api/resources',\n                    success: startWithOnlineResources,\n                    error: startWithOfflineResources,\n                    dataType: 'json'\n                });\n            }\n\n            \n        })\n```\n程序的设计就类似于树形的结构：\n\n```\ngraph TD\n    A[程序入口]-->B[主控制器]\n    B-->C[各种次控制器]\n    C-->D[模型]\n    C-->E[视图]\n    B-->E\n```\n主控制器的第一步工作是打开数据库\n\n### 对象的封装\n全局就一个APP对象，为window的全局变量\n```\nwindow.APP = {};\n(function(APP){\n    APP.applicationController = (function(){\n        ...\n        \n        return {\n            start: start\n        }\n    }());\n    \n    APP.articleController = (funcion(){\n       ...\n       \n       return {\n            synchronizeWithServer:　synchronizeWithServer,\n            showArticle: showArticle,\n            showArticleList: showArticleList\n        }\n    }());\n    \n    \n    \n    APP.templates = (function(){}(\n        ...\n        \n        return {\n            application: application,\n            home: home,\n            articleList: articleList,\n            article: article,\n            articleLoading:　articleLoading\n        }\n        \n    )()};\n    \n    APP.database = (function(){}(\n        ...\n        \n        return {\n            open: open,\n            runQuery: runQuery\n        }\n    )()};\n    \n    APP.article = (function(){}(\n        ...\n        \n        return {\n            deleteArticles: deleteArticles,\n            insertArticles: insertArticles,\n            selectBasicArticles: selectBasicArticles,\n            selectFullArticle: selectFullArticle\n        }\n    )()};\n}(APP))\n```\n这里运用的JS的闭包思想，每一个(function(){...}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.\n \n\n\n\n\n\n","slug":"web离线应用","published":1,"updated":"2022-12-06T15:30:38.489Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4d0023mcq0cxezfjgg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。</p>\n<h2 id=\"Application-cache\"><a href=\"#Application-cache\" class=\"headerlink\" title=\"Application cache\"></a>Application cache</h2><p>如果要启用应用缓存，就需要在html标签加manifest属性<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTPYE <span class=\"keyword\">HTML</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">manifest</span>=<span class=\"string\">&quot;demo.appcache&quot;</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>demo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  </p>\n<h3 id=\"manifest文件\"><a href=\"#manifest文件\" class=\"headerlink\" title=\"manifest文件\"></a>manifest文件</h3><p>告知浏览器需要（或不需要）缓存的文件，包括三部分：  </p>\n<ul>\n<li><strong>CACHE MANIFEST</strong> 此标题下出现的文件将在首次下载后进行缓存</li>\n<li><strong>NETWORK</strong> 此标题下列出的文件需要在访问服务器，且不被缓存</li>\n<li><strong>FALLBACK</strong> 此标题下列出的文件是页面无法被访问时退回的页面</li>\n</ul>\n<p>第一行写CACHE MANIFEST是必须的，写法为<br><figure class=\"highlight glsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CACHE MANIFEST</span><br><span class=\"line\"><span class=\"meta\"># 2017-06-10 v1.0.0</span></span><br><span class=\"line\"><span class=\"keyword\">index</span>.html </span><br><span class=\"line\">jqury.<span class=\"built_in\">min</span>.js</span><br></pre></td></tr></table></figure></p>\n<p>#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。<strong>一般写修改不频繁的文件</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">NETWORK:</span></span><br><span class=\"line\">*</span><br></pre></td></tr></table></figure>\n<p>一般写星号，也就是其他的页面都要通过访问服务器</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FALLBACK:</span><br><span class=\"line\"><span class=\"regexp\">/html/</span> /offline.html</span><br></pre></td></tr></table></figure>\n<p>如果无法建立因特网连接，则用 “offline.html” 替代 /html5/ 目录中的所有文件。</p>\n<h3 id=\"更新缓存的情况\"><a href=\"#更新缓存的情况\" class=\"headerlink\" title=\"更新缓存的情况\"></a>更新缓存的情况</h3><ul>\n<li>用户清空浏览器缓存</li>\n<li>manifest文件被修改</li>\n<li>由程序文件来更新应用缓存</li>\n</ul>\n<h3 id=\"设置MIME-type\"><a href=\"#设置MIME-type\" class=\"headerlink\" title=\"设置MIME-type\"></a>设置MIME-type</h3><p>需要给manifest文件设置MIME-type为text/cache-manifest</p>\n<ul>\n<li>在Apache服务器<br>可以在根目录下添加.htaccess文件<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddType <span class=\"type\">text</span>/<span class=\"keyword\">cache</span>-manifest manifest</span><br></pre></td></tr></table></figure>\n或者在manifest文件开头添加（前提是文件是php后缀名）<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Content-Type: text/cache-manifest&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==</li>\n</ul>\n<h2 id=\"localStorage-sessionStorage\"><a href=\"#localStorage-sessionStorage\" class=\"headerlink\" title=\"localStorage/sessionStorage\"></a>localStorage/sessionStorage</h2><p>在浏览器上（本地）储存用户的浏览数据<br>两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。</p>\n<p>两者的API都是相同的，主要有一下：</p>\n<ul>\n<li>保存数据：localStorage.setItem(key,value);</li>\n<li>读取数据：localStorage.getItem(key);</li>\n<li>删除单个数据：localStorage.removeItem(key);</li>\n<li>删除所有数据：localStorage.clear();</li>\n<li>得到某个索引的key：localStorage.key(index);<br>保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value<br><strong>一般储存变更频繁的文件</strong></li>\n</ul>\n<h2 id=\"web-SQL\"><a href=\"#web-SQL\" class=\"headerlink\" title=\"web SQL\"></a>web SQL</h2><p>位于浏览器中的关系型数据库<br>核心的方法就三个：</p>\n<ul>\n<li><p>openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。</p>\n</li>\n<li><p>transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。</p>\n</li>\n<li><p>executeSql：这个方法用于执行真实的SQL查询。</p>\n</li>\n</ul>\n<h3 id=\"打开数据库\"><a href=\"#打开数据库\" class=\"headerlink\" title=\"打开数据库\"></a>打开数据库</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var</span> db = openDatabase(&#x27;mydb&#x27;, &#x27;<span class=\"number\">1</span>.<span class=\"number\">0</span>&#x27;, &#x27;Test DB&#x27;, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br></pre></td></tr></table></figure>\n<p>openDatebase方法接受五个参数，分别是：</p>\n<ul>\n<li>数据名称</li>\n<li>数据库版本（写死就行）</li>\n<li>数据库描述</li>\n<li>大小</li>\n<li>回调（可选）</li>\n</ul>\n<h3 id=\"插入和读取数据\"><a href=\"#插入和读取数据\" class=\"headerlink\" title=\"插入和读取数据\"></a>插入和读取数据</h3><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = openDatabase(<span class=\"string\">&#x27;mydb&#x27;</span>, <span class=\"string\">&#x27;1.0&#x27;</span>, <span class=\"string\">&#x27;Test DB&#x27;</span>, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) &#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;CREATE TABLE IF NOT EXISTS LOGS (id unique, log)&#x27;</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;INSERT INTO LOGS (id, log) VALUES (1, &quot;菜鸟教程&quot;)&#x27;</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;INSERT INTO LOGS (id, log) VALUES (2, &quot;www.runoob.com&quot;)&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) &#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;SELECT * FROM LOGS&#x27;</span>, [], <span class=\"keyword\">function</span> (<span class=\"params\">tx, results</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> len = results.rows.<span class=\"built_in\">length</span>, i;</span><br><span class=\"line\">      msg = <span class=\"string\">&quot;&lt;p&gt;查询记录条数: &quot;</span> + len + <span class=\"string\">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class=\"line\">      document.querySelector(<span class=\"string\">&#x27;#status&#x27;</span>).innerHTML +=  msg;</span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">         alert(results.rows.item(i).<span class=\"built_in\">log</span> );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   &#125;, <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"采用MVC思想写js代码\"><a href=\"#采用MVC思想写js代码\" class=\"headerlink\" title=\"采用MVC思想写js代码\"></a>采用MVC思想写js代码</h2><ul>\n<li><p>applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用</p>\n</li>\n<li><p>articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面</p>\n</li>\n<li><p>article.js //article模型，调用更底层的database对象（对数据库操作的封装）</p>\n</li>\n<li><p>database.js //更底层的M层，封装对数据库的操作</p>\n</li>\n<li><p>templates.js //V层，插入html节点</p>\n</li>\n</ul>\n<p>程序的入口就只有一个<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//applicationController.js</span></span><br><span class=\"line\"><span class=\"comment\">//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">start</span>(<span class=\"params\">resources, storeResources</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">APP</span>.<span class=\"property\">database</span>.<span class=\"title function_\">open</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//监听hash的变化</span></span><br><span class=\"line\">            $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">bind</span>(<span class=\"string\">&quot;hashchange&quot;</span>, route);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//往DOM里添加CSS</span></span><br><span class=\"line\">            $(<span class=\"string\">&quot;head&quot;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;style&gt;&#x27;</span> +　resources.<span class=\"property\">css</span> + <span class=\"string\">&#x27;&lt;/style&gt;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//创造app应用名称节点</span></span><br><span class=\"line\">            $(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">html</span>(<span class=\"variable constant_\">APP</span>.<span class=\"property\">templates</span>.<span class=\"title function_\">application</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//移除下载提示</span></span><br><span class=\"line\">            $(<span class=\"string\">&#x27;#loading&#x27;</span>).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title function_\">route</span>();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(storeResources) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">localStorage</span>.<span class=\"property\">resources</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(resources);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure><br>在index.html调用<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ready %o&#x27;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()); <span class=\"comment\">//%o代替javascript对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> <span class=\"variable constant_\">APP_START_FAILED</span> = <span class=\"string\">&quot;I&#x27;m sorry, the app can&#x27;t start right now.&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">startWithResources</span>(<span class=\"params\">resources, storeResources</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//执行加载的js函数</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//eval(resources.js)</span></span><br><span class=\"line\">                    <span class=\"title function_\">insertScript</span>(resources.<span class=\"property\">js</span>);</span><br><span class=\"line\">                    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">                        <span class=\"variable constant_\">APP</span>.<span class=\"property\">applicationController</span>.<span class=\"title function_\">start</span>(resources, storeResources);  <span class=\"comment\">//程序入口</span></span><br><span class=\"line\">                    &#125;, <span class=\"number\">500</span>); </span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">                    <span class=\"title function_\">alert</span>(<span class=\"variable constant_\">APP_START_FAILED</span>);</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;%o&#x27;</span>, e);</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">startWithOnlineResources</span>(<span class=\"params\">resources</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">startWithResources</span>(resources, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">startWithOfflineResources</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> resources;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//假如之前已经访问了并且js文件已经缓存进localStorage，执行以下</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"variable language_\">localStorage</span> &amp;&amp; <span class=\"variable language_\">localStorage</span>.<span class=\"property\">resources</span>) &#123;</span><br><span class=\"line\">                    resources = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"property\">resources</span>);</span><br><span class=\"line\">                    <span class=\"title function_\">startWithResources</span>(resources, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//否则输出提醒信息</span></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"title function_\">alert</span>(<span class=\"variable constant_\">APP_START_FAILED</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">insertScript</span>(<span class=\"params\">script</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> node = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;script&#x27;</span>);</span><br><span class=\"line\">                node.<span class=\"property\">innerHTML</span> = script;</span><br><span class=\"line\">                <span class=\"variable language_\">document</span>.<span class=\"property\">head</span>.<span class=\"title function_\">appendChild</span>(node);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//假如设备离线，则执行离线操作</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(navigator &amp;&amp; navigator.<span class=\"property\">onLine</span> === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">startWithOfflineResources</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//否则，下载资源并执行，假如成功就把资源添加进local storage。</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;api/resources&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">success</span>: startWithOnlineResources,</span><br><span class=\"line\">                    <span class=\"attr\">error</span>: startWithOfflineResources,</span><br><span class=\"line\">                    <span class=\"attr\">dataType</span>: <span class=\"string\">&#x27;json&#x27;</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;)</span><br></pre></td></tr></table></figure><br>程序的设计就类似于树形的结构：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph <span class=\"selector-tag\">TD</span></span><br><span class=\"line\">    <span class=\"selector-tag\">A</span><span class=\"selector-attr\">[程序入口]</span>--&gt;<span class=\"selector-tag\">B</span><span class=\"selector-attr\">[主控制器]</span></span><br><span class=\"line\">    <span class=\"selector-tag\">B</span>--&gt;C<span class=\"selector-attr\">[各种次控制器]</span></span><br><span class=\"line\">    C--&gt;D<span class=\"selector-attr\">[模型]</span></span><br><span class=\"line\">    C--&gt;E<span class=\"selector-attr\">[视图]</span></span><br><span class=\"line\">    <span class=\"selector-tag\">B</span>--&gt;E</span><br></pre></td></tr></table></figure>\n<p>主控制器的第一步工作是打开数据库</p>\n<h3 id=\"对象的封装\"><a href=\"#对象的封装\" class=\"headerlink\" title=\"对象的封装\"></a>对象的封装</h3><p>全局就一个APP对象，为window的全局变量<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">APP</span> = &#123;&#125;;</span><br><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">APP</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">applicationController</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">start</span>: start</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">articleController</span> = (<span class=\"title function_\">funcion</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">synchronizeWithServer</span>:　synchronizeWithServer,</span><br><span class=\"line\">            <span class=\"attr\">showArticle</span>: showArticle,</span><br><span class=\"line\">            <span class=\"attr\">showArticleList</span>: showArticleList</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">templates</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">application</span>: application,</span><br><span class=\"line\">            <span class=\"attr\">home</span>: home,</span><br><span class=\"line\">            <span class=\"attr\">articleList</span>: articleList,</span><br><span class=\"line\">            <span class=\"attr\">article</span>: article,</span><br><span class=\"line\">            <span class=\"attr\">articleLoading</span>:　articleLoading</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    )()&#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">database</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">open</span>: open,</span><br><span class=\"line\">            <span class=\"attr\">runQuery</span>: runQuery</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )()&#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">article</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">deleteArticles</span>: deleteArticles,</span><br><span class=\"line\">            <span class=\"attr\">insertArticles</span>: insertArticles,</span><br><span class=\"line\">            <span class=\"attr\">selectBasicArticles</span>: selectBasicArticles,</span><br><span class=\"line\">            <span class=\"attr\">selectFullArticle</span>: selectFullArticle</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )()&#125;;</span><br><span class=\"line\">&#125;(<span class=\"variable constant_\">APP</span>))</span><br></pre></td></tr></table></figure><br>这里运用的JS的闭包思想，每一个(function(){…}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。</p>\n<h2 id=\"Application-cache\"><a href=\"#Application-cache\" class=\"headerlink\" title=\"Application cache\"></a>Application cache</h2><p>如果要启用应用缓存，就需要在html标签加manifest属性<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTPYE <span class=\"keyword\">HTML</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">manifest</span>=<span class=\"string\">&quot;demo.appcache&quot;</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>demo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  </p>\n<h3 id=\"manifest文件\"><a href=\"#manifest文件\" class=\"headerlink\" title=\"manifest文件\"></a>manifest文件</h3><p>告知浏览器需要（或不需要）缓存的文件，包括三部分：  </p>\n<ul>\n<li><strong>CACHE MANIFEST</strong> 此标题下出现的文件将在首次下载后进行缓存</li>\n<li><strong>NETWORK</strong> 此标题下列出的文件需要在访问服务器，且不被缓存</li>\n<li><strong>FALLBACK</strong> 此标题下列出的文件是页面无法被访问时退回的页面</li>\n</ul>\n<p>第一行写CACHE MANIFEST是必须的，写法为<br><figure class=\"highlight glsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CACHE MANIFEST</span><br><span class=\"line\"><span class=\"meta\"># 2017-06-10 v1.0.0</span></span><br><span class=\"line\"><span class=\"keyword\">index</span>.html </span><br><span class=\"line\">jqury.<span class=\"built_in\">min</span>.js</span><br></pre></td></tr></table></figure></p>\n<p>#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。<strong>一般写修改不频繁的文件</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">NETWORK:</span></span><br><span class=\"line\">*</span><br></pre></td></tr></table></figure>\n<p>一般写星号，也就是其他的页面都要通过访问服务器</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FALLBACK:</span><br><span class=\"line\"><span class=\"regexp\">/html/</span> /offline.html</span><br></pre></td></tr></table></figure>\n<p>如果无法建立因特网连接，则用 “offline.html” 替代 /html5/ 目录中的所有文件。</p>\n<h3 id=\"更新缓存的情况\"><a href=\"#更新缓存的情况\" class=\"headerlink\" title=\"更新缓存的情况\"></a>更新缓存的情况</h3><ul>\n<li>用户清空浏览器缓存</li>\n<li>manifest文件被修改</li>\n<li>由程序文件来更新应用缓存</li>\n</ul>\n<h3 id=\"设置MIME-type\"><a href=\"#设置MIME-type\" class=\"headerlink\" title=\"设置MIME-type\"></a>设置MIME-type</h3><p>需要给manifest文件设置MIME-type为text/cache-manifest</p>\n<ul>\n<li>在Apache服务器<br>可以在根目录下添加.htaccess文件<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddType <span class=\"type\">text</span>/<span class=\"keyword\">cache</span>-manifest manifest</span><br></pre></td></tr></table></figure>\n或者在manifest文件开头添加（前提是文件是php后缀名）<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Content-Type: text/cache-manifest&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==</li>\n</ul>\n<h2 id=\"localStorage-sessionStorage\"><a href=\"#localStorage-sessionStorage\" class=\"headerlink\" title=\"localStorage/sessionStorage\"></a>localStorage/sessionStorage</h2><p>在浏览器上（本地）储存用户的浏览数据<br>两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。</p>\n<p>两者的API都是相同的，主要有一下：</p>\n<ul>\n<li>保存数据：localStorage.setItem(key,value);</li>\n<li>读取数据：localStorage.getItem(key);</li>\n<li>删除单个数据：localStorage.removeItem(key);</li>\n<li>删除所有数据：localStorage.clear();</li>\n<li>得到某个索引的key：localStorage.key(index);<br>保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value<br><strong>一般储存变更频繁的文件</strong></li>\n</ul>\n<h2 id=\"web-SQL\"><a href=\"#web-SQL\" class=\"headerlink\" title=\"web SQL\"></a>web SQL</h2><p>位于浏览器中的关系型数据库<br>核心的方法就三个：</p>\n<ul>\n<li><p>openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。</p>\n</li>\n<li><p>transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。</p>\n</li>\n<li><p>executeSql：这个方法用于执行真实的SQL查询。</p>\n</li>\n</ul>\n<h3 id=\"打开数据库\"><a href=\"#打开数据库\" class=\"headerlink\" title=\"打开数据库\"></a>打开数据库</h3><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">var</span> db = openDatabase(&#x27;mydb&#x27;, &#x27;<span class=\"number\">1</span>.<span class=\"number\">0</span>&#x27;, &#x27;Test DB&#x27;, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br></pre></td></tr></table></figure>\n<p>openDatebase方法接受五个参数，分别是：</p>\n<ul>\n<li>数据名称</li>\n<li>数据库版本（写死就行）</li>\n<li>数据库描述</li>\n<li>大小</li>\n<li>回调（可选）</li>\n</ul>\n<h3 id=\"插入和读取数据\"><a href=\"#插入和读取数据\" class=\"headerlink\" title=\"插入和读取数据\"></a>插入和读取数据</h3><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = openDatabase(<span class=\"string\">&#x27;mydb&#x27;</span>, <span class=\"string\">&#x27;1.0&#x27;</span>, <span class=\"string\">&#x27;Test DB&#x27;</span>, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) &#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;CREATE TABLE IF NOT EXISTS LOGS (id unique, log)&#x27;</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;INSERT INTO LOGS (id, log) VALUES (1, &quot;菜鸟教程&quot;)&#x27;</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;INSERT INTO LOGS (id, log) VALUES (2, &quot;www.runoob.com&quot;)&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) &#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">&#x27;SELECT * FROM LOGS&#x27;</span>, [], <span class=\"keyword\">function</span> (<span class=\"params\">tx, results</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> len = results.rows.<span class=\"built_in\">length</span>, i;</span><br><span class=\"line\">      msg = <span class=\"string\">&quot;&lt;p&gt;查询记录条数: &quot;</span> + len + <span class=\"string\">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class=\"line\">      document.querySelector(<span class=\"string\">&#x27;#status&#x27;</span>).innerHTML +=  msg;</span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">         alert(results.rows.item(i).<span class=\"built_in\">log</span> );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   &#125;, <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"采用MVC思想写js代码\"><a href=\"#采用MVC思想写js代码\" class=\"headerlink\" title=\"采用MVC思想写js代码\"></a>采用MVC思想写js代码</h2><ul>\n<li><p>applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用</p>\n</li>\n<li><p>articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面</p>\n</li>\n<li><p>article.js //article模型，调用更底层的database对象（对数据库操作的封装）</p>\n</li>\n<li><p>database.js //更底层的M层，封装对数据库的操作</p>\n</li>\n<li><p>templates.js //V层，插入html节点</p>\n</li>\n</ul>\n<p>程序的入口就只有一个<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//applicationController.js</span></span><br><span class=\"line\"><span class=\"comment\">//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">start</span>(<span class=\"params\">resources, storeResources</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">APP</span>.<span class=\"property\">database</span>.<span class=\"title function_\">open</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//监听hash的变化</span></span><br><span class=\"line\">            $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">bind</span>(<span class=\"string\">&quot;hashchange&quot;</span>, route);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//往DOM里添加CSS</span></span><br><span class=\"line\">            $(<span class=\"string\">&quot;head&quot;</span>).<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;style&gt;&#x27;</span> +　resources.<span class=\"property\">css</span> + <span class=\"string\">&#x27;&lt;/style&gt;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//创造app应用名称节点</span></span><br><span class=\"line\">            $(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">html</span>(<span class=\"variable constant_\">APP</span>.<span class=\"property\">templates</span>.<span class=\"title function_\">application</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//移除下载提示</span></span><br><span class=\"line\">            $(<span class=\"string\">&#x27;#loading&#x27;</span>).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title function_\">route</span>();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(storeResources) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">localStorage</span>.<span class=\"property\">resources</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(resources);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure><br>在index.html调用<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;ready %o&#x27;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()); <span class=\"comment\">//%o代替javascript对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> <span class=\"variable constant_\">APP_START_FAILED</span> = <span class=\"string\">&quot;I&#x27;m sorry, the app can&#x27;t start right now.&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">startWithResources</span>(<span class=\"params\">resources, storeResources</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//执行加载的js函数</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//eval(resources.js)</span></span><br><span class=\"line\">                    <span class=\"title function_\">insertScript</span>(resources.<span class=\"property\">js</span>);</span><br><span class=\"line\">                    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">                        <span class=\"variable constant_\">APP</span>.<span class=\"property\">applicationController</span>.<span class=\"title function_\">start</span>(resources, storeResources);  <span class=\"comment\">//程序入口</span></span><br><span class=\"line\">                    &#125;, <span class=\"number\">500</span>); </span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">                    <span class=\"title function_\">alert</span>(<span class=\"variable constant_\">APP_START_FAILED</span>);</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;%o&#x27;</span>, e);</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">startWithOnlineResources</span>(<span class=\"params\">resources</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">startWithResources</span>(resources, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">startWithOfflineResources</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> resources;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//假如之前已经访问了并且js文件已经缓存进localStorage，执行以下</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"variable language_\">localStorage</span> &amp;&amp; <span class=\"variable language_\">localStorage</span>.<span class=\"property\">resources</span>) &#123;</span><br><span class=\"line\">                    resources = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"property\">resources</span>);</span><br><span class=\"line\">                    <span class=\"title function_\">startWithResources</span>(resources, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//否则输出提醒信息</span></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"title function_\">alert</span>(<span class=\"variable constant_\">APP_START_FAILED</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">function</span> <span class=\"title function_\">insertScript</span>(<span class=\"params\">script</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> node = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;script&#x27;</span>);</span><br><span class=\"line\">                node.<span class=\"property\">innerHTML</span> = script;</span><br><span class=\"line\">                <span class=\"variable language_\">document</span>.<span class=\"property\">head</span>.<span class=\"title function_\">appendChild</span>(node);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//假如设备离线，则执行离线操作</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(navigator &amp;&amp; navigator.<span class=\"property\">onLine</span> === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">startWithOfflineResources</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//否则，下载资源并执行，假如成功就把资源添加进local storage。</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;api/resources&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">success</span>: startWithOnlineResources,</span><br><span class=\"line\">                    <span class=\"attr\">error</span>: startWithOfflineResources,</span><br><span class=\"line\">                    <span class=\"attr\">dataType</span>: <span class=\"string\">&#x27;json&#x27;</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;)</span><br></pre></td></tr></table></figure><br>程序的设计就类似于树形的结构：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph <span class=\"selector-tag\">TD</span></span><br><span class=\"line\">    <span class=\"selector-tag\">A</span><span class=\"selector-attr\">[程序入口]</span>--&gt;<span class=\"selector-tag\">B</span><span class=\"selector-attr\">[主控制器]</span></span><br><span class=\"line\">    <span class=\"selector-tag\">B</span>--&gt;C<span class=\"selector-attr\">[各种次控制器]</span></span><br><span class=\"line\">    C--&gt;D<span class=\"selector-attr\">[模型]</span></span><br><span class=\"line\">    C--&gt;E<span class=\"selector-attr\">[视图]</span></span><br><span class=\"line\">    <span class=\"selector-tag\">B</span>--&gt;E</span><br></pre></td></tr></table></figure>\n<p>主控制器的第一步工作是打开数据库</p>\n<h3 id=\"对象的封装\"><a href=\"#对象的封装\" class=\"headerlink\" title=\"对象的封装\"></a>对象的封装</h3><p>全局就一个APP对象，为window的全局变量<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">APP</span> = &#123;&#125;;</span><br><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">APP</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">applicationController</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">start</span>: start</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">articleController</span> = (<span class=\"title function_\">funcion</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">synchronizeWithServer</span>:　synchronizeWithServer,</span><br><span class=\"line\">            <span class=\"attr\">showArticle</span>: showArticle,</span><br><span class=\"line\">            <span class=\"attr\">showArticleList</span>: showArticleList</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">templates</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">application</span>: application,</span><br><span class=\"line\">            <span class=\"attr\">home</span>: home,</span><br><span class=\"line\">            <span class=\"attr\">articleList</span>: articleList,</span><br><span class=\"line\">            <span class=\"attr\">article</span>: article,</span><br><span class=\"line\">            <span class=\"attr\">articleLoading</span>:　articleLoading</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    )()&#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">database</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">open</span>: open,</span><br><span class=\"line\">            <span class=\"attr\">runQuery</span>: runQuery</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )()&#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable constant_\">APP</span>.<span class=\"property\">article</span> = (<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;&#125;(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">deleteArticles</span>: deleteArticles,</span><br><span class=\"line\">            <span class=\"attr\">insertArticles</span>: insertArticles,</span><br><span class=\"line\">            <span class=\"attr\">selectBasicArticles</span>: selectBasicArticles,</span><br><span class=\"line\">            <span class=\"attr\">selectFullArticle</span>: selectFullArticle</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )()&#125;;</span><br><span class=\"line\">&#125;(<span class=\"variable constant_\">APP</span>))</span><br></pre></td></tr></table></figure><br>这里运用的JS的闭包思想，每一个(function(){…}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.</p>\n"},{"title":"《代码整洁之道》读书笔记","date":"2018-04-20T12:20:01.000Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&fm=27&gp=0.jpg)\n\n## 前言\n我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论\n\n<!--more-->\n\n## 什么是整洁的代码\n在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。\n\n当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。\n\n那么是什么原因导致写出糟糕的代码呢。总结有一下几点：\n* 技术水平低\n* 项目紧迫时间不足\n* 缺少整洁代码的意识\n* 先上线后优化，但是没有列入工作任务中导致忘掉\n\n纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、\n\n那么整洁的代码给人是什么样的感觉呢？\n\n书中用了一个形容词非常形象的说明了这个问题：愉悦。\n\n书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：\n1. **优雅和高效**  \n\n   代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化\n\n2. **整洁的代码只做好一件事**  \n\n    整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。\n\n3. **整洁的代码简单直接**  \n\n    整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。\n\n## 整洁代码的重要性\n\n了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。\n\n那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。\n\n当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。\n\n有些人认为代码是写给机器执行的，我不那么认为。\n\n代码是写给人看的。\n\n先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。\n\n代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性--所以代码永存。\n\n所以整洁代码是势之所驱。\n\n下面我们就来讨论下写出整洁代码的方法论。\n\n## 写出整洁代码的小技巧\n写出整洁代码的首要原则，我觉得是态度。\n\n只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。\n\n我总结了几点小技巧：\n\n1. 贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事\n2. 提高表达力  \n\n    在必要的一些特殊说明的地方要写TODO注释，提醒下别人\n    \n3. 命名规范\n\n    最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的\n    \n4. 减少重复代码","source":"_posts/《代码整洁之道》读书笔记.md","raw":"---\ntitle: 《代码整洁之道》读书笔记\ndate: 2018-04-20 20:20:01\ntags: []\ncategories: []\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&fm=27&gp=0.jpg)\n\n## 前言\n我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论\n\n<!--more-->\n\n## 什么是整洁的代码\n在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。\n\n当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。\n\n那么是什么原因导致写出糟糕的代码呢。总结有一下几点：\n* 技术水平低\n* 项目紧迫时间不足\n* 缺少整洁代码的意识\n* 先上线后优化，但是没有列入工作任务中导致忘掉\n\n纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、\n\n那么整洁的代码给人是什么样的感觉呢？\n\n书中用了一个形容词非常形象的说明了这个问题：愉悦。\n\n书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：\n1. **优雅和高效**  \n\n   代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化\n\n2. **整洁的代码只做好一件事**  \n\n    整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。\n\n3. **整洁的代码简单直接**  \n\n    整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。\n\n## 整洁代码的重要性\n\n了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。\n\n那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。\n\n当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。\n\n有些人认为代码是写给机器执行的，我不那么认为。\n\n代码是写给人看的。\n\n先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。\n\n代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性--所以代码永存。\n\n所以整洁代码是势之所驱。\n\n下面我们就来讨论下写出整洁代码的方法论。\n\n## 写出整洁代码的小技巧\n写出整洁代码的首要原则，我觉得是态度。\n\n只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。\n\n我总结了几点小技巧：\n\n1. 贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事\n2. 提高表达力  \n\n    在必要的一些特殊说明的地方要写TODO注释，提醒下别人\n    \n3. 命名规范\n\n    最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的\n    \n4. 减少重复代码","slug":"《代码整洁之道》读书笔记","published":1,"updated":"2022-12-06T15:30:38.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4e0025mcq0eyl2bsh4","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论</p>\n<span id=\"more\"></span>\n<h2 id=\"什么是整洁的代码\"><a href=\"#什么是整洁的代码\" class=\"headerlink\" title=\"什么是整洁的代码\"></a>什么是整洁的代码</h2><p>在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。</p>\n<p>当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。</p>\n<p>那么是什么原因导致写出糟糕的代码呢。总结有一下几点：</p>\n<ul>\n<li>技术水平低</li>\n<li>项目紧迫时间不足</li>\n<li>缺少整洁代码的意识</li>\n<li>先上线后优化，但是没有列入工作任务中导致忘掉</li>\n</ul>\n<p>纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、</p>\n<p>那么整洁的代码给人是什么样的感觉呢？</p>\n<p>书中用了一个形容词非常形象的说明了这个问题：愉悦。</p>\n<p>书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：</p>\n<ol>\n<li><p><strong>优雅和高效</strong>  </p>\n<p>代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化</p>\n</li>\n<li><p><strong>整洁的代码只做好一件事</strong>  </p>\n<p> 整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。</p>\n</li>\n<li><p><strong>整洁的代码简单直接</strong>  </p>\n<p> 整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。</p>\n</li>\n</ol>\n<h2 id=\"整洁代码的重要性\"><a href=\"#整洁代码的重要性\" class=\"headerlink\" title=\"整洁代码的重要性\"></a>整洁代码的重要性</h2><p>了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。</p>\n<p>那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。</p>\n<p>当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。</p>\n<p>有些人认为代码是写给机器执行的，我不那么认为。</p>\n<p>代码是写给人看的。</p>\n<p>先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。</p>\n<p>代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性–所以代码永存。</p>\n<p>所以整洁代码是势之所驱。</p>\n<p>下面我们就来讨论下写出整洁代码的方法论。</p>\n<h2 id=\"写出整洁代码的小技巧\"><a href=\"#写出整洁代码的小技巧\" class=\"headerlink\" title=\"写出整洁代码的小技巧\"></a>写出整洁代码的小技巧</h2><p>写出整洁代码的首要原则，我觉得是态度。</p>\n<p>只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。</p>\n<p>我总结了几点小技巧：</p>\n<ol>\n<li>贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事</li>\n<li><p>提高表达力  </p>\n<p> 在必要的一些特殊说明的地方要写TODO注释，提醒下别人</p>\n</li>\n<li><p>命名规范</p>\n<p> 最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的</p>\n</li>\n<li><p>减少重复代码</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论</p>","more":"<h2 id=\"什么是整洁的代码\"><a href=\"#什么是整洁的代码\" class=\"headerlink\" title=\"什么是整洁的代码\"></a>什么是整洁的代码</h2><p>在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。</p>\n<p>当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。</p>\n<p>那么是什么原因导致写出糟糕的代码呢。总结有一下几点：</p>\n<ul>\n<li>技术水平低</li>\n<li>项目紧迫时间不足</li>\n<li>缺少整洁代码的意识</li>\n<li>先上线后优化，但是没有列入工作任务中导致忘掉</li>\n</ul>\n<p>纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、</p>\n<p>那么整洁的代码给人是什么样的感觉呢？</p>\n<p>书中用了一个形容词非常形象的说明了这个问题：愉悦。</p>\n<p>书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：</p>\n<ol>\n<li><p><strong>优雅和高效</strong>  </p>\n<p>代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化</p>\n</li>\n<li><p><strong>整洁的代码只做好一件事</strong>  </p>\n<p> 整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。</p>\n</li>\n<li><p><strong>整洁的代码简单直接</strong>  </p>\n<p> 整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。</p>\n</li>\n</ol>\n<h2 id=\"整洁代码的重要性\"><a href=\"#整洁代码的重要性\" class=\"headerlink\" title=\"整洁代码的重要性\"></a>整洁代码的重要性</h2><p>了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。</p>\n<p>那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。</p>\n<p>当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。</p>\n<p>有些人认为代码是写给机器执行的，我不那么认为。</p>\n<p>代码是写给人看的。</p>\n<p>先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。</p>\n<p>代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性–所以代码永存。</p>\n<p>所以整洁代码是势之所驱。</p>\n<p>下面我们就来讨论下写出整洁代码的方法论。</p>\n<h2 id=\"写出整洁代码的小技巧\"><a href=\"#写出整洁代码的小技巧\" class=\"headerlink\" title=\"写出整洁代码的小技巧\"></a>写出整洁代码的小技巧</h2><p>写出整洁代码的首要原则，我觉得是态度。</p>\n<p>只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。</p>\n<p>我总结了几点小技巧：</p>\n<ol>\n<li>贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事</li>\n<li><p>提高表达力  </p>\n<p> 在必要的一些特殊说明的地方要写TODO注释，提醒下别人</p>\n</li>\n<li><p>命名规范</p>\n<p> 最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的</p>\n</li>\n<li><p>减少重复代码</p>\n</li>\n</ol>"},{"title":"【VueSSR系列一】构建流程源码解读","date":"2019-06-13T13:20:01.000Z","_content":"\n![首图](https://cdn.pixabay.com/photo/2014/05/02/21/49/home-office-336373__340.jpg)\n\n<!-- more -->\n\n# 【VueSSR系列一】构建流程源码解读\n\n最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包`vue-server-renderer@2.6.10`进行讲解，内容包括：\n- VueSSR构建流程\n- VueSSRClientPlugin\n- VueSSRServerPlugin\n<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n\n希望本文对你有帮助。\n\n## VueSSR构建流程\n`vue-server-renderer`是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。\n\n简单用图表述了VueSSR的构建流程，如下图展示：\n\n![VueSSR构建流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&bo=jgTAAY4EwAEDByI!&rf=viewer_4)\n\n如图构建过程中有两个入口文件，通过`vue-server-renderer`提供的webpack插件`VueSSRClientPlugin`和`VueSSRServerPlugin`，分别构建打包出供客户端和服务端使用的json文件。\n\n## VueSSRClientPlugin\n`vue-ssr-client-manifest.json`就是通过`VueSSRClientPlugin`生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：\n```json\n{\n    \"publicPath\": \"/dist/\",\n    \"all\": [\"static/img/d_icon.522f4d11.png\"...],\n    \"initial\": [\"manifest.0338f6f2cf8625ed7117.js\"...],\n    \"async\": [\"0.51ec59b64fde13191f79.js\"...],\n    \"modules\": {...}\n}\n```\n它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n\n深入它的源码，我们看看这个插件是怎样生成这些数据的。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar VueSSRClientPlugin = function VueSSRClientPlugin (options) {\n  if ( options === void 0 ) options = {};\n\n  this.options = Object.assign({\n    filename: 'vue-ssr-client-manifest.json' // 默认文件名\n  }, options);\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    ...\n};\n\nmodule.exports = VueSSRClientPlugin;\n```\n从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar onEmit = function (compiler, name, hook) {\n  if (compiler.hooks) {\n    // Webpack >= 4.0.0\n    compiler.hooks.emit.tapAsync(name, hook);\n  } else {\n    // Webpack < 4.0.0\n    compiler.plugin('emit', hook);\n  }\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    var this$1 = this;\n\n    onEmit(compiler, 'vue-client-plugin', function (compilation, cb) {\n      ...\n    })\n};\n```\n在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：\n\n![clientManifest处理流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&bo=PgT2Az4E9gMRBzA!&rf=viewer_4)\n\n简单解析下上面的流程：\n1. 获取编译对象中的包含编译信息的stats对象\n2. 从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）\n3. 从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles\n4. allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles\n5. 分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。\n6. 最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。\n\n## VueSSRServerPlugin\nvue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：\n```javascript\nvar bundle = {\n  entry: entry,\n  files: {},\n  maps: {}\n};\n\nstats.assets.forEach(function (asset) {\n  if (isJS(asset.name)) {\n    bundle.files[asset.name] = compilation.assets[asset.name].source();\n  } else if (asset.name.match(/\\.js\\.map$/)) {\n    bundle.maps[asset.name.replace(/\\.map$/, '')] = JSON.parse(compilation.assets[asset.name].source());\n  }\n  // do not emit anything else for server\n  // 删除编译信息中的源代码的文件信息\n  // 保证只输出一个文件vue-ssr-server-bundle.json\n  delete compilation.assets[asset.name];\n});\n```\n从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。\n\n在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除`compilation.assets`上所有的文件信息。保证最后只输出一个json文件。\n\n\n值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。\n```javascript\nif (entryAssets.length > 1) {\n  throw new Error(\n    \"Server-side bundle should have one single entry file. \" +\n    \"Avoid using CommonsChunkPlugin in the server config.\"\n  )\n}\n```\n\n## 总结\n构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。\n\n他们的作用分别是：\n- clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n- bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。\n\n> 高手都是从表面看到本质的人\n\n这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击[这里](https://webpack.docschina.org/api/compilation/)拓展下知识面。\n\n另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！","source":"_posts/【VueSSR系列一】构建流程源码解读.md","raw":"---\ntitle: 【VueSSR系列一】构建流程源码解读\ndate: 2019-06-13 21:20:01\ntags: [vue]\ncategories: [前端]\n---\n\n![首图](https://cdn.pixabay.com/photo/2014/05/02/21/49/home-office-336373__340.jpg)\n\n<!-- more -->\n\n# 【VueSSR系列一】构建流程源码解读\n\n最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包`vue-server-renderer@2.6.10`进行讲解，内容包括：\n- VueSSR构建流程\n- VueSSRClientPlugin\n- VueSSRServerPlugin\n<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n\n希望本文对你有帮助。\n\n## VueSSR构建流程\n`vue-server-renderer`是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。\n\n简单用图表述了VueSSR的构建流程，如下图展示：\n\n![VueSSR构建流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&bo=jgTAAY4EwAEDByI!&rf=viewer_4)\n\n如图构建过程中有两个入口文件，通过`vue-server-renderer`提供的webpack插件`VueSSRClientPlugin`和`VueSSRServerPlugin`，分别构建打包出供客户端和服务端使用的json文件。\n\n## VueSSRClientPlugin\n`vue-ssr-client-manifest.json`就是通过`VueSSRClientPlugin`生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：\n```json\n{\n    \"publicPath\": \"/dist/\",\n    \"all\": [\"static/img/d_icon.522f4d11.png\"...],\n    \"initial\": [\"manifest.0338f6f2cf8625ed7117.js\"...],\n    \"async\": [\"0.51ec59b64fde13191f79.js\"...],\n    \"modules\": {...}\n}\n```\n它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n\n深入它的源码，我们看看这个插件是怎样生成这些数据的。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar VueSSRClientPlugin = function VueSSRClientPlugin (options) {\n  if ( options === void 0 ) options = {};\n\n  this.options = Object.assign({\n    filename: 'vue-ssr-client-manifest.json' // 默认文件名\n  }, options);\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    ...\n};\n\nmodule.exports = VueSSRClientPlugin;\n```\n从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar onEmit = function (compiler, name, hook) {\n  if (compiler.hooks) {\n    // Webpack >= 4.0.0\n    compiler.hooks.emit.tapAsync(name, hook);\n  } else {\n    // Webpack < 4.0.0\n    compiler.plugin('emit', hook);\n  }\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    var this$1 = this;\n\n    onEmit(compiler, 'vue-client-plugin', function (compilation, cb) {\n      ...\n    })\n};\n```\n在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：\n\n![clientManifest处理流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&bo=PgT2Az4E9gMRBzA!&rf=viewer_4)\n\n简单解析下上面的流程：\n1. 获取编译对象中的包含编译信息的stats对象\n2. 从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）\n3. 从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles\n4. allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles\n5. 分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。\n6. 最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。\n\n## VueSSRServerPlugin\nvue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：\n```javascript\nvar bundle = {\n  entry: entry,\n  files: {},\n  maps: {}\n};\n\nstats.assets.forEach(function (asset) {\n  if (isJS(asset.name)) {\n    bundle.files[asset.name] = compilation.assets[asset.name].source();\n  } else if (asset.name.match(/\\.js\\.map$/)) {\n    bundle.maps[asset.name.replace(/\\.map$/, '')] = JSON.parse(compilation.assets[asset.name].source());\n  }\n  // do not emit anything else for server\n  // 删除编译信息中的源代码的文件信息\n  // 保证只输出一个文件vue-ssr-server-bundle.json\n  delete compilation.assets[asset.name];\n});\n```\n从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。\n\n在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除`compilation.assets`上所有的文件信息。保证最后只输出一个json文件。\n\n\n值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。\n```javascript\nif (entryAssets.length > 1) {\n  throw new Error(\n    \"Server-side bundle should have one single entry file. \" +\n    \"Avoid using CommonsChunkPlugin in the server config.\"\n  )\n}\n```\n\n## 总结\n构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。\n\n他们的作用分别是：\n- clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n- bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。\n\n> 高手都是从表面看到本质的人\n\n这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击[这里](https://webpack.docschina.org/api/compilation/)拓展下知识面。\n\n另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！","slug":"【VueSSR系列一】构建流程源码解读","published":1,"updated":"2022-12-06T15:30:38.495Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4f0029mcq072yhfbg8","content":"<p><img src=\"https://cdn.pixabay.com/photo/2014/05/02/21/49/home-office-336373__340.jpg\" alt=\"首图\"></p>\n<span id=\"more\"></span>\n<h1 id=\"【VueSSR系列一】构建流程源码解读\"><a href=\"#【VueSSR系列一】构建流程源码解读\" class=\"headerlink\" title=\"【VueSSR系列一】构建流程源码解读\"></a>【VueSSR系列一】构建流程源码解读</h1><p>最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包<a href=\"mailto:`vue-server-renderer@2.6.10\">`vue-server-renderer@2.6.10</a>`进行讲解，内容包括：</p>\n<ul>\n<li>VueSSR构建流程</li>\n<li>VueSSRClientPlugin</li>\n<li>VueSSRServerPlugin<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n</li>\n</ul>\n<p>希望本文对你有帮助。</p>\n<h2 id=\"VueSSR构建流程\"><a href=\"#VueSSR构建流程\" class=\"headerlink\" title=\"VueSSR构建流程\"></a>VueSSR构建流程</h2><p><code>vue-server-renderer</code>是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。</p>\n<p>简单用图表述了VueSSR的构建流程，如下图展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&amp;bo=jgTAAY4EwAEDByI!&amp;rf=viewer_4\" alt=\"VueSSR构建流程图\"></p>\n<p>如图构建过程中有两个入口文件，通过<code>vue-server-renderer</code>提供的webpack插件<code>VueSSRClientPlugin</code>和<code>VueSSRServerPlugin</code>，分别构建打包出供客户端和服务端使用的json文件。</p>\n<h2 id=\"VueSSRClientPlugin\"><a href=\"#VueSSRClientPlugin\" class=\"headerlink\" title=\"VueSSRClientPlugin\"></a>VueSSRClientPlugin</h2><p><code>vue-ssr-client-manifest.json</code>就是通过<code>VueSSRClientPlugin</code>生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;publicPath&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/dist/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;all&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;static/img/d_icon.522f4d11.png&quot;</span>...<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;initial&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;manifest.0338f6f2cf8625ed7117.js&quot;</span>...<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;async&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;0.51ec59b64fde13191f79.js&quot;</span>...<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;modules&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>...<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure><br>它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</p>\n<p>深入它的源码，我们看看这个插件是怎样生成这些数据的。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">VueSSRClientPlugin</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">VueSSRClientPlugin</span> (options) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( options === <span class=\"keyword\">void</span> <span class=\"number\">0</span> ) options = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">options</span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;vue-ssr-client-manifest.json&#x27;</span> <span class=\"comment\">// 默认文件名</span></span><br><span class=\"line\">  &#125;, options);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">VueSSRClientPlugin</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">apply</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">apply</span> (compiler) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">VueSSRClientPlugin</span>;</span><br></pre></td></tr></table></figure><br>从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> onEmit = <span class=\"keyword\">function</span> (<span class=\"params\">compiler, name, hook</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiler.<span class=\"property\">hooks</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &gt;= 4.0.0</span></span><br><span class=\"line\">    compiler.<span class=\"property\">hooks</span>.<span class=\"property\">emit</span>.<span class=\"title function_\">tapAsync</span>(name, hook);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &lt; 4.0.0</span></span><br><span class=\"line\">    compiler.<span class=\"title function_\">plugin</span>(<span class=\"string\">&#x27;emit&#x27;</span>, hook);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">VueSSRClientPlugin</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">apply</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">apply</span> (compiler) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"variable language_\">this</span>$1 = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">onEmit</span>(compiler, <span class=\"string\">&#x27;vue-client-plugin&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">compilation, cb</span>) &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br>在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&amp;bo=PgT2Az4E9gMRBzA!&amp;rf=viewer_4\" alt=\"clientManifest处理流程图\"></p>\n<p>简单解析下上面的流程：</p>\n<ol>\n<li>获取编译对象中的包含编译信息的stats对象</li>\n<li>从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）</li>\n<li>从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles</li>\n<li>allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles</li>\n<li>分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。</li>\n<li>最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。</li>\n</ol>\n<h2 id=\"VueSSRServerPlugin\"><a href=\"#VueSSRServerPlugin\" class=\"headerlink\" title=\"VueSSRServerPlugin\"></a>VueSSRServerPlugin</h2><p>vue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bundle = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: entry,</span><br><span class=\"line\">  <span class=\"attr\">files</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">maps</span>: &#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">stats.<span class=\"property\">assets</span>.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">asset</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">isJS</span>(asset.<span class=\"property\">name</span>)) &#123;</span><br><span class=\"line\">    bundle.<span class=\"property\">files</span>[asset.<span class=\"property\">name</span>] = compilation.<span class=\"property\">assets</span>[asset.<span class=\"property\">name</span>].<span class=\"title function_\">source</span>();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (asset.<span class=\"property\">name</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/\\.js\\.map$/</span>)) &#123;</span><br><span class=\"line\">    bundle.<span class=\"property\">maps</span>[asset.<span class=\"property\">name</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\.map$/</span>, <span class=\"string\">&#x27;&#x27;</span>)] = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(compilation.<span class=\"property\">assets</span>[asset.<span class=\"property\">name</span>].<span class=\"title function_\">source</span>());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// do not emit anything else for server</span></span><br><span class=\"line\">  <span class=\"comment\">// 删除编译信息中的源代码的文件信息</span></span><br><span class=\"line\">  <span class=\"comment\">// 保证只输出一个文件vue-ssr-server-bundle.json</span></span><br><span class=\"line\">  <span class=\"keyword\">delete</span> compilation.<span class=\"property\">assets</span>[asset.<span class=\"property\">name</span>];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><br>从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。</p>\n<p>在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除<code>compilation.assets</code>上所有的文件信息。保证最后只输出一个json文件。</p>\n<p>值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (entryAssets.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;Server-side bundle should have one single entry file. &quot;</span> +</span><br><span class=\"line\">    <span class=\"string\">&quot;Avoid using CommonsChunkPlugin in the server config.&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。</p>\n<p>他们的作用分别是：</p>\n<ul>\n<li>clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</li>\n<li>bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。</li>\n</ul>\n<blockquote>\n<p>高手都是从表面看到本质的人</p>\n</blockquote>\n<p>这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击<a target=\"_blank\" rel=\"noopener\" href=\"https://webpack.docschina.org/api/compilation/\">这里</a>拓展下知识面。</p>\n<p>另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2014/05/02/21/49/home-office-336373__340.jpg\" alt=\"首图\"></p>","more":"<h1 id=\"【VueSSR系列一】构建流程源码解读\"><a href=\"#【VueSSR系列一】构建流程源码解读\" class=\"headerlink\" title=\"【VueSSR系列一】构建流程源码解读\"></a>【VueSSR系列一】构建流程源码解读</h1><p>最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包<a href=\"mailto:`vue-server-renderer@2.6.10\">`vue-server-renderer@2.6.10</a>`进行讲解，内容包括：</p>\n<ul>\n<li>VueSSR构建流程</li>\n<li>VueSSRClientPlugin</li>\n<li>VueSSRServerPlugin<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n</li>\n</ul>\n<p>希望本文对你有帮助。</p>\n<h2 id=\"VueSSR构建流程\"><a href=\"#VueSSR构建流程\" class=\"headerlink\" title=\"VueSSR构建流程\"></a>VueSSR构建流程</h2><p><code>vue-server-renderer</code>是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。</p>\n<p>简单用图表述了VueSSR的构建流程，如下图展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&amp;bo=jgTAAY4EwAEDByI!&amp;rf=viewer_4\" alt=\"VueSSR构建流程图\"></p>\n<p>如图构建过程中有两个入口文件，通过<code>vue-server-renderer</code>提供的webpack插件<code>VueSSRClientPlugin</code>和<code>VueSSRServerPlugin</code>，分别构建打包出供客户端和服务端使用的json文件。</p>\n<h2 id=\"VueSSRClientPlugin\"><a href=\"#VueSSRClientPlugin\" class=\"headerlink\" title=\"VueSSRClientPlugin\"></a>VueSSRClientPlugin</h2><p><code>vue-ssr-client-manifest.json</code>就是通过<code>VueSSRClientPlugin</code>生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;publicPath&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/dist/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;all&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;static/img/d_icon.522f4d11.png&quot;</span>...<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;initial&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;manifest.0338f6f2cf8625ed7117.js&quot;</span>...<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;async&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;0.51ec59b64fde13191f79.js&quot;</span>...<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;modules&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>...<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure><br>它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</p>\n<p>深入它的源码，我们看看这个插件是怎样生成这些数据的。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">VueSSRClientPlugin</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">VueSSRClientPlugin</span> (options) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( options === <span class=\"keyword\">void</span> <span class=\"number\">0</span> ) options = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">options</span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;vue-ssr-client-manifest.json&#x27;</span> <span class=\"comment\">// 默认文件名</span></span><br><span class=\"line\">  &#125;, options);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">VueSSRClientPlugin</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">apply</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">apply</span> (compiler) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">VueSSRClientPlugin</span>;</span><br></pre></td></tr></table></figure><br>从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> onEmit = <span class=\"keyword\">function</span> (<span class=\"params\">compiler, name, hook</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiler.<span class=\"property\">hooks</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &gt;= 4.0.0</span></span><br><span class=\"line\">    compiler.<span class=\"property\">hooks</span>.<span class=\"property\">emit</span>.<span class=\"title function_\">tapAsync</span>(name, hook);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &lt; 4.0.0</span></span><br><span class=\"line\">    compiler.<span class=\"title function_\">plugin</span>(<span class=\"string\">&#x27;emit&#x27;</span>, hook);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">VueSSRClientPlugin</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">apply</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">apply</span> (compiler) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"variable language_\">this</span>$1 = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">onEmit</span>(compiler, <span class=\"string\">&#x27;vue-client-plugin&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">compilation, cb</span>) &#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br>在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&amp;bo=PgT2Az4E9gMRBzA!&amp;rf=viewer_4\" alt=\"clientManifest处理流程图\"></p>\n<p>简单解析下上面的流程：</p>\n<ol>\n<li>获取编译对象中的包含编译信息的stats对象</li>\n<li>从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）</li>\n<li>从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles</li>\n<li>allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles</li>\n<li>分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。</li>\n<li>最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。</li>\n</ol>\n<h2 id=\"VueSSRServerPlugin\"><a href=\"#VueSSRServerPlugin\" class=\"headerlink\" title=\"VueSSRServerPlugin\"></a>VueSSRServerPlugin</h2><p>vue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bundle = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: entry,</span><br><span class=\"line\">  <span class=\"attr\">files</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"attr\">maps</span>: &#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">stats.<span class=\"property\">assets</span>.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">asset</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_\">isJS</span>(asset.<span class=\"property\">name</span>)) &#123;</span><br><span class=\"line\">    bundle.<span class=\"property\">files</span>[asset.<span class=\"property\">name</span>] = compilation.<span class=\"property\">assets</span>[asset.<span class=\"property\">name</span>].<span class=\"title function_\">source</span>();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (asset.<span class=\"property\">name</span>.<span class=\"title function_\">match</span>(<span class=\"regexp\">/\\.js\\.map$/</span>)) &#123;</span><br><span class=\"line\">    bundle.<span class=\"property\">maps</span>[asset.<span class=\"property\">name</span>.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\.map$/</span>, <span class=\"string\">&#x27;&#x27;</span>)] = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(compilation.<span class=\"property\">assets</span>[asset.<span class=\"property\">name</span>].<span class=\"title function_\">source</span>());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// do not emit anything else for server</span></span><br><span class=\"line\">  <span class=\"comment\">// 删除编译信息中的源代码的文件信息</span></span><br><span class=\"line\">  <span class=\"comment\">// 保证只输出一个文件vue-ssr-server-bundle.json</span></span><br><span class=\"line\">  <span class=\"keyword\">delete</span> compilation.<span class=\"property\">assets</span>[asset.<span class=\"property\">name</span>];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure><br>从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。</p>\n<p>在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除<code>compilation.assets</code>上所有的文件信息。保证最后只输出一个json文件。</p>\n<p>值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (entryAssets.<span class=\"property\">length</span> &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;Server-side bundle should have one single entry file. &quot;</span> +</span><br><span class=\"line\">    <span class=\"string\">&quot;Avoid using CommonsChunkPlugin in the server config.&quot;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。</p>\n<p>他们的作用分别是：</p>\n<ul>\n<li>clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</li>\n<li>bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。</li>\n</ul>\n<blockquote>\n<p>高手都是从表面看到本质的人</p>\n</blockquote>\n<p>这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击<a target=\"_blank\" rel=\"noopener\" href=\"https://webpack.docschina.org/api/compilation/\">这里</a>拓展下知识面。</p>\n<p>另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！</p>"},{"title":"【VueSSR系列二】clientManifest与bundle的处理流程解读","date":"2019-07-20T11:02:01.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg)\n\n<!-- more -->\n\n上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：\n- 使用BundleRenderer的原因\n- 服务端渲染的大体原理\n- 输出html正文过程\n- 预加载与预取资源\n\n阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：\n\n![image](http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&bo=yAXeAsgF3gIDByI!&rf=viewer_4)\n\n\n## 使用BundleRenderer的原因\n`vue-server-renderer`提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：\n- 支持source map\n- 热重载 \n- 关键css注入\n- 资源注入\n使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。\n\n## 服务端渲染的大体原理\n源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：\n```javascript\n// templateRenderer.render方法内\nif (this.inject) {\n    return (\n        template.head(context) +\n        (context.head || '') +\n        this.renderResourceHints(context) +\n        this.renderStyles(context) +\n        template.neck(context) +\n        content +\n        this.renderState(context) +\n        this.renderScripts(context) +\n        template.tail(context)\n    )\n} else {\n    return (\n        template.head(context) +\n        template.neck(context) +\n        content +\n        template.tail(context)\n    )\n}\n\n```\n转换成图来展示：\n\n![html分段图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&bo=mwNlApsDZQIDFzI!&rf=viewer_4)\n\n原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。\n\n前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。\n\n## 输出html正文过程\n那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：\n![vueSSR处理bundle生成正文流程](http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&bo=9AJTA*QCUwMRBzA!&rf=viewer_4)\n\n当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。\n```JavaScript\nexport default context => {\n  return new Promise((resolve, reject) => {\n    const { app, router, store } = createApp(context.url)\n    ...\n    resolve(app)\n    ...\n  })\n}\n```\n\napp就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。\n\nrender函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。\n\n## 预加载与预取资源\nbundle Renderer如何推断出预加载和预取资源的呢？\n\n我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句`this.renderResourceHints(context)`，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：\n![vueSSR预加载和预取片段生成生成流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&bo=sgM7A7IDOwMDByI!&rf=viewer_4)\n\n从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。\n\n![资源加载文件](http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&bo=5AMJAeQDCQEDByI!&rf=viewer_4)\n\nusedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n## 小结\n- 服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。\n- 生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。\n- clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n\n\n","source":"_posts/【VueSSR系列二】clientManifest与bundle的处理流程解读.md","raw":"---\ntitle: 【VueSSR系列二】clientManifest与bundle的处理流程解读\ndate: 2019-07-20 19:02:01\ntags: [vue]\ncategories: [前端]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg)\n\n<!-- more -->\n\n上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：\n- 使用BundleRenderer的原因\n- 服务端渲染的大体原理\n- 输出html正文过程\n- 预加载与预取资源\n\n阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：\n\n![image](http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&bo=yAXeAsgF3gIDByI!&rf=viewer_4)\n\n\n## 使用BundleRenderer的原因\n`vue-server-renderer`提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：\n- 支持source map\n- 热重载 \n- 关键css注入\n- 资源注入\n使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。\n\n## 服务端渲染的大体原理\n源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：\n```javascript\n// templateRenderer.render方法内\nif (this.inject) {\n    return (\n        template.head(context) +\n        (context.head || '') +\n        this.renderResourceHints(context) +\n        this.renderStyles(context) +\n        template.neck(context) +\n        content +\n        this.renderState(context) +\n        this.renderScripts(context) +\n        template.tail(context)\n    )\n} else {\n    return (\n        template.head(context) +\n        template.neck(context) +\n        content +\n        template.tail(context)\n    )\n}\n\n```\n转换成图来展示：\n\n![html分段图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&bo=mwNlApsDZQIDFzI!&rf=viewer_4)\n\n原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。\n\n前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。\n\n## 输出html正文过程\n那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：\n![vueSSR处理bundle生成正文流程](http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&bo=9AJTA*QCUwMRBzA!&rf=viewer_4)\n\n当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。\n```JavaScript\nexport default context => {\n  return new Promise((resolve, reject) => {\n    const { app, router, store } = createApp(context.url)\n    ...\n    resolve(app)\n    ...\n  })\n}\n```\n\napp就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。\n\nrender函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。\n\n## 预加载与预取资源\nbundle Renderer如何推断出预加载和预取资源的呢？\n\n我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句`this.renderResourceHints(context)`，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：\n![vueSSR预加载和预取片段生成生成流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&bo=sgM7A7IDOwMDByI!&rf=viewer_4)\n\n从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。\n\n![资源加载文件](http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&bo=5AMJAeQDCQEDByI!&rf=viewer_4)\n\nusedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n## 小结\n- 服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。\n- 生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。\n- clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n\n\n","slug":"【VueSSR系列二】clientManifest与bundle的处理流程解读","published":1,"updated":"2022-12-06T15:30:38.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4f002dmcq062n01u0w","content":"<p><img src=\"https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg\" alt=\"我是图片\"></p>\n<span id=\"more\"></span>\n<p>上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：</p>\n<ul>\n<li>使用BundleRenderer的原因</li>\n<li>服务端渲染的大体原理</li>\n<li>输出html正文过程</li>\n<li>预加载与预取资源</li>\n</ul>\n<p>阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&amp;bo=yAXeAsgF3gIDByI!&amp;rf=viewer_4\" alt=\"image\"></p>\n<h2 id=\"使用BundleRenderer的原因\"><a href=\"#使用BundleRenderer的原因\" class=\"headerlink\" title=\"使用BundleRenderer的原因\"></a>使用BundleRenderer的原因</h2><p><code>vue-server-renderer</code>提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：</p>\n<ul>\n<li>支持source map</li>\n<li>热重载 </li>\n<li>关键css注入</li>\n<li>资源注入<br>使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。</li>\n</ul>\n<h2 id=\"服务端渲染的大体原理\"><a href=\"#服务端渲染的大体原理\" class=\"headerlink\" title=\"服务端渲染的大体原理\"></a>服务端渲染的大体原理</h2><p>源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// templateRenderer.render方法内</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">inject</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.<span class=\"title function_\">head</span>(context) +</span><br><span class=\"line\">        (context.<span class=\"property\">head</span> || <span class=\"string\">&#x27;&#x27;</span>) +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderResourceHints</span>(context) +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderStyles</span>(context) +</span><br><span class=\"line\">        template.<span class=\"title function_\">neck</span>(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderState</span>(context) +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderScripts</span>(context) +</span><br><span class=\"line\">        template.<span class=\"title function_\">tail</span>(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.<span class=\"title function_\">head</span>(context) +</span><br><span class=\"line\">        template.<span class=\"title function_\">neck</span>(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        template.<span class=\"title function_\">tail</span>(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>转换成图来展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&amp;bo=mwNlApsDZQIDFzI!&amp;rf=viewer_4\" alt=\"html分段图\"></p>\n<p>原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。</p>\n<p>前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。</p>\n<h2 id=\"输出html正文过程\"><a href=\"#输出html正文过程\" class=\"headerlink\" title=\"输出html正文过程\"></a>输出html正文过程</h2><p>那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&amp;bo=9AJTA*QCUwMRBzA!&amp;rf=viewer_4\" alt=\"vueSSR处理bundle生成正文流程\"></p>\n<p>当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> context =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; app, router, store &#125; = <span class=\"title function_\">createApp</span>(context.<span class=\"property\">url</span>)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(app)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>app就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。</p>\n<p>render函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。</p>\n<h2 id=\"预加载与预取资源\"><a href=\"#预加载与预取资源\" class=\"headerlink\" title=\"预加载与预取资源\"></a>预加载与预取资源</h2><p>bundle Renderer如何推断出预加载和预取资源的呢？</p>\n<p>我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句<code>this.renderResourceHints(context)</code>，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&amp;bo=sgM7A7IDOwMDByI!&amp;rf=viewer_4\" alt=\"vueSSR预加载和预取片段生成生成流程图\"></p>\n<p>从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&amp;bo=5AMJAeQDCQEDByI!&amp;rf=viewer_4\" alt=\"资源加载文件\"></p>\n<p>usedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ul>\n<li>服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。</li>\n<li>生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。</li>\n<li>clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg\" alt=\"我是图片\"></p>","more":"<p>上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：</p>\n<ul>\n<li>使用BundleRenderer的原因</li>\n<li>服务端渲染的大体原理</li>\n<li>输出html正文过程</li>\n<li>预加载与预取资源</li>\n</ul>\n<p>阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&amp;bo=yAXeAsgF3gIDByI!&amp;rf=viewer_4\" alt=\"image\"></p>\n<h2 id=\"使用BundleRenderer的原因\"><a href=\"#使用BundleRenderer的原因\" class=\"headerlink\" title=\"使用BundleRenderer的原因\"></a>使用BundleRenderer的原因</h2><p><code>vue-server-renderer</code>提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：</p>\n<ul>\n<li>支持source map</li>\n<li>热重载 </li>\n<li>关键css注入</li>\n<li>资源注入<br>使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。</li>\n</ul>\n<h2 id=\"服务端渲染的大体原理\"><a href=\"#服务端渲染的大体原理\" class=\"headerlink\" title=\"服务端渲染的大体原理\"></a>服务端渲染的大体原理</h2><p>源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// templateRenderer.render方法内</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">inject</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.<span class=\"title function_\">head</span>(context) +</span><br><span class=\"line\">        (context.<span class=\"property\">head</span> || <span class=\"string\">&#x27;&#x27;</span>) +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderResourceHints</span>(context) +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderStyles</span>(context) +</span><br><span class=\"line\">        template.<span class=\"title function_\">neck</span>(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderState</span>(context) +</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">renderScripts</span>(context) +</span><br><span class=\"line\">        template.<span class=\"title function_\">tail</span>(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.<span class=\"title function_\">head</span>(context) +</span><br><span class=\"line\">        template.<span class=\"title function_\">neck</span>(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        template.<span class=\"title function_\">tail</span>(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>转换成图来展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&amp;bo=mwNlApsDZQIDFzI!&amp;rf=viewer_4\" alt=\"html分段图\"></p>\n<p>原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。</p>\n<p>前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。</p>\n<h2 id=\"输出html正文过程\"><a href=\"#输出html正文过程\" class=\"headerlink\" title=\"输出html正文过程\"></a>输出html正文过程</h2><p>那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&amp;bo=9AJTA*QCUwMRBzA!&amp;rf=viewer_4\" alt=\"vueSSR处理bundle生成正文流程\"></p>\n<p>当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> context =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; app, router, store &#125; = <span class=\"title function_\">createApp</span>(context.<span class=\"property\">url</span>)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_\">resolve</span>(app)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>app就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。</p>\n<p>render函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。</p>\n<h2 id=\"预加载与预取资源\"><a href=\"#预加载与预取资源\" class=\"headerlink\" title=\"预加载与预取资源\"></a>预加载与预取资源</h2><p>bundle Renderer如何推断出预加载和预取资源的呢？</p>\n<p>我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句<code>this.renderResourceHints(context)</code>，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&amp;bo=sgM7A7IDOwMDByI!&amp;rf=viewer_4\" alt=\"vueSSR预加载和预取片段生成生成流程图\"></p>\n<p>从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&amp;bo=5AMJAeQDCQEDByI!&amp;rf=viewer_4\" alt=\"资源加载文件\"></p>\n<p>usedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ul>\n<li>服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。</li>\n<li>生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。</li>\n<li>clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</li>\n</ul>"},{"title":"使用javascript实现常见的排序算法","date":"2018-09-01T16:00:00.000Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&fm=27&gp=0.jpg)\n\n# 前言\n算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。\n\n<!--more-->\n\n# 正文\n## 评述算法优劣的术语\n**稳定：** 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  **不稳定：** 就是在前者的基础上，a和b的位置交换了\n\n**内排序：** 所有的操作都在内存中完成； **外排序：** 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现\n\n**时间复杂度：** 一个算法运行完所需要时间的大小；**空间复杂度：** 一个算法运行需要的内存大小。\n\n## 排序算法\n**排序算法的对比**\n\n![image](https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n**图中名词解析:**  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存\n\n对了算法术语有了初步的了解后，我们来看看排序算法的实现\n\n### 1.冒泡算法\n**思路:**  \n(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素  \n(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样\n\n**javascript代码实现**\n```javascript\n// 构造排序算法类骨架\nfunction ArraySort() {\n    this.bubbleSort = function() {}\n    this.selectSort = function() {}\n    this.insertSort = function() {}\n    this.mergeSort = function() {}\n    this.quickSort = function() {}\n    this.heapSort = function() {}\n    \n    // 交换\n    function swap(array, i, j) {\n        [array[i], array[j]] = [array[j], array[i]]\n    }\n}\n\n// 实现\nthis.bubbleSort = function(array) {\n    let length = array.length\n\n    for(let i = 0; i < length; i++) {\n        for(let j = 0; j < length-1-i; j++) {\n            if(array[j] > array[j+1]) {\n                swap(array, j, j+1)\n            }\n        }\n    }\n}\n```\n\n### 2.选择排序\n**思路:**  \n(1)在一层遍历的时候，选择首元素认为是最小值\n(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素\n(3)二层遍历结束前，将这两个元素交换\n(4)重复123过程\n\n**javascript代码实现**\n```javascript\nthis.selectSort = function(array) {\n    let length = array.length,minIndex\n\n    for(let i = 0; i < length-1; i++) {\n        minIndex = i\n        for(let j = i+1; j < length; j++) {\n            if(array[minIndex] > array[j]) {\n                minIndex = j\n            }\n    }\n    if(minIndex != i) swap(array, i, minIndex)\n}\n```\n\n### 3.插入排序\n**思路：**  \n(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历\n(2)抽出元素，前一个元素与其对比，大的就往后插\n(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.insertSort = function(array) {\n    let length = array.length, temp, j\n\n    for(let i = 1; i < length; i++) {\n        j = i\n        temp = array[i]\n\n        while(j>0 && array[j-1] > temp) {\n            array[j] = array[j-1]\n            j--\n        }\n\n        array[j] = temp\n    }\n}\n```\n\n### 4.归并排序\n> 前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).\n\n**思路：**  \n(1)将数组对折分半  \n(2)递归对折到最小单元，比较两个数的大小，交换\n\n**javascript代码实现**\n```javascript\nthis.mergeSort = function(array) {\n    mergeRec(array)\n    \n    function mergeRec(array) {\n        if (array.length === 1) return array\n\n        let left, right, imid\n        imid = Math.floor(array.length/2)\n        left = array.slice(0, imid)\n        right = array.slice(imid)\n    \n        return merge(mergeRec(left), mergeRec(right))\n    }\n    \n    function merge(left, right) {\n        let result = [], il = 0, ir = 0\n        while (il < left.length && ir < right.length) {\n            if (left[il] < right[ir]) {\n                result.push(left[il++])\n            } else {\n                result.push(right[ir++])\n            }\n        }\n    \n        while (il < left.length) {\n            result.push(left[il++])\n        }\n    \n        while (ir < right.length) {\n            result.push(right[ir++])\n        }\n        \n        return result\n    }\n}\n```\n\n### 5.快速排序\n> 快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)\n\n**思路：**  \n(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标\n(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间\n(3)递归12过程\n\n**javascript代码实现**\n```javascript\nthis.quickSort = function() {\n    quick(array, 0, array.length-1)\n    \n    function quick(array, left, right) {\n        if (array.length < 2) return\n\n        let index = partition(array, left, right)\n    \n        if (left < index - 1) {\n            quick(array, left, index - 1)\n        } \n        if (index < right){\n            quick(array, index, right)\n        }\n    }\n    \n    function partition(array, left, right) {\n        let pivot = array[Math.floor((left + right) / 2)]\n    \n        while (array[left] < pivot) {\n            left++\n        }\n    \n        while (array[right] > pivot) {\n            right--\n        }\n    \n        if (left <= right) {\n            swap(array, left, right)\n        }\n    \n        return ++left\n    }\n}\n```\n\n### 6.堆排序\n> 堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。\n\n**思路：**  \n(1)构造一个满足array[parent(i)] >= array[i]的二叉树\n(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。\n(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.heapSort = function() {\n    let heapsize = array.length\n    if (heapsize < 2) return\n\n    // 构造堆，父节点总是大于子节点\n    for(let i = Math.floor(heapsize / 2); i >= 0; i--) {\n        heapify(array, heapsize, i)\n    }\n\n    while (heapsize > 0) {\n        heapsize--\n        swap(array, 0, heapsize)\n        heapify(array, heapsize, 0)\n    }\n    \n    function heapify(array, heapsize, i) {\n        let left, right, parenti\n        left = i*2+1\n        right = i*2+2\n        largest = i\n    \n        if (left < heapsize && array[left] > array[largest]) {\n            largest = left\n        }\n        if (right < heapsize && array[right] > array[largest]) {\n            largest = right\n        }\n        \n        if (largest !== i) {\n            swap(array, largest, i)\n            heapify(array, heapsize, largest)\n        } \n    }\n}\n```\n\n看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。\n\n写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。\n\n## Array.prototype.sort的实现\n在MDN上sort的定义  \n**语法**\n```javascript\narr.sort([compareFunction])\n```\n**参数**  \ncompareFunction 可选  \n用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。\n\n**返回值**\n排序后的数组。请注意，数组已原地排序，并且不进行复制。\n\n\n**javascript代码实现**\n```javascript\nthis.arraySortFn(array, cFn) {\n    let _cFn\n    if (cFn === undefined) {\n        _cFn = _compareStringUnicode\n    }else if (typeof cFn === 'function') {\n        _cFn = cFn\n    }else {\n        throw new Error('compareFn must be a function')\n    }\n\n    _selectSort(array, _cFn)\n    \n    // 改写选择排序，传入判断条件\n    function _selectSort(array, cFn) {\n        let l = array.length, selectIndex\n        for (let i = 0; i < l - 1; i++) {\n            // 假设的最值下标\n            selectIndex = i\n            for (let j = i + 1; j < l; j++) {\n                if (cFn(array[selectIndex], array[j]) > 0) selectIndex = j\n            }\n            if (selectIndex !== i) swap(array, i, selectIndex)\n        }\n    }\n    \n    // 默认比较字符串的Unicode编码\n    function _compareStringUnicode(a, b) {\n        if(\n            (typeof a !== 'string' && typeof a !== 'number' )||\n            (typeof b !== 'string' && typeof b !== 'number')\n        ) {\n            throw new Error(`${a} / ${b} must be number or string`)\n        }\n\n        a = String(a)\n        b = String(b)\n        let l = a.length > b.length ? b.length : a.length\n\n        for(let i=0; i<l; i++) {\n            if(a.charCodeAt(i) === b.charCodeAt(i)) continue\n\n            return a.charCodeAt(i) > b.charCodeAt(i)\n        }\n\n        return a.length > b.length ? true : false\n    }\n}\n```\n\n参考资料：  \n1.[十大经典排序算法总结（JavaScript描述）](https://juejin.im/post/57dcd394a22b9d00610c5ec8)  \n2.《学习javascript数据结构与算法》\n","source":"_posts/使用javascript实现常见的排序算法.md","raw":"---\ntitle: 使用javascript实现常见的排序算法\ndate: 2018-09-2\ntags: [js, 算法]\ncategories: [js]\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&fm=27&gp=0.jpg)\n\n# 前言\n算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。\n\n<!--more-->\n\n# 正文\n## 评述算法优劣的术语\n**稳定：** 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  **不稳定：** 就是在前者的基础上，a和b的位置交换了\n\n**内排序：** 所有的操作都在内存中完成； **外排序：** 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现\n\n**时间复杂度：** 一个算法运行完所需要时间的大小；**空间复杂度：** 一个算法运行需要的内存大小。\n\n## 排序算法\n**排序算法的对比**\n\n![image](https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n**图中名词解析:**  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存\n\n对了算法术语有了初步的了解后，我们来看看排序算法的实现\n\n### 1.冒泡算法\n**思路:**  \n(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素  \n(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样\n\n**javascript代码实现**\n```javascript\n// 构造排序算法类骨架\nfunction ArraySort() {\n    this.bubbleSort = function() {}\n    this.selectSort = function() {}\n    this.insertSort = function() {}\n    this.mergeSort = function() {}\n    this.quickSort = function() {}\n    this.heapSort = function() {}\n    \n    // 交换\n    function swap(array, i, j) {\n        [array[i], array[j]] = [array[j], array[i]]\n    }\n}\n\n// 实现\nthis.bubbleSort = function(array) {\n    let length = array.length\n\n    for(let i = 0; i < length; i++) {\n        for(let j = 0; j < length-1-i; j++) {\n            if(array[j] > array[j+1]) {\n                swap(array, j, j+1)\n            }\n        }\n    }\n}\n```\n\n### 2.选择排序\n**思路:**  \n(1)在一层遍历的时候，选择首元素认为是最小值\n(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素\n(3)二层遍历结束前，将这两个元素交换\n(4)重复123过程\n\n**javascript代码实现**\n```javascript\nthis.selectSort = function(array) {\n    let length = array.length,minIndex\n\n    for(let i = 0; i < length-1; i++) {\n        minIndex = i\n        for(let j = i+1; j < length; j++) {\n            if(array[minIndex] > array[j]) {\n                minIndex = j\n            }\n    }\n    if(minIndex != i) swap(array, i, minIndex)\n}\n```\n\n### 3.插入排序\n**思路：**  \n(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历\n(2)抽出元素，前一个元素与其对比，大的就往后插\n(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.insertSort = function(array) {\n    let length = array.length, temp, j\n\n    for(let i = 1; i < length; i++) {\n        j = i\n        temp = array[i]\n\n        while(j>0 && array[j-1] > temp) {\n            array[j] = array[j-1]\n            j--\n        }\n\n        array[j] = temp\n    }\n}\n```\n\n### 4.归并排序\n> 前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).\n\n**思路：**  \n(1)将数组对折分半  \n(2)递归对折到最小单元，比较两个数的大小，交换\n\n**javascript代码实现**\n```javascript\nthis.mergeSort = function(array) {\n    mergeRec(array)\n    \n    function mergeRec(array) {\n        if (array.length === 1) return array\n\n        let left, right, imid\n        imid = Math.floor(array.length/2)\n        left = array.slice(0, imid)\n        right = array.slice(imid)\n    \n        return merge(mergeRec(left), mergeRec(right))\n    }\n    \n    function merge(left, right) {\n        let result = [], il = 0, ir = 0\n        while (il < left.length && ir < right.length) {\n            if (left[il] < right[ir]) {\n                result.push(left[il++])\n            } else {\n                result.push(right[ir++])\n            }\n        }\n    \n        while (il < left.length) {\n            result.push(left[il++])\n        }\n    \n        while (ir < right.length) {\n            result.push(right[ir++])\n        }\n        \n        return result\n    }\n}\n```\n\n### 5.快速排序\n> 快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)\n\n**思路：**  \n(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标\n(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间\n(3)递归12过程\n\n**javascript代码实现**\n```javascript\nthis.quickSort = function() {\n    quick(array, 0, array.length-1)\n    \n    function quick(array, left, right) {\n        if (array.length < 2) return\n\n        let index = partition(array, left, right)\n    \n        if (left < index - 1) {\n            quick(array, left, index - 1)\n        } \n        if (index < right){\n            quick(array, index, right)\n        }\n    }\n    \n    function partition(array, left, right) {\n        let pivot = array[Math.floor((left + right) / 2)]\n    \n        while (array[left] < pivot) {\n            left++\n        }\n    \n        while (array[right] > pivot) {\n            right--\n        }\n    \n        if (left <= right) {\n            swap(array, left, right)\n        }\n    \n        return ++left\n    }\n}\n```\n\n### 6.堆排序\n> 堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。\n\n**思路：**  \n(1)构造一个满足array[parent(i)] >= array[i]的二叉树\n(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。\n(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.heapSort = function() {\n    let heapsize = array.length\n    if (heapsize < 2) return\n\n    // 构造堆，父节点总是大于子节点\n    for(let i = Math.floor(heapsize / 2); i >= 0; i--) {\n        heapify(array, heapsize, i)\n    }\n\n    while (heapsize > 0) {\n        heapsize--\n        swap(array, 0, heapsize)\n        heapify(array, heapsize, 0)\n    }\n    \n    function heapify(array, heapsize, i) {\n        let left, right, parenti\n        left = i*2+1\n        right = i*2+2\n        largest = i\n    \n        if (left < heapsize && array[left] > array[largest]) {\n            largest = left\n        }\n        if (right < heapsize && array[right] > array[largest]) {\n            largest = right\n        }\n        \n        if (largest !== i) {\n            swap(array, largest, i)\n            heapify(array, heapsize, largest)\n        } \n    }\n}\n```\n\n看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。\n\n写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。\n\n## Array.prototype.sort的实现\n在MDN上sort的定义  \n**语法**\n```javascript\narr.sort([compareFunction])\n```\n**参数**  \ncompareFunction 可选  \n用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。\n\n**返回值**\n排序后的数组。请注意，数组已原地排序，并且不进行复制。\n\n\n**javascript代码实现**\n```javascript\nthis.arraySortFn(array, cFn) {\n    let _cFn\n    if (cFn === undefined) {\n        _cFn = _compareStringUnicode\n    }else if (typeof cFn === 'function') {\n        _cFn = cFn\n    }else {\n        throw new Error('compareFn must be a function')\n    }\n\n    _selectSort(array, _cFn)\n    \n    // 改写选择排序，传入判断条件\n    function _selectSort(array, cFn) {\n        let l = array.length, selectIndex\n        for (let i = 0; i < l - 1; i++) {\n            // 假设的最值下标\n            selectIndex = i\n            for (let j = i + 1; j < l; j++) {\n                if (cFn(array[selectIndex], array[j]) > 0) selectIndex = j\n            }\n            if (selectIndex !== i) swap(array, i, selectIndex)\n        }\n    }\n    \n    // 默认比较字符串的Unicode编码\n    function _compareStringUnicode(a, b) {\n        if(\n            (typeof a !== 'string' && typeof a !== 'number' )||\n            (typeof b !== 'string' && typeof b !== 'number')\n        ) {\n            throw new Error(`${a} / ${b} must be number or string`)\n        }\n\n        a = String(a)\n        b = String(b)\n        let l = a.length > b.length ? b.length : a.length\n\n        for(let i=0; i<l; i++) {\n            if(a.charCodeAt(i) === b.charCodeAt(i)) continue\n\n            return a.charCodeAt(i) > b.charCodeAt(i)\n        }\n\n        return a.length > b.length ? true : false\n    }\n}\n```\n\n参考资料：  \n1.[十大经典排序算法总结（JavaScript描述）](https://juejin.im/post/57dcd394a22b9d00610c5ec8)  \n2.《学习javascript数据结构与算法》\n","slug":"使用javascript实现常见的排序算法","published":1,"updated":"2022-12-06T15:30:38.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4g002fmcq0hauz8xgi","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。</p>\n<span id=\"more\"></span>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"评述算法优劣的术语\"><a href=\"#评述算法优劣的术语\" class=\"headerlink\" title=\"评述算法优劣的术语\"></a>评述算法优劣的术语</h2><p><strong>稳定：</strong> 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  <strong>不稳定：</strong> 就是在前者的基础上，a和b的位置交换了</p>\n<p><strong>内排序：</strong> 所有的操作都在内存中完成； <strong>外排序：</strong> 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现</p>\n<p><strong>时间复杂度：</strong> 一个算法运行完所需要时间的大小；<strong>空间复杂度：</strong> 一个算法运行需要的内存大小。</p>\n<h2 id=\"排序算法\"><a href=\"#排序算法\" class=\"headerlink\" title=\"排序算法\"></a>排序算法</h2><p><strong>排序算法的对比</strong></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p><strong>图中名词解析:</strong>  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存</p>\n<p>对了算法术语有了初步的了解后，我们来看看排序算法的实现</p>\n<h3 id=\"1-冒泡算法\"><a href=\"#1-冒泡算法\" class=\"headerlink\" title=\"1.冒泡算法\"></a>1.冒泡算法</h3><p><strong>思路:</strong><br>(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素<br>(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造排序算法类骨架</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ArraySort</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">bubbleSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">selectSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">insertSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">mergeSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">quickSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">heapSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 交换</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">swap</span>(<span class=\"params\">array, i, j</span>) &#123;</span><br><span class=\"line\">        [array[i], array[j]] = [array[j], array[i]]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">bubbleSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.<span class=\"property\">length</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; length-<span class=\"number\">1</span>-i; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[j] &gt; array[j+<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">swap</span>(array, j, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-选择排序\"><a href=\"#2-选择排序\" class=\"headerlink\" title=\"2.选择排序\"></a>2.选择排序</h3><p><strong>思路:</strong><br>(1)在一层遍历的时候，选择首元素认为是最小值<br>(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素<br>(3)二层遍历结束前，将这两个元素交换<br>(4)重复123过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">selectSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.<span class=\"property\">length</span>,minIndex</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        minIndex = i</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i+<span class=\"number\">1</span>; j &lt; length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[minIndex] &gt; array[j]) &#123;</span><br><span class=\"line\">                minIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minIndex != i) <span class=\"title function_\">swap</span>(array, i, minIndex)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-插入排序\"><a href=\"#3-插入排序\" class=\"headerlink\" title=\"3.插入排序\"></a>3.插入排序</h3><p><strong>思路：</strong><br>(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历<br>(2)抽出元素，前一个元素与其对比，大的就往后插<br>(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">insertSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.<span class=\"property\">length</span>, temp, j</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        j = i</span><br><span class=\"line\">        temp = array[i]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&gt;<span class=\"number\">0</span> &amp;&amp; array[j-<span class=\"number\">1</span>] &gt; temp) &#123;</span><br><span class=\"line\">            array[j] = array[j-<span class=\"number\">1</span>]</span><br><span class=\"line\">            j--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        array[j] = temp</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-归并排序\"><a href=\"#4-归并排序\" class=\"headerlink\" title=\"4.归并排序\"></a>4.归并排序</h3><blockquote>\n<p>前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)将数组对折分半<br>(2)递归对折到最小单元，比较两个数的大小，交换</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">mergeSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">mergeRec</span>(array)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">mergeRec</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> array</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, imid</span><br><span class=\"line\">        imid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(array.<span class=\"property\">length</span>/<span class=\"number\">2</span>)</span><br><span class=\"line\">        left = array.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, imid)</span><br><span class=\"line\">        right = array.<span class=\"title function_\">slice</span>(imid)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">merge</span>(<span class=\"title function_\">mergeRec</span>(left), <span class=\"title function_\">mergeRec</span>(right))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">merge</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = [], il = <span class=\"number\">0</span>, ir = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.<span class=\"property\">length</span> &amp;&amp; ir &lt; right.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left[il] &lt; right[ir]) &#123;</span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(left[il++])</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(right[ir++])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(left[il++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (ir &lt; right.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(right[ir++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-快速排序\"><a href=\"#5-快速排序\" class=\"headerlink\" title=\"5.快速排序\"></a>5.快速排序</h3><blockquote>\n<p>快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标<br>(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间<br>(3)递归12过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">quickSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">quick</span>(array, <span class=\"number\">0</span>, array.<span class=\"property\">length</span>-<span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">quick</span>(<span class=\"params\">array, left, right</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.<span class=\"property\">length</span> &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"title function_\">partition</span>(array, left, right)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; index - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">quick</span>(array, left, index - <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &lt; right)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">quick</span>(array, index, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">partition</span>(<span class=\"params\">array, left, right</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pivot = array[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right) / <span class=\"number\">2</span>)]</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[left] &lt; pivot) &#123;</span><br><span class=\"line\">            left++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[right] &gt; pivot) &#123;</span><br><span class=\"line\">            right--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt;= right) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">swap</span>(array, left, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++left</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-堆排序\"><a href=\"#6-堆排序\" class=\"headerlink\" title=\"6.堆排序\"></a>6.堆排序</h3><blockquote>\n<p>堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)构造一个满足array[parent(i)] &gt;= array[i]的二叉树<br>(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。<br>(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">heapSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> heapsize = array.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (heapsize &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造堆，父节点总是大于子节点</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(heapsize / <span class=\"number\">2</span>); i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">heapify</span>(array, heapsize, i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (heapsize &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        heapsize--</span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(array, <span class=\"number\">0</span>, heapsize)</span><br><span class=\"line\">        <span class=\"title function_\">heapify</span>(array, heapsize, <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">heapify</span>(<span class=\"params\">array, heapsize, i</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, parenti</span><br><span class=\"line\">        left = i*<span class=\"number\">2</span>+<span class=\"number\">1</span></span><br><span class=\"line\">        right = i*<span class=\"number\">2</span>+<span class=\"number\">2</span></span><br><span class=\"line\">        largest = i</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; heapsize &amp;&amp; array[left] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = left</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (right &lt; heapsize &amp;&amp; array[right] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = right</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (largest !== i) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">swap</span>(array, largest, i)</span><br><span class=\"line\">            <span class=\"title function_\">heapify</span>(array, heapsize, largest)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。</p>\n<p>写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。</p>\n<h2 id=\"Array-prototype-sort的实现\"><a href=\"#Array-prototype-sort的实现\" class=\"headerlink\" title=\"Array.prototype.sort的实现\"></a>Array.prototype.sort的实现</h2><p>在MDN上sort的定义<br><strong>语法</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.<span class=\"title function_\">sort</span>([compareFunction])</span><br></pre></td></tr></table></figure><br><strong>参数</strong><br>compareFunction 可选<br>用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。</p>\n<p><strong>返回值</strong><br>排序后的数组。请注意，数组已原地排序，并且不进行复制。</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">arraySortFn</span>(<span class=\"params\">array, cFn</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _cFn</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cFn === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">        _cFn = _compareStringUnicode</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> cFn === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">        _cFn = cFn</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;compareFn must be a function&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">_selectSort</span>(array, _cFn)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 改写选择排序，传入判断条件</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">_selectSort</span>(<span class=\"params\">array, cFn</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = array.<span class=\"property\">length</span>, selectIndex</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; l - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 假设的最值下标</span></span><br><span class=\"line\">            selectIndex = i</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; l; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"title function_\">cFn</span>(array[selectIndex], array[j]) &gt; <span class=\"number\">0</span>) selectIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (selectIndex !== i) <span class=\"title function_\">swap</span>(array, i, selectIndex)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 默认比较字符串的Unicode编码</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">_compareStringUnicode</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> a !== <span class=\"string\">&#x27;string&#x27;</span> &amp;&amp; <span class=\"keyword\">typeof</span> a !== <span class=\"string\">&#x27;number&#x27;</span> )||</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> b !== <span class=\"string\">&#x27;string&#x27;</span> &amp;&amp; <span class=\"keyword\">typeof</span> b !== <span class=\"string\">&#x27;number&#x27;</span>)</span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;a&#125;</span> / <span class=\"subst\">$&#123;b&#125;</span> must be number or string`</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        a = <span class=\"title class_\">String</span>(a)</span><br><span class=\"line\">        b = <span class=\"title class_\">String</span>(b)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = a.<span class=\"property\">length</span> &gt; b.<span class=\"property\">length</span> ? b.<span class=\"property\">length</span> : a.<span class=\"property\">length</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;l; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.<span class=\"title function_\">charCodeAt</span>(i) === b.<span class=\"title function_\">charCodeAt</span>(i)) <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> a.<span class=\"title function_\">charCodeAt</span>(i) &gt; b.<span class=\"title function_\">charCodeAt</span>(i)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.<span class=\"property\">length</span> &gt; b.<span class=\"property\">length</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>参考资料：<br>1.<a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/57dcd394a22b9d00610c5ec8\">十大经典排序算法总结（JavaScript描述）</a><br>2.《学习javascript数据结构与算法》</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。</p>","more":"<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"评述算法优劣的术语\"><a href=\"#评述算法优劣的术语\" class=\"headerlink\" title=\"评述算法优劣的术语\"></a>评述算法优劣的术语</h2><p><strong>稳定：</strong> 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  <strong>不稳定：</strong> 就是在前者的基础上，a和b的位置交换了</p>\n<p><strong>内排序：</strong> 所有的操作都在内存中完成； <strong>外排序：</strong> 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现</p>\n<p><strong>时间复杂度：</strong> 一个算法运行完所需要时间的大小；<strong>空间复杂度：</strong> 一个算法运行需要的内存大小。</p>\n<h2 id=\"排序算法\"><a href=\"#排序算法\" class=\"headerlink\" title=\"排序算法\"></a>排序算法</h2><p><strong>排序算法的对比</strong></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p><strong>图中名词解析:</strong>  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存</p>\n<p>对了算法术语有了初步的了解后，我们来看看排序算法的实现</p>\n<h3 id=\"1-冒泡算法\"><a href=\"#1-冒泡算法\" class=\"headerlink\" title=\"1.冒泡算法\"></a>1.冒泡算法</h3><p><strong>思路:</strong><br>(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素<br>(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造排序算法类骨架</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">ArraySort</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">bubbleSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">selectSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">insertSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">mergeSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">quickSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">heapSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 交换</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">swap</span>(<span class=\"params\">array, i, j</span>) &#123;</span><br><span class=\"line\">        [array[i], array[j]] = [array[j], array[i]]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">bubbleSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.<span class=\"property\">length</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; length-<span class=\"number\">1</span>-i; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[j] &gt; array[j+<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">swap</span>(array, j, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-选择排序\"><a href=\"#2-选择排序\" class=\"headerlink\" title=\"2.选择排序\"></a>2.选择排序</h3><p><strong>思路:</strong><br>(1)在一层遍历的时候，选择首元素认为是最小值<br>(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素<br>(3)二层遍历结束前，将这两个元素交换<br>(4)重复123过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">selectSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.<span class=\"property\">length</span>,minIndex</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        minIndex = i</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i+<span class=\"number\">1</span>; j &lt; length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[minIndex] &gt; array[j]) &#123;</span><br><span class=\"line\">                minIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minIndex != i) <span class=\"title function_\">swap</span>(array, i, minIndex)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-插入排序\"><a href=\"#3-插入排序\" class=\"headerlink\" title=\"3.插入排序\"></a>3.插入排序</h3><p><strong>思路：</strong><br>(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历<br>(2)抽出元素，前一个元素与其对比，大的就往后插<br>(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">insertSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.<span class=\"property\">length</span>, temp, j</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        j = i</span><br><span class=\"line\">        temp = array[i]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&gt;<span class=\"number\">0</span> &amp;&amp; array[j-<span class=\"number\">1</span>] &gt; temp) &#123;</span><br><span class=\"line\">            array[j] = array[j-<span class=\"number\">1</span>]</span><br><span class=\"line\">            j--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        array[j] = temp</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-归并排序\"><a href=\"#4-归并排序\" class=\"headerlink\" title=\"4.归并排序\"></a>4.归并排序</h3><blockquote>\n<p>前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)将数组对折分半<br>(2)递归对折到最小单元，比较两个数的大小，交换</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">mergeSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">mergeRec</span>(array)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">mergeRec</span>(<span class=\"params\">array</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.<span class=\"property\">length</span> === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> array</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, imid</span><br><span class=\"line\">        imid = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(array.<span class=\"property\">length</span>/<span class=\"number\">2</span>)</span><br><span class=\"line\">        left = array.<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, imid)</span><br><span class=\"line\">        right = array.<span class=\"title function_\">slice</span>(imid)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">merge</span>(<span class=\"title function_\">mergeRec</span>(left), <span class=\"title function_\">mergeRec</span>(right))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">merge</span>(<span class=\"params\">left, right</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = [], il = <span class=\"number\">0</span>, ir = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.<span class=\"property\">length</span> &amp;&amp; ir &lt; right.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left[il] &lt; right[ir]) &#123;</span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(left[il++])</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                result.<span class=\"title function_\">push</span>(right[ir++])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(left[il++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (ir &lt; right.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">            result.<span class=\"title function_\">push</span>(right[ir++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-快速排序\"><a href=\"#5-快速排序\" class=\"headerlink\" title=\"5.快速排序\"></a>5.快速排序</h3><blockquote>\n<p>快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标<br>(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间<br>(3)递归12过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">quickSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">quick</span>(array, <span class=\"number\">0</span>, array.<span class=\"property\">length</span>-<span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">quick</span>(<span class=\"params\">array, left, right</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.<span class=\"property\">length</span> &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"title function_\">partition</span>(array, left, right)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; index - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">quick</span>(array, left, index - <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &lt; right)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">quick</span>(array, index, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">partition</span>(<span class=\"params\">array, left, right</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pivot = array[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>((left + right) / <span class=\"number\">2</span>)]</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[left] &lt; pivot) &#123;</span><br><span class=\"line\">            left++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[right] &gt; pivot) &#123;</span><br><span class=\"line\">            right--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt;= right) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">swap</span>(array, left, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++left</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-堆排序\"><a href=\"#6-堆排序\" class=\"headerlink\" title=\"6.堆排序\"></a>6.堆排序</h3><blockquote>\n<p>堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)构造一个满足array[parent(i)] &gt;= array[i]的二叉树<br>(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。<br>(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">heapSort</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> heapsize = array.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (heapsize &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造堆，父节点总是大于子节点</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(heapsize / <span class=\"number\">2</span>); i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">heapify</span>(array, heapsize, i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (heapsize &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        heapsize--</span><br><span class=\"line\">        <span class=\"title function_\">swap</span>(array, <span class=\"number\">0</span>, heapsize)</span><br><span class=\"line\">        <span class=\"title function_\">heapify</span>(array, heapsize, <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">heapify</span>(<span class=\"params\">array, heapsize, i</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, parenti</span><br><span class=\"line\">        left = i*<span class=\"number\">2</span>+<span class=\"number\">1</span></span><br><span class=\"line\">        right = i*<span class=\"number\">2</span>+<span class=\"number\">2</span></span><br><span class=\"line\">        largest = i</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; heapsize &amp;&amp; array[left] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = left</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (right &lt; heapsize &amp;&amp; array[right] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = right</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (largest !== i) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">swap</span>(array, largest, i)</span><br><span class=\"line\">            <span class=\"title function_\">heapify</span>(array, heapsize, largest)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。</p>\n<p>写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。</p>\n<h2 id=\"Array-prototype-sort的实现\"><a href=\"#Array-prototype-sort的实现\" class=\"headerlink\" title=\"Array.prototype.sort的实现\"></a>Array.prototype.sort的实现</h2><p>在MDN上sort的定义<br><strong>语法</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.<span class=\"title function_\">sort</span>([compareFunction])</span><br></pre></td></tr></table></figure><br><strong>参数</strong><br>compareFunction 可选<br>用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。</p>\n<p><strong>返回值</strong><br>排序后的数组。请注意，数组已原地排序，并且不进行复制。</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">arraySortFn</span>(<span class=\"params\">array, cFn</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _cFn</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cFn === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">        _cFn = _compareStringUnicode</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> cFn === <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">        _cFn = cFn</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;compareFn must be a function&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">_selectSort</span>(array, _cFn)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 改写选择排序，传入判断条件</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">_selectSort</span>(<span class=\"params\">array, cFn</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = array.<span class=\"property\">length</span>, selectIndex</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; l - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 假设的最值下标</span></span><br><span class=\"line\">            selectIndex = i</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; l; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"title function_\">cFn</span>(array[selectIndex], array[j]) &gt; <span class=\"number\">0</span>) selectIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (selectIndex !== i) <span class=\"title function_\">swap</span>(array, i, selectIndex)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 默认比较字符串的Unicode编码</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">_compareStringUnicode</span>(<span class=\"params\">a, b</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> a !== <span class=\"string\">&#x27;string&#x27;</span> &amp;&amp; <span class=\"keyword\">typeof</span> a !== <span class=\"string\">&#x27;number&#x27;</span> )||</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> b !== <span class=\"string\">&#x27;string&#x27;</span> &amp;&amp; <span class=\"keyword\">typeof</span> b !== <span class=\"string\">&#x27;number&#x27;</span>)</span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;a&#125;</span> / <span class=\"subst\">$&#123;b&#125;</span> must be number or string`</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        a = <span class=\"title class_\">String</span>(a)</span><br><span class=\"line\">        b = <span class=\"title class_\">String</span>(b)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = a.<span class=\"property\">length</span> &gt; b.<span class=\"property\">length</span> ? b.<span class=\"property\">length</span> : a.<span class=\"property\">length</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;l; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.<span class=\"title function_\">charCodeAt</span>(i) === b.<span class=\"title function_\">charCodeAt</span>(i)) <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> a.<span class=\"title function_\">charCodeAt</span>(i) &gt; b.<span class=\"title function_\">charCodeAt</span>(i)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.<span class=\"property\">length</span> &gt; b.<span class=\"property\">length</span> ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>参考资料：<br>1.<a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/57dcd394a22b9d00610c5ec8\">十大经典排序算法总结（JavaScript描述）</a><br>2.《学习javascript数据结构与算法》</p>"},{"title":"关于高效找工作的几条建议","date":"2019-03-21T14:01:54.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg)\n\n## 前言\n大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？\n\n<!--more-->\n\n## 正文\n\n带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是`dendoink`，有需要可以关注和加他微信。\n\n说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。\n\n先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。\n\n我的原话是:\n> Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。\n\n对于Dendi哥给出的建议，总结如下：\n\n#### 1. 校招还是社招\n清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。\n\n大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。\n\n#### 2. JD\n我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。\n\n#### 3. 跟hr沟通\n跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。\n\nhr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。\n\n#### 4. 考核项目能力\n面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。\n\n比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。\n\n描述可以从**模块**、**功能**、**技术实现**到开发过程**遇到的问题**、以及**原理**这几个方面来着手。\n\n#### 5. 关于基础\n关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。\n\n#### 6. 了解团队\n当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。\n\n1. 你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。\n2. 问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。\n3. 团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。\n4. 开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）\n5. 虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。\n\n#### 7. 评估直属上司\n在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。\n\n#### 8. 心态\n心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。\n\n#### 9. 其他\n多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？\n\n要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。\n\n## 结语\n我也还在学习成长的路上，共勉~\n\n\n","source":"_posts/关于高效找工作的几条建议.md","raw":"---\ntitle: 关于高效找工作的几条建议\ndate: 2019-03-21 22:01:54\ntags: [总结]\ncategories: [总结]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg)\n\n## 前言\n大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？\n\n<!--more-->\n\n## 正文\n\n带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是`dendoink`，有需要可以关注和加他微信。\n\n说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。\n\n先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。\n\n我的原话是:\n> Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。\n\n对于Dendi哥给出的建议，总结如下：\n\n#### 1. 校招还是社招\n清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。\n\n大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。\n\n#### 2. JD\n我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。\n\n#### 3. 跟hr沟通\n跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。\n\nhr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。\n\n#### 4. 考核项目能力\n面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。\n\n比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。\n\n描述可以从**模块**、**功能**、**技术实现**到开发过程**遇到的问题**、以及**原理**这几个方面来着手。\n\n#### 5. 关于基础\n关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。\n\n#### 6. 了解团队\n当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。\n\n1. 你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。\n2. 问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。\n3. 团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。\n4. 开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）\n5. 虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。\n\n#### 7. 评估直属上司\n在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。\n\n#### 8. 心态\n心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。\n\n#### 9. 其他\n多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？\n\n要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。\n\n## 结语\n我也还在学习成长的路上，共勉~\n\n\n","slug":"关于高效找工作的几条建议","published":1,"updated":"2022-12-06T15:30:38.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4g002hmcq0ep5zbdqk","content":"<p><img src=\"https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？</p>\n<span id=\"more\"></span>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是<code>dendoink</code>，有需要可以关注和加他微信。</p>\n<p>说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。</p>\n<p>先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。</p>\n<p>我的原话是:</p>\n<blockquote>\n<p>Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。</p>\n</blockquote>\n<p>对于Dendi哥给出的建议，总结如下：</p>\n<h4 id=\"1-校招还是社招\"><a href=\"#1-校招还是社招\" class=\"headerlink\" title=\"1. 校招还是社招\"></a>1. 校招还是社招</h4><p>清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。</p>\n<p>大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。</p>\n<h4 id=\"2-JD\"><a href=\"#2-JD\" class=\"headerlink\" title=\"2. JD\"></a>2. JD</h4><p>我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。</p>\n<h4 id=\"3-跟hr沟通\"><a href=\"#3-跟hr沟通\" class=\"headerlink\" title=\"3. 跟hr沟通\"></a>3. 跟hr沟通</h4><p>跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。</p>\n<p>hr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。</p>\n<h4 id=\"4-考核项目能力\"><a href=\"#4-考核项目能力\" class=\"headerlink\" title=\"4. 考核项目能力\"></a>4. 考核项目能力</h4><p>面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。</p>\n<p>比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。</p>\n<p>描述可以从<strong>模块</strong>、<strong>功能</strong>、<strong>技术实现</strong>到开发过程<strong>遇到的问题</strong>、以及<strong>原理</strong>这几个方面来着手。</p>\n<h4 id=\"5-关于基础\"><a href=\"#5-关于基础\" class=\"headerlink\" title=\"5. 关于基础\"></a>5. 关于基础</h4><p>关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。</p>\n<h4 id=\"6-了解团队\"><a href=\"#6-了解团队\" class=\"headerlink\" title=\"6. 了解团队\"></a>6. 了解团队</h4><p>当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。</p>\n<ol>\n<li>你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。</li>\n<li>问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。</li>\n<li>团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。</li>\n<li>开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）</li>\n<li>虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。</li>\n</ol>\n<h4 id=\"7-评估直属上司\"><a href=\"#7-评估直属上司\" class=\"headerlink\" title=\"7. 评估直属上司\"></a>7. 评估直属上司</h4><p>在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。</p>\n<h4 id=\"8-心态\"><a href=\"#8-心态\" class=\"headerlink\" title=\"8. 心态\"></a>8. 心态</h4><p>心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。</p>\n<h4 id=\"9-其他\"><a href=\"#9-其他\" class=\"headerlink\" title=\"9. 其他\"></a>9. 其他</h4><p>多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？</p>\n<p>要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>我也还在学习成长的路上，共勉~</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？</p>","more":"<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是<code>dendoink</code>，有需要可以关注和加他微信。</p>\n<p>说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。</p>\n<p>先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。</p>\n<p>我的原话是:</p>\n<blockquote>\n<p>Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。</p>\n</blockquote>\n<p>对于Dendi哥给出的建议，总结如下：</p>\n<h4 id=\"1-校招还是社招\"><a href=\"#1-校招还是社招\" class=\"headerlink\" title=\"1. 校招还是社招\"></a>1. 校招还是社招</h4><p>清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。</p>\n<p>大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。</p>\n<h4 id=\"2-JD\"><a href=\"#2-JD\" class=\"headerlink\" title=\"2. JD\"></a>2. JD</h4><p>我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。</p>\n<h4 id=\"3-跟hr沟通\"><a href=\"#3-跟hr沟通\" class=\"headerlink\" title=\"3. 跟hr沟通\"></a>3. 跟hr沟通</h4><p>跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。</p>\n<p>hr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。</p>\n<h4 id=\"4-考核项目能力\"><a href=\"#4-考核项目能力\" class=\"headerlink\" title=\"4. 考核项目能力\"></a>4. 考核项目能力</h4><p>面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。</p>\n<p>比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。</p>\n<p>描述可以从<strong>模块</strong>、<strong>功能</strong>、<strong>技术实现</strong>到开发过程<strong>遇到的问题</strong>、以及<strong>原理</strong>这几个方面来着手。</p>\n<h4 id=\"5-关于基础\"><a href=\"#5-关于基础\" class=\"headerlink\" title=\"5. 关于基础\"></a>5. 关于基础</h4><p>关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。</p>\n<h4 id=\"6-了解团队\"><a href=\"#6-了解团队\" class=\"headerlink\" title=\"6. 了解团队\"></a>6. 了解团队</h4><p>当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。</p>\n<ol>\n<li>你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。</li>\n<li>问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。</li>\n<li>团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。</li>\n<li>开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）</li>\n<li>虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。</li>\n</ol>\n<h4 id=\"7-评估直属上司\"><a href=\"#7-评估直属上司\" class=\"headerlink\" title=\"7. 评估直属上司\"></a>7. 评估直属上司</h4><p>在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。</p>\n<h4 id=\"8-心态\"><a href=\"#8-心态\" class=\"headerlink\" title=\"8. 心态\"></a>8. 心态</h4><p>心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。</p>\n<h4 id=\"9-其他\"><a href=\"#9-其他\" class=\"headerlink\" title=\"9. 其他\"></a>9. 其他</h4><p>多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？</p>\n<p>要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>我也还在学习成长的路上，共勉~</p>"},{"title":"前端单元测试","date":"2019-08-15T07:20:01.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg)\n\n<!-- more -->\n\n测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。\n1. 定义\n2. 为什么要写单元测试\n3. 什么项目写单元测试\n4. 测试要写多细\n5. 什么时候写\n6. 如何写单元测试\n\n## 定义\n单元测试在维基百科上的定义为\n> 单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。\n\n在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。\n\n## 为什么要写单元测试\n项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。\n\n这就是单元测试存在的意义：\n1. 减少发开新特性产生的bug\n2. 促进重构\n3. 作为项目文档的补充以便理解和熟悉代码\n4. 减少手动测试的成本\n\n## 什么项目写单元测试\n不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：\n1. 项目的愿景清晰。规模大，模块多，交互多。\n2. 项目服务的用户量多\n3. 开发新功能引发其他模块bug的情况层出不穷\n4. 测试妹子测不过了\n\n## 测试要写多细\n极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：\n> 老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，\n当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误\n做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。\n\n鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：\n1. 逻辑复杂，容易出错的代码\n2. 核心的业务代码\n3. 公共的代码\n4. 不易理解，回头会忘的代码\n\n## 什么时候写\n\n类型 | 介绍 | 好处 | 坏处\n---|---|---|--- \n开发前写好测试用例 | 属于TTD模式，测试驱动开发 | TTD是被证明能有效提高代码质量的测试手段 | 不适用需求多变的前端模块，测试用例也要跟着变\n开发中写测试用例 | 先写好一部分功能代码，紧跟着写测试用例 | 测试随着业务代码同步 | 相对于开发前要好一点\n开发后写测试用例 | 当完成功能后再补上测试用例 | 这时有些业务和模块已经稳定下来 | 假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”\n\n对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。\n\n## 如何写单元测试\n首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。\n\n至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。\n- 前端常见的单元测试库：[Mocha](https://mochajs.org/)、[Karma](https://karma-runner.github.io/latest/index.html)、[Jest](https://jestjs.io/zh-Hans/)\n- Vue官方推荐的： [Vue Test Utils](https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5)\n- 阮一峰老师的[测试框架 Mocha 实例教程](http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html)\n\n对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。\n\n项目 | 测试框架 | 单元 |  测试用例\n---|---|---|---\nElement | Karma | 组件 | 构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期\nAnt-design-vue | jest | 组件 | 属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理\nAxios | Mocha、Karma | 类和函数模块 | 模块的功能点是否正常\nVue应用项目 | Vue Test Utils（官方推荐） | 组件、Util函数模块、Store模块、API模块 | 渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等\n\nUI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。\n\n## 小结\n以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。\n\n\n参考文档：\n- [单元测试系列一-为什么要写单元测试，何时写，写多细](https://blog.csdn.net/flysqrlboy/article/details/79301241)\n- [Vue Cookbok 为什么要测试](https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F)\n- [测试你的前端代码 - part2（单元测试）](https://juejin.im/post/58d514102f301e007e74fee5)","source":"_posts/前端单元测试.md","raw":"---\ntitle: 前端单元测试\ndate: 2019-08-15 15:20:01\ntags: [测试]\ncategories: [前端]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg)\n\n<!-- more -->\n\n测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。\n1. 定义\n2. 为什么要写单元测试\n3. 什么项目写单元测试\n4. 测试要写多细\n5. 什么时候写\n6. 如何写单元测试\n\n## 定义\n单元测试在维基百科上的定义为\n> 单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。\n\n在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。\n\n## 为什么要写单元测试\n项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。\n\n这就是单元测试存在的意义：\n1. 减少发开新特性产生的bug\n2. 促进重构\n3. 作为项目文档的补充以便理解和熟悉代码\n4. 减少手动测试的成本\n\n## 什么项目写单元测试\n不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：\n1. 项目的愿景清晰。规模大，模块多，交互多。\n2. 项目服务的用户量多\n3. 开发新功能引发其他模块bug的情况层出不穷\n4. 测试妹子测不过了\n\n## 测试要写多细\n极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：\n> 老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，\n当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误\n做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。\n\n鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：\n1. 逻辑复杂，容易出错的代码\n2. 核心的业务代码\n3. 公共的代码\n4. 不易理解，回头会忘的代码\n\n## 什么时候写\n\n类型 | 介绍 | 好处 | 坏处\n---|---|---|--- \n开发前写好测试用例 | 属于TTD模式，测试驱动开发 | TTD是被证明能有效提高代码质量的测试手段 | 不适用需求多变的前端模块，测试用例也要跟着变\n开发中写测试用例 | 先写好一部分功能代码，紧跟着写测试用例 | 测试随着业务代码同步 | 相对于开发前要好一点\n开发后写测试用例 | 当完成功能后再补上测试用例 | 这时有些业务和模块已经稳定下来 | 假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”\n\n对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。\n\n## 如何写单元测试\n首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。\n\n至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。\n- 前端常见的单元测试库：[Mocha](https://mochajs.org/)、[Karma](https://karma-runner.github.io/latest/index.html)、[Jest](https://jestjs.io/zh-Hans/)\n- Vue官方推荐的： [Vue Test Utils](https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5)\n- 阮一峰老师的[测试框架 Mocha 实例教程](http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html)\n\n对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。\n\n项目 | 测试框架 | 单元 |  测试用例\n---|---|---|---\nElement | Karma | 组件 | 构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期\nAnt-design-vue | jest | 组件 | 属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理\nAxios | Mocha、Karma | 类和函数模块 | 模块的功能点是否正常\nVue应用项目 | Vue Test Utils（官方推荐） | 组件、Util函数模块、Store模块、API模块 | 渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等\n\nUI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。\n\n## 小结\n以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。\n\n\n参考文档：\n- [单元测试系列一-为什么要写单元测试，何时写，写多细](https://blog.csdn.net/flysqrlboy/article/details/79301241)\n- [Vue Cookbok 为什么要测试](https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F)\n- [测试你的前端代码 - part2（单元测试）](https://juejin.im/post/58d514102f301e007e74fee5)","slug":"前端单元测试","published":1,"updated":"2022-12-06T15:30:38.509Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4h002lmcq0886ufq3k","content":"<p><img src=\"https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg\" alt=\"我是图片\"></p>\n<span id=\"more\"></span>\n<p>测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。</p>\n<ol>\n<li>定义</li>\n<li>为什么要写单元测试</li>\n<li>什么项目写单元测试</li>\n<li>测试要写多细</li>\n<li>什么时候写</li>\n<li>如何写单元测试</li>\n</ol>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>单元测试在维基百科上的定义为</p>\n<blockquote>\n<p>单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。</p>\n</blockquote>\n<p>在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。</p>\n<h2 id=\"为什么要写单元测试\"><a href=\"#为什么要写单元测试\" class=\"headerlink\" title=\"为什么要写单元测试\"></a>为什么要写单元测试</h2><p>项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。</p>\n<p>这就是单元测试存在的意义：</p>\n<ol>\n<li>减少发开新特性产生的bug</li>\n<li>促进重构</li>\n<li>作为项目文档的补充以便理解和熟悉代码</li>\n<li>减少手动测试的成本</li>\n</ol>\n<h2 id=\"什么项目写单元测试\"><a href=\"#什么项目写单元测试\" class=\"headerlink\" title=\"什么项目写单元测试\"></a>什么项目写单元测试</h2><p>不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：</p>\n<ol>\n<li>项目的愿景清晰。规模大，模块多，交互多。</li>\n<li>项目服务的用户量多</li>\n<li>开发新功能引发其他模块bug的情况层出不穷</li>\n<li>测试妹子测不过了</li>\n</ol>\n<h2 id=\"测试要写多细\"><a href=\"#测试要写多细\" class=\"headerlink\" title=\"测试要写多细\"></a>测试要写多细</h2><p>极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：</p>\n<blockquote>\n<p>老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，<br>当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误<br>做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。</p>\n</blockquote>\n<p>鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：</p>\n<ol>\n<li>逻辑复杂，容易出错的代码</li>\n<li>核心的业务代码</li>\n<li>公共的代码</li>\n<li>不易理解，回头会忘的代码</li>\n</ol>\n<h2 id=\"什么时候写\"><a href=\"#什么时候写\" class=\"headerlink\" title=\"什么时候写\"></a>什么时候写</h2><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>介绍</th>\n<th>好处</th>\n<th>坏处</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>开发前写好测试用例</td>\n<td>属于TTD模式，测试驱动开发</td>\n<td>TTD是被证明能有效提高代码质量的测试手段</td>\n<td>不适用需求多变的前端模块，测试用例也要跟着变</td>\n</tr>\n<tr>\n<td>开发中写测试用例</td>\n<td>先写好一部分功能代码，紧跟着写测试用例</td>\n<td>测试随着业务代码同步</td>\n<td>相对于开发前要好一点</td>\n</tr>\n<tr>\n<td>开发后写测试用例</td>\n<td>当完成功能后再补上测试用例</td>\n<td>这时有些业务和模块已经稳定下来</td>\n<td>假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”</td>\n</tr>\n</tbody>\n</table>\n<p>对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。</p>\n<h2 id=\"如何写单元测试\"><a href=\"#如何写单元测试\" class=\"headerlink\" title=\"如何写单元测试\"></a>如何写单元测试</h2><p>首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。</p>\n<p>至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。</p>\n<ul>\n<li>前端常见的单元测试库：<a target=\"_blank\" rel=\"noopener\" href=\"https://mochajs.org/\">Mocha</a>、<a target=\"_blank\" rel=\"noopener\" href=\"https://karma-runner.github.io/latest/index.html\">Karma</a>、<a target=\"_blank\" rel=\"noopener\" href=\"https://jestjs.io/zh-Hans/\">Jest</a></li>\n<li>Vue官方推荐的： <a target=\"_blank\" rel=\"noopener\" href=\"https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5\">Vue Test Utils</a></li>\n<li>阮一峰老师的<a target=\"_blank\" rel=\"noopener\" href=\"http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html\">测试框架 Mocha 实例教程</a></li>\n</ul>\n<p>对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th>项目</th>\n<th>测试框架</th>\n<th>单元</th>\n<th>测试用例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Element</td>\n<td>Karma</td>\n<td>组件</td>\n<td>构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期</td>\n</tr>\n<tr>\n<td>Ant-design-vue</td>\n<td>jest</td>\n<td>组件</td>\n<td>属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理</td>\n</tr>\n<tr>\n<td>Axios</td>\n<td>Mocha、Karma</td>\n<td>类和函数模块</td>\n<td>模块的功能点是否正常</td>\n</tr>\n<tr>\n<td>Vue应用项目</td>\n<td>Vue Test Utils（官方推荐）</td>\n<td>组件、Util函数模块、Store模块、API模块</td>\n<td>渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等</td>\n</tr>\n</tbody>\n</table>\n<p>UI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。</p>\n<p>参考文档：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/flysqrlboy/article/details/79301241\">单元测试系列一-为什么要写单元测试，何时写，写多细</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F\">Vue Cookbok 为什么要测试</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/58d514102f301e007e74fee5\">测试你的前端代码 - part2（单元测试）</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg\" alt=\"我是图片\"></p>","more":"<p>测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。</p>\n<ol>\n<li>定义</li>\n<li>为什么要写单元测试</li>\n<li>什么项目写单元测试</li>\n<li>测试要写多细</li>\n<li>什么时候写</li>\n<li>如何写单元测试</li>\n</ol>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>单元测试在维基百科上的定义为</p>\n<blockquote>\n<p>单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。</p>\n</blockquote>\n<p>在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。</p>\n<h2 id=\"为什么要写单元测试\"><a href=\"#为什么要写单元测试\" class=\"headerlink\" title=\"为什么要写单元测试\"></a>为什么要写单元测试</h2><p>项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。</p>\n<p>这就是单元测试存在的意义：</p>\n<ol>\n<li>减少发开新特性产生的bug</li>\n<li>促进重构</li>\n<li>作为项目文档的补充以便理解和熟悉代码</li>\n<li>减少手动测试的成本</li>\n</ol>\n<h2 id=\"什么项目写单元测试\"><a href=\"#什么项目写单元测试\" class=\"headerlink\" title=\"什么项目写单元测试\"></a>什么项目写单元测试</h2><p>不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：</p>\n<ol>\n<li>项目的愿景清晰。规模大，模块多，交互多。</li>\n<li>项目服务的用户量多</li>\n<li>开发新功能引发其他模块bug的情况层出不穷</li>\n<li>测试妹子测不过了</li>\n</ol>\n<h2 id=\"测试要写多细\"><a href=\"#测试要写多细\" class=\"headerlink\" title=\"测试要写多细\"></a>测试要写多细</h2><p>极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：</p>\n<blockquote>\n<p>老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，<br>当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误<br>做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。</p>\n</blockquote>\n<p>鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：</p>\n<ol>\n<li>逻辑复杂，容易出错的代码</li>\n<li>核心的业务代码</li>\n<li>公共的代码</li>\n<li>不易理解，回头会忘的代码</li>\n</ol>\n<h2 id=\"什么时候写\"><a href=\"#什么时候写\" class=\"headerlink\" title=\"什么时候写\"></a>什么时候写</h2><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>介绍</th>\n<th>好处</th>\n<th>坏处</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>开发前写好测试用例</td>\n<td>属于TTD模式，测试驱动开发</td>\n<td>TTD是被证明能有效提高代码质量的测试手段</td>\n<td>不适用需求多变的前端模块，测试用例也要跟着变</td>\n</tr>\n<tr>\n<td>开发中写测试用例</td>\n<td>先写好一部分功能代码，紧跟着写测试用例</td>\n<td>测试随着业务代码同步</td>\n<td>相对于开发前要好一点</td>\n</tr>\n<tr>\n<td>开发后写测试用例</td>\n<td>当完成功能后再补上测试用例</td>\n<td>这时有些业务和模块已经稳定下来</td>\n<td>假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”</td>\n</tr>\n</tbody>\n</table>\n<p>对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。</p>\n<h2 id=\"如何写单元测试\"><a href=\"#如何写单元测试\" class=\"headerlink\" title=\"如何写单元测试\"></a>如何写单元测试</h2><p>首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。</p>\n<p>至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。</p>\n<ul>\n<li>前端常见的单元测试库：<a target=\"_blank\" rel=\"noopener\" href=\"https://mochajs.org/\">Mocha</a>、<a target=\"_blank\" rel=\"noopener\" href=\"https://karma-runner.github.io/latest/index.html\">Karma</a>、<a target=\"_blank\" rel=\"noopener\" href=\"https://jestjs.io/zh-Hans/\">Jest</a></li>\n<li>Vue官方推荐的： <a target=\"_blank\" rel=\"noopener\" href=\"https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5\">Vue Test Utils</a></li>\n<li>阮一峰老师的<a target=\"_blank\" rel=\"noopener\" href=\"http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html\">测试框架 Mocha 实例教程</a></li>\n</ul>\n<p>对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th>项目</th>\n<th>测试框架</th>\n<th>单元</th>\n<th>测试用例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Element</td>\n<td>Karma</td>\n<td>组件</td>\n<td>构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期</td>\n</tr>\n<tr>\n<td>Ant-design-vue</td>\n<td>jest</td>\n<td>组件</td>\n<td>属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理</td>\n</tr>\n<tr>\n<td>Axios</td>\n<td>Mocha、Karma</td>\n<td>类和函数模块</td>\n<td>模块的功能点是否正常</td>\n</tr>\n<tr>\n<td>Vue应用项目</td>\n<td>Vue Test Utils（官方推荐）</td>\n<td>组件、Util函数模块、Store模块、API模块</td>\n<td>渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等</td>\n</tr>\n</tbody>\n</table>\n<p>UI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。</p>\n<p>参考文档：</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/flysqrlboy/article/details/79301241\">单元测试系列一-为什么要写单元测试，何时写，写多细</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F\">Vue Cookbok 为什么要测试</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://juejin.im/post/58d514102f301e007e74fee5\">测试你的前端代码 - part2（单元测试）</a></li>\n</ul>"},{"title":"前端编码规范","date":"2018-10-07T08:22:48.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg)\n\n## 前言\n学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。\n\n<!-- more -->\n\n## html\nhtml标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：\n1. id,ref,class等属于标签的标识排前\n2. v-if,v-for等操作类的属性\n3. v-model和带绑定的属性\n4. 无绑定的属性\n5. 事件绑定\n\n另外属性个数大于三个要换行显示\n```\n<Tag \n    ref=\"tag\"\n    v-for=\"(item,index) in tabsInfo\"\n    :title=\"item.title\"\n    :link=\"item.router\"\n    :active=\"item.active\"\n    :key=\"index\"\n    palcehold=\"请输入\"\n    @click=\"handleClick\"\n><Tag>\n```\n\n## css\n业界比较推荐的一种规范是[BEM（块级元素修饰符）](http://getbem.com/)，它可以让你的css模块化，变得易维护。\n\n* [http://getbem.com/naming/](http://getbem.com/naming/)\n* [https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl](https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl)\n\n## js\n### 命名\n> 计算机科学只存在两个难题：缓存失效和命名。 --Phil KarIton\n\n命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到**让人阅读代码就像是阅读一本书，用代码述说故事。**\n\n在命名是我比较喜欢参照一下几点原则：\n* 命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语\n* 命名常量使用大写字母加下划线\n* 命名函数使用小驼峰，使用动词或动词短语，表示动作\n* 命名类使用就大驼峰\n\n### 函数\n> 函数的第一规则是短小，第二规则是还要更短小。 --《代码整洁之道》\n\n写函数我一般遵循以下几点原则：\n* 短小。假如函数过长，你就要做拆分，最好不要超过20行。\n* if else语句不要嵌套太深，最多两层。\n* 好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。\n* 参数不要过多，最好三个之内，三个以上要有足够的理由。\n* 减少副作用。\n* 错误提前返回\n```\nfunction observe(obj) {\n    if (obj && typeof obj === 'object') {\n        Object.keys(obj).forEach(key => {\n            defineReactive(obj, key, obj[key])\n        })    \n    }\n}\n改为：\nfunction observe(obj) {\n    if (!obj || typeof obj !==     'object') return\n\n    Object.keys(obj).forEach(key => {\n        defineReactive(obj, key, obj[key])\n    })\n}\n```\n* 自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。\n```\nfunction A() {\n    B()\n    C()\n}\n// 以下都是A的细节\nfunction B() {\n    D()\n}\n--// D属于B的细节，放在B下面\nfunction D() {}\n\nfunction C() {\n    E()\n}\n--// E属于C的细节，放在C下面\nfunction E() {}\n```\n* 公共API函数要写注释。以下摘自tj大神co库里的一段\n```\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n```\n\n如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。\n\n### 注释\n> \"别给糟糕的代码添加注释，重新写吧。\" --《代码整洁之道》\n\n《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：\n1. 好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。\n2. 注释是人写的，会有不准确性，有误人子弟的可能。\n3. 写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。\n\n但是所有的注释都不应该写吗？肯定不是。\n\n注释也分类型，**没必要写**的类型有：\n1. 喃喃自语类的注释，表意不明的信息。\n2. 多余的说明。这种注释像是翻译一遍函数名。\n3. 误导性的注释，就是不准确的描述了函数的意图。\n4. 评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。\n5. 骂人的注释。。\n\n**有必要**写注释的类型有：\n1. 法律信息和开源信息类，或者是一个库开头的说明信息。\n```\n/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n```\n2. 说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。\n```\n\n// 当B网站的api data更新时会通过storage通知这里\n// 监听storage，实时更新api data\nwindow.addEventListener(\"storage\", (event) => {\nconsole.warn('event', event);\nconst { key, newValue } = event;\nconst api_storage_key = `api_list_${this.tpl_config.app_name}`;\nif (key === api_storage_key) {\n  console.log(\"storage change,key \", key)\n  this.$store.commit(\"initApi\", {\n    data: JSON.parse(newValue).content || []\n  })\n  if (this.select_node.label === \"Form\") {\n    const api_name = this.props_temp.model.api\n    if (!api_name) return\n\n    const api = this.apilist.find(api => api.name === api_name);\n    // 需要更新当前Form面板关联api的参数配置\n    this.createFormContentWithApiConf(api)\n  }\n}\n})\n```\n以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。\n3. 对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。\n```\nrenameComponent(name) {\n    switch (name) {\n      // Switch不能作为组件名注册\n      case 'SwitchRadio':\n        name = 'Switch'\n        break\n    }\n    return name\n},\n```\n4. 对于特殊常量的说明。\n```\nconst TYPE_FORM = 0; // 上搜下标类模板\n```\n5. TODO注释\n```\nTODO: 太慢，待优化！\n```\n6. 公共API的注释\n7. 注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。\n```\nfor (let key in defaultData) {\n    this.props_temp[prop].relatedData[key] = {\n        label: key,\n        prop: key,\n        // 暂时去掉默认值\n        // value: defaultData[key],\n        inputType: \"Input\"\n    };\n }\n```","source":"_posts/前端编码规范.md","raw":"---\ntitle: 前端编码规范\ndate: 2018-10-07 16:22:48\ntags: [规范]\ncategories: [前端]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg)\n\n## 前言\n学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。\n\n<!-- more -->\n\n## html\nhtml标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：\n1. id,ref,class等属于标签的标识排前\n2. v-if,v-for等操作类的属性\n3. v-model和带绑定的属性\n4. 无绑定的属性\n5. 事件绑定\n\n另外属性个数大于三个要换行显示\n```\n<Tag \n    ref=\"tag\"\n    v-for=\"(item,index) in tabsInfo\"\n    :title=\"item.title\"\n    :link=\"item.router\"\n    :active=\"item.active\"\n    :key=\"index\"\n    palcehold=\"请输入\"\n    @click=\"handleClick\"\n><Tag>\n```\n\n## css\n业界比较推荐的一种规范是[BEM（块级元素修饰符）](http://getbem.com/)，它可以让你的css模块化，变得易维护。\n\n* [http://getbem.com/naming/](http://getbem.com/naming/)\n* [https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl](https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl)\n\n## js\n### 命名\n> 计算机科学只存在两个难题：缓存失效和命名。 --Phil KarIton\n\n命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到**让人阅读代码就像是阅读一本书，用代码述说故事。**\n\n在命名是我比较喜欢参照一下几点原则：\n* 命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语\n* 命名常量使用大写字母加下划线\n* 命名函数使用小驼峰，使用动词或动词短语，表示动作\n* 命名类使用就大驼峰\n\n### 函数\n> 函数的第一规则是短小，第二规则是还要更短小。 --《代码整洁之道》\n\n写函数我一般遵循以下几点原则：\n* 短小。假如函数过长，你就要做拆分，最好不要超过20行。\n* if else语句不要嵌套太深，最多两层。\n* 好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。\n* 参数不要过多，最好三个之内，三个以上要有足够的理由。\n* 减少副作用。\n* 错误提前返回\n```\nfunction observe(obj) {\n    if (obj && typeof obj === 'object') {\n        Object.keys(obj).forEach(key => {\n            defineReactive(obj, key, obj[key])\n        })    \n    }\n}\n改为：\nfunction observe(obj) {\n    if (!obj || typeof obj !==     'object') return\n\n    Object.keys(obj).forEach(key => {\n        defineReactive(obj, key, obj[key])\n    })\n}\n```\n* 自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。\n```\nfunction A() {\n    B()\n    C()\n}\n// 以下都是A的细节\nfunction B() {\n    D()\n}\n--// D属于B的细节，放在B下面\nfunction D() {}\n\nfunction C() {\n    E()\n}\n--// E属于C的细节，放在C下面\nfunction E() {}\n```\n* 公共API函数要写注释。以下摘自tj大神co库里的一段\n```\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n```\n\n如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。\n\n### 注释\n> \"别给糟糕的代码添加注释，重新写吧。\" --《代码整洁之道》\n\n《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：\n1. 好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。\n2. 注释是人写的，会有不准确性，有误人子弟的可能。\n3. 写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。\n\n但是所有的注释都不应该写吗？肯定不是。\n\n注释也分类型，**没必要写**的类型有：\n1. 喃喃自语类的注释，表意不明的信息。\n2. 多余的说明。这种注释像是翻译一遍函数名。\n3. 误导性的注释，就是不准确的描述了函数的意图。\n4. 评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。\n5. 骂人的注释。。\n\n**有必要**写注释的类型有：\n1. 法律信息和开源信息类，或者是一个库开头的说明信息。\n```\n/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n```\n2. 说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。\n```\n\n// 当B网站的api data更新时会通过storage通知这里\n// 监听storage，实时更新api data\nwindow.addEventListener(\"storage\", (event) => {\nconsole.warn('event', event);\nconst { key, newValue } = event;\nconst api_storage_key = `api_list_${this.tpl_config.app_name}`;\nif (key === api_storage_key) {\n  console.log(\"storage change,key \", key)\n  this.$store.commit(\"initApi\", {\n    data: JSON.parse(newValue).content || []\n  })\n  if (this.select_node.label === \"Form\") {\n    const api_name = this.props_temp.model.api\n    if (!api_name) return\n\n    const api = this.apilist.find(api => api.name === api_name);\n    // 需要更新当前Form面板关联api的参数配置\n    this.createFormContentWithApiConf(api)\n  }\n}\n})\n```\n以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。\n3. 对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。\n```\nrenameComponent(name) {\n    switch (name) {\n      // Switch不能作为组件名注册\n      case 'SwitchRadio':\n        name = 'Switch'\n        break\n    }\n    return name\n},\n```\n4. 对于特殊常量的说明。\n```\nconst TYPE_FORM = 0; // 上搜下标类模板\n```\n5. TODO注释\n```\nTODO: 太慢，待优化！\n```\n6. 公共API的注释\n7. 注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。\n```\nfor (let key in defaultData) {\n    this.props_temp[prop].relatedData[key] = {\n        label: key,\n        prop: key,\n        // 暂时去掉默认值\n        // value: defaultData[key],\n        inputType: \"Input\"\n    };\n }\n```","slug":"前端编码规范","published":1,"updated":"2022-12-06T15:30:38.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4i002pmcq04z62fzj7","content":"<p><img src=\"https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。</p>\n<span id=\"more\"></span>\n<h2 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h2><p>html标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：</p>\n<ol>\n<li>id,ref,class等属于标签的标识排前</li>\n<li>v-if,v-for等操作类的属性</li>\n<li>v-model和带绑定的属性</li>\n<li>无绑定的属性</li>\n<li>事件绑定</li>\n</ol>\n<p>另外属性个数大于三个要换行显示<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Tag </span><br><span class=\"line\">    <span class=\"attribute\">ref</span>=<span class=\"string\">&quot;tag&quot;</span></span><br><span class=\"line\">    <span class=\"attribute\">v-for</span>=<span class=\"string\">&quot;(item,index) in tabsInfo&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">title</span>=<span class=\"string\">&quot;item.title&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">link</span>=<span class=\"string\">&quot;item.router&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">active</span>=<span class=\"string\">&quot;item.active&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">key</span>=<span class=\"string\">&quot;index&quot;</span></span><br><span class=\"line\">    <span class=\"attribute\">palcehold</span>=<span class=\"string\">&quot;请输入&quot;</span></span><br><span class=\"line\">    @<span class=\"attribute\">click</span>=<span class=\"string\">&quot;handleClick&quot;</span></span><br><span class=\"line\">&gt;&lt;Tag&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><p>业界比较推荐的一种规范是<a target=\"_blank\" rel=\"noopener\" href=\"http://getbem.com/\">BEM（块级元素修饰符）</a>，它可以让你的css模块化，变得易维护。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://getbem.com/naming/\">http://getbem.com/naming/</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl\">https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl</a></li>\n</ul>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><blockquote>\n<p>计算机科学只存在两个难题：缓存失效和命名。 –Phil KarIton</p>\n</blockquote>\n<p>命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到<strong>让人阅读代码就像是阅读一本书，用代码述说故事。</strong></p>\n<p>在命名是我比较喜欢参照一下几点原则：</p>\n<ul>\n<li>命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语</li>\n<li>命名常量使用大写字母加下划线</li>\n<li>命名函数使用小驼峰，使用动词或动词短语，表示动作</li>\n<li>命名类使用就大驼峰</li>\n</ul>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><blockquote>\n<p>函数的第一规则是短小，第二规则是还要更短小。 –《代码整洁之道》</p>\n</blockquote>\n<p>写函数我一般遵循以下几点原则：</p>\n<ul>\n<li>短小。假如函数过长，你就要做拆分，最好不要超过20行。</li>\n<li>if else语句不要嵌套太深，最多两层。</li>\n<li>好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。</li>\n<li>参数不要过多，最好三个之内，三个以上要有足够的理由。</li>\n<li>减少副作用。</li>\n<li>错误提前返回<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">observe</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj &amp;&amp; <span class=\"built_in\">typeof</span> obj === <span class=\"string\">&#x27;object&#x27;</span>) &#123;</span><br><span class=\"line\">        Object.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">            defineReactive(obj, key, obj[key])</span><br><span class=\"line\">        &#125;)    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">改为：</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">observe</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj || <span class=\"built_in\">typeof</span> obj !==     <span class=\"string\">&#x27;object&#x27;</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Object.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">        defineReactive(obj, key, obj[key])</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function <span class=\"selector-tag\">A</span>() &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">B</span>()</span><br><span class=\"line\">    <span class=\"built_in\">C</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 以下都是A的细节</span></span><br><span class=\"line\">function <span class=\"selector-tag\">B</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">D</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// D属于B的细节，放在B下面</span></span><br><span class=\"line\">function <span class=\"built_in\">D</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function <span class=\"built_in\">C</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">E</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// E属于C的细节，放在C下面</span></span><br><span class=\"line\">function <span class=\"built_in\">E</span>() &#123;&#125;</span><br></pre></td></tr></table></figure></li>\n<li>公共API函数要写注释。以下摘自tj大神co库里的一段<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * Wrap the given generator `fn` into a</span><br><span class=\"line\"> * <span class=\"keyword\">function</span> <span class=\"title\">that</span> returns a promise.</span><br><span class=\"line\"> * This <span class=\"keyword\">is</span> a <span class=\"keyword\">separate</span> <span class=\"keyword\">function</span> <span class=\"title\">so</span> that</span><br><span class=\"line\"> * every `co()` call doesn&#x27;t create a new,</span><br><span class=\"line\"> * unnecessary closure.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;GeneratorFunction&#125; fn</span><br><span class=\"line\"> * @<span class=\"keyword\">return</span> <span class=\"type\">&#123;Function&#125;</span></span><br><span class=\"line\"> * @api public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">co.wrap = <span class=\"keyword\">function</span> <span class=\"title\"></span>(fn) &#123;</span><br><span class=\"line\">  createPromise.__generatorFunction__ = fn;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">createPromise</span>;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title\">createPromise</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">co.call(this,</span> fn.apply(this, arguments));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。</p>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><blockquote>\n<p>“别给糟糕的代码添加注释，重新写吧。” –《代码整洁之道》</p>\n</blockquote>\n<p>《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：</p>\n<ol>\n<li>好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。</li>\n<li>注释是人写的，会有不准确性，有误人子弟的可能。</li>\n<li>写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。</li>\n</ol>\n<p>但是所有的注释都不应该写吗？肯定不是。</p>\n<p>注释也分类型，<strong>没必要写</strong>的类型有：</p>\n<ol>\n<li>喃喃自语类的注释，表意不明的信息。</li>\n<li>多余的说明。这种注释像是翻译一遍函数名。</li>\n<li>误导性的注释，就是不准确的描述了函数的意图。</li>\n<li>评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。</li>\n<li>骂人的注释。。</li>\n</ol>\n<p><strong>有必要</strong>写注释的类型有：</p>\n<ol>\n<li>法律信息和开源信息类，或者是一个库开头的说明信息。<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"emphasis\">*!</span></span><br><span class=\"line\"><span class=\"emphasis\"> *</span> Vue.js v2.6.10</span><br><span class=\"line\"><span class=\"bullet\"> *</span> (c) 2014-2019 Evan You</span><br><span class=\"line\"><span class=\"bullet\"> *</span> Released under the MIT License.</span><br><span class=\"line\"> <span class=\"emphasis\">*/</span></span><br></pre></td></tr></table></figure></li>\n<li>说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 当B网站的api data更新时会通过storage通知这里</span></span><br><span class=\"line\"><span class=\"comment\">// 监听storage，实时更新api data</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;storage&quot;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;event&#x27;</span>, event);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; key, newValue &#125; = event;</span><br><span class=\"line\"><span class=\"keyword\">const</span> api_storage_key = <span class=\"string\">`api_list_<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.tpl_config.app_name&#125;</span>`</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (key === api_storage_key) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;storage change,key &quot;</span>, key)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;initApi&quot;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(newValue).<span class=\"property\">content</span> || []</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">select_node</span>.<span class=\"property\">label</span> === <span class=\"string\">&quot;Form&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> api_name = <span class=\"variable language_\">this</span>.<span class=\"property\">props_temp</span>.<span class=\"property\">model</span>.<span class=\"property\">api</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!api_name) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> api = <span class=\"variable language_\">this</span>.<span class=\"property\">apilist</span>.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">api</span> =&gt;</span> api.<span class=\"property\">name</span> === api_name);</span><br><span class=\"line\">    <span class=\"comment\">// 需要更新当前Form面板关联api的参数配置</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">createFormContentWithApiConf</span>(api)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。</li>\n<li>对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">renameComponent(<span class=\"built_in\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"built_in\">name</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Switch不能作为组件名注册</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&#x27;SwitchRadio&#x27;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">name</span> = <span class=\"string\">&#x27;Switch&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return <span class=\"built_in\">name</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li>对于特殊常量的说明。<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const TYPE_FORM <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"comment\">; // 上搜下标类模板</span></span><br></pre></td></tr></table></figure></li>\n<li>TODO注释<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">TODO:</span> 太慢，待优化！</span><br></pre></td></tr></table></figure></li>\n<li>公共API的注释</li>\n<li>注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> <span class=\"built_in\">key</span> <span class=\"keyword\">in</span> defaultData) &#123;</span><br><span class=\"line\">    this.props_temp[prop].relatedData[<span class=\"built_in\">key</span>] = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">label</span>: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        prop: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        // 暂时去掉默认值</span><br><span class=\"line\">        // value: defaultData[<span class=\"built_in\">key</span>],</span><br><span class=\"line\">        inputType: <span class=\"string\">&quot;Input&quot;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。</p>","more":"<h2 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h2><p>html标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：</p>\n<ol>\n<li>id,ref,class等属于标签的标识排前</li>\n<li>v-if,v-for等操作类的属性</li>\n<li>v-model和带绑定的属性</li>\n<li>无绑定的属性</li>\n<li>事件绑定</li>\n</ol>\n<p>另外属性个数大于三个要换行显示<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Tag </span><br><span class=\"line\">    <span class=\"attribute\">ref</span>=<span class=\"string\">&quot;tag&quot;</span></span><br><span class=\"line\">    <span class=\"attribute\">v-for</span>=<span class=\"string\">&quot;(item,index) in tabsInfo&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">title</span>=<span class=\"string\">&quot;item.title&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">link</span>=<span class=\"string\">&quot;item.router&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">active</span>=<span class=\"string\">&quot;item.active&quot;</span></span><br><span class=\"line\">    :<span class=\"attribute\">key</span>=<span class=\"string\">&quot;index&quot;</span></span><br><span class=\"line\">    <span class=\"attribute\">palcehold</span>=<span class=\"string\">&quot;请输入&quot;</span></span><br><span class=\"line\">    @<span class=\"attribute\">click</span>=<span class=\"string\">&quot;handleClick&quot;</span></span><br><span class=\"line\">&gt;&lt;Tag&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><p>业界比较推荐的一种规范是<a target=\"_blank\" rel=\"noopener\" href=\"http://getbem.com/\">BEM（块级元素修饰符）</a>，它可以让你的css模块化，变得易维护。</p>\n<ul>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"http://getbem.com/naming/\">http://getbem.com/naming/</a></li>\n<li><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl\">https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl</a></li>\n</ul>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><blockquote>\n<p>计算机科学只存在两个难题：缓存失效和命名。 –Phil KarIton</p>\n</blockquote>\n<p>命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到<strong>让人阅读代码就像是阅读一本书，用代码述说故事。</strong></p>\n<p>在命名是我比较喜欢参照一下几点原则：</p>\n<ul>\n<li>命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语</li>\n<li>命名常量使用大写字母加下划线</li>\n<li>命名函数使用小驼峰，使用动词或动词短语，表示动作</li>\n<li>命名类使用就大驼峰</li>\n</ul>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><blockquote>\n<p>函数的第一规则是短小，第二规则是还要更短小。 –《代码整洁之道》</p>\n</blockquote>\n<p>写函数我一般遵循以下几点原则：</p>\n<ul>\n<li>短小。假如函数过长，你就要做拆分，最好不要超过20行。</li>\n<li>if else语句不要嵌套太深，最多两层。</li>\n<li>好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。</li>\n<li>参数不要过多，最好三个之内，三个以上要有足够的理由。</li>\n<li>减少副作用。</li>\n<li>错误提前返回<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">observe</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj &amp;&amp; <span class=\"built_in\">typeof</span> obj === <span class=\"string\">&#x27;object&#x27;</span>) &#123;</span><br><span class=\"line\">        Object.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">            defineReactive(obj, key, obj[key])</span><br><span class=\"line\">        &#125;)    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">改为：</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">observe</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj || <span class=\"built_in\">typeof</span> obj !==     <span class=\"string\">&#x27;object&#x27;</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    Object.keys(obj).forEach(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">        defineReactive(obj, key, obj[key])</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function <span class=\"selector-tag\">A</span>() &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">B</span>()</span><br><span class=\"line\">    <span class=\"built_in\">C</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 以下都是A的细节</span></span><br><span class=\"line\">function <span class=\"selector-tag\">B</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">D</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// D属于B的细节，放在B下面</span></span><br><span class=\"line\">function <span class=\"built_in\">D</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function <span class=\"built_in\">C</span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">E</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// E属于C的细节，放在C下面</span></span><br><span class=\"line\">function <span class=\"built_in\">E</span>() &#123;&#125;</span><br></pre></td></tr></table></figure></li>\n<li>公共API函数要写注释。以下摘自tj大神co库里的一段<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * Wrap the given generator `fn` into a</span><br><span class=\"line\"> * <span class=\"keyword\">function</span> <span class=\"title\">that</span> returns a promise.</span><br><span class=\"line\"> * This <span class=\"keyword\">is</span> a <span class=\"keyword\">separate</span> <span class=\"keyword\">function</span> <span class=\"title\">so</span> that</span><br><span class=\"line\"> * every `co()` call doesn&#x27;t create a new,</span><br><span class=\"line\"> * unnecessary closure.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;GeneratorFunction&#125; fn</span><br><span class=\"line\"> * @<span class=\"keyword\">return</span> <span class=\"type\">&#123;Function&#125;</span></span><br><span class=\"line\"> * @api public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">co.wrap = <span class=\"keyword\">function</span> <span class=\"title\"></span>(fn) &#123;</span><br><span class=\"line\">  createPromise.__generatorFunction__ = fn;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"type\">createPromise</span>;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title\">createPromise</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">co.call(this,</span> fn.apply(this, arguments));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。</p>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><blockquote>\n<p>“别给糟糕的代码添加注释，重新写吧。” –《代码整洁之道》</p>\n</blockquote>\n<p>《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：</p>\n<ol>\n<li>好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。</li>\n<li>注释是人写的，会有不准确性，有误人子弟的可能。</li>\n<li>写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。</li>\n</ol>\n<p>但是所有的注释都不应该写吗？肯定不是。</p>\n<p>注释也分类型，<strong>没必要写</strong>的类型有：</p>\n<ol>\n<li>喃喃自语类的注释，表意不明的信息。</li>\n<li>多余的说明。这种注释像是翻译一遍函数名。</li>\n<li>误导性的注释，就是不准确的描述了函数的意图。</li>\n<li>评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。</li>\n<li>骂人的注释。。</li>\n</ol>\n<p><strong>有必要</strong>写注释的类型有：</p>\n<ol>\n<li>法律信息和开源信息类，或者是一个库开头的说明信息。<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"emphasis\">*!</span></span><br><span class=\"line\"><span class=\"emphasis\"> *</span> Vue.js v2.6.10</span><br><span class=\"line\"><span class=\"bullet\"> *</span> (c) 2014-2019 Evan You</span><br><span class=\"line\"><span class=\"bullet\"> *</span> Released under the MIT License.</span><br><span class=\"line\"> <span class=\"emphasis\">*/</span></span><br></pre></td></tr></table></figure></li>\n<li>说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 当B网站的api data更新时会通过storage通知这里</span></span><br><span class=\"line\"><span class=\"comment\">// 监听storage，实时更新api data</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;storage&quot;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;event&#x27;</span>, event);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; key, newValue &#125; = event;</span><br><span class=\"line\"><span class=\"keyword\">const</span> api_storage_key = <span class=\"string\">`api_list_<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.tpl_config.app_name&#125;</span>`</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (key === api_storage_key) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;storage change,key &quot;</span>, key)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&quot;initApi&quot;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(newValue).<span class=\"property\">content</span> || []</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">select_node</span>.<span class=\"property\">label</span> === <span class=\"string\">&quot;Form&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> api_name = <span class=\"variable language_\">this</span>.<span class=\"property\">props_temp</span>.<span class=\"property\">model</span>.<span class=\"property\">api</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!api_name) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> api = <span class=\"variable language_\">this</span>.<span class=\"property\">apilist</span>.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">api</span> =&gt;</span> api.<span class=\"property\">name</span> === api_name);</span><br><span class=\"line\">    <span class=\"comment\">// 需要更新当前Form面板关联api的参数配置</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">createFormContentWithApiConf</span>(api)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。</li>\n<li>对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">renameComponent(<span class=\"built_in\">name</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"built_in\">name</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Switch不能作为组件名注册</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">&#x27;SwitchRadio&#x27;</span>:</span><br><span class=\"line\">        <span class=\"built_in\">name</span> = <span class=\"string\">&#x27;Switch&#x27;</span></span><br><span class=\"line\">        <span class=\"built_in\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return <span class=\"built_in\">name</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></li>\n<li>对于特殊常量的说明。<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const TYPE_FORM <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"comment\">; // 上搜下标类模板</span></span><br></pre></td></tr></table></figure></li>\n<li>TODO注释<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">TODO:</span> 太慢，待优化！</span><br></pre></td></tr></table></figure></li>\n<li>公共API的注释</li>\n<li>注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> <span class=\"built_in\">key</span> <span class=\"keyword\">in</span> defaultData) &#123;</span><br><span class=\"line\">    this.props_temp[prop].relatedData[<span class=\"built_in\">key</span>] = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">label</span>: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        prop: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        // 暂时去掉默认值</span><br><span class=\"line\">        // value: defaultData[<span class=\"built_in\">key</span>],</span><br><span class=\"line\">        inputType: <span class=\"string\">&quot;Input&quot;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"场景控制流程解读","date":"2020-10-31T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n\n# 场景控制流程解读\n\n## 1 初始化流程\n\n场景的初始化和进出控制有SceneMgr类负责管理，SceneMgr类实例化的时候，会对所有的场景类做一系列的初始化操作，包括场景类实例化，加入场景类中的功能组件类的实例化。\n\n![](场景控制流程解读/image_SqQ7dNS1Cb.png)\n\n1.  实例化所有注册到SceneMgr:\\_registerScenes()中的场景类，然后在每个场景中注入onEnterFinished和onStageLoadFinished函数，分别在进入完成和舞台加载完成时调用，控制loading页面的关闭和资源的释放\n\n2.  在实例化Scene Component时，执行自身的onInit函数，进行初始化的工作。\n\n以上就是场景实例化的流程。\n\n加入新的场景代码需要以下：\n\n1.  在SceneType文件加入场景type\n\n2.  在Editor的pjg>场景编辑器>场景导出，新增场景id和资源配置，保存导出生成t\\_scene配置\n\n3.  新增场景类代码，并加入stage组件，控制场景资源的加载。\n\n4.  在SceneMgr:\\_registerScenes()注册场景类\n\n## 2 进入流程\n\n![](场景控制流程解读/image_3NDenmx_Of.png)\n\n1.  stage组件类中需要加入load函数，控制场景资源的加载，并且在资源加载完成回调中调用调用\\_onStageLoadFinished函数和\\_onAllLoaded函数\n\n2.  调用\\_onStageLoadFinished函数需在\\_onAllLoaded函数之前，\\_onAllLoaded函数其实就是调用了scene:onEnterFinished函数&#x20;\n\n![](场景控制流程解读/image_xvaTyll7c-.png)\n\n1.  场景资源其实是prefeb资源，实例化后被挂载在【SCENEROOT/场景名]】节点下\n\n## 3 退出流程\n\n![](场景控制流程解读/image_YlLPrr-tq-.png)\n\n## 4 场景组件的类型和作用\n\n|                      |                                                                          |                                                     |    |\n| -------------------- | ------------------------------------------------------------------------ | --------------------------------------------------- | -- |\n| 类型                   | 用途                                                                       | 相关配置表                                               | 其他 |\n| SceneStageBase类      | 控制场景资源（舞台）加载和释放，注入的onEnterFinished和onStageLoadFinished函数在这个类中调用          | t\\_scene（在Editor上【pjg>场景编辑器>场景导出】生成）                |    |\n| SceneCameraBase类     | 负责相机的参数设置和相机的焦点跟随，相机的参数配置在camera表                                        | t\\_camera                                           |    |\n| SceneZoneMgr类        | 负责管理场景上所有的区域，场景分区域加载是管理大资源加载的一种手段。一般简单的场景不需要加，主场景和主线副本场景比较大会分区域，需要用到这个类。 | t\\_scene，t\\_scene\\_zone（在Editor【pjg>场景编辑器>区域导出】上生成） |    |\n| SceneCfgFinder类      | 负责管理场景配置信息的查找，场景配置查找的代码可以写进这个类的衍生类。                                      |                                                     |    |\n| SceneGlobalTouchMgr类 | 负责识别和管理场景上的屏幕触摸事件，包括点击、缩放、和拖拽。最大允许两点触摸，小屋的放大缩小就是通过这个类实现的                 |                                                     |    |\n| TriggerFactory类      | 场景触发器，通过id初始化触发器并派发触发器根据条件触发动作。比如场景中的预制和特效加载完成触发一些动作                     | t\\_scene\\_trigger，t\\_scene\\_triggeraction           |    |\n| UnitFactoryBase类     | 管理场景里面的各个单元，比如主界面的陆吾猫的实现就可以当做一个单元                                        |                                                     |    |\n| UnitBase类            | 子类作为单元各个功能组件的容器，单元类各功能的实现需要封装进UnitComponentBase类的之类                      |                                                     |    |\n| UnitComponentBase类   | 单元功能组件的封装                                                                |                                                     |    |\n","source":"_posts/场景控制流程解读.md","raw":"---\ntitle: 场景控制流程解读\ndate: 2020-11-01\ntags: [场景,Scene]\ncategories: [Unity游戏开发,基础系统]\n---\n\n<!-- more -->\n\n\n\n# 场景控制流程解读\n\n## 1 初始化流程\n\n场景的初始化和进出控制有SceneMgr类负责管理，SceneMgr类实例化的时候，会对所有的场景类做一系列的初始化操作，包括场景类实例化，加入场景类中的功能组件类的实例化。\n\n![](场景控制流程解读/image_SqQ7dNS1Cb.png)\n\n1.  实例化所有注册到SceneMgr:\\_registerScenes()中的场景类，然后在每个场景中注入onEnterFinished和onStageLoadFinished函数，分别在进入完成和舞台加载完成时调用，控制loading页面的关闭和资源的释放\n\n2.  在实例化Scene Component时，执行自身的onInit函数，进行初始化的工作。\n\n以上就是场景实例化的流程。\n\n加入新的场景代码需要以下：\n\n1.  在SceneType文件加入场景type\n\n2.  在Editor的pjg>场景编辑器>场景导出，新增场景id和资源配置，保存导出生成t\\_scene配置\n\n3.  新增场景类代码，并加入stage组件，控制场景资源的加载。\n\n4.  在SceneMgr:\\_registerScenes()注册场景类\n\n## 2 进入流程\n\n![](场景控制流程解读/image_3NDenmx_Of.png)\n\n1.  stage组件类中需要加入load函数，控制场景资源的加载，并且在资源加载完成回调中调用调用\\_onStageLoadFinished函数和\\_onAllLoaded函数\n\n2.  调用\\_onStageLoadFinished函数需在\\_onAllLoaded函数之前，\\_onAllLoaded函数其实就是调用了scene:onEnterFinished函数&#x20;\n\n![](场景控制流程解读/image_xvaTyll7c-.png)\n\n1.  场景资源其实是prefeb资源，实例化后被挂载在【SCENEROOT/场景名]】节点下\n\n## 3 退出流程\n\n![](场景控制流程解读/image_YlLPrr-tq-.png)\n\n## 4 场景组件的类型和作用\n\n|                      |                                                                          |                                                     |    |\n| -------------------- | ------------------------------------------------------------------------ | --------------------------------------------------- | -- |\n| 类型                   | 用途                                                                       | 相关配置表                                               | 其他 |\n| SceneStageBase类      | 控制场景资源（舞台）加载和释放，注入的onEnterFinished和onStageLoadFinished函数在这个类中调用          | t\\_scene（在Editor上【pjg>场景编辑器>场景导出】生成）                |    |\n| SceneCameraBase类     | 负责相机的参数设置和相机的焦点跟随，相机的参数配置在camera表                                        | t\\_camera                                           |    |\n| SceneZoneMgr类        | 负责管理场景上所有的区域，场景分区域加载是管理大资源加载的一种手段。一般简单的场景不需要加，主场景和主线副本场景比较大会分区域，需要用到这个类。 | t\\_scene，t\\_scene\\_zone（在Editor【pjg>场景编辑器>区域导出】上生成） |    |\n| SceneCfgFinder类      | 负责管理场景配置信息的查找，场景配置查找的代码可以写进这个类的衍生类。                                      |                                                     |    |\n| SceneGlobalTouchMgr类 | 负责识别和管理场景上的屏幕触摸事件，包括点击、缩放、和拖拽。最大允许两点触摸，小屋的放大缩小就是通过这个类实现的                 |                                                     |    |\n| TriggerFactory类      | 场景触发器，通过id初始化触发器并派发触发器根据条件触发动作。比如场景中的预制和特效加载完成触发一些动作                     | t\\_scene\\_trigger，t\\_scene\\_triggeraction           |    |\n| UnitFactoryBase类     | 管理场景里面的各个单元，比如主界面的陆吾猫的实现就可以当做一个单元                                        |                                                     |    |\n| UnitBase类            | 子类作为单元各个功能组件的容器，单元类各功能的实现需要封装进UnitComponentBase类的之类                      |                                                     |    |\n| UnitComponentBase类   | 单元功能组件的封装                                                                |                                                     |    |\n","slug":"场景控制流程解读","published":1,"updated":"2022-12-06T15:30:38.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4j002rmcq05htz09wg","content":"<span id=\"more\"></span>\n<h1 id=\"场景控制流程解读\"><a href=\"#场景控制流程解读\" class=\"headerlink\" title=\"场景控制流程解读\"></a>场景控制流程解读</h1><h2 id=\"1-初始化流程\"><a href=\"#1-初始化流程\" class=\"headerlink\" title=\"1 初始化流程\"></a>1 初始化流程</h2><p>场景的初始化和进出控制有SceneMgr类负责管理，SceneMgr类实例化的时候，会对所有的场景类做一系列的初始化操作，包括场景类实例化，加入场景类中的功能组件类的实例化。</p>\n<img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_SqQ7dNS1Cb.png\" class=\"\">\n<ol>\n<li><p>实例化所有注册到SceneMgr:_registerScenes()中的场景类，然后在每个场景中注入onEnterFinished和onStageLoadFinished函数，分别在进入完成和舞台加载完成时调用，控制loading页面的关闭和资源的释放</p>\n</li>\n<li><p>在实例化Scene Component时，执行自身的onInit函数，进行初始化的工作。</p>\n</li>\n</ol>\n<p>以上就是场景实例化的流程。</p>\n<p>加入新的场景代码需要以下：</p>\n<ol>\n<li><p>在SceneType文件加入场景type</p>\n</li>\n<li><p>在Editor的pjg&gt;场景编辑器&gt;场景导出，新增场景id和资源配置，保存导出生成t_scene配置</p>\n</li>\n<li><p>新增场景类代码，并加入stage组件，控制场景资源的加载。</p>\n</li>\n<li><p>在SceneMgr:_registerScenes()注册场景类</p>\n</li>\n</ol>\n<h2 id=\"2-进入流程\"><a href=\"#2-进入流程\" class=\"headerlink\" title=\"2 进入流程\"></a>2 进入流程</h2><img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_3NDenmx_Of.png\" class=\"\">\n<ol>\n<li><p>stage组件类中需要加入load函数，控制场景资源的加载，并且在资源加载完成回调中调用调用_onStageLoadFinished函数和_onAllLoaded函数</p>\n</li>\n<li><p>调用_onStageLoadFinished函数需在_onAllLoaded函数之前，_onAllLoaded函数其实就是调用了scene:onEnterFinished函数&#x20;</p>\n</li>\n</ol>\n<img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_xvaTyll7c-.png\" class=\"\">\n<ol>\n<li>场景资源其实是prefeb资源，实例化后被挂载在【SCENEROOT/场景名]】节点下</li>\n</ol>\n<h2 id=\"3-退出流程\"><a href=\"#3-退出流程\" class=\"headerlink\" title=\"3 退出流程\"></a>3 退出流程</h2><img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_YlLPrr-tq-.png\" class=\"\">\n<h2 id=\"4-场景组件的类型和作用\"><a href=\"#4-场景组件的类型和作用\" class=\"headerlink\" title=\"4 场景组件的类型和作用\"></a>4 场景组件的类型和作用</h2><table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类型</td>\n<td>用途</td>\n<td>相关配置表</td>\n<td>其他</td>\n</tr>\n<tr>\n<td>SceneStageBase类</td>\n<td>控制场景资源（舞台）加载和释放，注入的onEnterFinished和onStageLoadFinished函数在这个类中调用</td>\n<td>t_scene（在Editor上【pjg&gt;场景编辑器&gt;场景导出】生成）</td>\n<td></td>\n</tr>\n<tr>\n<td>SceneCameraBase类</td>\n<td>负责相机的参数设置和相机的焦点跟随，相机的参数配置在camera表</td>\n<td>t_camera</td>\n<td></td>\n</tr>\n<tr>\n<td>SceneZoneMgr类</td>\n<td>负责管理场景上所有的区域，场景分区域加载是管理大资源加载的一种手段。一般简单的场景不需要加，主场景和主线副本场景比较大会分区域，需要用到这个类。</td>\n<td>t_scene，t_scene_zone（在Editor【pjg&gt;场景编辑器&gt;区域导出】上生成）</td>\n<td></td>\n</tr>\n<tr>\n<td>SceneCfgFinder类</td>\n<td>负责管理场景配置信息的查找，场景配置查找的代码可以写进这个类的衍生类。</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SceneGlobalTouchMgr类</td>\n<td>负责识别和管理场景上的屏幕触摸事件，包括点击、缩放、和拖拽。最大允许两点触摸，小屋的放大缩小就是通过这个类实现的</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>TriggerFactory类</td>\n<td>场景触发器，通过id初始化触发器并派发触发器根据条件触发动作。比如场景中的预制和特效加载完成触发一些动作</td>\n<td>t_scene_trigger，t_scene_triggeraction</td>\n<td></td>\n</tr>\n<tr>\n<td>UnitFactoryBase类</td>\n<td>管理场景里面的各个单元，比如主界面的陆吾猫的实现就可以当做一个单元</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>UnitBase类</td>\n<td>子类作为单元各个功能组件的容器，单元类各功能的实现需要封装进UnitComponentBase类的之类</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>UnitComponentBase类</td>\n<td>单元功能组件的封装</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"场景控制流程解读\"><a href=\"#场景控制流程解读\" class=\"headerlink\" title=\"场景控制流程解读\"></a>场景控制流程解读</h1><h2 id=\"1-初始化流程\"><a href=\"#1-初始化流程\" class=\"headerlink\" title=\"1 初始化流程\"></a>1 初始化流程</h2><p>场景的初始化和进出控制有SceneMgr类负责管理，SceneMgr类实例化的时候，会对所有的场景类做一系列的初始化操作，包括场景类实例化，加入场景类中的功能组件类的实例化。</p>\n<img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_SqQ7dNS1Cb.png\" class=\"\">\n<ol>\n<li><p>实例化所有注册到SceneMgr:_registerScenes()中的场景类，然后在每个场景中注入onEnterFinished和onStageLoadFinished函数，分别在进入完成和舞台加载完成时调用，控制loading页面的关闭和资源的释放</p>\n</li>\n<li><p>在实例化Scene Component时，执行自身的onInit函数，进行初始化的工作。</p>\n</li>\n</ol>\n<p>以上就是场景实例化的流程。</p>\n<p>加入新的场景代码需要以下：</p>\n<ol>\n<li><p>在SceneType文件加入场景type</p>\n</li>\n<li><p>在Editor的pjg&gt;场景编辑器&gt;场景导出，新增场景id和资源配置，保存导出生成t_scene配置</p>\n</li>\n<li><p>新增场景类代码，并加入stage组件，控制场景资源的加载。</p>\n</li>\n<li><p>在SceneMgr:_registerScenes()注册场景类</p>\n</li>\n</ol>\n<h2 id=\"2-进入流程\"><a href=\"#2-进入流程\" class=\"headerlink\" title=\"2 进入流程\"></a>2 进入流程</h2><img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_3NDenmx_Of.png\" class=\"\">\n<ol>\n<li><p>stage组件类中需要加入load函数，控制场景资源的加载，并且在资源加载完成回调中调用调用_onStageLoadFinished函数和_onAllLoaded函数</p>\n</li>\n<li><p>调用_onStageLoadFinished函数需在_onAllLoaded函数之前，_onAllLoaded函数其实就是调用了scene:onEnterFinished函数&#x20;</p>\n</li>\n</ol>\n<img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_xvaTyll7c-.png\" class=\"\">\n<ol>\n<li>场景资源其实是prefeb资源，实例化后被挂载在【SCENEROOT/场景名]】节点下</li>\n</ol>\n<h2 id=\"3-退出流程\"><a href=\"#3-退出流程\" class=\"headerlink\" title=\"3 退出流程\"></a>3 退出流程</h2><img src=\"/2020/11/01/%E5%9C%BA%E6%99%AF%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%A3%E8%AF%BB/image_YlLPrr-tq-.png\" class=\"\">\n<h2 id=\"4-场景组件的类型和作用\"><a href=\"#4-场景组件的类型和作用\" class=\"headerlink\" title=\"4 场景组件的类型和作用\"></a>4 场景组件的类型和作用</h2><table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类型</td>\n<td>用途</td>\n<td>相关配置表</td>\n<td>其他</td>\n</tr>\n<tr>\n<td>SceneStageBase类</td>\n<td>控制场景资源（舞台）加载和释放，注入的onEnterFinished和onStageLoadFinished函数在这个类中调用</td>\n<td>t_scene（在Editor上【pjg&gt;场景编辑器&gt;场景导出】生成）</td>\n<td></td>\n</tr>\n<tr>\n<td>SceneCameraBase类</td>\n<td>负责相机的参数设置和相机的焦点跟随，相机的参数配置在camera表</td>\n<td>t_camera</td>\n<td></td>\n</tr>\n<tr>\n<td>SceneZoneMgr类</td>\n<td>负责管理场景上所有的区域，场景分区域加载是管理大资源加载的一种手段。一般简单的场景不需要加，主场景和主线副本场景比较大会分区域，需要用到这个类。</td>\n<td>t_scene，t_scene_zone（在Editor【pjg&gt;场景编辑器&gt;区域导出】上生成）</td>\n<td></td>\n</tr>\n<tr>\n<td>SceneCfgFinder类</td>\n<td>负责管理场景配置信息的查找，场景配置查找的代码可以写进这个类的衍生类。</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SceneGlobalTouchMgr类</td>\n<td>负责识别和管理场景上的屏幕触摸事件，包括点击、缩放、和拖拽。最大允许两点触摸，小屋的放大缩小就是通过这个类实现的</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>TriggerFactory类</td>\n<td>场景触发器，通过id初始化触发器并派发触发器根据条件触发动作。比如场景中的预制和特效加载完成触发一些动作</td>\n<td>t_scene_trigger，t_scene_triggeraction</td>\n<td></td>\n</tr>\n<tr>\n<td>UnitFactoryBase类</td>\n<td>管理场景里面的各个单元，比如主界面的陆吾猫的实现就可以当做一个单元</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>UnitBase类</td>\n<td>子类作为单元各个功能组件的容器，单元类各功能的实现需要封装进UnitComponentBase类的之类</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>UnitComponentBase类</td>\n<td>单元功能组件的封装</td>\n<td></td>\n</tr>\n</tbody>\n</table>"},{"title":"基于Express4.0开发web","date":"2017-06-24T16:00:00.000Z","_content":"\n### 1.快速搭建\n在全局下安装express  \n```\nnpm install -g express  \n```\n执行  \n```\nexpress -v yourProject \t\n或者\ncd yourProject\nexpress\n```\n就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade\n\n\n### 2.express中间件\n```\nvar app = requrie('express')();\napp.use (function (req, res, next) {\n    ...\n    next()\n})  \n```\nnext()作用是交付控制权，前往下一个中间件\n可以利用这一点做验证功能\n\n### 3.MVC架构\n```\n/app\n    /controllers\n    /models\n    /schemas\n    /views\n/public\n    /libs\n    /css\n    /js\n/router\n    router.js\napp.js\npackage.json\n.bowerrc\nbower.json\ngruntfile.js\n.gitignore\n\n```\n以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。  \nbower模块用来安装项目依赖的前端框架。需要在全局安装bower\n```\nnpm install -g bower\n```\n安装bootstrap\n```\nbower init\nbower install bootstrap\n```\nbower init 生成bower.json\n然后安装bootstrap时，会根据.bowerrc文件\n```\n{\n    \"directory\": \"public/libs\"\n}\n```\n把依赖的框架安装在public/libs下\n\n### 4.项目管理工具grunt\ngruntfile.js\n```js\nmodule.exports = function(grunt) {\n\n    grunt.initConfig({\n        watch: {\n            jade: {\n                files: ['views/**'],\n                options: {\n                    livereload: true\n                }\n            },\n            js: {\n                files: ['public/js/**', 'app/**/*.js'],\n                //tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            uglify: {\n                files: ['public/**/*.js'],\n                tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            styles: {\n                files: ['public/**/*.less'],\n                tasks: ['less'],\n                options: {\n                    nospawn: true\n                }\n            }\n        },\n\n        nodemon: {\n            dev: {\n                script: 'bin/www',  //入口文件\n                options: {\n                    nodeArgs: ['--debug'], //开启开发模式\n                    args:　[],\n                    ignoredFiles: ['README.md', 'node_modules/**', 'public/libs/**', '.vscode'],\n                    watchedExtensions: ['js'],\n                    watchedFolders: ['./'], //监听定义的文件夹,根目录\n                    debug: true,\n                    delayTime: 1000,\n                    env: {\n                        PORT: 3000\n                    },\n                    cwd: __dirname\n                }\n            }\n        },\n\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc',\n                ignores: ['public/libs/**/*.js']\n            },\n            all: ['public/javascripts/*.js', 'test/**/*.js', 'app/**/*.js']\n        },\n\n        less: {\n            development: {\n                options: {\n                    compress: true,\n                    yuicompress: true,\n                    optimization: 2\n                },\n                files: {\n                    'public/build/index.css' : 'public/less/index.less'\n                }\n            }\n        },\n\n        uglify: {\n            development: {\n                files: {\n                'public/build/admin.min.js': 'public/javascripts/admin.js',\n                'public/build/detail.min.js': [\n                    'public/javascripts/detail.js'\n                ]\n                }\n            }\n        },\n\n        mochaTest: {\n            options: {\n                reporter: 'spec'\n            },\n            src: ['test/**/*.js']\n        },\n\n        concurrent: {\n            tasks: ['nodemon', 'watch', 'jshint', 'less', 'uglify'],\n            options: {\n                logConcurrentOutput: true\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-watch'); //监控定义好的静态文件变动\n    grunt.loadNpmTasks('grunt-nodemon'); //监控入口文件变动\n    grunt.loadNpmTasks('grunt-concurrent'); //优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch\n    grunt.loadNpmTasks('grunt-mocha-test');  //测试框架\n    grunt.loadNpmTasks('grunt-contrib-less');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n\n    grunt.option('force', true); //避免程序因语法错误而终止执行\n\n    grunt.registerTask('default', ['concurrent']);\n    grunt.registerTask('test', ['mochaTest']);\n}\n```\n前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。\n\n###  5.router模块\n这里有两种方法  \n第一种是将路由分类  \n```\napp.js\n//挂载路由表\napp.use('/', index);\napp.use('/admin', admin);\napp.use('/user', user)\n\nuser.js\nvar express = require('express');\nvar User = require('../models/user');\nvar router = express.Router();\n\n//用户注册\nrouter.post('/signup', function(req, res) {\n    ...\n}\nmodule.exports = router;\n```\n当url以/user开头时就会进入user.js文件。  \n第二种是路由全部写在一个文件  \n```\napp.js\nrequire('./config/routers')(app); //不能传入express.Router(),它只能作为中间件用,如上\n\nrouter.js\nvar Movie = require('../app/controllers/movie');\nvar Index = require('../app/controllers/index')\n\n\nmodule.exports = function(app) {\n\n    //Index\n    app.get('/', Index.index);\n\n    //Movie\n    app.get('/movie/:id', Movie.detail);\n    app.get('/admin/movie/list',User.signinRequired,User.adminRequired, Movie.list);\n    \n};\n\n```\n\n### 6.数据库模块mongose\n```js\napp.js\nvar mongoose = require('mongoose');\nvar dbURL = 'mongodb://localhost:27017/movieWeb';\n\n//连接数据库\nmongoose.Promise = global.Promise; //避免控制台输出Promise错误 \nmongoose.connect(dbURL) //数据库名为movieWeb\nmongoose.connection.on('connected', function () {    //绑定connected函数，连接成功时触发\n  console.log('Connection success!');\n});\n```\n模式schemas(表)\n```js\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\n\nvar MovieSchema = new mongoose.Schema({  //定义模式\n    doctor: String,\n    title: String,\n    language: String,\n    country: String,\n    summary: String,\n    flash: String,\n    poster: String,\n    year: String,\n    pv: {\n        type: Number,\n        default: 0\n    },\n    category: {\n        type: ObjectId,\n        ref: 'Category'\n    },\n    meta: {\n        createAt: {\n            type: Date,\n            default: Date.now()\n        },\n        updateAt: {\n            type: Date,\n            default: Date.now()\n        }\n    }\n})\n\n//每次存取数据之前，都调用save方法\nMovieSchema.pre('save', function(next){\n    if(this.isNew) {\n        this.meta.createAt = this.meta.updateAt = Date.now()\n    } else {\n        this.meta.updateAt = Date.now()  \n    }\n\n    next() //将流程走下去\n})\n\nMovieSchema.statics = {  //实例化以后就会具有以下方法，相当于构造函数的成员方法\n    fetch: function(cb) {\n        return this\n            .find({})\n            .sort('meta.updateAt')\n            .exec(cb)\n    },\n    fetchById: function(id, cb) {\n        return this\n            .findOne({_id: id})\n            .exec(cb)\n    }\n}\n\nmodule.exports = MovieSchema\n```\n模型models（模式跟模型对接）\n```js\nvar mongoose = require('mongoose')\nvar MovieSchema = require('../schemas/movie')\nvar Movie = mongoose.model('Movie', MovieSchema)  //模式和模型对接\n\nmodule.exports = Movie\n\n```\n值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误\n\n### 7.将session存放在mongodb里\nsession是会话支持，作为客户端的id，跟服务器交互\n```\n//使用mongodb来储存sesion信息\nvar cookieParser = require('cookie-parser');\nvar session = require(\"express-session\");\nvar MongoStore = require('connect-mongo')(session);\n\n//配置session\napp.use(cookieParser());\napp.use(session({\n  secret: 'imoocMovieWeb',\n  store: new MongoStore({\n    url: dbURL,\n    collection: 'sessions'\n  }),\n  resave: true,\n  saveUninitialized: true\n}))\n```\n其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件\nbodyParser是解析request请求的中间价\n```\n配置\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:true})); //extended为true则可以解析字符串和数组以外的数据\n```\n\n### 8.前后台传数据\n可以用res.render方法\n```js\ncontrollers/movie.js\n\n//获取后列表页\nexports.list = function(req, res, next) {\n  Movie.fetch(function(err, movies) {\n    if(err) {\n      console.log(err)\n    }\n\n    res.render('list', {\n      title: '后台列表页',\n      movies: movies\n    });\n  })\n};\n```\n还可以用res.locals，可以传递方法和变量\n```js\napp.js\n\n//前后台传递数据\napp.use(function(req, res, next) {\n  res.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n  \n  var _user = req.session.user;\n  res.locals.user = _user; //传递用户转态\n\n  next();\n})\n```\n\n### 8.各种用到的中间件\n* flash  \n```\nvar flash = require('connect-flash') //存储变量的中间件，相当全局变量\napp.use(flash())\n\n使用\nvar error = req.flash('error')\n```\n\n*  logger  \n```js\nvar logger = require('morgan'); //处理日志模块 \n\n//日志文件\nvar fs = require('fs');\nvar accessLogfile = fs.createWriteStream('access.log', {flags:'a'});\nvar errorLogfile = fs.createWriteStream('error.log', {flags:'a'});\n\napp.set('env', 'production');\napp.use(logger({stream: accessLogfile})); //访问日志\n\n//处理错误日志，处理错误的中间件一定要写在路由后面\nif ('production' == app.get('env')) {\n  app.use(function(err, req, res, next){\n    var meta = '[' + new Date() + '] ' + req.url + '\\n';\n    errorLogfile.write(meta + err.stack + '\\n');\n    next();\n  });\n}\n```\n\n* moment  \n```\napp.js\nvar moment = require('moment'); //处理时间格式\n在中间件里\nres.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n\njade模板文件\nmoment(item.meta.updateAt).format('MM/DD/YYYY') //item.meta.updateAt是后台传过来的时间数据new Date()\n```\n\n* bcrypt-nodejs 加盐模块\n```js\nvar bcrypt = require('bcrypt-nodejs');\nvar SALL_WORK_FACTOR = 10; //数值越大，破解越复杂\nbcrypt.genSalt(SALL_WORK_FACTOR, function(err, salt) {\n        if(err) return next(err);\n\n        bcrypt.hash(user.password, salt, null, function(err, hash) {\n            if(err) return next(err);\n\n            user.password = hash\n            next() //将流程走下去\n        })\n    })\n```\n\n* underscore （用到这模块的继承方法）  \n```\nvar _ = require('underscore');\n_movie = _.extend(movie, movieObj)\n```\n\n### 9.jade模板引擎\n```jade\nlayout.jade 公用的部份\n\ndoctype html\nhtml\n  head\n    meta(charset=\"utf-8\")\n    title #{title} - imoocMovie\n    include ./includes/head\n  body\n    include ./includes/header\n    block content\n    include ./includes/footer\n```\n引进用include  \nblock content是主体内容\n```jade\nextends ../layout  //-扩展layout\n\nblock content\n  .container\n    .row\n      each cat in categories\n        .panel.panel-default\n          .panel-heading\n            h3\n              a(href='/results?cat=#{cat._id}&p=0') #{cat.name}\n          .panel-body\n            if cat.movies && cat.movies.length > 0\n              each item in cat.movies\n                .col-md-2\n                  .thumbnail\n                    a(href=\"/movie/#{item._id}\")\n                      if item.poster.indexOf('http:') > -1\n                        img(src=\"#{item.poster}\", alt=\"#{item.title}\")\n                      else\n                        img(src=\"/upload/#{item.poster}\", alt=\"#{item.title}\")\n                    .caption\n                      h4 #{item.title}\n                      p: a.btn.btn-primary(href=\"/movie/#{item._id}\", role=\"button\") 观看预告片\n    script(src='/build/admin.min.js')\n```\n\n* request（发http请求）\n```\nvar request = require('request');\n\n//用法\nrequest({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });\n```\n\n\n\n\n\n\n","source":"_posts/基于Express4.0开发web.md","raw":"---\ntitle: 基于Express4.0开发web \ndate: 2017-06-25\ntags: [nodejs,express,grunt,router,MVC,jade,mongoDB]\n---\n\n### 1.快速搭建\n在全局下安装express  \n```\nnpm install -g express  \n```\n执行  \n```\nexpress -v yourProject \t\n或者\ncd yourProject\nexpress\n```\n就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade\n\n\n### 2.express中间件\n```\nvar app = requrie('express')();\napp.use (function (req, res, next) {\n    ...\n    next()\n})  \n```\nnext()作用是交付控制权，前往下一个中间件\n可以利用这一点做验证功能\n\n### 3.MVC架构\n```\n/app\n    /controllers\n    /models\n    /schemas\n    /views\n/public\n    /libs\n    /css\n    /js\n/router\n    router.js\napp.js\npackage.json\n.bowerrc\nbower.json\ngruntfile.js\n.gitignore\n\n```\n以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。  \nbower模块用来安装项目依赖的前端框架。需要在全局安装bower\n```\nnpm install -g bower\n```\n安装bootstrap\n```\nbower init\nbower install bootstrap\n```\nbower init 生成bower.json\n然后安装bootstrap时，会根据.bowerrc文件\n```\n{\n    \"directory\": \"public/libs\"\n}\n```\n把依赖的框架安装在public/libs下\n\n### 4.项目管理工具grunt\ngruntfile.js\n```js\nmodule.exports = function(grunt) {\n\n    grunt.initConfig({\n        watch: {\n            jade: {\n                files: ['views/**'],\n                options: {\n                    livereload: true\n                }\n            },\n            js: {\n                files: ['public/js/**', 'app/**/*.js'],\n                //tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            uglify: {\n                files: ['public/**/*.js'],\n                tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            styles: {\n                files: ['public/**/*.less'],\n                tasks: ['less'],\n                options: {\n                    nospawn: true\n                }\n            }\n        },\n\n        nodemon: {\n            dev: {\n                script: 'bin/www',  //入口文件\n                options: {\n                    nodeArgs: ['--debug'], //开启开发模式\n                    args:　[],\n                    ignoredFiles: ['README.md', 'node_modules/**', 'public/libs/**', '.vscode'],\n                    watchedExtensions: ['js'],\n                    watchedFolders: ['./'], //监听定义的文件夹,根目录\n                    debug: true,\n                    delayTime: 1000,\n                    env: {\n                        PORT: 3000\n                    },\n                    cwd: __dirname\n                }\n            }\n        },\n\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc',\n                ignores: ['public/libs/**/*.js']\n            },\n            all: ['public/javascripts/*.js', 'test/**/*.js', 'app/**/*.js']\n        },\n\n        less: {\n            development: {\n                options: {\n                    compress: true,\n                    yuicompress: true,\n                    optimization: 2\n                },\n                files: {\n                    'public/build/index.css' : 'public/less/index.less'\n                }\n            }\n        },\n\n        uglify: {\n            development: {\n                files: {\n                'public/build/admin.min.js': 'public/javascripts/admin.js',\n                'public/build/detail.min.js': [\n                    'public/javascripts/detail.js'\n                ]\n                }\n            }\n        },\n\n        mochaTest: {\n            options: {\n                reporter: 'spec'\n            },\n            src: ['test/**/*.js']\n        },\n\n        concurrent: {\n            tasks: ['nodemon', 'watch', 'jshint', 'less', 'uglify'],\n            options: {\n                logConcurrentOutput: true\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-watch'); //监控定义好的静态文件变动\n    grunt.loadNpmTasks('grunt-nodemon'); //监控入口文件变动\n    grunt.loadNpmTasks('grunt-concurrent'); //优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch\n    grunt.loadNpmTasks('grunt-mocha-test');  //测试框架\n    grunt.loadNpmTasks('grunt-contrib-less');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n\n    grunt.option('force', true); //避免程序因语法错误而终止执行\n\n    grunt.registerTask('default', ['concurrent']);\n    grunt.registerTask('test', ['mochaTest']);\n}\n```\n前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。\n\n###  5.router模块\n这里有两种方法  \n第一种是将路由分类  \n```\napp.js\n//挂载路由表\napp.use('/', index);\napp.use('/admin', admin);\napp.use('/user', user)\n\nuser.js\nvar express = require('express');\nvar User = require('../models/user');\nvar router = express.Router();\n\n//用户注册\nrouter.post('/signup', function(req, res) {\n    ...\n}\nmodule.exports = router;\n```\n当url以/user开头时就会进入user.js文件。  \n第二种是路由全部写在一个文件  \n```\napp.js\nrequire('./config/routers')(app); //不能传入express.Router(),它只能作为中间件用,如上\n\nrouter.js\nvar Movie = require('../app/controllers/movie');\nvar Index = require('../app/controllers/index')\n\n\nmodule.exports = function(app) {\n\n    //Index\n    app.get('/', Index.index);\n\n    //Movie\n    app.get('/movie/:id', Movie.detail);\n    app.get('/admin/movie/list',User.signinRequired,User.adminRequired, Movie.list);\n    \n};\n\n```\n\n### 6.数据库模块mongose\n```js\napp.js\nvar mongoose = require('mongoose');\nvar dbURL = 'mongodb://localhost:27017/movieWeb';\n\n//连接数据库\nmongoose.Promise = global.Promise; //避免控制台输出Promise错误 \nmongoose.connect(dbURL) //数据库名为movieWeb\nmongoose.connection.on('connected', function () {    //绑定connected函数，连接成功时触发\n  console.log('Connection success!');\n});\n```\n模式schemas(表)\n```js\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\n\nvar MovieSchema = new mongoose.Schema({  //定义模式\n    doctor: String,\n    title: String,\n    language: String,\n    country: String,\n    summary: String,\n    flash: String,\n    poster: String,\n    year: String,\n    pv: {\n        type: Number,\n        default: 0\n    },\n    category: {\n        type: ObjectId,\n        ref: 'Category'\n    },\n    meta: {\n        createAt: {\n            type: Date,\n            default: Date.now()\n        },\n        updateAt: {\n            type: Date,\n            default: Date.now()\n        }\n    }\n})\n\n//每次存取数据之前，都调用save方法\nMovieSchema.pre('save', function(next){\n    if(this.isNew) {\n        this.meta.createAt = this.meta.updateAt = Date.now()\n    } else {\n        this.meta.updateAt = Date.now()  \n    }\n\n    next() //将流程走下去\n})\n\nMovieSchema.statics = {  //实例化以后就会具有以下方法，相当于构造函数的成员方法\n    fetch: function(cb) {\n        return this\n            .find({})\n            .sort('meta.updateAt')\n            .exec(cb)\n    },\n    fetchById: function(id, cb) {\n        return this\n            .findOne({_id: id})\n            .exec(cb)\n    }\n}\n\nmodule.exports = MovieSchema\n```\n模型models（模式跟模型对接）\n```js\nvar mongoose = require('mongoose')\nvar MovieSchema = require('../schemas/movie')\nvar Movie = mongoose.model('Movie', MovieSchema)  //模式和模型对接\n\nmodule.exports = Movie\n\n```\n值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误\n\n### 7.将session存放在mongodb里\nsession是会话支持，作为客户端的id，跟服务器交互\n```\n//使用mongodb来储存sesion信息\nvar cookieParser = require('cookie-parser');\nvar session = require(\"express-session\");\nvar MongoStore = require('connect-mongo')(session);\n\n//配置session\napp.use(cookieParser());\napp.use(session({\n  secret: 'imoocMovieWeb',\n  store: new MongoStore({\n    url: dbURL,\n    collection: 'sessions'\n  }),\n  resave: true,\n  saveUninitialized: true\n}))\n```\n其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件\nbodyParser是解析request请求的中间价\n```\n配置\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:true})); //extended为true则可以解析字符串和数组以外的数据\n```\n\n### 8.前后台传数据\n可以用res.render方法\n```js\ncontrollers/movie.js\n\n//获取后列表页\nexports.list = function(req, res, next) {\n  Movie.fetch(function(err, movies) {\n    if(err) {\n      console.log(err)\n    }\n\n    res.render('list', {\n      title: '后台列表页',\n      movies: movies\n    });\n  })\n};\n```\n还可以用res.locals，可以传递方法和变量\n```js\napp.js\n\n//前后台传递数据\napp.use(function(req, res, next) {\n  res.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n  \n  var _user = req.session.user;\n  res.locals.user = _user; //传递用户转态\n\n  next();\n})\n```\n\n### 8.各种用到的中间件\n* flash  \n```\nvar flash = require('connect-flash') //存储变量的中间件，相当全局变量\napp.use(flash())\n\n使用\nvar error = req.flash('error')\n```\n\n*  logger  \n```js\nvar logger = require('morgan'); //处理日志模块 \n\n//日志文件\nvar fs = require('fs');\nvar accessLogfile = fs.createWriteStream('access.log', {flags:'a'});\nvar errorLogfile = fs.createWriteStream('error.log', {flags:'a'});\n\napp.set('env', 'production');\napp.use(logger({stream: accessLogfile})); //访问日志\n\n//处理错误日志，处理错误的中间件一定要写在路由后面\nif ('production' == app.get('env')) {\n  app.use(function(err, req, res, next){\n    var meta = '[' + new Date() + '] ' + req.url + '\\n';\n    errorLogfile.write(meta + err.stack + '\\n');\n    next();\n  });\n}\n```\n\n* moment  \n```\napp.js\nvar moment = require('moment'); //处理时间格式\n在中间件里\nres.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n\njade模板文件\nmoment(item.meta.updateAt).format('MM/DD/YYYY') //item.meta.updateAt是后台传过来的时间数据new Date()\n```\n\n* bcrypt-nodejs 加盐模块\n```js\nvar bcrypt = require('bcrypt-nodejs');\nvar SALL_WORK_FACTOR = 10; //数值越大，破解越复杂\nbcrypt.genSalt(SALL_WORK_FACTOR, function(err, salt) {\n        if(err) return next(err);\n\n        bcrypt.hash(user.password, salt, null, function(err, hash) {\n            if(err) return next(err);\n\n            user.password = hash\n            next() //将流程走下去\n        })\n    })\n```\n\n* underscore （用到这模块的继承方法）  \n```\nvar _ = require('underscore');\n_movie = _.extend(movie, movieObj)\n```\n\n### 9.jade模板引擎\n```jade\nlayout.jade 公用的部份\n\ndoctype html\nhtml\n  head\n    meta(charset=\"utf-8\")\n    title #{title} - imoocMovie\n    include ./includes/head\n  body\n    include ./includes/header\n    block content\n    include ./includes/footer\n```\n引进用include  \nblock content是主体内容\n```jade\nextends ../layout  //-扩展layout\n\nblock content\n  .container\n    .row\n      each cat in categories\n        .panel.panel-default\n          .panel-heading\n            h3\n              a(href='/results?cat=#{cat._id}&p=0') #{cat.name}\n          .panel-body\n            if cat.movies && cat.movies.length > 0\n              each item in cat.movies\n                .col-md-2\n                  .thumbnail\n                    a(href=\"/movie/#{item._id}\")\n                      if item.poster.indexOf('http:') > -1\n                        img(src=\"#{item.poster}\", alt=\"#{item.title}\")\n                      else\n                        img(src=\"/upload/#{item.poster}\", alt=\"#{item.title}\")\n                    .caption\n                      h4 #{item.title}\n                      p: a.btn.btn-primary(href=\"/movie/#{item._id}\", role=\"button\") 观看预告片\n    script(src='/build/admin.min.js')\n```\n\n* request（发http请求）\n```\nvar request = require('request');\n\n//用法\nrequest({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });\n```\n\n\n\n\n\n\n","slug":"基于Express4.0开发web","published":1,"updated":"2022-12-06T15:30:38.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4k002tmcq06ynf7dxp","content":"<h3 id=\"1-快速搭建\"><a href=\"#1-快速搭建\" class=\"headerlink\" title=\"1.快速搭建\"></a>1.快速搭建</h3><p>在全局下安装express<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g express  </span><br></pre></td></tr></table></figure><br>执行<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">express</span> -v yourProject \t</span><br><span class=\"line\">或者</span><br><span class=\"line\">cd yourProject</span><br><span class=\"line\"><span class=\"built_in\">express</span></span><br></pre></td></tr></table></figure><br>就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade</p>\n<h3 id=\"2-express中间件\"><a href=\"#2-express中间件\" class=\"headerlink\" title=\"2.express中间件\"></a>2.express中间件</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_ invoke__\">requrie</span>(<span class=\"string\">&#x27;express&#x27;</span>)();</span><br><span class=\"line\">app.<span class=\"keyword\">use</span> (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">next</span>()</span><br><span class=\"line\">&#125;)  </span><br></pre></td></tr></table></figure>\n<p>next()作用是交付控制权，前往下一个中间件<br>可以利用这一点做验证功能</p>\n<h3 id=\"3-MVC架构\"><a href=\"#3-MVC架构\" class=\"headerlink\" title=\"3.MVC架构\"></a>3.MVC架构</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/app</span></span><br><span class=\"line\">    <span class=\"string\">/controllers</span></span><br><span class=\"line\">    <span class=\"string\">/models</span></span><br><span class=\"line\">    <span class=\"string\">/schemas</span></span><br><span class=\"line\">    <span class=\"string\">/views</span></span><br><span class=\"line\"><span class=\"string\">/public</span></span><br><span class=\"line\">    <span class=\"string\">/libs</span></span><br><span class=\"line\">    <span class=\"string\">/css</span></span><br><span class=\"line\">    <span class=\"string\">/js</span></span><br><span class=\"line\"><span class=\"string\">/router</span></span><br><span class=\"line\">    router.js</span><br><span class=\"line\">app.js</span><br><span class=\"line\">package.json</span><br><span class=\"line\"><span class=\"string\">.bowerrc</span></span><br><span class=\"line\">bower.json</span><br><span class=\"line\">gruntfile.js</span><br><span class=\"line\"><span class=\"string\">.gitignore</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。<br>bower模块用来安装项目依赖的前端框架。需要在全局安装bower<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g bower</span><br></pre></td></tr></table></figure><br>安装bootstrap<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">bower </span>init</span><br><span class=\"line\"><span class=\"keyword\">bower </span><span class=\"keyword\">install </span><span class=\"keyword\">bootstrap</span></span><br></pre></td></tr></table></figure><br>bower init 生成bower.json<br>然后安装bootstrap时，会根据.bowerrc文件<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;directory&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;public/libs&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure><br>把依赖的框架安装在public/libs下</p>\n<h3 id=\"4-项目管理工具grunt\"><a href=\"#4-项目管理工具grunt\" class=\"headerlink\" title=\"4.项目管理工具grunt\"></a>4.项目管理工具grunt</h3><p>gruntfile.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">initConfig</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">jade</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;views/**&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">livereload</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">js</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;public/js/**&#x27;</span>, <span class=\"string\">&#x27;app/**/*.js&#x27;</span>],</span><br><span class=\"line\">                <span class=\"comment\">//tasks: [&#x27;jshint&#x27;],</span></span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">livereload</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">uglify</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;public/**/*.js&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">tasks</span>: [<span class=\"string\">&#x27;jshint&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">livereload</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">styles</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;public/**/*.less&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">tasks</span>: [<span class=\"string\">&#x27;less&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">nospawn</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">nodemon</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">dev</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">script</span>: <span class=\"string\">&#x27;bin/www&#x27;</span>,  <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">nodeArgs</span>: [<span class=\"string\">&#x27;--debug&#x27;</span>], <span class=\"comment\">//开启开发模式</span></span><br><span class=\"line\">                    <span class=\"attr\">args</span>:　[],</span><br><span class=\"line\">                    <span class=\"attr\">ignoredFiles</span>: [<span class=\"string\">&#x27;README.md&#x27;</span>, <span class=\"string\">&#x27;node_modules/**&#x27;</span>, <span class=\"string\">&#x27;public/libs/**&#x27;</span>, <span class=\"string\">&#x27;.vscode&#x27;</span>],</span><br><span class=\"line\">                    <span class=\"attr\">watchedExtensions</span>: [<span class=\"string\">&#x27;js&#x27;</span>],</span><br><span class=\"line\">                    <span class=\"attr\">watchedFolders</span>: [<span class=\"string\">&#x27;./&#x27;</span>], <span class=\"comment\">//监听定义的文件夹,根目录</span></span><br><span class=\"line\">                    <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    <span class=\"attr\">delayTime</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">                    <span class=\"attr\">env</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">PORT</span>: <span class=\"number\">3000</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    <span class=\"attr\">cwd</span>: __dirname</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">jshint</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">jshintrc</span>: <span class=\"string\">&#x27;.jshintrc&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">ignores</span>: [<span class=\"string\">&#x27;public/libs/**/*.js&#x27;</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">all</span>: [<span class=\"string\">&#x27;public/javascripts/*.js&#x27;</span>, <span class=\"string\">&#x27;test/**/*.js&#x27;</span>, <span class=\"string\">&#x27;app/**/*.js&#x27;</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">less</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">development</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">compress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    <span class=\"attr\">yuicompress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    <span class=\"attr\">optimization</span>: <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">files</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;public/build/index.css&#x27;</span> : <span class=\"string\">&#x27;public/less/index.less&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">uglify</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">development</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;public/build/admin.min.js&#x27;</span>: <span class=\"string\">&#x27;public/javascripts/admin.js&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;public/build/detail.min.js&#x27;</span>: [</span><br><span class=\"line\">                    <span class=\"string\">&#x27;public/javascripts/detail.js&#x27;</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">mochaTest</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">reporter</span>: <span class=\"string\">&#x27;spec&#x27;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: [<span class=\"string\">&#x27;test/**/*.js&#x27;</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">concurrent</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">tasks</span>: [<span class=\"string\">&#x27;nodemon&#x27;</span>, <span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"string\">&#x27;jshint&#x27;</span>, <span class=\"string\">&#x27;less&#x27;</span>, <span class=\"string\">&#x27;uglify&#x27;</span>],</span><br><span class=\"line\">            <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">logConcurrentOutput</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-watch&#x27;</span>); <span class=\"comment\">//监控定义好的静态文件变动</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-nodemon&#x27;</span>); <span class=\"comment\">//监控入口文件变动</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-concurrent&#x27;</span>); <span class=\"comment\">//优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-mocha-test&#x27;</span>);  <span class=\"comment\">//测试框架</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-less&#x27;</span>);</span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-uglify&#x27;</span>);</span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-jshint&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">option</span>(<span class=\"string\">&#x27;force&#x27;</span>, <span class=\"literal\">true</span>); <span class=\"comment\">//避免程序因语法错误而终止执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">registerTask</span>(<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;concurrent&#x27;</span>]);</span><br><span class=\"line\">    grunt.<span class=\"title function_\">registerTask</span>(<span class=\"string\">&#x27;test&#x27;</span>, [<span class=\"string\">&#x27;mochaTest&#x27;</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。</p>\n<h3 id=\"5-router模块\"><a href=\"#5-router模块\" class=\"headerlink\" title=\"5.router模块\"></a>5.router模块</h3><p>这里有两种方法<br>第一种是将路由分类<br><figure class=\"highlight zephir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"comment\">//挂载路由表</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">&#x27;/&#x27;</span>, index);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">&#x27;/admin&#x27;</span>, admin);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">&#x27;/user&#x27;</span>, user)</span><br><span class=\"line\"></span><br><span class=\"line\">user.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> User = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;../models/user&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户注册</span></span><br><span class=\"line\">router.post(<span class=\"string\">&#x27;/signup&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(req, res)</span> </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">module.exports = router;</span><br></pre></td></tr></table></figure><br>当url以/user开头时就会进入user.js文件。<br>第二种是路由全部写在一个文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config/routers&#x27;</span>)(app); <span class=\"comment\">//不能传入express.Router(),它只能作为中间件用,如上</span></span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Movie</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../app/controllers/movie&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Index</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../app/controllers/index&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">app</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Index</span></span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"title class_\">Index</span>.<span class=\"property\">index</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Movie</span></span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/movie/:id&#x27;</span>, <span class=\"title class_\">Movie</span>.<span class=\"property\">detail</span>);</span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/admin/movie/list&#x27;</span>,<span class=\"title class_\">User</span>.<span class=\"property\">signinRequired</span>,<span class=\"title class_\">User</span>.<span class=\"property\">adminRequired</span>, <span class=\"title class_\">Movie</span>.<span class=\"property\">list</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-数据库模块mongose\"><a href=\"#6-数据库模块mongose\" class=\"headerlink\" title=\"6.数据库模块mongose\"></a>6.数据库模块mongose</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dbURL = <span class=\"string\">&#x27;mongodb://localhost:27017/movieWeb&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\">mongoose.<span class=\"property\">Promise</span> = <span class=\"variable language_\">global</span>.<span class=\"property\">Promise</span>; <span class=\"comment\">//避免控制台输出Promise错误 </span></span><br><span class=\"line\">mongoose.<span class=\"title function_\">connect</span>(dbURL) <span class=\"comment\">//数据库名为movieWeb</span></span><br><span class=\"line\">mongoose.<span class=\"property\">connection</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connected&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;    <span class=\"comment\">//绑定connected函数，连接成功时触发</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Connection success!&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>模式schemas(表)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Schema</span> = mongoose.<span class=\"property\">Schema</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ObjectId</span> = <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">MovieSchema</span> = <span class=\"keyword\">new</span> mongoose.<span class=\"title class_\">Schema</span>(&#123;  <span class=\"comment\">//定义模式</span></span><br><span class=\"line\">    <span class=\"attr\">doctor</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">language</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">country</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">summary</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">flash</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">poster</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">year</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">pv</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>,</span><br><span class=\"line\">        <span class=\"attr\">default</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">category</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">ObjectId</span>,</span><br><span class=\"line\">        <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Category&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">createAt</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"title class_\">Date</span>,</span><br><span class=\"line\">            <span class=\"attr\">default</span>: <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">updateAt</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"title class_\">Date</span>,</span><br><span class=\"line\">            <span class=\"attr\">default</span>: <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//每次存取数据之前，都调用save方法</span></span><br><span class=\"line\"><span class=\"title class_\">MovieSchema</span>.<span class=\"title function_\">pre</span>(<span class=\"string\">&#x27;save&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">next</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">isNew</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">meta</span>.<span class=\"property\">createAt</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">meta</span>.<span class=\"property\">updateAt</span> = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">meta</span>.<span class=\"property\">updateAt</span> = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">next</span>() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MovieSchema</span>.<span class=\"property\">statics</span> = &#123;  <span class=\"comment\">//实例化以后就会具有以下方法，相当于构造函数的成员方法</span></span><br><span class=\"line\">    <span class=\"attr\">fetch</span>: <span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">            .<span class=\"title function_\">find</span>(&#123;&#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">sort</span>(<span class=\"string\">&#x27;meta.updateAt&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"title function_\">exec</span>(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">fetchById</span>: <span class=\"keyword\">function</span>(<span class=\"params\">id, cb</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">            .<span class=\"title function_\">findOne</span>(&#123;<span class=\"attr\">_id</span>: id&#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">exec</span>(cb)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">MovieSchema</span></span><br></pre></td></tr></table></figure><br>模型models（模式跟模型对接）<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">MovieSchema</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../schemas/movie&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Movie</span> = mongoose.<span class=\"title function_\">model</span>(<span class=\"string\">&#x27;Movie&#x27;</span>, <span class=\"title class_\">MovieSchema</span>)  <span class=\"comment\">//模式和模型对接</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">Movie</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误</p>\n<h3 id=\"7-将session存放在mongodb里\"><a href=\"#7-将session存放在mongodb里\" class=\"headerlink\" title=\"7.将session存放在mongodb里\"></a>7.将session存放在mongodb里</h3><p>session是会话支持，作为客户端的id，跟服务器交互<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用mongodb来储存sesion信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cookieParser = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;cookie-parser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> session = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;express-session&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> MongoStore = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;connect-mongo&#x27;</span>)(session);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//配置session</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"title function_ invoke__\">cookieParser</span>());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"title function_ invoke__\">session</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">secret</span>: <span class=\"string\">&#x27;imoocMovieWeb&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">store</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">MongoStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: dbURL,</span><br><span class=\"line\">    <span class=\"attr\">collection</span>: <span class=\"string\">&#x27;sessions&#x27;</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  resave: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;))</span><br></pre></td></tr></table></figure><br>其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件<br>bodyParser是解析request请求的中间价<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.<span class=\"title function_ invoke__\">json</span>());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.<span class=\"title function_ invoke__\">urlencoded</span>(&#123;<span class=\"attr\">extended</span>:<span class=\"literal\">true</span>&#125;)); <span class=\"comment\">//extended为true则可以解析字符串和数组以外的数据</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-前后台传数据\"><a href=\"#8-前后台传数据\" class=\"headerlink\" title=\"8.前后台传数据\"></a>8.前后台传数据</h3><p>可以用res.render方法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">controllers/movie.<span class=\"property\">js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取后列表页</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">list</span> = <span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Movie</span>.<span class=\"title function_\">fetch</span>(<span class=\"keyword\">function</span>(<span class=\"params\">err, movies</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;list&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">title</span>: <span class=\"string\">&#x27;后台列表页&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">movies</span>: movies</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br>还可以用res.locals，可以传递方法和变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"property\">js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//前后台传递数据</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">  res.<span class=\"property\">locals</span>.<span class=\"property\">moment</span> = moment;  <span class=\"comment\">//向前台模板发送处理时间的moment方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> _user = req.<span class=\"property\">session</span>.<span class=\"property\">user</span>;</span><br><span class=\"line\">  res.<span class=\"property\">locals</span>.<span class=\"property\">user</span> = _user; <span class=\"comment\">//传递用户转态</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-各种用到的中间件\"><a href=\"#8-各种用到的中间件\" class=\"headerlink\" title=\"8.各种用到的中间件\"></a>8.各种用到的中间件</h3><ul>\n<li><p>flash  </p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">var</span> flash = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;connect-flash&#x27;</span>) <span class=\"comment\">//存储变量的中间件，相当全局变量</span></span><br><span class=\"line\">app<span class=\"selector-class\">.use</span>(<span class=\"built_in\">flash</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">使用</span><br><span class=\"line\"><span class=\"selector-tag\">var</span> error = req<span class=\"selector-class\">.flash</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>logger  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;morgan&#x27;</span>); <span class=\"comment\">//处理日志模块 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//日志文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> accessLogfile = fs.<span class=\"title function_\">createWriteStream</span>(<span class=\"string\">&#x27;access.log&#x27;</span>, &#123;<span class=\"attr\">flags</span>:<span class=\"string\">&#x27;a&#x27;</span>&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> errorLogfile = fs.<span class=\"title function_\">createWriteStream</span>(<span class=\"string\">&#x27;error.log&#x27;</span>, &#123;<span class=\"attr\">flags</span>:<span class=\"string\">&#x27;a&#x27;</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;env&#x27;</span>, <span class=\"string\">&#x27;production&#x27;</span>);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">logger</span>(&#123;<span class=\"attr\">stream</span>: accessLogfile&#125;)); <span class=\"comment\">//访问日志</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//处理错误日志，处理错误的中间件一定要写在路由后面</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">&#x27;production&#x27;</span> == app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;env&#x27;</span>)) &#123;</span><br><span class=\"line\">  app.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> meta = <span class=\"string\">&#x27;[&#x27;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>() + <span class=\"string\">&#x27;] &#x27;</span> + req.<span class=\"property\">url</span> + <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">    errorLogfile.<span class=\"title function_\">write</span>(meta + err.<span class=\"property\">stack</span> + <span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">next</span>();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>moment  </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\">var moment = require(<span class=\"string\">&#x27;moment&#x27;</span>); <span class=\"regexp\">//</span>处理时间格式</span><br><span class=\"line\">在中间件里</span><br><span class=\"line\">res.locals.moment = moment;  <span class=\"regexp\">//</span>向前台模板发送处理时间的moment方法</span><br><span class=\"line\"></span><br><span class=\"line\">jade模板文件</span><br><span class=\"line\">moment(item.meta.updateAt).format(<span class=\"string\">&#x27;MM/DD/YYYY&#x27;</span>) <span class=\"regexp\">//i</span>tem.meta.updateAt是后台传过来的时间数据new Date()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>bcrypt-nodejs 加盐模块</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bcrypt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;bcrypt-nodejs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"variable constant_\">SALL_WORK_FACTOR</span> = <span class=\"number\">10</span>; <span class=\"comment\">//数值越大，破解越复杂</span></span><br><span class=\"line\">bcrypt.<span class=\"title function_\">genSalt</span>(<span class=\"variable constant_\">SALL_WORK_FACTOR</span>, <span class=\"keyword\">function</span>(<span class=\"params\">err, salt</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"title function_\">next</span>(err);</span><br><span class=\"line\"></span><br><span class=\"line\">        bcrypt.<span class=\"title function_\">hash</span>(user.<span class=\"property\">password</span>, salt, <span class=\"literal\">null</span>, <span class=\"keyword\">function</span>(<span class=\"params\">err, hash</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"title function_\">next</span>(err);</span><br><span class=\"line\"></span><br><span class=\"line\">            user.<span class=\"property\">password</span> = hash</span><br><span class=\"line\">            <span class=\"title function_\">next</span>() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>underscore （用到这模块的继承方法）  </p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"literal\">_</span> = require(<span class=\"string\">&#x27;underscore&#x27;</span>);</span><br><span class=\"line\">_movie = <span class=\"literal\">_</span>.extend(movie, movieObj)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"9-jade模板引擎\"><a href=\"#9-jade模板引擎\" class=\"headerlink\" title=\"9.jade模板引擎\"></a>9.jade模板引擎</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layout.jade 公用的部份</span><br><span class=\"line\"></span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  head</span><br><span class=\"line\">    meta(charset=&quot;utf-8&quot;)</span><br><span class=\"line\">    title #&#123;title&#125; - imoocMovie</span><br><span class=\"line\">    include ./includes/head</span><br><span class=\"line\">  body</span><br><span class=\"line\">    include ./includes/header</span><br><span class=\"line\">    block content</span><br><span class=\"line\">    include ./includes/footer</span><br></pre></td></tr></table></figure>\n<p>引进用include<br>block content是主体内容<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends ../layout  //-扩展layout</span><br><span class=\"line\"></span><br><span class=\"line\">block content</span><br><span class=\"line\">  .container</span><br><span class=\"line\">    .row</span><br><span class=\"line\">      each cat in categories</span><br><span class=\"line\">        .panel.panel-default</span><br><span class=\"line\">          .panel-heading</span><br><span class=\"line\">            h3</span><br><span class=\"line\">              a(href=&#x27;/results?cat=#&#123;cat._id&#125;&amp;p=0&#x27;) #&#123;cat.name&#125;</span><br><span class=\"line\">          .panel-body</span><br><span class=\"line\">            if cat.movies &amp;&amp; cat.movies.length &gt; 0</span><br><span class=\"line\">              each item in cat.movies</span><br><span class=\"line\">                .col-md-2</span><br><span class=\"line\">                  .thumbnail</span><br><span class=\"line\">                    a(href=&quot;/movie/#&#123;item._id&#125;&quot;)</span><br><span class=\"line\">                      if item.poster.indexOf(&#x27;http:&#x27;) &gt; -1</span><br><span class=\"line\">                        img(src=&quot;#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                      else</span><br><span class=\"line\">                        img(src=&quot;/upload/#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                    .caption</span><br><span class=\"line\">                      h4 #&#123;item.title&#125;</span><br><span class=\"line\">                      p: a.btn.btn-primary(href=&quot;/movie/#&#123;item._id&#125;&quot;, role=&quot;button&quot;) 观看预告片</span><br><span class=\"line\">    script(src=&#x27;/build/admin.min.js&#x27;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>request（发http请求）<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> request = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用法</span></span><br><span class=\"line\">request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, function (error, response, body) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = body;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> now = (<span class=\"literal\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"built_in\">var</span> expires_in = now + (<span class=\"built_in\">data</span>.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                <span class=\"built_in\">data</span>.expires_in = expires_in;</span><br><span class=\"line\">                resolve(<span class=\"built_in\">data</span>);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">&#x27;can not get ticket&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-快速搭建\"><a href=\"#1-快速搭建\" class=\"headerlink\" title=\"1.快速搭建\"></a>1.快速搭建</h3><p>在全局下安装express<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g express  </span><br></pre></td></tr></table></figure><br>执行<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">express</span> -v yourProject \t</span><br><span class=\"line\">或者</span><br><span class=\"line\">cd yourProject</span><br><span class=\"line\"><span class=\"built_in\">express</span></span><br></pre></td></tr></table></figure><br>就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade</p>\n<h3 id=\"2-express中间件\"><a href=\"#2-express中间件\" class=\"headerlink\" title=\"2.express中间件\"></a>2.express中间件</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_ invoke__\">requrie</span>(<span class=\"string\">&#x27;express&#x27;</span>)();</span><br><span class=\"line\">app.<span class=\"keyword\">use</span> (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">next</span>()</span><br><span class=\"line\">&#125;)  </span><br></pre></td></tr></table></figure>\n<p>next()作用是交付控制权，前往下一个中间件<br>可以利用这一点做验证功能</p>\n<h3 id=\"3-MVC架构\"><a href=\"#3-MVC架构\" class=\"headerlink\" title=\"3.MVC架构\"></a>3.MVC架构</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/app</span></span><br><span class=\"line\">    <span class=\"string\">/controllers</span></span><br><span class=\"line\">    <span class=\"string\">/models</span></span><br><span class=\"line\">    <span class=\"string\">/schemas</span></span><br><span class=\"line\">    <span class=\"string\">/views</span></span><br><span class=\"line\"><span class=\"string\">/public</span></span><br><span class=\"line\">    <span class=\"string\">/libs</span></span><br><span class=\"line\">    <span class=\"string\">/css</span></span><br><span class=\"line\">    <span class=\"string\">/js</span></span><br><span class=\"line\"><span class=\"string\">/router</span></span><br><span class=\"line\">    router.js</span><br><span class=\"line\">app.js</span><br><span class=\"line\">package.json</span><br><span class=\"line\"><span class=\"string\">.bowerrc</span></span><br><span class=\"line\">bower.json</span><br><span class=\"line\">gruntfile.js</span><br><span class=\"line\"><span class=\"string\">.gitignore</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。<br>bower模块用来安装项目依赖的前端框架。需要在全局安装bower<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g bower</span><br></pre></td></tr></table></figure><br>安装bootstrap<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">bower </span>init</span><br><span class=\"line\"><span class=\"keyword\">bower </span><span class=\"keyword\">install </span><span class=\"keyword\">bootstrap</span></span><br></pre></td></tr></table></figure><br>bower init 生成bower.json<br>然后安装bootstrap时，会根据.bowerrc文件<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;directory&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;public/libs&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure><br>把依赖的框架安装在public/libs下</p>\n<h3 id=\"4-项目管理工具grunt\"><a href=\"#4-项目管理工具grunt\" class=\"headerlink\" title=\"4.项目管理工具grunt\"></a>4.项目管理工具grunt</h3><p>gruntfile.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">initConfig</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">jade</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;views/**&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">livereload</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">js</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;public/js/**&#x27;</span>, <span class=\"string\">&#x27;app/**/*.js&#x27;</span>],</span><br><span class=\"line\">                <span class=\"comment\">//tasks: [&#x27;jshint&#x27;],</span></span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">livereload</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">uglify</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;public/**/*.js&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">tasks</span>: [<span class=\"string\">&#x27;jshint&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">livereload</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">styles</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: [<span class=\"string\">&#x27;public/**/*.less&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">tasks</span>: [<span class=\"string\">&#x27;less&#x27;</span>],</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">nospawn</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">nodemon</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">dev</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">script</span>: <span class=\"string\">&#x27;bin/www&#x27;</span>,  <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">nodeArgs</span>: [<span class=\"string\">&#x27;--debug&#x27;</span>], <span class=\"comment\">//开启开发模式</span></span><br><span class=\"line\">                    <span class=\"attr\">args</span>:　[],</span><br><span class=\"line\">                    <span class=\"attr\">ignoredFiles</span>: [<span class=\"string\">&#x27;README.md&#x27;</span>, <span class=\"string\">&#x27;node_modules/**&#x27;</span>, <span class=\"string\">&#x27;public/libs/**&#x27;</span>, <span class=\"string\">&#x27;.vscode&#x27;</span>],</span><br><span class=\"line\">                    <span class=\"attr\">watchedExtensions</span>: [<span class=\"string\">&#x27;js&#x27;</span>],</span><br><span class=\"line\">                    <span class=\"attr\">watchedFolders</span>: [<span class=\"string\">&#x27;./&#x27;</span>], <span class=\"comment\">//监听定义的文件夹,根目录</span></span><br><span class=\"line\">                    <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    <span class=\"attr\">delayTime</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\">                    <span class=\"attr\">env</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">PORT</span>: <span class=\"number\">3000</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    <span class=\"attr\">cwd</span>: __dirname</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">jshint</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">jshintrc</span>: <span class=\"string\">&#x27;.jshintrc&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">ignores</span>: [<span class=\"string\">&#x27;public/libs/**/*.js&#x27;</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">all</span>: [<span class=\"string\">&#x27;public/javascripts/*.js&#x27;</span>, <span class=\"string\">&#x27;test/**/*.js&#x27;</span>, <span class=\"string\">&#x27;app/**/*.js&#x27;</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">less</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">development</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                    <span class=\"attr\">compress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    <span class=\"attr\">yuicompress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    <span class=\"attr\">optimization</span>: <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">files</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;public/build/index.css&#x27;</span> : <span class=\"string\">&#x27;public/less/index.less&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">uglify</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">development</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">files</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;public/build/admin.min.js&#x27;</span>: <span class=\"string\">&#x27;public/javascripts/admin.js&#x27;</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;public/build/detail.min.js&#x27;</span>: [</span><br><span class=\"line\">                    <span class=\"string\">&#x27;public/javascripts/detail.js&#x27;</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">mochaTest</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">reporter</span>: <span class=\"string\">&#x27;spec&#x27;</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">src</span>: [<span class=\"string\">&#x27;test/**/*.js&#x27;</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">concurrent</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">tasks</span>: [<span class=\"string\">&#x27;nodemon&#x27;</span>, <span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"string\">&#x27;jshint&#x27;</span>, <span class=\"string\">&#x27;less&#x27;</span>, <span class=\"string\">&#x27;uglify&#x27;</span>],</span><br><span class=\"line\">            <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">logConcurrentOutput</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-watch&#x27;</span>); <span class=\"comment\">//监控定义好的静态文件变动</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-nodemon&#x27;</span>); <span class=\"comment\">//监控入口文件变动</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-concurrent&#x27;</span>); <span class=\"comment\">//优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-mocha-test&#x27;</span>);  <span class=\"comment\">//测试框架</span></span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-less&#x27;</span>);</span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-uglify&#x27;</span>);</span><br><span class=\"line\">    grunt.<span class=\"title function_\">loadNpmTasks</span>(<span class=\"string\">&#x27;grunt-contrib-jshint&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">option</span>(<span class=\"string\">&#x27;force&#x27;</span>, <span class=\"literal\">true</span>); <span class=\"comment\">//避免程序因语法错误而终止执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.<span class=\"title function_\">registerTask</span>(<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;concurrent&#x27;</span>]);</span><br><span class=\"line\">    grunt.<span class=\"title function_\">registerTask</span>(<span class=\"string\">&#x27;test&#x27;</span>, [<span class=\"string\">&#x27;mochaTest&#x27;</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。</p>\n<h3 id=\"5-router模块\"><a href=\"#5-router模块\" class=\"headerlink\" title=\"5.router模块\"></a>5.router模块</h3><p>这里有两种方法<br>第一种是将路由分类<br><figure class=\"highlight zephir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"comment\">//挂载路由表</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">&#x27;/&#x27;</span>, index);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">&#x27;/admin&#x27;</span>, admin);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">&#x27;/user&#x27;</span>, user)</span><br><span class=\"line\"></span><br><span class=\"line\">user.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> User = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;../models/user&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户注册</span></span><br><span class=\"line\">router.post(<span class=\"string\">&#x27;/signup&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(req, res)</span> </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">module.exports = router;</span><br></pre></td></tr></table></figure><br>当url以/user开头时就会进入user.js文件。<br>第二种是路由全部写在一个文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config/routers&#x27;</span>)(app); <span class=\"comment\">//不能传入express.Router(),它只能作为中间件用,如上</span></span><br><span class=\"line\"></span><br><span class=\"line\">router.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Movie</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../app/controllers/movie&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Index</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../app/controllers/index&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">app</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Index</span></span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"title class_\">Index</span>.<span class=\"property\">index</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Movie</span></span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/movie/:id&#x27;</span>, <span class=\"title class_\">Movie</span>.<span class=\"property\">detail</span>);</span><br><span class=\"line\">    app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/admin/movie/list&#x27;</span>,<span class=\"title class_\">User</span>.<span class=\"property\">signinRequired</span>,<span class=\"title class_\">User</span>.<span class=\"property\">adminRequired</span>, <span class=\"title class_\">Movie</span>.<span class=\"property\">list</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-数据库模块mongose\"><a href=\"#6-数据库模块mongose\" class=\"headerlink\" title=\"6.数据库模块mongose\"></a>6.数据库模块mongose</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dbURL = <span class=\"string\">&#x27;mongodb://localhost:27017/movieWeb&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\">mongoose.<span class=\"property\">Promise</span> = <span class=\"variable language_\">global</span>.<span class=\"property\">Promise</span>; <span class=\"comment\">//避免控制台输出Promise错误 </span></span><br><span class=\"line\">mongoose.<span class=\"title function_\">connect</span>(dbURL) <span class=\"comment\">//数据库名为movieWeb</span></span><br><span class=\"line\">mongoose.<span class=\"property\">connection</span>.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connected&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;    <span class=\"comment\">//绑定connected函数，连接成功时触发</span></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Connection success!&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>模式schemas(表)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Schema</span> = mongoose.<span class=\"property\">Schema</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ObjectId</span> = <span class=\"title class_\">Schema</span>.<span class=\"property\">Types</span>.<span class=\"property\">ObjectId</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">MovieSchema</span> = <span class=\"keyword\">new</span> mongoose.<span class=\"title class_\">Schema</span>(&#123;  <span class=\"comment\">//定义模式</span></span><br><span class=\"line\">    <span class=\"attr\">doctor</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">language</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">country</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">summary</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">flash</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">poster</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">year</span>: <span class=\"title class_\">String</span>,</span><br><span class=\"line\">    <span class=\"attr\">pv</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">Number</span>,</span><br><span class=\"line\">        <span class=\"attr\">default</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">category</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"title class_\">ObjectId</span>,</span><br><span class=\"line\">        <span class=\"attr\">ref</span>: <span class=\"string\">&#x27;Category&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">createAt</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"title class_\">Date</span>,</span><br><span class=\"line\">            <span class=\"attr\">default</span>: <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">updateAt</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"title class_\">Date</span>,</span><br><span class=\"line\">            <span class=\"attr\">default</span>: <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//每次存取数据之前，都调用save方法</span></span><br><span class=\"line\"><span class=\"title class_\">MovieSchema</span>.<span class=\"title function_\">pre</span>(<span class=\"string\">&#x27;save&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">next</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">isNew</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">meta</span>.<span class=\"property\">createAt</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">meta</span>.<span class=\"property\">updateAt</span> = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">meta</span>.<span class=\"property\">updateAt</span> = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>()  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">next</span>() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MovieSchema</span>.<span class=\"property\">statics</span> = &#123;  <span class=\"comment\">//实例化以后就会具有以下方法，相当于构造函数的成员方法</span></span><br><span class=\"line\">    <span class=\"attr\">fetch</span>: <span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">            .<span class=\"title function_\">find</span>(&#123;&#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">sort</span>(<span class=\"string\">&#x27;meta.updateAt&#x27;</span>)</span><br><span class=\"line\">            .<span class=\"title function_\">exec</span>(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">fetchById</span>: <span class=\"keyword\">function</span>(<span class=\"params\">id, cb</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span></span><br><span class=\"line\">            .<span class=\"title function_\">findOne</span>(&#123;<span class=\"attr\">_id</span>: id&#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">exec</span>(cb)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">MovieSchema</span></span><br></pre></td></tr></table></figure><br>模型models（模式跟模型对接）<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">MovieSchema</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../schemas/movie&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Movie</span> = mongoose.<span class=\"title function_\">model</span>(<span class=\"string\">&#x27;Movie&#x27;</span>, <span class=\"title class_\">MovieSchema</span>)  <span class=\"comment\">//模式和模型对接</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">Movie</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误</p>\n<h3 id=\"7-将session存放在mongodb里\"><a href=\"#7-将session存放在mongodb里\" class=\"headerlink\" title=\"7.将session存放在mongodb里\"></a>7.将session存放在mongodb里</h3><p>session是会话支持，作为客户端的id，跟服务器交互<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用mongodb来储存sesion信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cookieParser = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;cookie-parser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> session = <span class=\"keyword\">require</span>(<span class=\"string\">&quot;express-session&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> MongoStore = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;connect-mongo&#x27;</span>)(session);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//配置session</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"title function_ invoke__\">cookieParser</span>());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"title function_ invoke__\">session</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">secret</span>: <span class=\"string\">&#x27;imoocMovieWeb&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">store</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">MongoStore</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: dbURL,</span><br><span class=\"line\">    <span class=\"attr\">collection</span>: <span class=\"string\">&#x27;sessions&#x27;</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  resave: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;))</span><br></pre></td></tr></table></figure><br>其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件<br>bodyParser是解析request请求的中间价<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.<span class=\"title function_ invoke__\">json</span>());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.<span class=\"title function_ invoke__\">urlencoded</span>(&#123;<span class=\"attr\">extended</span>:<span class=\"literal\">true</span>&#125;)); <span class=\"comment\">//extended为true则可以解析字符串和数组以外的数据</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-前后台传数据\"><a href=\"#8-前后台传数据\" class=\"headerlink\" title=\"8.前后台传数据\"></a>8.前后台传数据</h3><p>可以用res.render方法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">controllers/movie.<span class=\"property\">js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取后列表页</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">list</span> = <span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Movie</span>.<span class=\"title function_\">fetch</span>(<span class=\"keyword\">function</span>(<span class=\"params\">err, movies</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;list&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">title</span>: <span class=\"string\">&#x27;后台列表页&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">movies</span>: movies</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure><br>还可以用res.locals，可以传递方法和变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.<span class=\"property\">js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//前后台传递数据</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">  res.<span class=\"property\">locals</span>.<span class=\"property\">moment</span> = moment;  <span class=\"comment\">//向前台模板发送处理时间的moment方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> _user = req.<span class=\"property\">session</span>.<span class=\"property\">user</span>;</span><br><span class=\"line\">  res.<span class=\"property\">locals</span>.<span class=\"property\">user</span> = _user; <span class=\"comment\">//传递用户转态</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">next</span>();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-各种用到的中间件\"><a href=\"#8-各种用到的中间件\" class=\"headerlink\" title=\"8.各种用到的中间件\"></a>8.各种用到的中间件</h3><ul>\n<li><p>flash  </p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">var</span> flash = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;connect-flash&#x27;</span>) <span class=\"comment\">//存储变量的中间件，相当全局变量</span></span><br><span class=\"line\">app<span class=\"selector-class\">.use</span>(<span class=\"built_in\">flash</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">使用</span><br><span class=\"line\"><span class=\"selector-tag\">var</span> error = req<span class=\"selector-class\">.flash</span>(<span class=\"string\">&#x27;error&#x27;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>logger  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;morgan&#x27;</span>); <span class=\"comment\">//处理日志模块 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//日志文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> accessLogfile = fs.<span class=\"title function_\">createWriteStream</span>(<span class=\"string\">&#x27;access.log&#x27;</span>, &#123;<span class=\"attr\">flags</span>:<span class=\"string\">&#x27;a&#x27;</span>&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> errorLogfile = fs.<span class=\"title function_\">createWriteStream</span>(<span class=\"string\">&#x27;error.log&#x27;</span>, &#123;<span class=\"attr\">flags</span>:<span class=\"string\">&#x27;a&#x27;</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;env&#x27;</span>, <span class=\"string\">&#x27;production&#x27;</span>);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">logger</span>(&#123;<span class=\"attr\">stream</span>: accessLogfile&#125;)); <span class=\"comment\">//访问日志</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//处理错误日志，处理错误的中间件一定要写在路由后面</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">&#x27;production&#x27;</span> == app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;env&#x27;</span>)) &#123;</span><br><span class=\"line\">  app.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> meta = <span class=\"string\">&#x27;[&#x27;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>() + <span class=\"string\">&#x27;] &#x27;</span> + req.<span class=\"property\">url</span> + <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">    errorLogfile.<span class=\"title function_\">write</span>(meta + err.<span class=\"property\">stack</span> + <span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">next</span>();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>moment  </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\">var moment = require(<span class=\"string\">&#x27;moment&#x27;</span>); <span class=\"regexp\">//</span>处理时间格式</span><br><span class=\"line\">在中间件里</span><br><span class=\"line\">res.locals.moment = moment;  <span class=\"regexp\">//</span>向前台模板发送处理时间的moment方法</span><br><span class=\"line\"></span><br><span class=\"line\">jade模板文件</span><br><span class=\"line\">moment(item.meta.updateAt).format(<span class=\"string\">&#x27;MM/DD/YYYY&#x27;</span>) <span class=\"regexp\">//i</span>tem.meta.updateAt是后台传过来的时间数据new Date()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>bcrypt-nodejs 加盐模块</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bcrypt = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;bcrypt-nodejs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"variable constant_\">SALL_WORK_FACTOR</span> = <span class=\"number\">10</span>; <span class=\"comment\">//数值越大，破解越复杂</span></span><br><span class=\"line\">bcrypt.<span class=\"title function_\">genSalt</span>(<span class=\"variable constant_\">SALL_WORK_FACTOR</span>, <span class=\"keyword\">function</span>(<span class=\"params\">err, salt</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"title function_\">next</span>(err);</span><br><span class=\"line\"></span><br><span class=\"line\">        bcrypt.<span class=\"title function_\">hash</span>(user.<span class=\"property\">password</span>, salt, <span class=\"literal\">null</span>, <span class=\"keyword\">function</span>(<span class=\"params\">err, hash</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> <span class=\"title function_\">next</span>(err);</span><br><span class=\"line\"></span><br><span class=\"line\">            user.<span class=\"property\">password</span> = hash</span><br><span class=\"line\">            <span class=\"title function_\">next</span>() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>underscore （用到这模块的继承方法）  </p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"literal\">_</span> = require(<span class=\"string\">&#x27;underscore&#x27;</span>);</span><br><span class=\"line\">_movie = <span class=\"literal\">_</span>.extend(movie, movieObj)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"9-jade模板引擎\"><a href=\"#9-jade模板引擎\" class=\"headerlink\" title=\"9.jade模板引擎\"></a>9.jade模板引擎</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layout.jade 公用的部份</span><br><span class=\"line\"></span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  head</span><br><span class=\"line\">    meta(charset=&quot;utf-8&quot;)</span><br><span class=\"line\">    title #&#123;title&#125; - imoocMovie</span><br><span class=\"line\">    include ./includes/head</span><br><span class=\"line\">  body</span><br><span class=\"line\">    include ./includes/header</span><br><span class=\"line\">    block content</span><br><span class=\"line\">    include ./includes/footer</span><br></pre></td></tr></table></figure>\n<p>引进用include<br>block content是主体内容<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends ../layout  //-扩展layout</span><br><span class=\"line\"></span><br><span class=\"line\">block content</span><br><span class=\"line\">  .container</span><br><span class=\"line\">    .row</span><br><span class=\"line\">      each cat in categories</span><br><span class=\"line\">        .panel.panel-default</span><br><span class=\"line\">          .panel-heading</span><br><span class=\"line\">            h3</span><br><span class=\"line\">              a(href=&#x27;/results?cat=#&#123;cat._id&#125;&amp;p=0&#x27;) #&#123;cat.name&#125;</span><br><span class=\"line\">          .panel-body</span><br><span class=\"line\">            if cat.movies &amp;&amp; cat.movies.length &gt; 0</span><br><span class=\"line\">              each item in cat.movies</span><br><span class=\"line\">                .col-md-2</span><br><span class=\"line\">                  .thumbnail</span><br><span class=\"line\">                    a(href=&quot;/movie/#&#123;item._id&#125;&quot;)</span><br><span class=\"line\">                      if item.poster.indexOf(&#x27;http:&#x27;) &gt; -1</span><br><span class=\"line\">                        img(src=&quot;#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                      else</span><br><span class=\"line\">                        img(src=&quot;/upload/#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                    .caption</span><br><span class=\"line\">                      h4 #&#123;item.title&#125;</span><br><span class=\"line\">                      p: a.btn.btn-primary(href=&quot;/movie/#&#123;item._id&#125;&quot;, role=&quot;button&quot;) 观看预告片</span><br><span class=\"line\">    script(src=&#x27;/build/admin.min.js&#x27;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>request（发http请求）<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> request = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用法</span></span><br><span class=\"line\">request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, function (error, response, body) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = body;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> now = (<span class=\"literal\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"built_in\">var</span> expires_in = now + (<span class=\"built_in\">data</span>.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                <span class=\"built_in\">data</span>.expires_in = expires_in;</span><br><span class=\"line\">                resolve(<span class=\"built_in\">data</span>);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">&#x27;can not get ticket&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"射箭小游戏","date":"2021-06-21T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n\n\n# 射箭小游戏\n\n![](射箭小游戏/image_bPic0MSA86.png)\n\n### 碰撞检测\n\n属于2D游戏，没有深度，碰撞检测采用判断两线段是否相交的方法，即箭头两帧之间位置线段与箭靶中心为原点的xy轴中心线两线段。\n\n![](射箭小游戏/image_jB99fdiEFy.png)\n\n之所以选择这种判断方法，是因为中靶的位置是算分数的一个因素，不能像射气球那种带碰撞盒的方式，箭进入碰撞盒后就会立刻停止。这样的得分效果不好，只能拿到击中边缘的3分。\n\n假如两帧的线段同时与两中心线相交，优先取与y轴平行的中心线交点，因为箭停留在靶上的效果较好。\n\n实际效果发现与x轴平行的右半段，会很大概率挡住箭射中Y轴中心线，这样效果不好。右半段是为了托住箭避免没中Y轴线而穿靶，所以可以加个检测前提。\n\n#### 关键代码\n\n判断二维平面两线段是否相交代码：\n\n```lua\n-- 求线段交点，以解线性方程组的方式\n-- @param p0 Vector2\n-- @return 线段是否相交,交点\nfunction GameUtils.calcIntersectionOfLinear2D(p0, p1, p2, p3)\n    -- 直线的一般方程为F(x) = ax + by + c = 0\n    -- 已知两点可得：a = y0 – y1, b = x1 – x0, c = x0y1 – x1y0\n    -- 可推出两直线交点：\n    -- x = (b0*c1 – b1*c0)/D\n    -- y = (a1*c0 – a0*c1)/D\n    -- D = a0*b1 – a1*b0， (D为0时，表示两直线重合)\n    local a0=p0.y-p1.y\n  local b0=p1.x-p0.x\n  local c0=p0.x*p1.y-p0.y*p1.x\n    local a1=p2.y-p3.y\n  local b1=p3.x-p2.x\n  local c1=p2.x*p3.y-p2.y*p3.x\n    local D=a0*b1-a1*b0\n    if D == 0 then\n        return false\n    end\n  local x=(b0*c1-b1*c0)/D\n    local y=(c0*a1-c1*a0)/D\n    -- 判断交点是否在两条线段上\n    local EPSINON = 0.000001 --浮点数相减的结果的不精确问题\n    if (x - p0.x) * (x - p1.x) <= EPSINON and \n        (y - p0.y) * (y - p1.y) <= EPSINON and \n        (x - p2.x) * (x - p3.x) <= EPSINON and \n        (y - p2.y) * (y - p3.y) <= EPSINON \n    then\n        return true, Vector2.New(x, y)\n    end\n    return false, Vector2.New(x, y)\nend\n```\n\n在实现线段的碰撞检测中踩了些坑，总结两点注意点：\n\n1.  两帧之间的位置坐标点不要采取预测下一帧位置的方式，而是保留上一帧位置。因为用默认一帧deltaTime（约0.034,30帧）预测下一帧位置，可能由于卡帧导致跟实际下一帧的位置出现带有隐患的相差，假如这个相差的距离刚好包含了中心位置，就会出现穿透现象。写这么长，不如画个图：\n\n![](射箭小游戏/image_fNhLsjLAng.png)\n\n1.  浮点数运算精度缺失问题。坐标点的值时浮点数，判断相等时候要注意，不能使用全等，即使两个相等浮点数相减不一定每次都等于0，使用允许误差范围判断math.abs(a -b) < c，c为使用场景下允许的最大误差.\n\n```lua\nif (x - p0.x) * (x - p1.x) <= 0 and \n        (y - p0.y) * (y - p1.y) <= 0 and \n        (x - p2.x) * (x - p3.x) <= 0 and \n        (y - p2.y) * (y - p3.y) <= 0\nthen\n改为：\nlocal EPSINON = 0.000001\nif (x - p0.x) * (x - p1.x) <= EPSINON and \n        (y - p0.y) * (y - p1.y) <= EPSINON and \n        (x - p2.x) * (x - p3.x) <= EPSINON and \n        (y - p2.y) * (y - p3.y) <= EPSINON \nthen\n```\n\n3.检测移动靶的碰撞检测问题。当靶与箭相向运动，靶移动速度过快，同时箭的移动速度过慢（两帧之间线段太短），就会很大概率出现穿透问题。有个很简单的解决方法，检测移动靶时候箭两帧之间的线段不能过小 （小于阈值时适当延长），而且策划的配置不会配太快的靶，这样就基本能避免检测移动物体的穿透问题。有时候限制bug发生的条件也可以简单地解决问题。\n\n但是还是发现偶然小概率有穿靶情况，假如两帧之间最短距离定得太大，击中时箭会有种被靶吸附的效果，不太好。认真观察这个bug，箭刚好错过了移动靶的中位线时正好都未于靶右半部分。网上有个方法是增大碰撞区域，这里可以将靶右半部分作为碰撞盒，引入碰撞盒检测。\n\n![](射箭小游戏/image_9kEuPrkNrd.png)\n\n综上所述，得出碰撞检测的最佳实践是：\n\n1.优先检查Y轴中心线\n\n2.将x轴中心线以圆心分成两段，检测是否与半段相交。\n\n3.否则判断箭是否下落状态并且下落角度大于45度，检测是否与右半段相交。\n\n4.否则检测箭是否位于靶右半边区域，并且箭在上升，则碰撞；或者箭下降且到了中心点y轴一下区域，则碰撞。\n\n### 摇杆拉弓效果\n\n摇杆拉弓弓弦表现伸缩性\n\n![](射箭小游戏/image_eBJv4Og4HY.png)\n\n通过拉伸弓弦图片width来实现，但有个问题是弓弦的粗细程度会跟着伸缩而改变，在大小比较小的情况下表现不太明显，可以接受。\n\n### 轨迹预览\n\n![](射箭小游戏/image_0xirtCNbHW.png)\n\n这个轨迹实现有三步：\n\n1.  初始化克隆出一系列轨迹点\n\n2.  抽离出箭移动公式，输入时刻输出位置\n\n3.  在拖拽监听中设置一系列轨迹点的位置\n","source":"_posts/射箭小游戏.md","raw":"---\ntitle: 射箭小游戏\ndate: 2021-06-22\ntags: [小游戏]\ncategories: [Unity游戏开发,业务系统,小游戏]\n---\n\n<!-- more -->\n\n\n\n\n# 射箭小游戏\n\n![](射箭小游戏/image_bPic0MSA86.png)\n\n### 碰撞检测\n\n属于2D游戏，没有深度，碰撞检测采用判断两线段是否相交的方法，即箭头两帧之间位置线段与箭靶中心为原点的xy轴中心线两线段。\n\n![](射箭小游戏/image_jB99fdiEFy.png)\n\n之所以选择这种判断方法，是因为中靶的位置是算分数的一个因素，不能像射气球那种带碰撞盒的方式，箭进入碰撞盒后就会立刻停止。这样的得分效果不好，只能拿到击中边缘的3分。\n\n假如两帧的线段同时与两中心线相交，优先取与y轴平行的中心线交点，因为箭停留在靶上的效果较好。\n\n实际效果发现与x轴平行的右半段，会很大概率挡住箭射中Y轴中心线，这样效果不好。右半段是为了托住箭避免没中Y轴线而穿靶，所以可以加个检测前提。\n\n#### 关键代码\n\n判断二维平面两线段是否相交代码：\n\n```lua\n-- 求线段交点，以解线性方程组的方式\n-- @param p0 Vector2\n-- @return 线段是否相交,交点\nfunction GameUtils.calcIntersectionOfLinear2D(p0, p1, p2, p3)\n    -- 直线的一般方程为F(x) = ax + by + c = 0\n    -- 已知两点可得：a = y0 – y1, b = x1 – x0, c = x0y1 – x1y0\n    -- 可推出两直线交点：\n    -- x = (b0*c1 – b1*c0)/D\n    -- y = (a1*c0 – a0*c1)/D\n    -- D = a0*b1 – a1*b0， (D为0时，表示两直线重合)\n    local a0=p0.y-p1.y\n  local b0=p1.x-p0.x\n  local c0=p0.x*p1.y-p0.y*p1.x\n    local a1=p2.y-p3.y\n  local b1=p3.x-p2.x\n  local c1=p2.x*p3.y-p2.y*p3.x\n    local D=a0*b1-a1*b0\n    if D == 0 then\n        return false\n    end\n  local x=(b0*c1-b1*c0)/D\n    local y=(c0*a1-c1*a0)/D\n    -- 判断交点是否在两条线段上\n    local EPSINON = 0.000001 --浮点数相减的结果的不精确问题\n    if (x - p0.x) * (x - p1.x) <= EPSINON and \n        (y - p0.y) * (y - p1.y) <= EPSINON and \n        (x - p2.x) * (x - p3.x) <= EPSINON and \n        (y - p2.y) * (y - p3.y) <= EPSINON \n    then\n        return true, Vector2.New(x, y)\n    end\n    return false, Vector2.New(x, y)\nend\n```\n\n在实现线段的碰撞检测中踩了些坑，总结两点注意点：\n\n1.  两帧之间的位置坐标点不要采取预测下一帧位置的方式，而是保留上一帧位置。因为用默认一帧deltaTime（约0.034,30帧）预测下一帧位置，可能由于卡帧导致跟实际下一帧的位置出现带有隐患的相差，假如这个相差的距离刚好包含了中心位置，就会出现穿透现象。写这么长，不如画个图：\n\n![](射箭小游戏/image_fNhLsjLAng.png)\n\n1.  浮点数运算精度缺失问题。坐标点的值时浮点数，判断相等时候要注意，不能使用全等，即使两个相等浮点数相减不一定每次都等于0，使用允许误差范围判断math.abs(a -b) < c，c为使用场景下允许的最大误差.\n\n```lua\nif (x - p0.x) * (x - p1.x) <= 0 and \n        (y - p0.y) * (y - p1.y) <= 0 and \n        (x - p2.x) * (x - p3.x) <= 0 and \n        (y - p2.y) * (y - p3.y) <= 0\nthen\n改为：\nlocal EPSINON = 0.000001\nif (x - p0.x) * (x - p1.x) <= EPSINON and \n        (y - p0.y) * (y - p1.y) <= EPSINON and \n        (x - p2.x) * (x - p3.x) <= EPSINON and \n        (y - p2.y) * (y - p3.y) <= EPSINON \nthen\n```\n\n3.检测移动靶的碰撞检测问题。当靶与箭相向运动，靶移动速度过快，同时箭的移动速度过慢（两帧之间线段太短），就会很大概率出现穿透问题。有个很简单的解决方法，检测移动靶时候箭两帧之间的线段不能过小 （小于阈值时适当延长），而且策划的配置不会配太快的靶，这样就基本能避免检测移动物体的穿透问题。有时候限制bug发生的条件也可以简单地解决问题。\n\n但是还是发现偶然小概率有穿靶情况，假如两帧之间最短距离定得太大，击中时箭会有种被靶吸附的效果，不太好。认真观察这个bug，箭刚好错过了移动靶的中位线时正好都未于靶右半部分。网上有个方法是增大碰撞区域，这里可以将靶右半部分作为碰撞盒，引入碰撞盒检测。\n\n![](射箭小游戏/image_9kEuPrkNrd.png)\n\n综上所述，得出碰撞检测的最佳实践是：\n\n1.优先检查Y轴中心线\n\n2.将x轴中心线以圆心分成两段，检测是否与半段相交。\n\n3.否则判断箭是否下落状态并且下落角度大于45度，检测是否与右半段相交。\n\n4.否则检测箭是否位于靶右半边区域，并且箭在上升，则碰撞；或者箭下降且到了中心点y轴一下区域，则碰撞。\n\n### 摇杆拉弓效果\n\n摇杆拉弓弓弦表现伸缩性\n\n![](射箭小游戏/image_eBJv4Og4HY.png)\n\n通过拉伸弓弦图片width来实现，但有个问题是弓弦的粗细程度会跟着伸缩而改变，在大小比较小的情况下表现不太明显，可以接受。\n\n### 轨迹预览\n\n![](射箭小游戏/image_0xirtCNbHW.png)\n\n这个轨迹实现有三步：\n\n1.  初始化克隆出一系列轨迹点\n\n2.  抽离出箭移动公式，输入时刻输出位置\n\n3.  在拖拽监听中设置一系列轨迹点的位置\n","slug":"射箭小游戏","published":1,"updated":"2022-12-07T13:35:47.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4k002xmcq0epx02gck","content":"<span id=\"more\"></span>\n<h1 id=\"射箭小游戏\"><a href=\"#射箭小游戏\" class=\"headerlink\" title=\"射箭小游戏\"></a>射箭小游戏</h1><img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_bPic0MSA86.png\" class=\"\">\n<h3 id=\"碰撞检测\"><a href=\"#碰撞检测\" class=\"headerlink\" title=\"碰撞检测\"></a>碰撞检测</h3><p>属于2D游戏，没有深度，碰撞检测采用判断两线段是否相交的方法，即箭头两帧之间位置线段与箭靶中心为原点的xy轴中心线两线段。</p>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_jB99fdiEFy.png\" class=\"\">\n<p>之所以选择这种判断方法，是因为中靶的位置是算分数的一个因素，不能像射气球那种带碰撞盒的方式，箭进入碰撞盒后就会立刻停止。这样的得分效果不好，只能拿到击中边缘的3分。</p>\n<p>假如两帧的线段同时与两中心线相交，优先取与y轴平行的中心线交点，因为箭停留在靶上的效果较好。</p>\n<p>实际效果发现与x轴平行的右半段，会很大概率挡住箭射中Y轴中心线，这样效果不好。右半段是为了托住箭避免没中Y轴线而穿靶，所以可以加个检测前提。</p>\n<h4 id=\"关键代码\"><a href=\"#关键代码\" class=\"headerlink\" title=\"关键代码\"></a>关键代码</h4><p>判断二维平面两线段是否相交代码：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 求线段交点，以解线性方程组的方式</span></span><br><span class=\"line\"><span class=\"comment\">-- @param p0 Vector2</span></span><br><span class=\"line\"><span class=\"comment\">-- @return 线段是否相交,交点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">GameUtils.calcIntersectionOfLinear2D</span><span class=\"params\">(p0, p1, p2, p3)</span></span></span><br><span class=\"line\">    <span class=\"comment\">-- 直线的一般方程为F(x) = ax + by + c = 0</span></span><br><span class=\"line\">    <span class=\"comment\">-- 已知两点可得：a = y0 – y1, b = x1 – x0, c = x0y1 – x1y0</span></span><br><span class=\"line\">    <span class=\"comment\">-- 可推出两直线交点：</span></span><br><span class=\"line\">    <span class=\"comment\">-- x = (b0*c1 – b1*c0)/D</span></span><br><span class=\"line\">    <span class=\"comment\">-- y = (a1*c0 – a0*c1)/D</span></span><br><span class=\"line\">    <span class=\"comment\">-- D = a0*b1 – a1*b0， (D为0时，表示两直线重合)</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> a0=p0.y-p1.y</span><br><span class=\"line\">  <span class=\"keyword\">local</span> b0=p1.x-p0.x</span><br><span class=\"line\">  <span class=\"keyword\">local</span> c0=p0.x*p1.y-p0.y*p1.x</span><br><span class=\"line\">    <span class=\"keyword\">local</span> a1=p2.y-p3.y</span><br><span class=\"line\">  <span class=\"keyword\">local</span> b1=p3.x-p2.x</span><br><span class=\"line\">  <span class=\"keyword\">local</span> c1=p2.x*p3.y-p2.y*p3.x</span><br><span class=\"line\">    <span class=\"keyword\">local</span> D=a0*b1-a1*b0</span><br><span class=\"line\">    <span class=\"keyword\">if</span> D == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> x=(b0*c1-b1*c0)/D</span><br><span class=\"line\">    <span class=\"keyword\">local</span> y=(c0*a1-c1*a0)/D</span><br><span class=\"line\">    <span class=\"comment\">-- 判断交点是否在两条线段上</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> EPSINON = <span class=\"number\">0.000001</span> <span class=\"comment\">--浮点数相减的结果的不精确问题</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x - p0.x) * (x - p1.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p0.y) * (y - p1.y) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (x - p2.x) * (x - p3.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p2.y) * (y - p3.y) &lt;= EPSINON </span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>, Vector2.New(x, y)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>, Vector2.New(x, y)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在实现线段的碰撞检测中踩了些坑，总结两点注意点：</p>\n<ol>\n<li>两帧之间的位置坐标点不要采取预测下一帧位置的方式，而是保留上一帧位置。因为用默认一帧deltaTime（约0.034,30帧）预测下一帧位置，可能由于卡帧导致跟实际下一帧的位置出现带有隐患的相差，假如这个相差的距离刚好包含了中心位置，就会出现穿透现象。写这么长，不如画个图：</li>\n</ol>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_fNhLsjLAng.png\" class=\"\">\n<ol>\n<li>浮点数运算精度缺失问题。坐标点的值时浮点数，判断相等时候要注意，不能使用全等，即使两个相等浮点数相减不一定每次都等于0，使用允许误差范围判断math.abs(a -b) &lt; c，c为使用场景下允许的最大误差.</li>\n</ol>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (x - p0.x) * (x - p1.x) &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p0.y) * (y - p1.y) &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (x - p2.x) * (x - p3.x) &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p2.y) * (y - p3.y) &lt;= <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">改为：</span><br><span class=\"line\"><span class=\"keyword\">local</span> EPSINON = <span class=\"number\">0.000001</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (x - p0.x) * (x - p1.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p0.y) * (y - p1.y) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (x - p2.x) * (x - p3.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p2.y) * (y - p3.y) &lt;= EPSINON </span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br></pre></td></tr></table></figure>\n<p>3.检测移动靶的碰撞检测问题。当靶与箭相向运动，靶移动速度过快，同时箭的移动速度过慢（两帧之间线段太短），就会很大概率出现穿透问题。有个很简单的解决方法，检测移动靶时候箭两帧之间的线段不能过小 （小于阈值时适当延长），而且策划的配置不会配太快的靶，这样就基本能避免检测移动物体的穿透问题。有时候限制bug发生的条件也可以简单地解决问题。</p>\n<p>但是还是发现偶然小概率有穿靶情况，假如两帧之间最短距离定得太大，击中时箭会有种被靶吸附的效果，不太好。认真观察这个bug，箭刚好错过了移动靶的中位线时正好都未于靶右半部分。网上有个方法是增大碰撞区域，这里可以将靶右半部分作为碰撞盒，引入碰撞盒检测。</p>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_9kEuPrkNrd.png\" class=\"\">\n<p>综上所述，得出碰撞检测的最佳实践是：</p>\n<p>1.优先检查Y轴中心线</p>\n<p>2.将x轴中心线以圆心分成两段，检测是否与半段相交。</p>\n<p>3.否则判断箭是否下落状态并且下落角度大于45度，检测是否与右半段相交。</p>\n<p>4.否则检测箭是否位于靶右半边区域，并且箭在上升，则碰撞；或者箭下降且到了中心点y轴一下区域，则碰撞。</p>\n<h3 id=\"摇杆拉弓效果\"><a href=\"#摇杆拉弓效果\" class=\"headerlink\" title=\"摇杆拉弓效果\"></a>摇杆拉弓效果</h3><p>摇杆拉弓弓弦表现伸缩性</p>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_eBJv4Og4HY.png\" class=\"\">\n<p>通过拉伸弓弦图片width来实现，但有个问题是弓弦的粗细程度会跟着伸缩而改变，在大小比较小的情况下表现不太明显，可以接受。</p>\n<h3 id=\"轨迹预览\"><a href=\"#轨迹预览\" class=\"headerlink\" title=\"轨迹预览\"></a>轨迹预览</h3><img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_0xirtCNbHW.png\" class=\"\">\n<p>这个轨迹实现有三步：</p>\n<ol>\n<li><p>初始化克隆出一系列轨迹点</p>\n</li>\n<li><p>抽离出箭移动公式，输入时刻输出位置</p>\n</li>\n<li><p>在拖拽监听中设置一系列轨迹点的位置</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"射箭小游戏\"><a href=\"#射箭小游戏\" class=\"headerlink\" title=\"射箭小游戏\"></a>射箭小游戏</h1><img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_bPic0MSA86.png\" class=\"\">\n<h3 id=\"碰撞检测\"><a href=\"#碰撞检测\" class=\"headerlink\" title=\"碰撞检测\"></a>碰撞检测</h3><p>属于2D游戏，没有深度，碰撞检测采用判断两线段是否相交的方法，即箭头两帧之间位置线段与箭靶中心为原点的xy轴中心线两线段。</p>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_jB99fdiEFy.png\" class=\"\">\n<p>之所以选择这种判断方法，是因为中靶的位置是算分数的一个因素，不能像射气球那种带碰撞盒的方式，箭进入碰撞盒后就会立刻停止。这样的得分效果不好，只能拿到击中边缘的3分。</p>\n<p>假如两帧的线段同时与两中心线相交，优先取与y轴平行的中心线交点，因为箭停留在靶上的效果较好。</p>\n<p>实际效果发现与x轴平行的右半段，会很大概率挡住箭射中Y轴中心线，这样效果不好。右半段是为了托住箭避免没中Y轴线而穿靶，所以可以加个检测前提。</p>\n<h4 id=\"关键代码\"><a href=\"#关键代码\" class=\"headerlink\" title=\"关键代码\"></a>关键代码</h4><p>判断二维平面两线段是否相交代码：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 求线段交点，以解线性方程组的方式</span></span><br><span class=\"line\"><span class=\"comment\">-- @param p0 Vector2</span></span><br><span class=\"line\"><span class=\"comment\">-- @return 线段是否相交,交点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">GameUtils.calcIntersectionOfLinear2D</span><span class=\"params\">(p0, p1, p2, p3)</span></span></span><br><span class=\"line\">    <span class=\"comment\">-- 直线的一般方程为F(x) = ax + by + c = 0</span></span><br><span class=\"line\">    <span class=\"comment\">-- 已知两点可得：a = y0 – y1, b = x1 – x0, c = x0y1 – x1y0</span></span><br><span class=\"line\">    <span class=\"comment\">-- 可推出两直线交点：</span></span><br><span class=\"line\">    <span class=\"comment\">-- x = (b0*c1 – b1*c0)/D</span></span><br><span class=\"line\">    <span class=\"comment\">-- y = (a1*c0 – a0*c1)/D</span></span><br><span class=\"line\">    <span class=\"comment\">-- D = a0*b1 – a1*b0， (D为0时，表示两直线重合)</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> a0=p0.y-p1.y</span><br><span class=\"line\">  <span class=\"keyword\">local</span> b0=p1.x-p0.x</span><br><span class=\"line\">  <span class=\"keyword\">local</span> c0=p0.x*p1.y-p0.y*p1.x</span><br><span class=\"line\">    <span class=\"keyword\">local</span> a1=p2.y-p3.y</span><br><span class=\"line\">  <span class=\"keyword\">local</span> b1=p3.x-p2.x</span><br><span class=\"line\">  <span class=\"keyword\">local</span> c1=p2.x*p3.y-p2.y*p3.x</span><br><span class=\"line\">    <span class=\"keyword\">local</span> D=a0*b1-a1*b0</span><br><span class=\"line\">    <span class=\"keyword\">if</span> D == <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> x=(b0*c1-b1*c0)/D</span><br><span class=\"line\">    <span class=\"keyword\">local</span> y=(c0*a1-c1*a0)/D</span><br><span class=\"line\">    <span class=\"comment\">-- 判断交点是否在两条线段上</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> EPSINON = <span class=\"number\">0.000001</span> <span class=\"comment\">--浮点数相减的结果的不精确问题</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x - p0.x) * (x - p1.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p0.y) * (y - p1.y) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (x - p2.x) * (x - p3.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p2.y) * (y - p3.y) &lt;= EPSINON </span><br><span class=\"line\">    <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>, Vector2.New(x, y)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>, Vector2.New(x, y)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>在实现线段的碰撞检测中踩了些坑，总结两点注意点：</p>\n<ol>\n<li>两帧之间的位置坐标点不要采取预测下一帧位置的方式，而是保留上一帧位置。因为用默认一帧deltaTime（约0.034,30帧）预测下一帧位置，可能由于卡帧导致跟实际下一帧的位置出现带有隐患的相差，假如这个相差的距离刚好包含了中心位置，就会出现穿透现象。写这么长，不如画个图：</li>\n</ol>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_fNhLsjLAng.png\" class=\"\">\n<ol>\n<li>浮点数运算精度缺失问题。坐标点的值时浮点数，判断相等时候要注意，不能使用全等，即使两个相等浮点数相减不一定每次都等于0，使用允许误差范围判断math.abs(a -b) &lt; c，c为使用场景下允许的最大误差.</li>\n</ol>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (x - p0.x) * (x - p1.x) &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p0.y) * (y - p1.y) &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (x - p2.x) * (x - p3.x) &lt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p2.y) * (y - p3.y) &lt;= <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">改为：</span><br><span class=\"line\"><span class=\"keyword\">local</span> EPSINON = <span class=\"number\">0.000001</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (x - p0.x) * (x - p1.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p0.y) * (y - p1.y) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (x - p2.x) * (x - p3.x) &lt;= EPSINON <span class=\"keyword\">and</span> </span><br><span class=\"line\">        (y - p2.y) * (y - p3.y) &lt;= EPSINON </span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br></pre></td></tr></table></figure>\n<p>3.检测移动靶的碰撞检测问题。当靶与箭相向运动，靶移动速度过快，同时箭的移动速度过慢（两帧之间线段太短），就会很大概率出现穿透问题。有个很简单的解决方法，检测移动靶时候箭两帧之间的线段不能过小 （小于阈值时适当延长），而且策划的配置不会配太快的靶，这样就基本能避免检测移动物体的穿透问题。有时候限制bug发生的条件也可以简单地解决问题。</p>\n<p>但是还是发现偶然小概率有穿靶情况，假如两帧之间最短距离定得太大，击中时箭会有种被靶吸附的效果，不太好。认真观察这个bug，箭刚好错过了移动靶的中位线时正好都未于靶右半部分。网上有个方法是增大碰撞区域，这里可以将靶右半部分作为碰撞盒，引入碰撞盒检测。</p>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_9kEuPrkNrd.png\" class=\"\">\n<p>综上所述，得出碰撞检测的最佳实践是：</p>\n<p>1.优先检查Y轴中心线</p>\n<p>2.将x轴中心线以圆心分成两段，检测是否与半段相交。</p>\n<p>3.否则判断箭是否下落状态并且下落角度大于45度，检测是否与右半段相交。</p>\n<p>4.否则检测箭是否位于靶右半边区域，并且箭在上升，则碰撞；或者箭下降且到了中心点y轴一下区域，则碰撞。</p>\n<h3 id=\"摇杆拉弓效果\"><a href=\"#摇杆拉弓效果\" class=\"headerlink\" title=\"摇杆拉弓效果\"></a>摇杆拉弓效果</h3><p>摇杆拉弓弓弦表现伸缩性</p>\n<img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_eBJv4Og4HY.png\" class=\"\">\n<p>通过拉伸弓弦图片width来实现，但有个问题是弓弦的粗细程度会跟着伸缩而改变，在大小比较小的情况下表现不太明显，可以接受。</p>\n<h3 id=\"轨迹预览\"><a href=\"#轨迹预览\" class=\"headerlink\" title=\"轨迹预览\"></a>轨迹预览</h3><img src=\"/2021/06/22/%E5%B0%84%E7%AE%AD%E5%B0%8F%E6%B8%B8%E6%88%8F/image_0xirtCNbHW.png\" class=\"\">\n<p>这个轨迹实现有三步：</p>\n<ol>\n<li><p>初始化克隆出一系列轨迹点</p>\n</li>\n<li><p>抽离出箭移动公式，输入时刻输出位置</p>\n</li>\n<li><p>在拖拽监听中设置一系列轨迹点的位置</p>\n</li>\n</ol>"},{"title":"新手引导系统","date":"2021-04-08T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n\n## 目录\n\n- [新手引导系统](#新手引导系统)\n  - [需求分析](#需求分析)\n  - [系统设计架构](#系统设计架构)\n  - [新手指引遮罩](#新手指引遮罩)\n  - [行为树](#行为树)\n\n# 新手引导系统\n\n## 需求分析\n\n1.  强制引导。必须要完成的，常见是进入游戏新手副本。\n\n2.  条件触发引导。由各种条件达成触发，如达到等级，通关副本等。\n\n3.  中断后再次执行。玩家因异常或主动退出中断引导，根据关键步是否完成情况决定是否再次打开。\n\n4.  异常处理。当条件不满足时执行具体的处理方法。比如提交物品，不存在对应物品，引导直接结束。\n\n5.  附加协议。用于某些关键步，确定收发了指定协议然后确定步骤是否完成。比如引导召唤就判断召唤协议是否返回。\n\n6.  并行。引导动作是否并行执行，比如战斗引导中，英雄挂了，并行执行救援引导。\n\n## 系统设计架构\n\n![](新手引导系统/image_BXoVzPQBan.png)\n\n## 新手指引遮罩\n\n挖空矩形遮罩上的目标显示区域实现\n\n1.  编写继承Graphic的脚本类，绑定在mask view上\n\n2.  根据指定的节点，计算中心点，宽高等数据，确定挖孔区域\n\n3.  在OnPopulateMesh回调中重绘顶点数据，绘制四个矩形组成的一个中间空的图形，这个就是所谓的挖孔实现\n\n4.  脚本类集成IPointerClickHandler接口，在OnPointerClick回调中根据鼠标点位置，判断是否点击在挖孔区域内，接着执行lua点击回调，同时传递点击事件\n\n```lua\nExecuteEvents.Execute(arrow.gameObject, ed, ExecuteEvents.pointerClickHandler);\n```\n\n## 行为树\n\n利用行为树控制整个流程，一个引导执行完毕后接着执行另一个引导。\n\n1.  action的执行有行为树FlowSequence类控制，action作为它的children节点，控制其串行执行\n\n2.  每个节点有状态和结果两个属性，onStart()开始执行，执行完成调用onDone()，通知父节点执行next child的onStart()\n","source":"_posts/新手引导系统.md","raw":"---\ntitle: 新手引导系统\ndate: 2021-04-09\ntags: [新手引导]\ncategories: [Unity游戏开发,业务系统]\n---\n\n<!-- more -->\n\n\n\n## 目录\n\n- [新手引导系统](#新手引导系统)\n  - [需求分析](#需求分析)\n  - [系统设计架构](#系统设计架构)\n  - [新手指引遮罩](#新手指引遮罩)\n  - [行为树](#行为树)\n\n# 新手引导系统\n\n## 需求分析\n\n1.  强制引导。必须要完成的，常见是进入游戏新手副本。\n\n2.  条件触发引导。由各种条件达成触发，如达到等级，通关副本等。\n\n3.  中断后再次执行。玩家因异常或主动退出中断引导，根据关键步是否完成情况决定是否再次打开。\n\n4.  异常处理。当条件不满足时执行具体的处理方法。比如提交物品，不存在对应物品，引导直接结束。\n\n5.  附加协议。用于某些关键步，确定收发了指定协议然后确定步骤是否完成。比如引导召唤就判断召唤协议是否返回。\n\n6.  并行。引导动作是否并行执行，比如战斗引导中，英雄挂了，并行执行救援引导。\n\n## 系统设计架构\n\n![](新手引导系统/image_BXoVzPQBan.png)\n\n## 新手指引遮罩\n\n挖空矩形遮罩上的目标显示区域实现\n\n1.  编写继承Graphic的脚本类，绑定在mask view上\n\n2.  根据指定的节点，计算中心点，宽高等数据，确定挖孔区域\n\n3.  在OnPopulateMesh回调中重绘顶点数据，绘制四个矩形组成的一个中间空的图形，这个就是所谓的挖孔实现\n\n4.  脚本类集成IPointerClickHandler接口，在OnPointerClick回调中根据鼠标点位置，判断是否点击在挖孔区域内，接着执行lua点击回调，同时传递点击事件\n\n```lua\nExecuteEvents.Execute(arrow.gameObject, ed, ExecuteEvents.pointerClickHandler);\n```\n\n## 行为树\n\n利用行为树控制整个流程，一个引导执行完毕后接着执行另一个引导。\n\n1.  action的执行有行为树FlowSequence类控制，action作为它的children节点，控制其串行执行\n\n2.  每个节点有状态和结果两个属性，onStart()开始执行，执行完成调用onDone()，通知父节点执行next child的onStart()\n","slug":"新手引导系统","published":1,"updated":"2022-12-07T13:35:39.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4l0031mcq0gahn2kfb","content":"<span id=\"more\"></span>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#新手引导系统\">新手引导系统</a><ul>\n<li><a href=\"#需求分析\">需求分析</a></li>\n<li><a href=\"#系统设计架构\">系统设计架构</a></li>\n<li><a href=\"#新手指引遮罩\">新手指引遮罩</a></li>\n<li><a href=\"#行为树\">行为树</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"新手引导系统\"><a href=\"#新手引导系统\" class=\"headerlink\" title=\"新手引导系统\"></a>新手引导系统</h1><h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><ol>\n<li><p>强制引导。必须要完成的，常见是进入游戏新手副本。</p>\n</li>\n<li><p>条件触发引导。由各种条件达成触发，如达到等级，通关副本等。</p>\n</li>\n<li><p>中断后再次执行。玩家因异常或主动退出中断引导，根据关键步是否完成情况决定是否再次打开。</p>\n</li>\n<li><p>异常处理。当条件不满足时执行具体的处理方法。比如提交物品，不存在对应物品，引导直接结束。</p>\n</li>\n<li><p>附加协议。用于某些关键步，确定收发了指定协议然后确定步骤是否完成。比如引导召唤就判断召唤协议是否返回。</p>\n</li>\n<li><p>并行。引导动作是否并行执行，比如战斗引导中，英雄挂了，并行执行救援引导。</p>\n</li>\n</ol>\n<h2 id=\"系统设计架构\"><a href=\"#系统设计架构\" class=\"headerlink\" title=\"系统设计架构\"></a>系统设计架构</h2><img src=\"/2021/04/09/%E6%96%B0%E6%89%8B%E5%BC%95%E5%AF%BC%E7%B3%BB%E7%BB%9F/image_BXoVzPQBan.png\" class=\"\">\n<h2 id=\"新手指引遮罩\"><a href=\"#新手指引遮罩\" class=\"headerlink\" title=\"新手指引遮罩\"></a>新手指引遮罩</h2><p>挖空矩形遮罩上的目标显示区域实现</p>\n<ol>\n<li><p>编写继承Graphic的脚本类，绑定在mask view上</p>\n</li>\n<li><p>根据指定的节点，计算中心点，宽高等数据，确定挖孔区域</p>\n</li>\n<li><p>在OnPopulateMesh回调中重绘顶点数据，绘制四个矩形组成的一个中间空的图形，这个就是所谓的挖孔实现</p>\n</li>\n<li><p>脚本类集成IPointerClickHandler接口，在OnPointerClick回调中根据鼠标点位置，判断是否点击在挖孔区域内，接着执行lua点击回调，同时传递点击事件</p>\n</li>\n</ol>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExecuteEvents.Execute(arrow.gameObject, ed, ExecuteEvents.pointerClickHandler);</span><br></pre></td></tr></table></figure>\n<h2 id=\"行为树\"><a href=\"#行为树\" class=\"headerlink\" title=\"行为树\"></a>行为树</h2><p>利用行为树控制整个流程，一个引导执行完毕后接着执行另一个引导。</p>\n<ol>\n<li><p>action的执行有行为树FlowSequence类控制，action作为它的children节点，控制其串行执行</p>\n</li>\n<li><p>每个节点有状态和结果两个属性，onStart()开始执行，执行完成调用onDone()，通知父节点执行next child的onStart()</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#新手引导系统\">新手引导系统</a><ul>\n<li><a href=\"#需求分析\">需求分析</a></li>\n<li><a href=\"#系统设计架构\">系统设计架构</a></li>\n<li><a href=\"#新手指引遮罩\">新手指引遮罩</a></li>\n<li><a href=\"#行为树\">行为树</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"新手引导系统\"><a href=\"#新手引导系统\" class=\"headerlink\" title=\"新手引导系统\"></a>新手引导系统</h1><h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><ol>\n<li><p>强制引导。必须要完成的，常见是进入游戏新手副本。</p>\n</li>\n<li><p>条件触发引导。由各种条件达成触发，如达到等级，通关副本等。</p>\n</li>\n<li><p>中断后再次执行。玩家因异常或主动退出中断引导，根据关键步是否完成情况决定是否再次打开。</p>\n</li>\n<li><p>异常处理。当条件不满足时执行具体的处理方法。比如提交物品，不存在对应物品，引导直接结束。</p>\n</li>\n<li><p>附加协议。用于某些关键步，确定收发了指定协议然后确定步骤是否完成。比如引导召唤就判断召唤协议是否返回。</p>\n</li>\n<li><p>并行。引导动作是否并行执行，比如战斗引导中，英雄挂了，并行执行救援引导。</p>\n</li>\n</ol>\n<h2 id=\"系统设计架构\"><a href=\"#系统设计架构\" class=\"headerlink\" title=\"系统设计架构\"></a>系统设计架构</h2><img src=\"/2021/04/09/%E6%96%B0%E6%89%8B%E5%BC%95%E5%AF%BC%E7%B3%BB%E7%BB%9F/image_BXoVzPQBan.png\" class=\"\">\n<h2 id=\"新手指引遮罩\"><a href=\"#新手指引遮罩\" class=\"headerlink\" title=\"新手指引遮罩\"></a>新手指引遮罩</h2><p>挖空矩形遮罩上的目标显示区域实现</p>\n<ol>\n<li><p>编写继承Graphic的脚本类，绑定在mask view上</p>\n</li>\n<li><p>根据指定的节点，计算中心点，宽高等数据，确定挖孔区域</p>\n</li>\n<li><p>在OnPopulateMesh回调中重绘顶点数据，绘制四个矩形组成的一个中间空的图形，这个就是所谓的挖孔实现</p>\n</li>\n<li><p>脚本类集成IPointerClickHandler接口，在OnPointerClick回调中根据鼠标点位置，判断是否点击在挖孔区域内，接着执行lua点击回调，同时传递点击事件</p>\n</li>\n</ol>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ExecuteEvents.Execute(arrow.gameObject, ed, ExecuteEvents.pointerClickHandler);</span><br></pre></td></tr></table></figure>\n<h2 id=\"行为树\"><a href=\"#行为树\" class=\"headerlink\" title=\"行为树\"></a>行为树</h2><p>利用行为树控制整个流程，一个引导执行完毕后接着执行另一个引导。</p>\n<ol>\n<li><p>action的执行有行为树FlowSequence类控制，action作为它的children节点，控制其串行执行</p>\n</li>\n<li><p>每个节点有状态和结果两个属性，onStart()开始执行，执行完成调用onDone()，通知父节点执行next child的onStart()</p>\n</li>\n</ol>"},{"title":"有趣的鼠标悬浮效果","date":"2017-03-06T16:00:00.000Z","_content":"\n**1.文字的流光效果**\n  \n\t\n关键代码：`background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);   `\n这句代码设置背景色的线性渐变\n`-webkit-background-clip: text; `\n以文字的形状裁剪背景色，这时候文字颜色还在背景色之上\n`-webkit-text-fill-color: transparent;`\n将文字颜色设置为透明\n` background-size: 200% 100%; `\n设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应\n```\n@keyframes streamer {\n    0%  {\n        background-position: 0 0;\n    }\n    100% {\n        background-position: -100% 0;\n    }\n}\n```\n`animation: streamer 3s infinite linear;`\n最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）\n\n**学习到的知识点**\nlinear-gradient(起点，开始颜色，结束颜色);\n可参考[http://www.fx114.net/qa-264-77177.aspx](http://)\n```\nbackground-clip\nbackground-clip: border-box|padding-box|content-box|text(要加-webkit)\n```\n\n| border-box | 背景被裁剪到边框盒 | \n| -------- | -------- | \n| padding-box    | 背景被裁剪到内边距框  |\n| content-box    |   背景被裁剪到内容框 |\n| text | 背景被裁剪到文字区域（此时文字颜色会盖住背景色） |\n\nanimation\n`animation: name duration timing-function delay iteration-count direction;`\n\n|animation-name  | 规定需要绑定到选择器的 keyframe 名称|\n| -------- | -------- | \n|animation-duration | 规定完成动画所花费的时间，以秒或毫秒计|\n|animation-timing-function  | 规定动画的速度曲线 |\n|animation-delay |  规定在动画开始之前的延迟|\n|animation-iteration-count  | 规定动画应该播放的次数|\n|animation-direction  |规定是否应该轮流反向播放动画|\n\ntransition\n`transition: property duration timing-function delay;`\n默认值：all 0 easy 0\n|transition-property | 规定设置过渡效果的 CSS 属性的名称|\n| -------- | -------- | \n|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|\n|transition-delay  | 定义过渡效果何时开始|\n  \n\t\n**2.背景图片模糊化**\n  \n\t\n 主要是用到-webkit-filter： blur（）\n-webkit-filter的方法十种：\n1.\tgrayscale灰度\n2.\tsepia褐色\n3.\tsaturate饱和度\n4.\thue-rotate色相旋转\n5.\tinvert反色\n6.\topacity透明度\n7.\tbrightness亮度\n8.\tcontrast对比度\n9.\tblur模糊\n10.\tdrop-shadow阴影\n参考：[http://www.w3cplus.com/css3/ten-effects-with-css3-filter](http://)\n  \n\t\n**3.按钮边框的从中间到两边扩展开**\n  \n\t\n主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。\n","source":"_posts/有趣的鼠标悬浮效果.md","raw":"---\ntitle: 有趣的鼠标悬浮效果\ndate: 2017-03-7\ntags: [html5,css3]\n---\n\n**1.文字的流光效果**\n  \n\t\n关键代码：`background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);   `\n这句代码设置背景色的线性渐变\n`-webkit-background-clip: text; `\n以文字的形状裁剪背景色，这时候文字颜色还在背景色之上\n`-webkit-text-fill-color: transparent;`\n将文字颜色设置为透明\n` background-size: 200% 100%; `\n设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应\n```\n@keyframes streamer {\n    0%  {\n        background-position: 0 0;\n    }\n    100% {\n        background-position: -100% 0;\n    }\n}\n```\n`animation: streamer 3s infinite linear;`\n最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）\n\n**学习到的知识点**\nlinear-gradient(起点，开始颜色，结束颜色);\n可参考[http://www.fx114.net/qa-264-77177.aspx](http://)\n```\nbackground-clip\nbackground-clip: border-box|padding-box|content-box|text(要加-webkit)\n```\n\n| border-box | 背景被裁剪到边框盒 | \n| -------- | -------- | \n| padding-box    | 背景被裁剪到内边距框  |\n| content-box    |   背景被裁剪到内容框 |\n| text | 背景被裁剪到文字区域（此时文字颜色会盖住背景色） |\n\nanimation\n`animation: name duration timing-function delay iteration-count direction;`\n\n|animation-name  | 规定需要绑定到选择器的 keyframe 名称|\n| -------- | -------- | \n|animation-duration | 规定完成动画所花费的时间，以秒或毫秒计|\n|animation-timing-function  | 规定动画的速度曲线 |\n|animation-delay |  规定在动画开始之前的延迟|\n|animation-iteration-count  | 规定动画应该播放的次数|\n|animation-direction  |规定是否应该轮流反向播放动画|\n\ntransition\n`transition: property duration timing-function delay;`\n默认值：all 0 easy 0\n|transition-property | 规定设置过渡效果的 CSS 属性的名称|\n| -------- | -------- | \n|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|\n|transition-delay  | 定义过渡效果何时开始|\n  \n\t\n**2.背景图片模糊化**\n  \n\t\n 主要是用到-webkit-filter： blur（）\n-webkit-filter的方法十种：\n1.\tgrayscale灰度\n2.\tsepia褐色\n3.\tsaturate饱和度\n4.\thue-rotate色相旋转\n5.\tinvert反色\n6.\topacity透明度\n7.\tbrightness亮度\n8.\tcontrast对比度\n9.\tblur模糊\n10.\tdrop-shadow阴影\n参考：[http://www.w3cplus.com/css3/ten-effects-with-css3-filter](http://)\n  \n\t\n**3.按钮边框的从中间到两边扩展开**\n  \n\t\n主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。\n","slug":"有趣的鼠标悬浮效果","published":1,"updated":"2022-12-06T15:30:38.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4l0033mcq00e6devco","content":"<p><strong>1.文字的流光效果</strong></p>\n<p>关键代码：<code>background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);</code><br>这句代码设置背景色的线性渐变<br><code>-webkit-background-clip: text;</code><br>以文字的形状裁剪背景色，这时候文字颜色还在背景色之上<br><code>-webkit-text-fill-color: transparent;</code><br>将文字颜色设置为透明<br><code>background-size: 200% 100%;</code><br>设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> streamer &#123;</span><br><span class=\"line\">    <span class=\"number\">0%</span>  &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: -<span class=\"number\">100%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><code>animation: streamer 3s infinite linear;</code><br>最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）</p>\n<p><strong>学习到的知识点</strong><br>linear-gradient(起点，开始颜色，结束颜色);<br>可参考<a href=\"http://\">http://www.fx114.net/qa-264-77177.aspx</a><br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">background</span>-clip</span><br><span class=\"line\"><span class=\"built_in\">background</span>-clip: <span class=\"built_in\">border</span>-<span class=\"built_in\">box</span>|padding-<span class=\"built_in\">box</span>|<span class=\"built_in\">content</span>-<span class=\"built_in\">box</span>|text(要加-webkit)</span><br></pre></td></tr></table></figure></p>\n<table>\n<thead>\n<tr>\n<th>border-box</th>\n<th>背景被裁剪到边框盒</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>padding-box</td>\n<td>背景被裁剪到内边距框</td>\n</tr>\n<tr>\n<td>content-box</td>\n<td>背景被裁剪到内容框</td>\n</tr>\n<tr>\n<td>text</td>\n<td>背景被裁剪到文字区域（此时文字颜色会盖住背景色）</td>\n</tr>\n</tbody>\n</table>\n<p>animation<br><code>animation: name duration timing-function delay iteration-count direction;</code></p>\n<table>\n<thead>\n<tr>\n<th>animation-name</th>\n<th>规定需要绑定到选择器的 keyframe 名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>animation-duration</td>\n<td>规定完成动画所花费的时间，以秒或毫秒计</td>\n</tr>\n<tr>\n<td>animation-timing-function</td>\n<td>规定动画的速度曲线</td>\n</tr>\n<tr>\n<td>animation-delay</td>\n<td>规定在动画开始之前的延迟</td>\n</tr>\n<tr>\n<td>animation-iteration-count</td>\n<td>规定动画应该播放的次数</td>\n</tr>\n<tr>\n<td>animation-direction</td>\n<td>规定是否应该轮流反向播放动画</td>\n</tr>\n</tbody>\n</table>\n<p>transition<br><code>transition: property duration timing-function delay;</code><br>默认值：all 0 easy 0<br>|transition-property | 规定设置过渡效果的 CSS 属性的名称|<br>| ——– | ——– |<br>|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|<br>|transition-delay  | 定义过渡效果何时开始|</p>\n<p><strong>2.背景图片模糊化</strong></p>\n<p> 主要是用到-webkit-filter： blur（）<br>-webkit-filter的方法十种：</p>\n<ol>\n<li>grayscale灰度</li>\n<li>sepia褐色</li>\n<li>saturate饱和度</li>\n<li>hue-rotate色相旋转</li>\n<li>invert反色</li>\n<li>opacity透明度</li>\n<li>brightness亮度</li>\n<li>contrast对比度</li>\n<li>blur模糊</li>\n<li>drop-shadow阴影<br>参考：<a href=\"http://\">http://www.w3cplus.com/css3/ten-effects-with-css3-filter</a></li>\n</ol>\n<p><strong>3.按钮边框的从中间到两边扩展开</strong></p>\n<p>主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>1.文字的流光效果</strong></p>\n<p>关键代码：<code>background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);</code><br>这句代码设置背景色的线性渐变<br><code>-webkit-background-clip: text;</code><br>以文字的形状裁剪背景色，这时候文字颜色还在背景色之上<br><code>-webkit-text-fill-color: transparent;</code><br>将文字颜色设置为透明<br><code>background-size: 200% 100%;</code><br>设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> streamer &#123;</span><br><span class=\"line\">    <span class=\"number\">0%</span>  &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: -<span class=\"number\">100%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><code>animation: streamer 3s infinite linear;</code><br>最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）</p>\n<p><strong>学习到的知识点</strong><br>linear-gradient(起点，开始颜色，结束颜色);<br>可参考<a href=\"http://\">http://www.fx114.net/qa-264-77177.aspx</a><br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">background</span>-clip</span><br><span class=\"line\"><span class=\"built_in\">background</span>-clip: <span class=\"built_in\">border</span>-<span class=\"built_in\">box</span>|padding-<span class=\"built_in\">box</span>|<span class=\"built_in\">content</span>-<span class=\"built_in\">box</span>|text(要加-webkit)</span><br></pre></td></tr></table></figure></p>\n<table>\n<thead>\n<tr>\n<th>border-box</th>\n<th>背景被裁剪到边框盒</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>padding-box</td>\n<td>背景被裁剪到内边距框</td>\n</tr>\n<tr>\n<td>content-box</td>\n<td>背景被裁剪到内容框</td>\n</tr>\n<tr>\n<td>text</td>\n<td>背景被裁剪到文字区域（此时文字颜色会盖住背景色）</td>\n</tr>\n</tbody>\n</table>\n<p>animation<br><code>animation: name duration timing-function delay iteration-count direction;</code></p>\n<table>\n<thead>\n<tr>\n<th>animation-name</th>\n<th>规定需要绑定到选择器的 keyframe 名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>animation-duration</td>\n<td>规定完成动画所花费的时间，以秒或毫秒计</td>\n</tr>\n<tr>\n<td>animation-timing-function</td>\n<td>规定动画的速度曲线</td>\n</tr>\n<tr>\n<td>animation-delay</td>\n<td>规定在动画开始之前的延迟</td>\n</tr>\n<tr>\n<td>animation-iteration-count</td>\n<td>规定动画应该播放的次数</td>\n</tr>\n<tr>\n<td>animation-direction</td>\n<td>规定是否应该轮流反向播放动画</td>\n</tr>\n</tbody>\n</table>\n<p>transition<br><code>transition: property duration timing-function delay;</code><br>默认值：all 0 easy 0<br>|transition-property | 规定设置过渡效果的 CSS 属性的名称|<br>| ——– | ——– |<br>|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|<br>|transition-delay  | 定义过渡效果何时开始|</p>\n<p><strong>2.背景图片模糊化</strong></p>\n<p> 主要是用到-webkit-filter： blur（）<br>-webkit-filter的方法十种：</p>\n<ol>\n<li>grayscale灰度</li>\n<li>sepia褐色</li>\n<li>saturate饱和度</li>\n<li>hue-rotate色相旋转</li>\n<li>invert反色</li>\n<li>opacity透明度</li>\n<li>brightness亮度</li>\n<li>contrast对比度</li>\n<li>blur模糊</li>\n<li>drop-shadow阴影<br>参考：<a href=\"http://\">http://www.w3cplus.com/css3/ten-effects-with-css3-filter</a></li>\n</ol>\n<p><strong>3.按钮边框的从中间到两边扩展开</strong></p>\n<p>主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。</p>\n"},{"title":"海外版本diff工具","date":"2021-03-17T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n\n## 目录\n\n- [海外版本diff工具](#海外版本diff工具)\n  - [一、背景](#一背景)\n  - [二、使用介绍](#二使用介绍)\n  - [三、实现思路](#三实现思路)\n  - [四、sh脚本语法](#四sh脚本语法)\n\n# 海外版本diff工具\n\n## 一、背景\n\n海外版本是从国内版本基础上做差异化替换而来，代码上采用replaceModule的方式覆盖重写module的方法，资源上优先加载对应语言目录下的替换资源。\n\n这种方案决定了，大多数替换内容（代码、预制物等） 是在源内容的基础上演变而来，依赖源内容。当合并国内版本后，需要检查源内容做了什么哪些修改，代码上有没有逻辑冲突，预制资源方面需不需要更新。\n\n可以总结有两个需求：\n\n1.  检查replace的module在合并前后代码有哪些更新\n\n2.  检查出替换的预制在合并前后有哪些是更新了\n\n更新：\n\n追加了其他两个需求：\n\n1.检查多语言的scene目录资源在合并前后的更改和新增情况\n\n2.检查fmod资源的更新情况\n\n## 二、使用介绍\n\n![](海外版本diff工具/image_lch2ake5uD.png)\n\n选项介绍：\n\n*   语言类型：选择当前语言类型，必填。\n\n*   合并后版本号：海外dev分支合并国服版本后的commitID，commitID太长不一定需要填全部，git能够识别commit即可，必填。\n\n*   合并前版本号：海外的dev分支合并国服版本前的commitID，必填。\n\n*   自定义执行shell文件的exe路径：用于执行diff.sh脚本的shell exe路径。假如你的系统有git-bash.exe，填它的路径也可以。windows上必填，因为windows上默认的终端可能是cmd.exe，它执行shell文件会不成功。mac系统可以不填。\n\n比如台湾版本：\n\n语言类型选：tw\n\n合并前后版本到gitlab pjg-client仓库commit栏目上找commitID。\n\n功能介绍：\n\n*   导出replace module更改：将replace module代码文件的差异导出到桌面上，文件名replace-module-{commitID0}-{commitID1}.diff。\n\n*   导出多语言目录zh/ui/views下的预制perfab文件更新情况：将多语言目录下ui的prefab文件对应的zh目录源文件在两个版本间的差异，和zh目录下新增但海外语言目录没有的预制内容导出到桌边，文件名zh-UIPrefab-{commitID0}-{commitID1}.diff。\n\n*   导出多语言目录zh/scene下所有资源的更新情况：同上，多语言目录的资源对应的zh目录下的资源，对比两个版本前后zh目录的资源更新情况和新增情况，然后由场景决定是否需要更新对应多语言（如tw）目录的资源。执行会导出diff文件到桌面。\n\n*   导出fmod event的更改情况：检出更改的文件，决定是否更改对应多语言目录下的文件。\n\n## 三、实现思路\n\n![](海外版本diff工具/image_y5ou7bMrqO.png)\n\n实现原理很简单，就是找出相应的文件名，调用git diff命令输出差异即可。\n\n## 四、sh脚本语法\n\n工具利用c# API Process类执行sh脚本，diff.sh脚本主要做两件事情，一是解析参数，二是调用git diff命令。\n\n这里简单解析下sh语法，帮助理解代码。\n\n1、获取参数\n```\n\\$@\n```\n\n2、定义数组\n```\ncommitIdArr=()\n```\n3、数值自增\n```\n((commitIdArr\\_index++))\n```\n4、获取变量值\n```\n$moduleNameArr_index或者${outputFileName}\n```\n5、输出数组内容\n```\necho moduleNameArr\\[@]\n```\n6、数组长度\n```\n\\${#moduleNameArr\\[@]}\n```\n学习shell脚本语法可以查看这里：[shell教程](https://www.runoob.com/linux/linux-shell.html \"shell教程\")。\n\n代码：\n\n[LanguageDiffWindow.cs](海外版本diff工具/LanguageDiffWindow_xSMzWdHsMs.cs)\n\n[diff.sh](海外版本diff工具/diff_7U8prTz5se.sh)\n","source":"_posts/海外版本diff工具.md","raw":"---\ntitle: 海外版本diff工具\ndate: 2021-03-18\ntags: [多语言,海外]\ncategories: [Unity游戏开发,基础系统]\n---\n\n<!-- more -->\n\n\n\n## 目录\n\n- [海外版本diff工具](#海外版本diff工具)\n  - [一、背景](#一背景)\n  - [二、使用介绍](#二使用介绍)\n  - [三、实现思路](#三实现思路)\n  - [四、sh脚本语法](#四sh脚本语法)\n\n# 海外版本diff工具\n\n## 一、背景\n\n海外版本是从国内版本基础上做差异化替换而来，代码上采用replaceModule的方式覆盖重写module的方法，资源上优先加载对应语言目录下的替换资源。\n\n这种方案决定了，大多数替换内容（代码、预制物等） 是在源内容的基础上演变而来，依赖源内容。当合并国内版本后，需要检查源内容做了什么哪些修改，代码上有没有逻辑冲突，预制资源方面需不需要更新。\n\n可以总结有两个需求：\n\n1.  检查replace的module在合并前后代码有哪些更新\n\n2.  检查出替换的预制在合并前后有哪些是更新了\n\n更新：\n\n追加了其他两个需求：\n\n1.检查多语言的scene目录资源在合并前后的更改和新增情况\n\n2.检查fmod资源的更新情况\n\n## 二、使用介绍\n\n![](海外版本diff工具/image_lch2ake5uD.png)\n\n选项介绍：\n\n*   语言类型：选择当前语言类型，必填。\n\n*   合并后版本号：海外dev分支合并国服版本后的commitID，commitID太长不一定需要填全部，git能够识别commit即可，必填。\n\n*   合并前版本号：海外的dev分支合并国服版本前的commitID，必填。\n\n*   自定义执行shell文件的exe路径：用于执行diff.sh脚本的shell exe路径。假如你的系统有git-bash.exe，填它的路径也可以。windows上必填，因为windows上默认的终端可能是cmd.exe，它执行shell文件会不成功。mac系统可以不填。\n\n比如台湾版本：\n\n语言类型选：tw\n\n合并前后版本到gitlab pjg-client仓库commit栏目上找commitID。\n\n功能介绍：\n\n*   导出replace module更改：将replace module代码文件的差异导出到桌面上，文件名replace-module-{commitID0}-{commitID1}.diff。\n\n*   导出多语言目录zh/ui/views下的预制perfab文件更新情况：将多语言目录下ui的prefab文件对应的zh目录源文件在两个版本间的差异，和zh目录下新增但海外语言目录没有的预制内容导出到桌边，文件名zh-UIPrefab-{commitID0}-{commitID1}.diff。\n\n*   导出多语言目录zh/scene下所有资源的更新情况：同上，多语言目录的资源对应的zh目录下的资源，对比两个版本前后zh目录的资源更新情况和新增情况，然后由场景决定是否需要更新对应多语言（如tw）目录的资源。执行会导出diff文件到桌面。\n\n*   导出fmod event的更改情况：检出更改的文件，决定是否更改对应多语言目录下的文件。\n\n## 三、实现思路\n\n![](海外版本diff工具/image_y5ou7bMrqO.png)\n\n实现原理很简单，就是找出相应的文件名，调用git diff命令输出差异即可。\n\n## 四、sh脚本语法\n\n工具利用c# API Process类执行sh脚本，diff.sh脚本主要做两件事情，一是解析参数，二是调用git diff命令。\n\n这里简单解析下sh语法，帮助理解代码。\n\n1、获取参数\n```\n\\$@\n```\n\n2、定义数组\n```\ncommitIdArr=()\n```\n3、数值自增\n```\n((commitIdArr\\_index++))\n```\n4、获取变量值\n```\n$moduleNameArr_index或者${outputFileName}\n```\n5、输出数组内容\n```\necho moduleNameArr\\[@]\n```\n6、数组长度\n```\n\\${#moduleNameArr\\[@]}\n```\n学习shell脚本语法可以查看这里：[shell教程](https://www.runoob.com/linux/linux-shell.html \"shell教程\")。\n\n代码：\n\n[LanguageDiffWindow.cs](海外版本diff工具/LanguageDiffWindow_xSMzWdHsMs.cs)\n\n[diff.sh](海外版本diff工具/diff_7U8prTz5se.sh)\n","slug":"海外版本diff工具","published":1,"updated":"2022-12-07T13:35:29.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4m0036mcq05c7ahhqf","content":"<span id=\"more\"></span>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#海外版本diff工具\">海外版本diff工具</a><ul>\n<li><a href=\"#一背景\">一、背景</a></li>\n<li><a href=\"#二使用介绍\">二、使用介绍</a></li>\n<li><a href=\"#三实现思路\">三、实现思路</a></li>\n<li><a href=\"#四sh脚本语法\">四、sh脚本语法</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"海外版本diff工具\"><a href=\"#海外版本diff工具\" class=\"headerlink\" title=\"海外版本diff工具\"></a>海外版本diff工具</h1><h2 id=\"一、背景\"><a href=\"#一、背景\" class=\"headerlink\" title=\"一、背景\"></a>一、背景</h2><p>海外版本是从国内版本基础上做差异化替换而来，代码上采用replaceModule的方式覆盖重写module的方法，资源上优先加载对应语言目录下的替换资源。</p>\n<p>这种方案决定了，大多数替换内容（代码、预制物等） 是在源内容的基础上演变而来，依赖源内容。当合并国内版本后，需要检查源内容做了什么哪些修改，代码上有没有逻辑冲突，预制资源方面需不需要更新。</p>\n<p>可以总结有两个需求：</p>\n<ol>\n<li><p>检查replace的module在合并前后代码有哪些更新</p>\n</li>\n<li><p>检查出替换的预制在合并前后有哪些是更新了</p>\n</li>\n</ol>\n<p>更新：</p>\n<p>追加了其他两个需求：</p>\n<p>1.检查多语言的scene目录资源在合并前后的更改和新增情况</p>\n<p>2.检查fmod资源的更新情况</p>\n<h2 id=\"二、使用介绍\"><a href=\"#二、使用介绍\" class=\"headerlink\" title=\"二、使用介绍\"></a>二、使用介绍</h2><img src=\"/2021/03/18/%E6%B5%B7%E5%A4%96%E7%89%88%E6%9C%ACdiff%E5%B7%A5%E5%85%B7/image_lch2ake5uD.png\" class=\"\">\n<p>选项介绍：</p>\n<ul>\n<li><p>语言类型：选择当前语言类型，必填。</p>\n</li>\n<li><p>合并后版本号：海外dev分支合并国服版本后的commitID，commitID太长不一定需要填全部，git能够识别commit即可，必填。</p>\n</li>\n<li><p>合并前版本号：海外的dev分支合并国服版本前的commitID，必填。</p>\n</li>\n<li><p>自定义执行shell文件的exe路径：用于执行diff.sh脚本的shell exe路径。假如你的系统有git-bash.exe，填它的路径也可以。windows上必填，因为windows上默认的终端可能是cmd.exe，它执行shell文件会不成功。mac系统可以不填。</p>\n</li>\n</ul>\n<p>比如台湾版本：</p>\n<p>语言类型选：tw</p>\n<p>合并前后版本到gitlab pjg-client仓库commit栏目上找commitID。</p>\n<p>功能介绍：</p>\n<ul>\n<li><p>导出replace module更改：将replace module代码文件的差异导出到桌面上，文件名replace-module-{commitID0}-{commitID1}.diff。</p>\n</li>\n<li><p>导出多语言目录zh/ui/views下的预制perfab文件更新情况：将多语言目录下ui的prefab文件对应的zh目录源文件在两个版本间的差异，和zh目录下新增但海外语言目录没有的预制内容导出到桌边，文件名zh-UIPrefab-{commitID0}-{commitID1}.diff。</p>\n</li>\n<li><p>导出多语言目录zh/scene下所有资源的更新情况：同上，多语言目录的资源对应的zh目录下的资源，对比两个版本前后zh目录的资源更新情况和新增情况，然后由场景决定是否需要更新对应多语言（如tw）目录的资源。执行会导出diff文件到桌面。</p>\n</li>\n<li><p>导出fmod event的更改情况：检出更改的文件，决定是否更改对应多语言目录下的文件。</p>\n</li>\n</ul>\n<h2 id=\"三、实现思路\"><a href=\"#三、实现思路\" class=\"headerlink\" title=\"三、实现思路\"></a>三、实现思路</h2><img src=\"/2021/03/18/%E6%B5%B7%E5%A4%96%E7%89%88%E6%9C%ACdiff%E5%B7%A5%E5%85%B7/image_y5ou7bMrqO.png\" class=\"\">\n<p>实现原理很简单，就是找出相应的文件名，调用git diff命令输出差异即可。</p>\n<h2 id=\"四、sh脚本语法\"><a href=\"#四、sh脚本语法\" class=\"headerlink\" title=\"四、sh脚本语法\"></a>四、sh脚本语法</h2><p>工具利用c# API Process类执行sh脚本，diff.sh脚本主要做两件事情，一是解析参数，二是调用git diff命令。</p>\n<p>这里简单解析下sh语法，帮助理解代码。</p>\n<p>1、获取参数<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\<span class=\"variable\">$@</span></span><br></pre></td></tr></table></figure></p>\n<p>2、定义数组<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">commitIdArr</span><span class=\"operator\">=</span>()</span><br></pre></td></tr></table></figure><br>3、数值自增<br><figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((<span class=\"name\">commitIdArr</span><span class=\"character\">\\_</span>index++))</span><br></pre></td></tr></table></figure><br>4、获取变量值<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$moduleNameArr_index</span>或者<span class=\"variable\">$&#123;outputFileName&#125;</span></span><br></pre></td></tr></table></figure><br>5、输出数组内容<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo moduleNameArr\\[<span class=\"symbol\">@]</span></span><br></pre></td></tr></table></figure><br>6、数组长度<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\<span class=\"variable\">$&#123;</span><span class=\"comment\">#moduleNameArr\\[@]&#125;</span></span><br></pre></td></tr></table></figure><br>学习shell脚本语法可以查看这里：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.runoob.com/linux/linux-shell.html\" title=\"shell教程\">shell教程</a>。</p>\n<p>代码：</p>\n<p><a href=\"海外版本diff工具/LanguageDiffWindow_xSMzWdHsMs.cs\">LanguageDiffWindow.cs</a></p>\n<p><a href=\"海外版本diff工具/diff_7U8prTz5se.sh\">diff.sh</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li><a href=\"#海外版本diff工具\">海外版本diff工具</a><ul>\n<li><a href=\"#一背景\">一、背景</a></li>\n<li><a href=\"#二使用介绍\">二、使用介绍</a></li>\n<li><a href=\"#三实现思路\">三、实现思路</a></li>\n<li><a href=\"#四sh脚本语法\">四、sh脚本语法</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"海外版本diff工具\"><a href=\"#海外版本diff工具\" class=\"headerlink\" title=\"海外版本diff工具\"></a>海外版本diff工具</h1><h2 id=\"一、背景\"><a href=\"#一、背景\" class=\"headerlink\" title=\"一、背景\"></a>一、背景</h2><p>海外版本是从国内版本基础上做差异化替换而来，代码上采用replaceModule的方式覆盖重写module的方法，资源上优先加载对应语言目录下的替换资源。</p>\n<p>这种方案决定了，大多数替换内容（代码、预制物等） 是在源内容的基础上演变而来，依赖源内容。当合并国内版本后，需要检查源内容做了什么哪些修改，代码上有没有逻辑冲突，预制资源方面需不需要更新。</p>\n<p>可以总结有两个需求：</p>\n<ol>\n<li><p>检查replace的module在合并前后代码有哪些更新</p>\n</li>\n<li><p>检查出替换的预制在合并前后有哪些是更新了</p>\n</li>\n</ol>\n<p>更新：</p>\n<p>追加了其他两个需求：</p>\n<p>1.检查多语言的scene目录资源在合并前后的更改和新增情况</p>\n<p>2.检查fmod资源的更新情况</p>\n<h2 id=\"二、使用介绍\"><a href=\"#二、使用介绍\" class=\"headerlink\" title=\"二、使用介绍\"></a>二、使用介绍</h2><img src=\"/2021/03/18/%E6%B5%B7%E5%A4%96%E7%89%88%E6%9C%ACdiff%E5%B7%A5%E5%85%B7/image_lch2ake5uD.png\" class=\"\">\n<p>选项介绍：</p>\n<ul>\n<li><p>语言类型：选择当前语言类型，必填。</p>\n</li>\n<li><p>合并后版本号：海外dev分支合并国服版本后的commitID，commitID太长不一定需要填全部，git能够识别commit即可，必填。</p>\n</li>\n<li><p>合并前版本号：海外的dev分支合并国服版本前的commitID，必填。</p>\n</li>\n<li><p>自定义执行shell文件的exe路径：用于执行diff.sh脚本的shell exe路径。假如你的系统有git-bash.exe，填它的路径也可以。windows上必填，因为windows上默认的终端可能是cmd.exe，它执行shell文件会不成功。mac系统可以不填。</p>\n</li>\n</ul>\n<p>比如台湾版本：</p>\n<p>语言类型选：tw</p>\n<p>合并前后版本到gitlab pjg-client仓库commit栏目上找commitID。</p>\n<p>功能介绍：</p>\n<ul>\n<li><p>导出replace module更改：将replace module代码文件的差异导出到桌面上，文件名replace-module-{commitID0}-{commitID1}.diff。</p>\n</li>\n<li><p>导出多语言目录zh/ui/views下的预制perfab文件更新情况：将多语言目录下ui的prefab文件对应的zh目录源文件在两个版本间的差异，和zh目录下新增但海外语言目录没有的预制内容导出到桌边，文件名zh-UIPrefab-{commitID0}-{commitID1}.diff。</p>\n</li>\n<li><p>导出多语言目录zh/scene下所有资源的更新情况：同上，多语言目录的资源对应的zh目录下的资源，对比两个版本前后zh目录的资源更新情况和新增情况，然后由场景决定是否需要更新对应多语言（如tw）目录的资源。执行会导出diff文件到桌面。</p>\n</li>\n<li><p>导出fmod event的更改情况：检出更改的文件，决定是否更改对应多语言目录下的文件。</p>\n</li>\n</ul>\n<h2 id=\"三、实现思路\"><a href=\"#三、实现思路\" class=\"headerlink\" title=\"三、实现思路\"></a>三、实现思路</h2><img src=\"/2021/03/18/%E6%B5%B7%E5%A4%96%E7%89%88%E6%9C%ACdiff%E5%B7%A5%E5%85%B7/image_y5ou7bMrqO.png\" class=\"\">\n<p>实现原理很简单，就是找出相应的文件名，调用git diff命令输出差异即可。</p>\n<h2 id=\"四、sh脚本语法\"><a href=\"#四、sh脚本语法\" class=\"headerlink\" title=\"四、sh脚本语法\"></a>四、sh脚本语法</h2><p>工具利用c# API Process类执行sh脚本，diff.sh脚本主要做两件事情，一是解析参数，二是调用git diff命令。</p>\n<p>这里简单解析下sh语法，帮助理解代码。</p>\n<p>1、获取参数<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\<span class=\"variable\">$@</span></span><br></pre></td></tr></table></figure></p>\n<p>2、定义数组<br><figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">commitIdArr</span><span class=\"operator\">=</span>()</span><br></pre></td></tr></table></figure><br>3、数值自增<br><figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">((<span class=\"name\">commitIdArr</span><span class=\"character\">\\_</span>index++))</span><br></pre></td></tr></table></figure><br>4、获取变量值<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$moduleNameArr_index</span>或者<span class=\"variable\">$&#123;outputFileName&#125;</span></span><br></pre></td></tr></table></figure><br>5、输出数组内容<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo moduleNameArr\\[<span class=\"symbol\">@]</span></span><br></pre></td></tr></table></figure><br>6、数组长度<br><figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\<span class=\"variable\">$&#123;</span><span class=\"comment\">#moduleNameArr\\[@]&#125;</span></span><br></pre></td></tr></table></figure><br>学习shell脚本语法可以查看这里：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.runoob.com/linux/linux-shell.html\" title=\"shell教程\">shell教程</a>。</p>\n<p>代码：</p>\n<p><a href=\"海外版本diff工具/LanguageDiffWindow_xSMzWdHsMs.cs\">LanguageDiffWindow.cs</a></p>\n<p><a href=\"海外版本diff工具/diff_7U8prTz5se.sh\">diff.sh</a></p>"},{"title":"游戏热更新","date":"2021-09-09T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n\n# 游戏热更新\n\n## version数据解析\n\n在本地打包时会有跳过热更新或者测试热更新的需求，但没有文档解析打包界面version相关选项的作用，也不知道登录界面版本字符串的含义，所以这篇文章对打包过程的version相关参数和选项作详细解析，以及简单讲解游戏包更新流程。\n\n![](游戏热更新/image.png \"\")\n![](游戏热更新/image_1.png \"\")\n\n### 参数解析\n\n- Build Package的Version：仅用作展示，作为游戏登录界面的版本字符串的一部分。\n- Build Package的VersionCode：作为GameConst.txt里的NativeVersionCode，用来更新包外的GameConst.txt。当包内与包外的GameConst里的NativeVersionCode不同时，会覆盖外部GameConst.txt文件。另一个作用是作为请求remoteVersionManifest文件获取最新版本号的参数。\n- 游戏常量配置的游戏是否启用热更新：对应GameConst.txt的gameOpenHotUpdate字段，可以忽略Version而跳过热更。\n\n![](游戏热更新/image_2.png \"\")\n\n- 登录界面的版本字符串分为MSDK和非MSDK格式，区别就是MSDK格式多了腾讯热更版本号，对游戏更新逻辑没影响。\n\t- MSDK格式：V{msdkVersion}-{LocalVersion}-{VersionName}-{VersionCode}\n\t- 非MSDK格式：V{LocalVersion}-{VersionName}-{VersionCode}\n\nLocalVersion用于对比remoteVersion决定更新，VersionName对应Build Package的Version，VersionCode对应Build Package的VersionCode。\n\nLocalVersion的值记录于Assets\\Resources\\version.manifest文件中\n\n![](游戏热更新/image_3.png \"\")\n\n## 更新流程\n\n![](游戏热更新/image_4.png \"\")\n\n版本号a.b.c各级的作用：\n\n![](游戏热更新/image_5.png \"\")\n\n## 热更线程代码\n\n[DownloadThread.cs](游戏热更新/DownloadThread.cs)\n\n```C#\n// downloadFile用子线程实现，new Thread(new ThreadStart(RunDownloading))\nclass DownloadThread\n{\n  public void Start()\n  {\n      if (!_isStop || _thread != null)\n      {\n          CLogger.Log(\"DownloadThread::Start() - Download Thread Already Started:\" + !_isStop + \"#thread:\" + ((_thread == null) ? \"null\" : _thread.ManagedThreadId.ToString()));\n          return;\n      }\n      _isStop = false;\n      _thread = new Thread(new ThreadStart(RunDownloading));\n      CLogger.Log(\"DownloadThread::Start() - Create Download Thread:\" + _thread.ManagedThreadId);\n      _thread.IsBackground = true; // 设置为后台线程，确保当主线程退出时该线程也会结束\n      _thread.Start();\n  }\n  \n   private void RunDownloading()\n        {\n            for (; ; )\n            {\n                if (_isStop)\n                {\n                    CLogger.Log(\"DownloadThread::RunDownloading() - Download Thread Meet Stop Flag,ThreadId:\" + Thread.CurrentThread.ManagedThreadId);\n                    break;\n                }\n                if (_currentTask == null)\n                {\n                    lock (_pendingTasks)\n                    {\n                        int num = _pendingTasks.Count;\n                        if (num > 0)\n                        {\n                            _currentTask = _pendingTasks.Dequeue();\n                        }\n                        else\n                        {\n                            _isWaitting = true;\n                            this.Wait();\n                            _isWaitting = false;\n                        }\n                    }\n                }\n\n                if (!_isStop && _currentTask != null)\n                {\n                    //Debug.Log (\"StartDownload\");\n                    // 开始断点续传下载文件\n                    DownloadFromBreakPoint(_currentTask);\n                    //Debug.Log (\"EndDownload\");\n                }\n            }\n        }\n\n```\n\n\nlock关键字\n\nIEquatasble [https://www.cnblogs.com/lian--ying/p/9502879.html](https://www.cnblogs.com/lian--ying/p/9502879.html)\n\n### C#多线程编程\n\n[http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf](http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf)\n\n[http://apps.mxinfos.com/电子书籍/多线程编程.pdf](http://apps.mxinfos.com/电子书籍/多线程编程.pdf)\n\n### 断点续传\n\n下载热更文件使用了**断点续传**，原因是当下载大文件中途断网或退出时，可以保证下次更新在上次下载进度基础上继续正常下载。\n\n断点续传需要服务端支持，需支持允许分段方式请求的文件数据。\n\n使用http协议头字段range告知服务器下载文件字节数据范围值，例如：range:bytes=500-1000。配合If-Range:Etag/if-modified判断文件是否发生变化。详细看考这篇[文章](https://www.jianshu.com/p/e8dee3dbc409)。\n\n```C#\n// 关键代码\nif (File.Exists(task.storagePath))\n{\n    // 1.从已下载部分数据的文件统计已下载字节数、剩余下载字节数\n    using (FileStream fileStream = new FileStream(task.storagePath, FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))\n    {\n        receivedLength = fileStream.Length;\n        toDownloadLength = totalLength - receivedLength;\n        fileStream.Close();\n    }\n\n    if (receivedLength != dfi.receivedSize)\n    {\n        CLogger.Log(string.Format(\"DownloadThread::DownloadFromBreakPoint() - break point save receive size is wrong for file[{0}], saveSize={1}, fileSize={2}\", _currentTaskFileName, dfi.receivedSize, receivedLength));\n    }\n}\ntask.fileLength = totalLength;\ntask.receivedLength = receivedLength;\n_currentTaskTotalBytes = totalLength;\n_currentTaskReceivedBytes = receivedLength;\n\nbool transferOkay = true;\nif (toDownloadLength > 0L)\n{\n    CLogger.Log(\"DownloadThread::DownloadFromBreakPoint() - start http download, The request url is [\" + uri + \"] with range [\" + receivedLength + \",\" + totalLength + \"]\");\n\n    HttpWebRequest request2 = (HttpWebRequest)WebRequest.Create(uri);\n    request2.Timeout = kTimeOut;\n    request2.KeepAlive = true;\n    request2.ReadWriteTimeout = kTimeOut;\n    request2.AddRange((int)receivedLength, (int)totalLength);\n\n    HttpWebResponse response2 = (HttpWebResponse)request2.GetResponse();\n    transferOkay = this.ReadBytesFromResponse(task, response2);\n    response2.Close();\n    request2.Abort();\n}\nif (transferOkay)\n{\n    this.OnDownloadFinished(task, null);\n}\n\n// 2.读取数据存储进文件\nprivate bool ReadBytesFromResponse(DownloadTask task, WebResponse response)\n{\n    bool okay = false;\n    DownloadFileTransferInfo fileInfo = _transferMgr.GetDownloadFileInfo(task.file);\n    FileUtils.Instance.CheckDirExistsForFile(task.storagePath);\n\n    using (FileStream fileStream = new FileStream(task.storagePath, task.receivedLength == 0 ? FileMode.Create : FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))\n    {\n      // 3.设置文件流的起始指针为已收到的字节大小\n      fileStream.Position = task.receivedLength;\n      byte[] array = new byte[1024];\n      using (Stream responseStream = response.GetResponseStream())\n      {\n          int bytesRead = 0;\n          while (task.receivedLength < task.fileLength)\n          {\n              // 4.读写流把数据从respone体中读出并写入到目标文件中\n              bytesRead = responseStream.Read(array, 0, array.Length);\n              fileStream.Write(array, 0, bytesRead);\n              task.receivedLength += bytesRead;\n              _currentTaskReceivedBytes = task.receivedLength;\n\n              _transferMgr.UpdateFileTransferProgress(fileInfo, task.receivedLength);\n          }\n\n          okay = true;\n      }\n\n      if (task.receivedLength != task.fileLength)\n      {\n          string s = string.Format(\"DownloadThread::ReadBytesFromResponse() - Download length not fit Error:{0}/{1}\", task.receivedLength, task.fileLength);\n          CLogger.LogError(s);\n          okay = false;\n          this.OnDownloadFinished(task, new Exception(s));\n      }\n    }\n\n    return okay;\n}\n\n```\n\n\n上面断点续传的是ab文件，下面续传zip文件：\n\n[BreakpointTransferZip.cs](游戏热更新/BreakpointTransferZip.cs)\n\n## 热更包与基线\n\n### 热更文件检出\n\n热更包的资源文件通过对比两个版本的资源变更情况得出\n\n用git对比？选出具有相同目录结构文件？\n\n网上的一般方式是用**MD5**检出变更的文件，服务器会下发最新版文件的MD5信息，用之和本地文件MD5对比。\n\n应不用选出具有相同目录结构的文件包，服务端会下发热更文件的相对存储路径。\n\n\n**基线怎么来呢？**\n\n很简单，记录上一次打包的所有ab到cache文件即可。百田热更基线记录abCache的时机为每次发热更包后，腾讯的则是发整包版本后。\n\n\n\n","source":"_posts/游戏热更新.md","raw":"---\ntitle: 游戏热更新\ndate: 2021-09-10\ntags: [热更新]\ncategories: [Unity游戏开发,基础系统]\n---\n\n<!-- more -->\n\n\n\n# 游戏热更新\n\n## version数据解析\n\n在本地打包时会有跳过热更新或者测试热更新的需求，但没有文档解析打包界面version相关选项的作用，也不知道登录界面版本字符串的含义，所以这篇文章对打包过程的version相关参数和选项作详细解析，以及简单讲解游戏包更新流程。\n\n![](游戏热更新/image.png \"\")\n![](游戏热更新/image_1.png \"\")\n\n### 参数解析\n\n- Build Package的Version：仅用作展示，作为游戏登录界面的版本字符串的一部分。\n- Build Package的VersionCode：作为GameConst.txt里的NativeVersionCode，用来更新包外的GameConst.txt。当包内与包外的GameConst里的NativeVersionCode不同时，会覆盖外部GameConst.txt文件。另一个作用是作为请求remoteVersionManifest文件获取最新版本号的参数。\n- 游戏常量配置的游戏是否启用热更新：对应GameConst.txt的gameOpenHotUpdate字段，可以忽略Version而跳过热更。\n\n![](游戏热更新/image_2.png \"\")\n\n- 登录界面的版本字符串分为MSDK和非MSDK格式，区别就是MSDK格式多了腾讯热更版本号，对游戏更新逻辑没影响。\n\t- MSDK格式：V{msdkVersion}-{LocalVersion}-{VersionName}-{VersionCode}\n\t- 非MSDK格式：V{LocalVersion}-{VersionName}-{VersionCode}\n\nLocalVersion用于对比remoteVersion决定更新，VersionName对应Build Package的Version，VersionCode对应Build Package的VersionCode。\n\nLocalVersion的值记录于Assets\\Resources\\version.manifest文件中\n\n![](游戏热更新/image_3.png \"\")\n\n## 更新流程\n\n![](游戏热更新/image_4.png \"\")\n\n版本号a.b.c各级的作用：\n\n![](游戏热更新/image_5.png \"\")\n\n## 热更线程代码\n\n[DownloadThread.cs](游戏热更新/DownloadThread.cs)\n\n```C#\n// downloadFile用子线程实现，new Thread(new ThreadStart(RunDownloading))\nclass DownloadThread\n{\n  public void Start()\n  {\n      if (!_isStop || _thread != null)\n      {\n          CLogger.Log(\"DownloadThread::Start() - Download Thread Already Started:\" + !_isStop + \"#thread:\" + ((_thread == null) ? \"null\" : _thread.ManagedThreadId.ToString()));\n          return;\n      }\n      _isStop = false;\n      _thread = new Thread(new ThreadStart(RunDownloading));\n      CLogger.Log(\"DownloadThread::Start() - Create Download Thread:\" + _thread.ManagedThreadId);\n      _thread.IsBackground = true; // 设置为后台线程，确保当主线程退出时该线程也会结束\n      _thread.Start();\n  }\n  \n   private void RunDownloading()\n        {\n            for (; ; )\n            {\n                if (_isStop)\n                {\n                    CLogger.Log(\"DownloadThread::RunDownloading() - Download Thread Meet Stop Flag,ThreadId:\" + Thread.CurrentThread.ManagedThreadId);\n                    break;\n                }\n                if (_currentTask == null)\n                {\n                    lock (_pendingTasks)\n                    {\n                        int num = _pendingTasks.Count;\n                        if (num > 0)\n                        {\n                            _currentTask = _pendingTasks.Dequeue();\n                        }\n                        else\n                        {\n                            _isWaitting = true;\n                            this.Wait();\n                            _isWaitting = false;\n                        }\n                    }\n                }\n\n                if (!_isStop && _currentTask != null)\n                {\n                    //Debug.Log (\"StartDownload\");\n                    // 开始断点续传下载文件\n                    DownloadFromBreakPoint(_currentTask);\n                    //Debug.Log (\"EndDownload\");\n                }\n            }\n        }\n\n```\n\n\nlock关键字\n\nIEquatasble [https://www.cnblogs.com/lian--ying/p/9502879.html](https://www.cnblogs.com/lian--ying/p/9502879.html)\n\n### C#多线程编程\n\n[http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf](http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf)\n\n[http://apps.mxinfos.com/电子书籍/多线程编程.pdf](http://apps.mxinfos.com/电子书籍/多线程编程.pdf)\n\n### 断点续传\n\n下载热更文件使用了**断点续传**，原因是当下载大文件中途断网或退出时，可以保证下次更新在上次下载进度基础上继续正常下载。\n\n断点续传需要服务端支持，需支持允许分段方式请求的文件数据。\n\n使用http协议头字段range告知服务器下载文件字节数据范围值，例如：range:bytes=500-1000。配合If-Range:Etag/if-modified判断文件是否发生变化。详细看考这篇[文章](https://www.jianshu.com/p/e8dee3dbc409)。\n\n```C#\n// 关键代码\nif (File.Exists(task.storagePath))\n{\n    // 1.从已下载部分数据的文件统计已下载字节数、剩余下载字节数\n    using (FileStream fileStream = new FileStream(task.storagePath, FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))\n    {\n        receivedLength = fileStream.Length;\n        toDownloadLength = totalLength - receivedLength;\n        fileStream.Close();\n    }\n\n    if (receivedLength != dfi.receivedSize)\n    {\n        CLogger.Log(string.Format(\"DownloadThread::DownloadFromBreakPoint() - break point save receive size is wrong for file[{0}], saveSize={1}, fileSize={2}\", _currentTaskFileName, dfi.receivedSize, receivedLength));\n    }\n}\ntask.fileLength = totalLength;\ntask.receivedLength = receivedLength;\n_currentTaskTotalBytes = totalLength;\n_currentTaskReceivedBytes = receivedLength;\n\nbool transferOkay = true;\nif (toDownloadLength > 0L)\n{\n    CLogger.Log(\"DownloadThread::DownloadFromBreakPoint() - start http download, The request url is [\" + uri + \"] with range [\" + receivedLength + \",\" + totalLength + \"]\");\n\n    HttpWebRequest request2 = (HttpWebRequest)WebRequest.Create(uri);\n    request2.Timeout = kTimeOut;\n    request2.KeepAlive = true;\n    request2.ReadWriteTimeout = kTimeOut;\n    request2.AddRange((int)receivedLength, (int)totalLength);\n\n    HttpWebResponse response2 = (HttpWebResponse)request2.GetResponse();\n    transferOkay = this.ReadBytesFromResponse(task, response2);\n    response2.Close();\n    request2.Abort();\n}\nif (transferOkay)\n{\n    this.OnDownloadFinished(task, null);\n}\n\n// 2.读取数据存储进文件\nprivate bool ReadBytesFromResponse(DownloadTask task, WebResponse response)\n{\n    bool okay = false;\n    DownloadFileTransferInfo fileInfo = _transferMgr.GetDownloadFileInfo(task.file);\n    FileUtils.Instance.CheckDirExistsForFile(task.storagePath);\n\n    using (FileStream fileStream = new FileStream(task.storagePath, task.receivedLength == 0 ? FileMode.Create : FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))\n    {\n      // 3.设置文件流的起始指针为已收到的字节大小\n      fileStream.Position = task.receivedLength;\n      byte[] array = new byte[1024];\n      using (Stream responseStream = response.GetResponseStream())\n      {\n          int bytesRead = 0;\n          while (task.receivedLength < task.fileLength)\n          {\n              // 4.读写流把数据从respone体中读出并写入到目标文件中\n              bytesRead = responseStream.Read(array, 0, array.Length);\n              fileStream.Write(array, 0, bytesRead);\n              task.receivedLength += bytesRead;\n              _currentTaskReceivedBytes = task.receivedLength;\n\n              _transferMgr.UpdateFileTransferProgress(fileInfo, task.receivedLength);\n          }\n\n          okay = true;\n      }\n\n      if (task.receivedLength != task.fileLength)\n      {\n          string s = string.Format(\"DownloadThread::ReadBytesFromResponse() - Download length not fit Error:{0}/{1}\", task.receivedLength, task.fileLength);\n          CLogger.LogError(s);\n          okay = false;\n          this.OnDownloadFinished(task, new Exception(s));\n      }\n    }\n\n    return okay;\n}\n\n```\n\n\n上面断点续传的是ab文件，下面续传zip文件：\n\n[BreakpointTransferZip.cs](游戏热更新/BreakpointTransferZip.cs)\n\n## 热更包与基线\n\n### 热更文件检出\n\n热更包的资源文件通过对比两个版本的资源变更情况得出\n\n用git对比？选出具有相同目录结构文件？\n\n网上的一般方式是用**MD5**检出变更的文件，服务器会下发最新版文件的MD5信息，用之和本地文件MD5对比。\n\n应不用选出具有相同目录结构的文件包，服务端会下发热更文件的相对存储路径。\n\n\n**基线怎么来呢？**\n\n很简单，记录上一次打包的所有ab到cache文件即可。百田热更基线记录abCache的时机为每次发热更包后，腾讯的则是发整包版本后。\n\n\n\n","slug":"游戏热更新","published":1,"updated":"2022-12-07T13:35:55.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4m0039mcq0cd2xgic0","content":"<span id=\"more\"></span>\n<h1 id=\"游戏热更新\"><a href=\"#游戏热更新\" class=\"headerlink\" title=\"游戏热更新\"></a>游戏热更新</h1><h2 id=\"version数据解析\"><a href=\"#version数据解析\" class=\"headerlink\" title=\"version数据解析\"></a>version数据解析</h2><p>在本地打包时会有跳过热更新或者测试热更新的需求，但没有文档解析打包界面version相关选项的作用，也不知道登录界面版本字符串的含义，所以这篇文章对打包过程的version相关参数和选项作详细解析，以及简单讲解游戏包更新流程。</p>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image.png\" class=\"\">\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_1.png\" class=\"\">\n<h3 id=\"参数解析\"><a href=\"#参数解析\" class=\"headerlink\" title=\"参数解析\"></a>参数解析</h3><ul>\n<li>Build Package的Version：仅用作展示，作为游戏登录界面的版本字符串的一部分。</li>\n<li>Build Package的VersionCode：作为GameConst.txt里的NativeVersionCode，用来更新包外的GameConst.txt。当包内与包外的GameConst里的NativeVersionCode不同时，会覆盖外部GameConst.txt文件。另一个作用是作为请求remoteVersionManifest文件获取最新版本号的参数。</li>\n<li>游戏常量配置的游戏是否启用热更新：对应GameConst.txt的gameOpenHotUpdate字段，可以忽略Version而跳过热更。</li>\n</ul>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_2.png\" class=\"\">\n<ul>\n<li>登录界面的版本字符串分为MSDK和非MSDK格式，区别就是MSDK格式多了腾讯热更版本号，对游戏更新逻辑没影响。<ul>\n<li>MSDK格式：V{msdkVersion}-{LocalVersion}-{VersionName}-{VersionCode}</li>\n<li>非MSDK格式：V{LocalVersion}-{VersionName}-{VersionCode}</li>\n</ul>\n</li>\n</ul>\n<p>LocalVersion用于对比remoteVersion决定更新，VersionName对应Build Package的Version，VersionCode对应Build Package的VersionCode。</p>\n<p>LocalVersion的值记录于Assets\\Resources\\version.manifest文件中</p>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_3.png\" class=\"\">\n<h2 id=\"更新流程\"><a href=\"#更新流程\" class=\"headerlink\" title=\"更新流程\"></a>更新流程</h2><img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_4.png\" class=\"\">\n<p>版本号a.b.c各级的作用：</p>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_5.png\" class=\"\">\n<h2 id=\"热更线程代码\"><a href=\"#热更线程代码\" class=\"headerlink\" title=\"热更线程代码\"></a>热更线程代码</h2><p><a href=\"游戏热更新/DownloadThread.cs\">DownloadThread.cs</a></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// downloadFile用子线程实现，new Thread(new ThreadStart(RunDownloading))</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">DownloadThread</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Start</span>()</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!_isStop || _thread != <span class=\"literal\">null</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          CLogger.Log(<span class=\"string\">&quot;DownloadThread::Start() - Download Thread Already Started:&quot;</span> + !_isStop + <span class=\"string\">&quot;#thread:&quot;</span> + ((_thread == <span class=\"literal\">null</span>) ? <span class=\"string\">&quot;null&quot;</span> : _thread.ManagedThreadId.ToString()));</span><br><span class=\"line\">          <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      _isStop = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      _thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> ThreadStart(RunDownloading));</span><br><span class=\"line\">      CLogger.Log(<span class=\"string\">&quot;DownloadThread::Start() - Create Download Thread:&quot;</span> + _thread.ManagedThreadId);</span><br><span class=\"line\">      _thread.IsBackground = <span class=\"literal\">true</span>; <span class=\"comment\">// 设置为后台线程，确保当主线程退出时该线程也会结束</span></span><br><span class=\"line\">      _thread.Start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">RunDownloading</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; ; )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (_isStop)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    CLogger.Log(<span class=\"string\">&quot;DownloadThread::RunDownloading() - Download Thread Meet Stop Flag,ThreadId:&quot;</span> + Thread.CurrentThread.ManagedThreadId);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (_currentTask == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">lock</span> (_pendingTasks)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">int</span> num = _pendingTasks.Count;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            _currentTask = _pendingTasks.Dequeue();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            _isWaitting = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                            <span class=\"keyword\">this</span>.Wait();</span><br><span class=\"line\">                            _isWaitting = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!_isStop &amp;&amp; _currentTask != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//Debug.Log (&quot;StartDownload&quot;);</span></span><br><span class=\"line\">                    <span class=\"comment\">// 开始断点续传下载文件</span></span><br><span class=\"line\">                    DownloadFromBreakPoint(_currentTask);</span><br><span class=\"line\">                    <span class=\"comment\">//Debug.Log (&quot;EndDownload&quot;);</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>lock关键字</p>\n<p>IEquatasble <a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/lian--ying/p/9502879.html\">https://www.cnblogs.com/lian–ying/p/9502879.html</a></p>\n<h3 id=\"C-多线程编程\"><a href=\"#C-多线程编程\" class=\"headerlink\" title=\"C#多线程编程\"></a>C#多线程编程</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf\">http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://apps.mxinfos.com/电子书籍/多线程编程.pdf\">http://apps.mxinfos.com/电子书籍/多线程编程.pdf</a></p>\n<h3 id=\"断点续传\"><a href=\"#断点续传\" class=\"headerlink\" title=\"断点续传\"></a>断点续传</h3><p>下载热更文件使用了<strong>断点续传</strong>，原因是当下载大文件中途断网或退出时，可以保证下次更新在上次下载进度基础上继续正常下载。</p>\n<p>断点续传需要服务端支持，需支持允许分段方式请求的文件数据。</p>\n<p>使用http协议头字段range告知服务器下载文件字节数据范围值，例如：range:bytes=500-1000。配合If-Range:Etag/if-modified判断文件是否发生变化。详细看考这篇<a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/e8dee3dbc409\">文章</a>。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 关键代码</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (File.Exists(task.storagePath))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.从已下载部分数据的文件统计已下载字节数、剩余下载字节数</span></span><br><span class=\"line\">    <span class=\"keyword\">using</span> (FileStream fileStream = <span class=\"keyword\">new</span> FileStream(task.storagePath, FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        receivedLength = fileStream.Length;</span><br><span class=\"line\">        toDownloadLength = totalLength - receivedLength;</span><br><span class=\"line\">        fileStream.Close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (receivedLength != dfi.receivedSize)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        CLogger.Log(<span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;DownloadThread::DownloadFromBreakPoint() - break point save receive size is wrong for file[&#123;0&#125;], saveSize=&#123;1&#125;, fileSize=&#123;2&#125;&quot;</span>, _currentTaskFileName, dfi.receivedSize, receivedLength));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task.fileLength = totalLength;</span><br><span class=\"line\">task.receivedLength = receivedLength;</span><br><span class=\"line\">_currentTaskTotalBytes = totalLength;</span><br><span class=\"line\">_currentTaskReceivedBytes = receivedLength;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">bool</span> transferOkay = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (toDownloadLength &gt; <span class=\"number\">0L</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CLogger.Log(<span class=\"string\">&quot;DownloadThread::DownloadFromBreakPoint() - start http download, The request url is [&quot;</span> + uri + <span class=\"string\">&quot;] with range [&quot;</span> + receivedLength + <span class=\"string\">&quot;,&quot;</span> + totalLength + <span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    HttpWebRequest request2 = (HttpWebRequest)WebRequest.Create(uri);</span><br><span class=\"line\">    request2.Timeout = kTimeOut;</span><br><span class=\"line\">    request2.KeepAlive = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    request2.ReadWriteTimeout = kTimeOut;</span><br><span class=\"line\">    request2.AddRange((<span class=\"built_in\">int</span>)receivedLength, (<span class=\"built_in\">int</span>)totalLength);</span><br><span class=\"line\"></span><br><span class=\"line\">    HttpWebResponse response2 = (HttpWebResponse)request2.GetResponse();</span><br><span class=\"line\">    transferOkay = <span class=\"keyword\">this</span>.ReadBytesFromResponse(task, response2);</span><br><span class=\"line\">    response2.Close();</span><br><span class=\"line\">    request2.Abort();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (transferOkay)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.OnDownloadFinished(task, <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.读取数据存储进文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"built_in\">bool</span> <span class=\"title\">ReadBytesFromResponse</span>(<span class=\"params\">DownloadTask task, WebResponse response</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> okay = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    DownloadFileTransferInfo fileInfo = _transferMgr.GetDownloadFileInfo(task.file);</span><br><span class=\"line\">    FileUtils.Instance.CheckDirExistsForFile(task.storagePath);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">using</span> (FileStream fileStream = <span class=\"keyword\">new</span> FileStream(task.storagePath, task.receivedLength == <span class=\"number\">0</span> ? FileMode.Create : FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 3.设置文件流的起始指针为已收到的字节大小</span></span><br><span class=\"line\">      fileStream.Position = task.receivedLength;</span><br><span class=\"line\">      <span class=\"built_in\">byte</span>[] array = <span class=\"keyword\">new</span> <span class=\"built_in\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">      <span class=\"keyword\">using</span> (Stream responseStream = response.GetResponseStream())</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> bytesRead = <span class=\"number\">0</span>;</span><br><span class=\"line\">          <span class=\"keyword\">while</span> (task.receivedLength &lt; task.fileLength)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 4.读写流把数据从respone体中读出并写入到目标文件中</span></span><br><span class=\"line\">              bytesRead = responseStream.Read(array, <span class=\"number\">0</span>, array.Length);</span><br><span class=\"line\">              fileStream.Write(array, <span class=\"number\">0</span>, bytesRead);</span><br><span class=\"line\">              task.receivedLength += bytesRead;</span><br><span class=\"line\">              _currentTaskReceivedBytes = task.receivedLength;</span><br><span class=\"line\"></span><br><span class=\"line\">              _transferMgr.UpdateFileTransferProgress(fileInfo, task.receivedLength);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          okay = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (task.receivedLength != task.fileLength)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">string</span> s = <span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;DownloadThread::ReadBytesFromResponse() - Download length not fit Error:&#123;0&#125;/&#123;1&#125;&quot;</span>, task.receivedLength, task.fileLength);</span><br><span class=\"line\">          CLogger.LogError(s);</span><br><span class=\"line\">          okay = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.OnDownloadFinished(task, <span class=\"keyword\">new</span> Exception(s));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> okay;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>上面断点续传的是ab文件，下面续传zip文件：</p>\n<p><a href=\"游戏热更新/BreakpointTransferZip.cs\">BreakpointTransferZip.cs</a></p>\n<h2 id=\"热更包与基线\"><a href=\"#热更包与基线\" class=\"headerlink\" title=\"热更包与基线\"></a>热更包与基线</h2><h3 id=\"热更文件检出\"><a href=\"#热更文件检出\" class=\"headerlink\" title=\"热更文件检出\"></a>热更文件检出</h3><p>热更包的资源文件通过对比两个版本的资源变更情况得出</p>\n<p>用git对比？选出具有相同目录结构文件？</p>\n<p>网上的一般方式是用<strong>MD5</strong>检出变更的文件，服务器会下发最新版文件的MD5信息，用之和本地文件MD5对比。</p>\n<p>应不用选出具有相同目录结构的文件包，服务端会下发热更文件的相对存储路径。</p>\n<p><strong>基线怎么来呢？</strong></p>\n<p>很简单，记录上一次打包的所有ab到cache文件即可。百田热更基线记录abCache的时机为每次发热更包后，腾讯的则是发整包版本后。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"游戏热更新\"><a href=\"#游戏热更新\" class=\"headerlink\" title=\"游戏热更新\"></a>游戏热更新</h1><h2 id=\"version数据解析\"><a href=\"#version数据解析\" class=\"headerlink\" title=\"version数据解析\"></a>version数据解析</h2><p>在本地打包时会有跳过热更新或者测试热更新的需求，但没有文档解析打包界面version相关选项的作用，也不知道登录界面版本字符串的含义，所以这篇文章对打包过程的version相关参数和选项作详细解析，以及简单讲解游戏包更新流程。</p>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image.png\" class=\"\">\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_1.png\" class=\"\">\n<h3 id=\"参数解析\"><a href=\"#参数解析\" class=\"headerlink\" title=\"参数解析\"></a>参数解析</h3><ul>\n<li>Build Package的Version：仅用作展示，作为游戏登录界面的版本字符串的一部分。</li>\n<li>Build Package的VersionCode：作为GameConst.txt里的NativeVersionCode，用来更新包外的GameConst.txt。当包内与包外的GameConst里的NativeVersionCode不同时，会覆盖外部GameConst.txt文件。另一个作用是作为请求remoteVersionManifest文件获取最新版本号的参数。</li>\n<li>游戏常量配置的游戏是否启用热更新：对应GameConst.txt的gameOpenHotUpdate字段，可以忽略Version而跳过热更。</li>\n</ul>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_2.png\" class=\"\">\n<ul>\n<li>登录界面的版本字符串分为MSDK和非MSDK格式，区别就是MSDK格式多了腾讯热更版本号，对游戏更新逻辑没影响。<ul>\n<li>MSDK格式：V{msdkVersion}-{LocalVersion}-{VersionName}-{VersionCode}</li>\n<li>非MSDK格式：V{LocalVersion}-{VersionName}-{VersionCode}</li>\n</ul>\n</li>\n</ul>\n<p>LocalVersion用于对比remoteVersion决定更新，VersionName对应Build Package的Version，VersionCode对应Build Package的VersionCode。</p>\n<p>LocalVersion的值记录于Assets\\Resources\\version.manifest文件中</p>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_3.png\" class=\"\">\n<h2 id=\"更新流程\"><a href=\"#更新流程\" class=\"headerlink\" title=\"更新流程\"></a>更新流程</h2><img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_4.png\" class=\"\">\n<p>版本号a.b.c各级的作用：</p>\n<img src=\"/2021/09/10/%E6%B8%B8%E6%88%8F%E7%83%AD%E6%9B%B4%E6%96%B0/image_5.png\" class=\"\">\n<h2 id=\"热更线程代码\"><a href=\"#热更线程代码\" class=\"headerlink\" title=\"热更线程代码\"></a>热更线程代码</h2><p><a href=\"游戏热更新/DownloadThread.cs\">DownloadThread.cs</a></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// downloadFile用子线程实现，new Thread(new ThreadStart(RunDownloading))</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">DownloadThread</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Start</span>()</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!_isStop || _thread != <span class=\"literal\">null</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          CLogger.Log(<span class=\"string\">&quot;DownloadThread::Start() - Download Thread Already Started:&quot;</span> + !_isStop + <span class=\"string\">&quot;#thread:&quot;</span> + ((_thread == <span class=\"literal\">null</span>) ? <span class=\"string\">&quot;null&quot;</span> : _thread.ManagedThreadId.ToString()));</span><br><span class=\"line\">          <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      _isStop = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      _thread = <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> ThreadStart(RunDownloading));</span><br><span class=\"line\">      CLogger.Log(<span class=\"string\">&quot;DownloadThread::Start() - Create Download Thread:&quot;</span> + _thread.ManagedThreadId);</span><br><span class=\"line\">      _thread.IsBackground = <span class=\"literal\">true</span>; <span class=\"comment\">// 设置为后台线程，确保当主线程退出时该线程也会结束</span></span><br><span class=\"line\">      _thread.Start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">RunDownloading</span>()</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (; ; )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (_isStop)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    CLogger.Log(<span class=\"string\">&quot;DownloadThread::RunDownloading() - Download Thread Meet Stop Flag,ThreadId:&quot;</span> + Thread.CurrentThread.ManagedThreadId);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (_currentTask == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">lock</span> (_pendingTasks)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">int</span> num = _pendingTasks.Count;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            _currentTask = _pendingTasks.Dequeue();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            _isWaitting = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                            <span class=\"keyword\">this</span>.Wait();</span><br><span class=\"line\">                            _isWaitting = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!_isStop &amp;&amp; _currentTask != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//Debug.Log (&quot;StartDownload&quot;);</span></span><br><span class=\"line\">                    <span class=\"comment\">// 开始断点续传下载文件</span></span><br><span class=\"line\">                    DownloadFromBreakPoint(_currentTask);</span><br><span class=\"line\">                    <span class=\"comment\">//Debug.Log (&quot;EndDownload&quot;);</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>lock关键字</p>\n<p>IEquatasble <a target=\"_blank\" rel=\"noopener\" href=\"https://www.cnblogs.com/lian--ying/p/9502879.html\">https://www.cnblogs.com/lian–ying/p/9502879.html</a></p>\n<h3 id=\"C-多线程编程\"><a href=\"#C-多线程编程\" class=\"headerlink\" title=\"C#多线程编程\"></a>C#多线程编程</h3><p><a target=\"_blank\" rel=\"noopener\" href=\"http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf\">http://images.china-pub.com/ebook4610001-4615000/4613657/ch01.pdf</a></p>\n<p><a target=\"_blank\" rel=\"noopener\" href=\"http://apps.mxinfos.com/电子书籍/多线程编程.pdf\">http://apps.mxinfos.com/电子书籍/多线程编程.pdf</a></p>\n<h3 id=\"断点续传\"><a href=\"#断点续传\" class=\"headerlink\" title=\"断点续传\"></a>断点续传</h3><p>下载热更文件使用了<strong>断点续传</strong>，原因是当下载大文件中途断网或退出时，可以保证下次更新在上次下载进度基础上继续正常下载。</p>\n<p>断点续传需要服务端支持，需支持允许分段方式请求的文件数据。</p>\n<p>使用http协议头字段range告知服务器下载文件字节数据范围值，例如：range:bytes=500-1000。配合If-Range:Etag/if-modified判断文件是否发生变化。详细看考这篇<a target=\"_blank\" rel=\"noopener\" href=\"https://www.jianshu.com/p/e8dee3dbc409\">文章</a>。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 关键代码</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (File.Exists(task.storagePath))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.从已下载部分数据的文件统计已下载字节数、剩余下载字节数</span></span><br><span class=\"line\">    <span class=\"keyword\">using</span> (FileStream fileStream = <span class=\"keyword\">new</span> FileStream(task.storagePath, FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        receivedLength = fileStream.Length;</span><br><span class=\"line\">        toDownloadLength = totalLength - receivedLength;</span><br><span class=\"line\">        fileStream.Close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (receivedLength != dfi.receivedSize)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        CLogger.Log(<span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;DownloadThread::DownloadFromBreakPoint() - break point save receive size is wrong for file[&#123;0&#125;], saveSize=&#123;1&#125;, fileSize=&#123;2&#125;&quot;</span>, _currentTaskFileName, dfi.receivedSize, receivedLength));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">task.fileLength = totalLength;</span><br><span class=\"line\">task.receivedLength = receivedLength;</span><br><span class=\"line\">_currentTaskTotalBytes = totalLength;</span><br><span class=\"line\">_currentTaskReceivedBytes = receivedLength;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">bool</span> transferOkay = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (toDownloadLength &gt; <span class=\"number\">0L</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CLogger.Log(<span class=\"string\">&quot;DownloadThread::DownloadFromBreakPoint() - start http download, The request url is [&quot;</span> + uri + <span class=\"string\">&quot;] with range [&quot;</span> + receivedLength + <span class=\"string\">&quot;,&quot;</span> + totalLength + <span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    HttpWebRequest request2 = (HttpWebRequest)WebRequest.Create(uri);</span><br><span class=\"line\">    request2.Timeout = kTimeOut;</span><br><span class=\"line\">    request2.KeepAlive = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    request2.ReadWriteTimeout = kTimeOut;</span><br><span class=\"line\">    request2.AddRange((<span class=\"built_in\">int</span>)receivedLength, (<span class=\"built_in\">int</span>)totalLength);</span><br><span class=\"line\"></span><br><span class=\"line\">    HttpWebResponse response2 = (HttpWebResponse)request2.GetResponse();</span><br><span class=\"line\">    transferOkay = <span class=\"keyword\">this</span>.ReadBytesFromResponse(task, response2);</span><br><span class=\"line\">    response2.Close();</span><br><span class=\"line\">    request2.Abort();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (transferOkay)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.OnDownloadFinished(task, <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.读取数据存储进文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"built_in\">bool</span> <span class=\"title\">ReadBytesFromResponse</span>(<span class=\"params\">DownloadTask task, WebResponse response</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> okay = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    DownloadFileTransferInfo fileInfo = _transferMgr.GetDownloadFileInfo(task.file);</span><br><span class=\"line\">    FileUtils.Instance.CheckDirExistsForFile(task.storagePath);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">using</span> (FileStream fileStream = <span class=\"keyword\">new</span> FileStream(task.storagePath, task.receivedLength == <span class=\"number\">0</span> ? FileMode.Create : FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.ReadWrite))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 3.设置文件流的起始指针为已收到的字节大小</span></span><br><span class=\"line\">      fileStream.Position = task.receivedLength;</span><br><span class=\"line\">      <span class=\"built_in\">byte</span>[] array = <span class=\"keyword\">new</span> <span class=\"built_in\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">      <span class=\"keyword\">using</span> (Stream responseStream = response.GetResponseStream())</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">int</span> bytesRead = <span class=\"number\">0</span>;</span><br><span class=\"line\">          <span class=\"keyword\">while</span> (task.receivedLength &lt; task.fileLength)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 4.读写流把数据从respone体中读出并写入到目标文件中</span></span><br><span class=\"line\">              bytesRead = responseStream.Read(array, <span class=\"number\">0</span>, array.Length);</span><br><span class=\"line\">              fileStream.Write(array, <span class=\"number\">0</span>, bytesRead);</span><br><span class=\"line\">              task.receivedLength += bytesRead;</span><br><span class=\"line\">              _currentTaskReceivedBytes = task.receivedLength;</span><br><span class=\"line\"></span><br><span class=\"line\">              _transferMgr.UpdateFileTransferProgress(fileInfo, task.receivedLength);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          okay = <span class=\"literal\">true</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (task.receivedLength != task.fileLength)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"built_in\">string</span> s = <span class=\"built_in\">string</span>.Format(<span class=\"string\">&quot;DownloadThread::ReadBytesFromResponse() - Download length not fit Error:&#123;0&#125;/&#123;1&#125;&quot;</span>, task.receivedLength, task.fileLength);</span><br><span class=\"line\">          CLogger.LogError(s);</span><br><span class=\"line\">          okay = <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.OnDownloadFinished(task, <span class=\"keyword\">new</span> Exception(s));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> okay;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>上面断点续传的是ab文件，下面续传zip文件：</p>\n<p><a href=\"游戏热更新/BreakpointTransferZip.cs\">BreakpointTransferZip.cs</a></p>\n<h2 id=\"热更包与基线\"><a href=\"#热更包与基线\" class=\"headerlink\" title=\"热更包与基线\"></a>热更包与基线</h2><h3 id=\"热更文件检出\"><a href=\"#热更文件检出\" class=\"headerlink\" title=\"热更文件检出\"></a>热更文件检出</h3><p>热更包的资源文件通过对比两个版本的资源变更情况得出</p>\n<p>用git对比？选出具有相同目录结构文件？</p>\n<p>网上的一般方式是用<strong>MD5</strong>检出变更的文件，服务器会下发最新版文件的MD5信息，用之和本地文件MD5对比。</p>\n<p>应不用选出具有相同目录结构的文件包，服务端会下发热更文件的相对存储路径。</p>\n<p><strong>基线怎么来呢？</strong></p>\n<p>很简单，记录上一次打包的所有ab到cache文件即可。百田热更基线记录abCache的时机为每次发热更包后，腾讯的则是发整包版本后。</p>"},{"title":"聊聊git的分支和rebase命令","date":"2018-04-02T12:46:00.000Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&fm=27&gp=0.jpg)\n\n# 前言\n进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。\n\n<!--more-->\n\n> 目录\n> * git简介\n> * 分支\n> * rebase的两个用法\n\n# git简介\n\ngit是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。\n\n具体参考廖雪峰老师的[git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/)和[git官网](https://git-scm.com/book/zh/v2/)\n\n# 分支\n为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。\n\n\n**快照**  \n\n其实要理解git的分支，首先要了解git是如何保存文件的  \ngit以文件快照的方式保存文件的更改情况，而不是cope每一份代码  \n那么如何理解文件快照的？  \n> 快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子\n\n\n**暂存**  \n\n在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交\n\n**提交**\n\ncommit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）  \n有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  \n\n![首次提交简介图](https://git-scm.com/book/en/v2/images/commit-and-tree.png)\n\n以上的是首次提交的情况，在第二次提交时  \n在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象  \n![再次提交简介图](https://git-scm.com/book/en/v2/images/commits-and-parents.png)\n现在情况就明了了，git是以单链表结构来追溯文件状态的\n\n**分支指针**\n\n\n既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？  \n所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？  \n没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。\n![分支简介图](https://git-scm.com/book/en/v2/images/branch-and-history.png)\n所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  \n\n但是冲突是如何产生的呢？  \n看个图就明白了\n![分支简介图](https://git-scm.com/book/en/v2/images/advance-master.png)\n其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  \n\n使用命令查看分支的指向情况，或者说项目的分叉情况\n```\ngit log --oneline --decorate --graph --all  \n```\n\n# rebase的两种用法\n**1. 合并commit**  \n\n > 你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版...\n \n 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了\n \n 所以需要将为同一个需求开发的这些commit合并成一个\n \n ```\n git rebase -i HAED~n<commitID>\n ```\n 上面的n代指数字，表示包括当前以前的几个commit  \n或者把HAED~n替换为n的commitID，效果一样\n\n这是会出现一个编辑界面\n```\npick 5e187c7dbe8    add center style indent  \npick 6d577eb3440    add center style  \npick f9b9508a3ab    add center style  \npick 111ab9cc261    update templates  \n# Rebase 150a643..2fad1ae onto 150a643  \n#  \n# Commands:  \n#  p, pick = use commit  \n#  r, reword = use commit, but edit the commit message  \n#  e, edit = use commit, but stop for amending  \n#  s, squash = use commit, but meld into previous commit  \n```\n把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit\n\n若出现冲突，解决冲突，应用最新的版本，使用\n```\ngit add . //提交索引\ngit rebase --continue //继续rebase操作\n```\n若在合并commit的过程中想放弃，可以使用命令\n```\ngit rebase --abort\n```\n此时会出现一个编辑窗口，保存退出就行\n\n最后把本地推上远程\n```\ngit push -f //必须带上-f，以本地覆盖远程\n或者指定远程和分支\ngit push (origin master) -f\n```\n因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程\n\n**2. 合并分支**  \n\n有如下分支图\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nmaster((master))-->C3\ndev((dev))-->C4\n```\n在master上合并dev我们一般用\n```\ngit merge dev\n```\n此时分支图就变为\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nC5-->C3\nC5-->C4\nmaster((master))-->C5\ndev((dev))-->C4\n```\n这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁  \n在最新的分支dev上\n```\ngit rebase master\n```\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\ndev上的C4会被cope成'C4'并且dev指向'C4',保存在rebase文件夹，然后'C4'指向C3，最后C4会当成垃圾清除，最后分支图就变为了\n```\ngraph LR\nC2-->C1\nC3-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\n若有冲突,解决后\n```\ngit add .\ngit rebase --continue\n```\n随时放弃\n```\ngit rebase --abort\n```\n\n**在拉去远程更新时也可以使用rebase**\n```\ngit pull --rebase\n或者指定远程和分支\ngit pull upstream master --rebase\n```\n\n> ps:  \n倘若通过git pull --rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用\n```\ngit reset --soft <commitID> //保留更改回退\n```\n再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）\n\n**回到最初**  \n\n解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。\n\n\n\n\n\n\n","source":"_posts/聊聊git的分支和rebase命令.md","raw":"---\ntitle: 聊聊git的分支和rebase命令\ndate: 2018-04-02 20:46:00\ntags: [git]\ncategories: [工具]\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&fm=27&gp=0.jpg)\n\n# 前言\n进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。\n\n<!--more-->\n\n> 目录\n> * git简介\n> * 分支\n> * rebase的两个用法\n\n# git简介\n\ngit是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。\n\n具体参考廖雪峰老师的[git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/)和[git官网](https://git-scm.com/book/zh/v2/)\n\n# 分支\n为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。\n\n\n**快照**  \n\n其实要理解git的分支，首先要了解git是如何保存文件的  \ngit以文件快照的方式保存文件的更改情况，而不是cope每一份代码  \n那么如何理解文件快照的？  \n> 快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子\n\n\n**暂存**  \n\n在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交\n\n**提交**\n\ncommit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）  \n有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  \n\n![首次提交简介图](https://git-scm.com/book/en/v2/images/commit-and-tree.png)\n\n以上的是首次提交的情况，在第二次提交时  \n在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象  \n![再次提交简介图](https://git-scm.com/book/en/v2/images/commits-and-parents.png)\n现在情况就明了了，git是以单链表结构来追溯文件状态的\n\n**分支指针**\n\n\n既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？  \n所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？  \n没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。\n![分支简介图](https://git-scm.com/book/en/v2/images/branch-and-history.png)\n所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  \n\n但是冲突是如何产生的呢？  \n看个图就明白了\n![分支简介图](https://git-scm.com/book/en/v2/images/advance-master.png)\n其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  \n\n使用命令查看分支的指向情况，或者说项目的分叉情况\n```\ngit log --oneline --decorate --graph --all  \n```\n\n# rebase的两种用法\n**1. 合并commit**  \n\n > 你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版...\n \n 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了\n \n 所以需要将为同一个需求开发的这些commit合并成一个\n \n ```\n git rebase -i HAED~n<commitID>\n ```\n 上面的n代指数字，表示包括当前以前的几个commit  \n或者把HAED~n替换为n的commitID，效果一样\n\n这是会出现一个编辑界面\n```\npick 5e187c7dbe8    add center style indent  \npick 6d577eb3440    add center style  \npick f9b9508a3ab    add center style  \npick 111ab9cc261    update templates  \n# Rebase 150a643..2fad1ae onto 150a643  \n#  \n# Commands:  \n#  p, pick = use commit  \n#  r, reword = use commit, but edit the commit message  \n#  e, edit = use commit, but stop for amending  \n#  s, squash = use commit, but meld into previous commit  \n```\n把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit\n\n若出现冲突，解决冲突，应用最新的版本，使用\n```\ngit add . //提交索引\ngit rebase --continue //继续rebase操作\n```\n若在合并commit的过程中想放弃，可以使用命令\n```\ngit rebase --abort\n```\n此时会出现一个编辑窗口，保存退出就行\n\n最后把本地推上远程\n```\ngit push -f //必须带上-f，以本地覆盖远程\n或者指定远程和分支\ngit push (origin master) -f\n```\n因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程\n\n**2. 合并分支**  \n\n有如下分支图\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nmaster((master))-->C3\ndev((dev))-->C4\n```\n在master上合并dev我们一般用\n```\ngit merge dev\n```\n此时分支图就变为\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nC5-->C3\nC5-->C4\nmaster((master))-->C5\ndev((dev))-->C4\n```\n这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁  \n在最新的分支dev上\n```\ngit rebase master\n```\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\ndev上的C4会被cope成'C4'并且dev指向'C4',保存在rebase文件夹，然后'C4'指向C3，最后C4会当成垃圾清除，最后分支图就变为了\n```\ngraph LR\nC2-->C1\nC3-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\n若有冲突,解决后\n```\ngit add .\ngit rebase --continue\n```\n随时放弃\n```\ngit rebase --abort\n```\n\n**在拉去远程更新时也可以使用rebase**\n```\ngit pull --rebase\n或者指定远程和分支\ngit pull upstream master --rebase\n```\n\n> ps:  \n倘若通过git pull --rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用\n```\ngit reset --soft <commitID> //保留更改回退\n```\n再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）\n\n**回到最初**  \n\n解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。\n\n\n\n\n\n\n","slug":"聊聊git的分支和rebase命令","published":1,"updated":"2022-12-06T15:30:38.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4n003dmcq0eipo9s0g","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。</p>\n<span id=\"more\"></span>\n<blockquote>\n<p>目录</p>\n<ul>\n<li>git简介</li>\n<li>分支</li>\n<li>rebase的两个用法</li>\n</ul>\n</blockquote>\n<h1 id=\"git简介\"><a href=\"#git简介\" class=\"headerlink\" title=\"git简介\"></a>git简介</h1><p>git是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。</p>\n<p>具体参考廖雪峰老师的<a target=\"_blank\" rel=\"noopener\" href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/\">git教程</a>和<a target=\"_blank\" rel=\"noopener\" href=\"https://git-scm.com/book/zh/v2/\">git官网</a></p>\n<h1 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h1><p>为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。</p>\n<p><strong>快照</strong>  </p>\n<p>其实要理解git的分支，首先要了解git是如何保存文件的<br>git以文件快照的方式保存文件的更改情况，而不是cope每一份代码<br>那么如何理解文件快照的？  </p>\n<blockquote>\n<p>快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子</p>\n</blockquote>\n<p><strong>暂存</strong>  </p>\n<p>在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交</p>\n<p><strong>提交</strong></p>\n<p>commit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）<br>有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  </p>\n<p><img src=\"https://git-scm.com/book/en/v2/images/commit-and-tree.png\" alt=\"首次提交简介图\"></p>\n<p>以上的是首次提交的情况，在第二次提交时<br>在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象<br><img src=\"https://git-scm.com/book/en/v2/images/commits-and-parents.png\" alt=\"再次提交简介图\"><br>现在情况就明了了，git是以单链表结构来追溯文件状态的</p>\n<p><strong>分支指针</strong></p>\n<p>既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？<br>所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？<br>没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。<br><img src=\"https://git-scm.com/book/en/v2/images/branch-and-history.png\" alt=\"分支简介图\"><br>所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  </p>\n<p>但是冲突是如何产生的呢？<br>看个图就明白了<br><img src=\"https://git-scm.com/book/en/v2/images/advance-master.png\" alt=\"分支简介图\"><br>其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  </p>\n<p>使用命令查看分支的指向情况，或者说项目的分叉情况<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">git log</span> <span class=\"literal\">--</span><span class=\"comment\">oneline</span> <span class=\"literal\">--</span><span class=\"comment\">decorate</span> <span class=\"literal\">--</span><span class=\"comment\">graph</span> <span class=\"literal\">--</span><span class=\"comment\">all</span>  </span><br></pre></td></tr></table></figure></p>\n<h1 id=\"rebase的两种用法\"><a href=\"#rebase的两种用法\" class=\"headerlink\" title=\"rebase的两种用法\"></a>rebase的两种用法</h1><p><strong>1. 合并commit</strong>  </p>\n<blockquote>\n<p>你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版…</p>\n</blockquote>\n<p> 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了</p>\n<p> 所以需要将为同一个需求开发的这些commit合并成一个</p>\n <figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase -i <span class=\"title class_\">HAED</span><span class=\"string\">~n&lt;commitID&gt;</span></span><br></pre></td></tr></table></figure>\n<p> 上面的n代指数字，表示包括当前以前的几个commit<br>或者把HAED~n替换为n的commitID，效果一样</p>\n<p>这是会出现一个编辑界面<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 5e187c7dbe8    <span class=\"built_in\">add</span> center style indent  </span><br><span class=\"line\">pick 6d577eb3440    <span class=\"built_in\">add</span> center style  </span><br><span class=\"line\">pick f9b9508a3ab    <span class=\"built_in\">add</span> center style  </span><br><span class=\"line\">pick 111ab9cc261    update templates  </span><br><span class=\"line\"><span class=\"comment\"># Rebase 150a643..2fad1ae onto 150a643  </span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># Commands:  </span></span><br><span class=\"line\"><span class=\"comment\">#  p, pick = use commit  </span></span><br><span class=\"line\"><span class=\"comment\">#  r, reword = use commit, but edit the commit message  </span></span><br><span class=\"line\"><span class=\"comment\">#  e, edit = use commit, but stop for amending  </span></span><br><span class=\"line\"><span class=\"comment\">#  s, squash = use commit, but meld into previous commit  </span></span><br></pre></td></tr></table></figure><br>把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit</p>\n<p>若出现冲突，解决冲突，应用最新的版本，使用<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . <span class=\"regexp\">//</span>提交索引</span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span> <span class=\"regexp\">//</span>继续rebase操作</span><br></pre></td></tr></table></figure><br>若在合并commit的过程中想放弃，可以使用命令<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure><br>此时会出现一个编辑窗口，保存退出就行</p>\n<p>最后把本地推上远程<br><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">push</span> -f <span class=\"comment\">//必须带上-f，以本地覆盖远程</span></span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git <span class=\"built_in\">push</span> (origin master) -f</span><br></pre></td></tr></table></figure><br>因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程</p>\n<p><strong>2. 合并分支</strong>  </p>\n<p>有如下分支图<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\">C4--&gt;C2</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure><br>在master上合并dev我们一般用<br><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">merge</span> dev</span><br></pre></td></tr></table></figure><br>此时分支图就变为<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\">C4--&gt;C2</span><br><span class=\"line\">C5--&gt;C3</span><br><span class=\"line\">C5--&gt;C4</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C5</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure><br>这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁<br>在最新的分支dev上<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"literal\">master</span></span><br></pre></td></tr></table></figure><br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\">C4--&gt;C2</span><br><span class=\"line\"><span class=\"string\">&#x27;C4&#x27;</span>--&gt;C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">&#x27;C4&#x27;</span></span><br></pre></td></tr></table></figure><br>dev上的C4会被cope成’C4’并且dev指向’C4’,保存在rebase文件夹，然后’C4’指向C3，最后C4会当成垃圾清除，最后分支图就变为了<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\"><span class=\"string\">&#x27;C4&#x27;</span>--&gt;C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">&#x27;C4&#x27;</span></span><br></pre></td></tr></table></figure><br>若有冲突,解决后<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">add</span> .</span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure><br>随时放弃<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>在拉去远程更新时也可以使用rebase</strong><br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase</span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git pull upstream <span class=\"keyword\">master</span> <span class=\"title\">--rebase</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>ps:<br>倘若通过git pull –rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --<span class=\"keyword\">soft</span> &lt;commitID&gt; <span class=\"comment\">//保留更改回退</span></span><br></pre></td></tr></table></figure><br>再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）</p>\n</blockquote>\n<p><strong>回到最初</strong>  </p>\n<p>解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。</p>","more":"<blockquote>\n<p>目录</p>\n<ul>\n<li>git简介</li>\n<li>分支</li>\n<li>rebase的两个用法</li>\n</ul>\n</blockquote>\n<h1 id=\"git简介\"><a href=\"#git简介\" class=\"headerlink\" title=\"git简介\"></a>git简介</h1><p>git是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。</p>\n<p>具体参考廖雪峰老师的<a target=\"_blank\" rel=\"noopener\" href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/\">git教程</a>和<a target=\"_blank\" rel=\"noopener\" href=\"https://git-scm.com/book/zh/v2/\">git官网</a></p>\n<h1 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h1><p>为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。</p>\n<p><strong>快照</strong>  </p>\n<p>其实要理解git的分支，首先要了解git是如何保存文件的<br>git以文件快照的方式保存文件的更改情况，而不是cope每一份代码<br>那么如何理解文件快照的？  </p>\n<blockquote>\n<p>快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子</p>\n</blockquote>\n<p><strong>暂存</strong>  </p>\n<p>在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交</p>\n<p><strong>提交</strong></p>\n<p>commit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）<br>有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  </p>\n<p><img src=\"https://git-scm.com/book/en/v2/images/commit-and-tree.png\" alt=\"首次提交简介图\"></p>\n<p>以上的是首次提交的情况，在第二次提交时<br>在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象<br><img src=\"https://git-scm.com/book/en/v2/images/commits-and-parents.png\" alt=\"再次提交简介图\"><br>现在情况就明了了，git是以单链表结构来追溯文件状态的</p>\n<p><strong>分支指针</strong></p>\n<p>既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？<br>所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？<br>没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。<br><img src=\"https://git-scm.com/book/en/v2/images/branch-and-history.png\" alt=\"分支简介图\"><br>所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  </p>\n<p>但是冲突是如何产生的呢？<br>看个图就明白了<br><img src=\"https://git-scm.com/book/en/v2/images/advance-master.png\" alt=\"分支简介图\"><br>其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  </p>\n<p>使用命令查看分支的指向情况，或者说项目的分叉情况<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">git log</span> <span class=\"literal\">--</span><span class=\"comment\">oneline</span> <span class=\"literal\">--</span><span class=\"comment\">decorate</span> <span class=\"literal\">--</span><span class=\"comment\">graph</span> <span class=\"literal\">--</span><span class=\"comment\">all</span>  </span><br></pre></td></tr></table></figure></p>\n<h1 id=\"rebase的两种用法\"><a href=\"#rebase的两种用法\" class=\"headerlink\" title=\"rebase的两种用法\"></a>rebase的两种用法</h1><p><strong>1. 合并commit</strong>  </p>\n<blockquote>\n<p>你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版…</p>\n</blockquote>\n<p> 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了</p>\n<p> 所以需要将为同一个需求开发的这些commit合并成一个</p>\n <figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase -i <span class=\"title class_\">HAED</span><span class=\"string\">~n&lt;commitID&gt;</span></span><br></pre></td></tr></table></figure>\n<p> 上面的n代指数字，表示包括当前以前的几个commit<br>或者把HAED~n替换为n的commitID，效果一样</p>\n<p>这是会出现一个编辑界面<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 5e187c7dbe8    <span class=\"built_in\">add</span> center style indent  </span><br><span class=\"line\">pick 6d577eb3440    <span class=\"built_in\">add</span> center style  </span><br><span class=\"line\">pick f9b9508a3ab    <span class=\"built_in\">add</span> center style  </span><br><span class=\"line\">pick 111ab9cc261    update templates  </span><br><span class=\"line\"><span class=\"comment\"># Rebase 150a643..2fad1ae onto 150a643  </span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># Commands:  </span></span><br><span class=\"line\"><span class=\"comment\">#  p, pick = use commit  </span></span><br><span class=\"line\"><span class=\"comment\">#  r, reword = use commit, but edit the commit message  </span></span><br><span class=\"line\"><span class=\"comment\">#  e, edit = use commit, but stop for amending  </span></span><br><span class=\"line\"><span class=\"comment\">#  s, squash = use commit, but meld into previous commit  </span></span><br></pre></td></tr></table></figure><br>把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit</p>\n<p>若出现冲突，解决冲突，应用最新的版本，使用<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . <span class=\"regexp\">//</span>提交索引</span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span> <span class=\"regexp\">//</span>继续rebase操作</span><br></pre></td></tr></table></figure><br>若在合并commit的过程中想放弃，可以使用命令<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure><br>此时会出现一个编辑窗口，保存退出就行</p>\n<p>最后把本地推上远程<br><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">push</span> -f <span class=\"comment\">//必须带上-f，以本地覆盖远程</span></span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git <span class=\"built_in\">push</span> (origin master) -f</span><br></pre></td></tr></table></figure><br>因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程</p>\n<p><strong>2. 合并分支</strong>  </p>\n<p>有如下分支图<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\">C4--&gt;C2</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure><br>在master上合并dev我们一般用<br><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">merge</span> dev</span><br></pre></td></tr></table></figure><br>此时分支图就变为<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\">C4--&gt;C2</span><br><span class=\"line\">C5--&gt;C3</span><br><span class=\"line\">C5--&gt;C4</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C5</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure><br>这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁<br>在最新的分支dev上<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"literal\">master</span></span><br></pre></td></tr></table></figure><br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\">C4--&gt;C2</span><br><span class=\"line\"><span class=\"string\">&#x27;C4&#x27;</span>--&gt;C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">&#x27;C4&#x27;</span></span><br></pre></td></tr></table></figure><br>dev上的C4会被cope成’C4’并且dev指向’C4’,保存在rebase文件夹，然后’C4’指向C3，最后C4会当成垃圾清除，最后分支图就变为了<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2--&gt;C1</span><br><span class=\"line\">C3--&gt;C2</span><br><span class=\"line\"><span class=\"string\">&#x27;C4&#x27;</span>--&gt;C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">&#x27;C4&#x27;</span></span><br></pre></td></tr></table></figure><br>若有冲突,解决后<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">add</span> .</span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure><br>随时放弃<br><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>在拉去远程更新时也可以使用rebase</strong><br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase</span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git pull upstream <span class=\"keyword\">master</span> <span class=\"title\">--rebase</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>ps:<br>倘若通过git pull –rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --<span class=\"keyword\">soft</span> &lt;commitID&gt; <span class=\"comment\">//保留更改回退</span></span><br></pre></td></tr></table></figure><br>再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）</p>\n</blockquote>\n<p><strong>回到最初</strong>  </p>\n<p>解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。</p>"},{"title":"自定义的checkbox,radio样式","date":"2017-02-14T16:00:00.000Z","_content":"\n**雪碧图**\n\n雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。\n\n**自定义checkbox,radio样式**\n\nInput标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。\n在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。\n\n**思路：**\n\n1.用visibility：hidden将input标签隐藏\n2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分\n3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标\n\n**遇到的问题：**\n\n1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。\n2. 样式 .example2 input[type='checkbox']:checked + label{} 要在样式.example2 input[type='checkbox']:checked + label:after之前，否则不起作用。\n\n**雪碧图与伪元素方式对比：**\n1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。\n2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。\n\n**总结**\n这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。","source":"_posts/自定义的checkbox,radio样式.md","raw":"---\ntitle: 自定义的checkbox,radio样式 \ndate: 2017-2-15\ntags: [html5]\n---\n\n**雪碧图**\n\n雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。\n\n**自定义checkbox,radio样式**\n\nInput标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。\n在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。\n\n**思路：**\n\n1.用visibility：hidden将input标签隐藏\n2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分\n3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标\n\n**遇到的问题：**\n\n1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。\n2. 样式 .example2 input[type='checkbox']:checked + label{} 要在样式.example2 input[type='checkbox']:checked + label:after之前，否则不起作用。\n\n**雪碧图与伪元素方式对比：**\n1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。\n2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。\n\n**总结**\n这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。","slug":"自定义的checkbox,radio样式","published":1,"updated":"2022-12-06T15:30:38.843Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4o003fmcq0cpq81x7w","content":"<p><strong>雪碧图</strong></p>\n<p>雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。</p>\n<p><strong>自定义checkbox,radio样式</strong></p>\n<p>Input标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。<br>在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。</p>\n<p><strong>思路：</strong></p>\n<p>1.用visibility：hidden将input标签隐藏<br>2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分<br>3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标</p>\n<p><strong>遇到的问题：</strong></p>\n<p>1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。</p>\n<ol start=\"2\">\n<li>样式 .example2 input[type=’checkbox’]:checked + label{} 要在样式.example2 input[type=’checkbox’]:checked + label:after之前，否则不起作用。</li>\n</ol>\n<p><strong>雪碧图与伪元素方式对比：</strong><br>1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。<br>2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。</p>\n<p><strong>总结</strong><br>这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>雪碧图</strong></p>\n<p>雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。</p>\n<p><strong>自定义checkbox,radio样式</strong></p>\n<p>Input标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。<br>在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。</p>\n<p><strong>思路：</strong></p>\n<p>1.用visibility：hidden将input标签隐藏<br>2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分<br>3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标</p>\n<p><strong>遇到的问题：</strong></p>\n<p>1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。</p>\n<ol start=\"2\">\n<li>样式 .example2 input[type=’checkbox’]:checked + label{} 要在样式.example2 input[type=’checkbox’]:checked + label:after之前，否则不起作用。</li>\n</ol>\n<p><strong>雪碧图与伪元素方式对比：</strong><br>1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。<br>2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。</p>\n<p><strong>总结</strong><br>这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。</p>\n"},{"title":"腾讯外包面试经历总结","date":"2018-08-15T16:00:00.000Z","_content":"\n![我是图片](https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1534660249&di=be90597f4b2290b96a1689d2815aabb9&src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png)\n\n记一次在腾讯面外包岗的面试经历，想想都激动人心......\n\n<!--more-->\n\n其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋......\n\n腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。\n\n来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。\n\n到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。\n\n其他先不说，来点干货~\n先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  \n\n选择题：  \n1. 选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10\n2. 考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  \n3. http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。  \n(差不多都忘光，捂脸)\n\n填空题：  \n1. position的值包括absolute,fixed,relative,static,inherit  \n(基本都是基础)\n\n简答题：  \n1. 写出浏览器渲染页面的过程，以及针对这个过程的优化方案。  \n ![image](https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n> (1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。  \n(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。  \n(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。  \n(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。\n(5)浏览器根据render tree去plainting和display。\n\n2. 用js写出翻页的效果。\n> 考察的是swiper的原理\n\n笔试后是一面\n\n一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。\n\n爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去  \n说说阻塞和非阻塞，同步和异步的区别。  \nv-show和v-if的区别。  \n\n面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：\n> 前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。   \n面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。\n\n二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。\n\n等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！\n\n我也从这位师兄身上学到了两点很多用的经验：\n> 师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。  \n回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。\n\n> 大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。\n\n其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。\n\n\n\n\n\n\n","source":"_posts/腾讯外包面试经历总结.md","raw":"---\ntitle: 腾讯外包面试经历总结\ndate: 2018-8-16\ntags: []\ncategories: [总结]\n---\n\n![我是图片](https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1534660249&di=be90597f4b2290b96a1689d2815aabb9&src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png)\n\n记一次在腾讯面外包岗的面试经历，想想都激动人心......\n\n<!--more-->\n\n其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋......\n\n腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。\n\n来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。\n\n到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。\n\n其他先不说，来点干货~\n先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  \n\n选择题：  \n1. 选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10\n2. 考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  \n3. http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。  \n(差不多都忘光，捂脸)\n\n填空题：  \n1. position的值包括absolute,fixed,relative,static,inherit  \n(基本都是基础)\n\n简答题：  \n1. 写出浏览器渲染页面的过程，以及针对这个过程的优化方案。  \n ![image](https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n> (1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。  \n(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。  \n(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。  \n(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。\n(5)浏览器根据render tree去plainting和display。\n\n2. 用js写出翻页的效果。\n> 考察的是swiper的原理\n\n笔试后是一面\n\n一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。\n\n爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去  \n说说阻塞和非阻塞，同步和异步的区别。  \nv-show和v-if的区别。  \n\n面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：\n> 前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。   \n面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。\n\n二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。\n\n等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！\n\n我也从这位师兄身上学到了两点很多用的经验：\n> 师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。  \n回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。\n\n> 大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。\n\n其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。\n\n\n\n\n\n\n","slug":"腾讯外包面试经历总结","published":1,"updated":"2022-12-06T15:30:38.838Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4o003imcq05u2l85h3","content":"<p><img src=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1534660249&amp;di=be90597f4b2290b96a1689d2815aabb9&amp;src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png\" alt=\"我是图片\"></p>\n<p>记一次在腾讯面外包岗的面试经历，想想都激动人心……</p>\n<span id=\"more\"></span>\n<p>其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋……</p>\n<p>腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。</p>\n<p>来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。</p>\n<p>到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。</p>\n<p>其他先不说，来点干货~<br>先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  </p>\n<p>选择题：  </p>\n<ol>\n<li>选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10</li>\n<li>考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  </li>\n<li>http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。<br>(差不多都忘光，捂脸)</li>\n</ol>\n<p>填空题：  </p>\n<ol>\n<li>position的值包括absolute,fixed,relative,static,inherit<br>(基本都是基础)</li>\n</ol>\n<p>简答题：  </p>\n<ol>\n<li><p>写出浏览器渲染页面的过程，以及针对这个过程的优化方案。<br><img src=\"https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"image\"></p>\n<blockquote>\n<p>(1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。<br>(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。<br>(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。<br>(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。<br>(5)浏览器根据render tree去plainting和display。</p>\n</blockquote>\n</li>\n<li><p>用js写出翻页的效果。</p>\n<blockquote>\n<p>考察的是swiper的原理</p>\n</blockquote>\n</li>\n</ol>\n<p>笔试后是一面</p>\n<p>一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。</p>\n<p>爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去<br>说说阻塞和非阻塞，同步和异步的区别。<br>v-show和v-if的区别。  </p>\n<p>面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：</p>\n<blockquote>\n<p>前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。<br>面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。</p>\n</blockquote>\n<p>二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。</p>\n<p>等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！</p>\n<p>我也从这位师兄身上学到了两点很多用的经验：</p>\n<blockquote>\n<p>师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。<br>回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。</p>\n</blockquote>\n<blockquote>\n<p>大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。</p>\n</blockquote>\n<p>其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1534660249&amp;di=be90597f4b2290b96a1689d2815aabb9&amp;src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png\" alt=\"我是图片\"></p>\n<p>记一次在腾讯面外包岗的面试经历，想想都激动人心……</p>","more":"<p>其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋……</p>\n<p>腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。</p>\n<p>来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。</p>\n<p>到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。</p>\n<p>其他先不说，来点干货~<br>先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  </p>\n<p>选择题：  </p>\n<ol>\n<li>选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10</li>\n<li>考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  </li>\n<li>http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。<br>(差不多都忘光，捂脸)</li>\n</ol>\n<p>填空题：  </p>\n<ol>\n<li>position的值包括absolute,fixed,relative,static,inherit<br>(基本都是基础)</li>\n</ol>\n<p>简答题：  </p>\n<ol>\n<li><p>写出浏览器渲染页面的过程，以及针对这个过程的优化方案。<br><img src=\"https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"image\"></p>\n<blockquote>\n<p>(1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。<br>(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。<br>(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。<br>(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。<br>(5)浏览器根据render tree去plainting和display。</p>\n</blockquote>\n</li>\n<li><p>用js写出翻页的效果。</p>\n<blockquote>\n<p>考察的是swiper的原理</p>\n</blockquote>\n</li>\n</ol>\n<p>笔试后是一面</p>\n<p>一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。</p>\n<p>爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去<br>说说阻塞和非阻塞，同步和异步的区别。<br>v-show和v-if的区别。  </p>\n<p>面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：</p>\n<blockquote>\n<p>前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。<br>面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。</p>\n</blockquote>\n<p>二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。</p>\n<p>等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！</p>\n<p>我也从这位师兄身上学到了两点很多用的经验：</p>\n<blockquote>\n<p>师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。<br>回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。</p>\n</blockquote>\n<blockquote>\n<p>大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。</p>\n</blockquote>\n<p>其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。</p>"},{"title":"项目打包策略","date":"2020-12-04T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n## 项目打包策略\n\n打包策略：\n\n- A：把整个目录打进一个ab\n\n- B：把目录下的子目录中的资源打进子目录的ab中\n\n- C：把整个目录拷贝到ab目录不打ab\n\n- D：目录下的每一个资源打一个ab，不管是否重复\n\n- E：目录下的每一个资源打一个ab，每个依赖也打成一个ab，去除重复\n\n- F：图集的图片根据tag打ab，每个tag打一个ab\n\n- G：lua打包，一个目录打成一个ab，可以选择是否编码，编码为.bytes文件，通过根据不同平台选择LuaEncoder目录下的对应编码器进去编码（利用py脚本语言执行脚本运行luajit-2.1编码器）。编码器在各种运行平台和目标平台的使用情况如下。\n\n- H：lua打包，多个目录打成一个ab，会编码\n\n各种策略应用的项目目录情况：\n\n|策略|目录|筛选模式|特点|\n| :- | :- | :- | :- |\n|D|Assets/GameAssets/ui|(.asset)$|这类资源的特点是各个模块都有分布，数量多，1比1打ab策略有利于控制ab大小粒度，属于按类型和功能模块分组策略|\n||Assets/GameAssets/ui|(.prefab)$||\n||Assets/GameAssets/ui/animations|(.controller)$||\n||Assets/GameAssets/ui/materials|(.mat)$||\n||Assets/GameAssets/audio|(.ogg|.mp3|.wav)$||\n||Assets/GameAssets/audio/audiomixer|(.prefab)$||\n||Assets/GameAssets/live2dcharacter|(.prefab)$||\n||Assets/GameAssets/live2dcharacter|(^(?!.\\*?(model))).+(.json|.bytes)$||\n||Assets/GameAssets/bigbg|(.jpg|.png)$||\n||Assets/GameAssets/font|(.ttf|.fontsettings)$||\n|C|Assets/GameAssets/movie|(.mp4)$|这类资源一般是配置文件，或者像是mp4这种游戏中用得比较少的资源文件|\n||Assets/GameAssets/config|(.txt|.png|.jpg)$||\n|A|Assets/GameAssets/shaders||全局常驻的文件|\n|E|Assets/GameAssets/scene/pj-g\\_scene\\_assets|.\\*materials\\_dynload.+(.mat)$|这类资源的引用比较复杂，材质贴图引用得多，有些资源需要动态加载，需要对依赖资源做去重处理。 场景、spine人物动画、特效属于这类。|\n||Assets/GameAssets/character|(.prefab)$||\n||Assets/GameAssets/language/[lang]/character|(.prefab)$||\n||Assets/GameAssets/effect|(.prefab)$||\n||Assets/GameAssets/language/[lang]/effect|(.prefab)$||\n||Assets/GameAssets/scene/pj-g\\_scene\\_prefab|(.\\_p[\\\\d]{0,}.prefab|.\\_stage.prefab)$||\n||Assets/GameAssets/language/[lang]/scene/pj-g\\_scene\\_prefab|(.\\_p[\\\\d]{0,}.prefab|.\\_stage.prefab)$||\n|F|Assets/AtlasSource||UI用的精灵图，需要根据自定义tag打图集，其实就是按功能模块分组策略|\n|G|Assets/aounity-framework/ToLua/Lua||lua文件根据模块打ab，属于按逻辑实体分组策略，类似于粒度比较大的模块，但代码文件也属于系统常驻类型，不宜分得太小粒度|\n||Assets/aounity-framework/Scripts/Lua/framework|||\n||Assets/aounity-framework/Scripts/Lua/frameworkext|||\n||Assets/Scripts/Lua/logic|||\n|H|<p>Assets/aounity-framework/Scripts/Lua/bootstrap</p><p></p><p>Assets/Scripts/Lua/bootstrap</p>||lua文件根据模块打ab，同一个模块多个目录打在一起|\n\n> 没有写明打包策略的多语言下的目录，说明跟对应其的公用目录的打包策略一致。\n\n## Lua编译\nusing luajit2.1.0-beta3.\n\n编码器在各种运行平台和目标平台的使用：\n\n不同平台使用的编码器不同\n\n\n    1.pc使用\n\n    luajit64:   win, ios 64bit\n\n    luajit32:   android 32bit\n\n    2. mac使用\n\n    编译命令\n\n    luajit\\_mac32 make CC=\"gcc -m32\"\n\n    luajit\\_mac64 make XCFLAGS=-DLUAJIT\\_ENABLE\\_GC64\n\n    luavm:\t    macos using luac(for u5.x). \n\n    luajit\\_mac64: win, ios 64bit\n\n    luajit\\_mac32: android 32bit\n\n    以下文件mac需要执行权限\n\n    luavm/luac\n\n    luajit\\_mac32/luajit\n\n    luajit\\_mac64/luajit\n\n> 注意：没有权限mac无法编译，导致打不出lua文件的ab，也没有报错提示\n\n> 其实研究ab分组策略就是研究资源依赖树实现资源加载最优的问题。\n\nab分组策略原则参考：<https://zhuanlan.zhihu.com/p/91926428>\n\n## build package\n\n项目构建包逻辑原理很简单，前面处理和准备好参数和数据，传递给BuildPipeline.BuildAssetBundles方法构建ab。\n\n工具面板上的参数解析：\n\n* isEncodeLua：是否时候luajit-2.1编码lua文件成字节码。\n\n* isForceRebuild：BuildAssetBundleOptions.ForceRebuildAssetBundle参数，强制重打ab，即使Asset没有更改。\n\n* isOnlyBuildLua：是否只打lua ab。√了就不会打其他资源ab，在调试真机时候更改lua代码进行调试会很方便。\n","source":"_posts/资源打包策略.md","raw":"---\ntitle: 项目打包策略\ndate: 2020-12-05\ntags: [打包]\ncategories: [Unity游戏开发,Unity,资源管理]\n---\n\n<!-- more -->\n\n\n## 项目打包策略\n\n打包策略：\n\n- A：把整个目录打进一个ab\n\n- B：把目录下的子目录中的资源打进子目录的ab中\n\n- C：把整个目录拷贝到ab目录不打ab\n\n- D：目录下的每一个资源打一个ab，不管是否重复\n\n- E：目录下的每一个资源打一个ab，每个依赖也打成一个ab，去除重复\n\n- F：图集的图片根据tag打ab，每个tag打一个ab\n\n- G：lua打包，一个目录打成一个ab，可以选择是否编码，编码为.bytes文件，通过根据不同平台选择LuaEncoder目录下的对应编码器进去编码（利用py脚本语言执行脚本运行luajit-2.1编码器）。编码器在各种运行平台和目标平台的使用情况如下。\n\n- H：lua打包，多个目录打成一个ab，会编码\n\n各种策略应用的项目目录情况：\n\n|策略|目录|筛选模式|特点|\n| :- | :- | :- | :- |\n|D|Assets/GameAssets/ui|(.asset)$|这类资源的特点是各个模块都有分布，数量多，1比1打ab策略有利于控制ab大小粒度，属于按类型和功能模块分组策略|\n||Assets/GameAssets/ui|(.prefab)$||\n||Assets/GameAssets/ui/animations|(.controller)$||\n||Assets/GameAssets/ui/materials|(.mat)$||\n||Assets/GameAssets/audio|(.ogg|.mp3|.wav)$||\n||Assets/GameAssets/audio/audiomixer|(.prefab)$||\n||Assets/GameAssets/live2dcharacter|(.prefab)$||\n||Assets/GameAssets/live2dcharacter|(^(?!.\\*?(model))).+(.json|.bytes)$||\n||Assets/GameAssets/bigbg|(.jpg|.png)$||\n||Assets/GameAssets/font|(.ttf|.fontsettings)$||\n|C|Assets/GameAssets/movie|(.mp4)$|这类资源一般是配置文件，或者像是mp4这种游戏中用得比较少的资源文件|\n||Assets/GameAssets/config|(.txt|.png|.jpg)$||\n|A|Assets/GameAssets/shaders||全局常驻的文件|\n|E|Assets/GameAssets/scene/pj-g\\_scene\\_assets|.\\*materials\\_dynload.+(.mat)$|这类资源的引用比较复杂，材质贴图引用得多，有些资源需要动态加载，需要对依赖资源做去重处理。 场景、spine人物动画、特效属于这类。|\n||Assets/GameAssets/character|(.prefab)$||\n||Assets/GameAssets/language/[lang]/character|(.prefab)$||\n||Assets/GameAssets/effect|(.prefab)$||\n||Assets/GameAssets/language/[lang]/effect|(.prefab)$||\n||Assets/GameAssets/scene/pj-g\\_scene\\_prefab|(.\\_p[\\\\d]{0,}.prefab|.\\_stage.prefab)$||\n||Assets/GameAssets/language/[lang]/scene/pj-g\\_scene\\_prefab|(.\\_p[\\\\d]{0,}.prefab|.\\_stage.prefab)$||\n|F|Assets/AtlasSource||UI用的精灵图，需要根据自定义tag打图集，其实就是按功能模块分组策略|\n|G|Assets/aounity-framework/ToLua/Lua||lua文件根据模块打ab，属于按逻辑实体分组策略，类似于粒度比较大的模块，但代码文件也属于系统常驻类型，不宜分得太小粒度|\n||Assets/aounity-framework/Scripts/Lua/framework|||\n||Assets/aounity-framework/Scripts/Lua/frameworkext|||\n||Assets/Scripts/Lua/logic|||\n|H|<p>Assets/aounity-framework/Scripts/Lua/bootstrap</p><p></p><p>Assets/Scripts/Lua/bootstrap</p>||lua文件根据模块打ab，同一个模块多个目录打在一起|\n\n> 没有写明打包策略的多语言下的目录，说明跟对应其的公用目录的打包策略一致。\n\n## Lua编译\nusing luajit2.1.0-beta3.\n\n编码器在各种运行平台和目标平台的使用：\n\n不同平台使用的编码器不同\n\n\n    1.pc使用\n\n    luajit64:   win, ios 64bit\n\n    luajit32:   android 32bit\n\n    2. mac使用\n\n    编译命令\n\n    luajit\\_mac32 make CC=\"gcc -m32\"\n\n    luajit\\_mac64 make XCFLAGS=-DLUAJIT\\_ENABLE\\_GC64\n\n    luavm:\t    macos using luac(for u5.x). \n\n    luajit\\_mac64: win, ios 64bit\n\n    luajit\\_mac32: android 32bit\n\n    以下文件mac需要执行权限\n\n    luavm/luac\n\n    luajit\\_mac32/luajit\n\n    luajit\\_mac64/luajit\n\n> 注意：没有权限mac无法编译，导致打不出lua文件的ab，也没有报错提示\n\n> 其实研究ab分组策略就是研究资源依赖树实现资源加载最优的问题。\n\nab分组策略原则参考：<https://zhuanlan.zhihu.com/p/91926428>\n\n## build package\n\n项目构建包逻辑原理很简单，前面处理和准备好参数和数据，传递给BuildPipeline.BuildAssetBundles方法构建ab。\n\n工具面板上的参数解析：\n\n* isEncodeLua：是否时候luajit-2.1编码lua文件成字节码。\n\n* isForceRebuild：BuildAssetBundleOptions.ForceRebuildAssetBundle参数，强制重打ab，即使Asset没有更改。\n\n* isOnlyBuildLua：是否只打lua ab。√了就不会打其他资源ab，在调试真机时候更改lua代码进行调试会很方便。\n","slug":"资源打包策略","published":1,"updated":"2022-12-07T13:39:06.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv4p003lmcq0fzwehmim","content":"<span id=\"more\"></span>\n<h2 id=\"项目打包策略\"><a href=\"#项目打包策略\" class=\"headerlink\" title=\"项目打包策略\"></a>项目打包策略</h2><p>打包策略：</p>\n<ul>\n<li><p>A：把整个目录打进一个ab</p>\n</li>\n<li><p>B：把目录下的子目录中的资源打进子目录的ab中</p>\n</li>\n<li><p>C：把整个目录拷贝到ab目录不打ab</p>\n</li>\n<li><p>D：目录下的每一个资源打一个ab，不管是否重复</p>\n</li>\n<li><p>E：目录下的每一个资源打一个ab，每个依赖也打成一个ab，去除重复</p>\n</li>\n<li><p>F：图集的图片根据tag打ab，每个tag打一个ab</p>\n</li>\n<li><p>G：lua打包，一个目录打成一个ab，可以选择是否编码，编码为.bytes文件，通过根据不同平台选择LuaEncoder目录下的对应编码器进去编码（利用py脚本语言执行脚本运行luajit-2.1编码器）。编码器在各种运行平台和目标平台的使用情况如下。</p>\n</li>\n<li><p>H：lua打包，多个目录打成一个ab，会编码</p>\n</li>\n</ul>\n<p>各种策略应用的项目目录情况：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">策略</th>\n<th style=\"text-align:left\">目录</th>\n<th style=\"text-align:left\">筛选模式</th>\n<th style=\"text-align:left\">特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">D</td>\n<td style=\"text-align:left\">Assets/GameAssets/ui</td>\n<td style=\"text-align:left\">(.asset)$</td>\n<td style=\"text-align:left\">这类资源的特点是各个模块都有分布，数量多，1比1打ab策略有利于控制ab大小粒度，属于按类型和功能模块分组策略</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/ui</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/ui/animations</td>\n<td style=\"text-align:left\">(.controller)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/ui/materials</td>\n<td style=\"text-align:left\">(.mat)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/audio</td>\n<td style=\"text-align:left\">(.ogg</td>\n<td style=\"text-align:left\">.mp3</td>\n<td>.wav)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/audio/audiomixer</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/live2dcharacter</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/live2dcharacter</td>\n<td style=\"text-align:left\">(^(?!.*?(model))).+(.json</td>\n<td style=\"text-align:left\">.bytes)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/bigbg</td>\n<td style=\"text-align:left\">(.jpg</td>\n<td style=\"text-align:left\">.png)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/font</td>\n<td style=\"text-align:left\">(.ttf</td>\n<td style=\"text-align:left\">.fontsettings)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">C</td>\n<td style=\"text-align:left\">Assets/GameAssets/movie</td>\n<td style=\"text-align:left\">(.mp4)$</td>\n<td style=\"text-align:left\">这类资源一般是配置文件，或者像是mp4这种游戏中用得比较少的资源文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/config</td>\n<td style=\"text-align:left\">(.txt</td>\n<td style=\"text-align:left\">.png</td>\n<td>.jpg)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">A</td>\n<td style=\"text-align:left\">Assets/GameAssets/shaders</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">全局常驻的文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">E</td>\n<td style=\"text-align:left\">Assets/GameAssets/scene/pj-g_scene_assets</td>\n<td style=\"text-align:left\">.*materials_dynload.+(.mat)$</td>\n<td style=\"text-align:left\">这类资源的引用比较复杂，材质贴图引用得多，有些资源需要动态加载，需要对依赖资源做去重处理。 场景、spine人物动画、特效属于这类。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/character</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/language/[lang]/character</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/effect</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/language/[lang]/effect</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/scene/pj-g_scene_prefab</td>\n<td style=\"text-align:left\">(._p[\\d]{0,}.prefab</td>\n<td style=\"text-align:left\">._stage.prefab)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/language/[lang]/scene/pj-g_scene_prefab</td>\n<td style=\"text-align:left\">(._p[\\d]{0,}.prefab</td>\n<td style=\"text-align:left\">._stage.prefab)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">F</td>\n<td style=\"text-align:left\">Assets/AtlasSource</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">UI用的精灵图，需要根据自定义tag打图集，其实就是按功能模块分组策略</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">G</td>\n<td style=\"text-align:left\">Assets/aounity-framework/ToLua/Lua</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">lua文件根据模块打ab，属于按逻辑实体分组策略，类似于粒度比较大的模块，但代码文件也属于系统常驻类型，不宜分得太小粒度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/aounity-framework/Scripts/Lua/framework</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/aounity-framework/Scripts/Lua/frameworkext</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/Scripts/Lua/logic</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">H</td>\n<td style=\"text-align:left\"><p>Assets/aounity-framework/Scripts/Lua/bootstrap</p><p></p><p>Assets/Scripts/Lua/bootstrap</p></td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">lua文件根据模块打ab，同一个模块多个目录打在一起</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>没有写明打包策略的多语言下的目录，说明跟对应其的公用目录的打包策略一致。</p>\n</blockquote>\n<h2 id=\"Lua编译\"><a href=\"#Lua编译\" class=\"headerlink\" title=\"Lua编译\"></a>Lua编译</h2><p>using luajit2.1.0-beta3.</p>\n<p>编码器在各种运行平台和目标平台的使用：</p>\n<p>不同平台使用的编码器不同</p>\n<pre><code>1.pc使用\n\nluajit64:   win, ios 64bit\n\nluajit32:   android 32bit\n\n2. mac使用\n\n编译命令\n\nluajit\\_mac32 make CC=&quot;gcc -m32&quot;\n\nluajit\\_mac64 make XCFLAGS=-DLUAJIT\\_ENABLE\\_GC64\n\nluavm:        macos using luac(for u5.x). \n\nluajit\\_mac64: win, ios 64bit\n\nluajit\\_mac32: android 32bit\n\n以下文件mac需要执行权限\n\nluavm/luac\n\nluajit\\_mac32/luajit\n\nluajit\\_mac64/luajit\n</code></pre><blockquote>\n<p>注意：没有权限mac无法编译，导致打不出lua文件的ab，也没有报错提示</p>\n</blockquote>\n<blockquote>\n<p>其实研究ab分组策略就是研究资源依赖树实现资源加载最优的问题。</p>\n</blockquote>\n<p>ab分组策略原则参考：<a target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/91926428\">https://zhuanlan.zhihu.com/p/91926428</a></p>\n<h2 id=\"build-package\"><a href=\"#build-package\" class=\"headerlink\" title=\"build package\"></a>build package</h2><p>项目构建包逻辑原理很简单，前面处理和准备好参数和数据，传递给BuildPipeline.BuildAssetBundles方法构建ab。</p>\n<p>工具面板上的参数解析：</p>\n<ul>\n<li><p>isEncodeLua：是否时候luajit-2.1编码lua文件成字节码。</p>\n</li>\n<li><p>isForceRebuild：BuildAssetBundleOptions.ForceRebuildAssetBundle参数，强制重打ab，即使Asset没有更改。</p>\n</li>\n<li><p>isOnlyBuildLua：是否只打lua ab。√了就不会打其他资源ab，在调试真机时候更改lua代码进行调试会很方便。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"项目打包策略\"><a href=\"#项目打包策略\" class=\"headerlink\" title=\"项目打包策略\"></a>项目打包策略</h2><p>打包策略：</p>\n<ul>\n<li><p>A：把整个目录打进一个ab</p>\n</li>\n<li><p>B：把目录下的子目录中的资源打进子目录的ab中</p>\n</li>\n<li><p>C：把整个目录拷贝到ab目录不打ab</p>\n</li>\n<li><p>D：目录下的每一个资源打一个ab，不管是否重复</p>\n</li>\n<li><p>E：目录下的每一个资源打一个ab，每个依赖也打成一个ab，去除重复</p>\n</li>\n<li><p>F：图集的图片根据tag打ab，每个tag打一个ab</p>\n</li>\n<li><p>G：lua打包，一个目录打成一个ab，可以选择是否编码，编码为.bytes文件，通过根据不同平台选择LuaEncoder目录下的对应编码器进去编码（利用py脚本语言执行脚本运行luajit-2.1编码器）。编码器在各种运行平台和目标平台的使用情况如下。</p>\n</li>\n<li><p>H：lua打包，多个目录打成一个ab，会编码</p>\n</li>\n</ul>\n<p>各种策略应用的项目目录情况：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">策略</th>\n<th style=\"text-align:left\">目录</th>\n<th style=\"text-align:left\">筛选模式</th>\n<th style=\"text-align:left\">特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">D</td>\n<td style=\"text-align:left\">Assets/GameAssets/ui</td>\n<td style=\"text-align:left\">(.asset)$</td>\n<td style=\"text-align:left\">这类资源的特点是各个模块都有分布，数量多，1比1打ab策略有利于控制ab大小粒度，属于按类型和功能模块分组策略</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/ui</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/ui/animations</td>\n<td style=\"text-align:left\">(.controller)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/ui/materials</td>\n<td style=\"text-align:left\">(.mat)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/audio</td>\n<td style=\"text-align:left\">(.ogg</td>\n<td style=\"text-align:left\">.mp3</td>\n<td>.wav)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/audio/audiomixer</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/live2dcharacter</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/live2dcharacter</td>\n<td style=\"text-align:left\">(^(?!.*?(model))).+(.json</td>\n<td style=\"text-align:left\">.bytes)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/bigbg</td>\n<td style=\"text-align:left\">(.jpg</td>\n<td style=\"text-align:left\">.png)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/font</td>\n<td style=\"text-align:left\">(.ttf</td>\n<td style=\"text-align:left\">.fontsettings)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">C</td>\n<td style=\"text-align:left\">Assets/GameAssets/movie</td>\n<td style=\"text-align:left\">(.mp4)$</td>\n<td style=\"text-align:left\">这类资源一般是配置文件，或者像是mp4这种游戏中用得比较少的资源文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/config</td>\n<td style=\"text-align:left\">(.txt</td>\n<td style=\"text-align:left\">.png</td>\n<td>.jpg)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">A</td>\n<td style=\"text-align:left\">Assets/GameAssets/shaders</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">全局常驻的文件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">E</td>\n<td style=\"text-align:left\">Assets/GameAssets/scene/pj-g_scene_assets</td>\n<td style=\"text-align:left\">.*materials_dynload.+(.mat)$</td>\n<td style=\"text-align:left\">这类资源的引用比较复杂，材质贴图引用得多，有些资源需要动态加载，需要对依赖资源做去重处理。 场景、spine人物动画、特效属于这类。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/character</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/language/[lang]/character</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/effect</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/language/[lang]/effect</td>\n<td style=\"text-align:left\">(.prefab)$</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/scene/pj-g_scene_prefab</td>\n<td style=\"text-align:left\">(._p[\\d]{0,}.prefab</td>\n<td style=\"text-align:left\">._stage.prefab)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/GameAssets/language/[lang]/scene/pj-g_scene_prefab</td>\n<td style=\"text-align:left\">(._p[\\d]{0,}.prefab</td>\n<td style=\"text-align:left\">._stage.prefab)$</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">F</td>\n<td style=\"text-align:left\">Assets/AtlasSource</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">UI用的精灵图，需要根据自定义tag打图集，其实就是按功能模块分组策略</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">G</td>\n<td style=\"text-align:left\">Assets/aounity-framework/ToLua/Lua</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">lua文件根据模块打ab，属于按逻辑实体分组策略，类似于粒度比较大的模块，但代码文件也属于系统常驻类型，不宜分得太小粒度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/aounity-framework/Scripts/Lua/framework</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/aounity-framework/Scripts/Lua/frameworkext</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">Assets/Scripts/Lua/logic</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">H</td>\n<td style=\"text-align:left\"><p>Assets/aounity-framework/Scripts/Lua/bootstrap</p><p></p><p>Assets/Scripts/Lua/bootstrap</p></td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">lua文件根据模块打ab，同一个模块多个目录打在一起</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>没有写明打包策略的多语言下的目录，说明跟对应其的公用目录的打包策略一致。</p>\n</blockquote>\n<h2 id=\"Lua编译\"><a href=\"#Lua编译\" class=\"headerlink\" title=\"Lua编译\"></a>Lua编译</h2><p>using luajit2.1.0-beta3.</p>\n<p>编码器在各种运行平台和目标平台的使用：</p>\n<p>不同平台使用的编码器不同</p>\n<pre><code>1.pc使用\n\nluajit64:   win, ios 64bit\n\nluajit32:   android 32bit\n\n2. mac使用\n\n编译命令\n\nluajit\\_mac32 make CC=&quot;gcc -m32&quot;\n\nluajit\\_mac64 make XCFLAGS=-DLUAJIT\\_ENABLE\\_GC64\n\nluavm:        macos using luac(for u5.x). \n\nluajit\\_mac64: win, ios 64bit\n\nluajit\\_mac32: android 32bit\n\n以下文件mac需要执行权限\n\nluavm/luac\n\nluajit\\_mac32/luajit\n\nluajit\\_mac64/luajit\n</code></pre><blockquote>\n<p>注意：没有权限mac无法编译，导致打不出lua文件的ab，也没有报错提示</p>\n</blockquote>\n<blockquote>\n<p>其实研究ab分组策略就是研究资源依赖树实现资源加载最优的问题。</p>\n</blockquote>\n<p>ab分组策略原则参考：<a target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/91926428\">https://zhuanlan.zhihu.com/p/91926428</a></p>\n<h2 id=\"build-package\"><a href=\"#build-package\" class=\"headerlink\" title=\"build package\"></a>build package</h2><p>项目构建包逻辑原理很简单，前面处理和准备好参数和数据，传递给BuildPipeline.BuildAssetBundles方法构建ab。</p>\n<p>工具面板上的参数解析：</p>\n<ul>\n<li><p>isEncodeLua：是否时候luajit-2.1编码lua文件成字节码。</p>\n</li>\n<li><p>isForceRebuild：BuildAssetBundleOptions.ForceRebuildAssetBundle参数，强制重打ab，即使Asset没有更改。</p>\n</li>\n<li><p>isOnlyBuildLua：是否只打lua ab。√了就不会打其他资源ab，在调试真机时候更改lua代码进行调试会很方便。</p>\n</li>\n</ul>"},{"title":"调用定时器的正确姿势","date":"2017-02-09T16:00:00.000Z","_content":"\n\n## 定时器最怕的问题\n用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  \n\n最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  \n\n在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。\n\n而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。\n\n废话不多说，调用定时器的正确姿势如下图(code)：\n```js\n//进度计时\n\t\ttiming: function(speed) {\n\n\t\t\t//计时\n\t\t\tvar n = ++this.n;\n\t\t\tvar m = parseInt(n/60);\n\t\t\tvar s = parseInt(n%60);\n\t\t\tvar curr = this.toDub(m) + ':' + this.toDub(s);\n\t\t\tthis.currNode.innerHTML = curr;\n\n\t\t\t//progress\n\t\t\tthis.steps += speed;\n\t\t\tif(this.steps >= this.max*100) clearInterval(this.timer);\n\n\t\t\tthis.step.style.width = Math.min(this.steps/100, this.max) + 'px';\n\t\t\tthis.btn.style.left = Math.min(this.steps/100, this.max) + 'px';\n\t\n\t\t},\n\n\t\trunning: function() {\n\t\t\t\n\t\t\tvar that = this;\n\t\t\tvar speed = (that.max/that.sum).toFixed(2);\n\t\t\tspeed = parseFloat(speed) * 100;\n\n\t\t\t//播放时立即调用\n\t\t\tthis.timing(speed);\t\n\n\t\t\tclearInterval(this.timer);\n\t\t\t//必须返回出去，在外才能清除计时器\n\t\t\tthis.timer = setInterval(function() {\n\t\t\t\t\t//计时\n\t\t\t\t\tvar n = ++that.n;\n\t\t\t\t\tif(n > that.sum) {\n\t\t\t\t\t\tn = that.sum\n\t\t\t\t\t}\n\t\t\t\t\tvar m = parseInt(n/60);\n\t\t\t\t\tvar s = parseInt(n%60);\n\t\t\t\t\tvar curr = that.toDub(m) + ':' + that.toDub(s);\n\t\t\t\t\tthat.currNode.innerHTML = curr;\n\n\t\t\t\t\t//progress\n\t\t\t\t\tthat.steps += speed;\n\t\t\t\t\tif(that.steps >= that.max*100) clearInterval(that.timer);\n\n\t\t\t\t\tthat.step.style.width = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t\tthat.btn.style.left = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t}, 1000)\n\n\t\t\treturn this.timer\n\t\t},\n```\n想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：\n```js\nAudio.timer = progress.running;\n```\n这样清楚定时器也方便：\n·\n```\nclearInterval(Audio.timer);\n```","source":"_posts/调用定时器的正确姿势.md","raw":"---\ntitle: 调用定时器的正确姿势\ndate: 2017-2-10\ntags: [js]\n---\n\n\n## 定时器最怕的问题\n用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  \n\n最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  \n\n在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。\n\n而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。\n\n废话不多说，调用定时器的正确姿势如下图(code)：\n```js\n//进度计时\n\t\ttiming: function(speed) {\n\n\t\t\t//计时\n\t\t\tvar n = ++this.n;\n\t\t\tvar m = parseInt(n/60);\n\t\t\tvar s = parseInt(n%60);\n\t\t\tvar curr = this.toDub(m) + ':' + this.toDub(s);\n\t\t\tthis.currNode.innerHTML = curr;\n\n\t\t\t//progress\n\t\t\tthis.steps += speed;\n\t\t\tif(this.steps >= this.max*100) clearInterval(this.timer);\n\n\t\t\tthis.step.style.width = Math.min(this.steps/100, this.max) + 'px';\n\t\t\tthis.btn.style.left = Math.min(this.steps/100, this.max) + 'px';\n\t\n\t\t},\n\n\t\trunning: function() {\n\t\t\t\n\t\t\tvar that = this;\n\t\t\tvar speed = (that.max/that.sum).toFixed(2);\n\t\t\tspeed = parseFloat(speed) * 100;\n\n\t\t\t//播放时立即调用\n\t\t\tthis.timing(speed);\t\n\n\t\t\tclearInterval(this.timer);\n\t\t\t//必须返回出去，在外才能清除计时器\n\t\t\tthis.timer = setInterval(function() {\n\t\t\t\t\t//计时\n\t\t\t\t\tvar n = ++that.n;\n\t\t\t\t\tif(n > that.sum) {\n\t\t\t\t\t\tn = that.sum\n\t\t\t\t\t}\n\t\t\t\t\tvar m = parseInt(n/60);\n\t\t\t\t\tvar s = parseInt(n%60);\n\t\t\t\t\tvar curr = that.toDub(m) + ':' + that.toDub(s);\n\t\t\t\t\tthat.currNode.innerHTML = curr;\n\n\t\t\t\t\t//progress\n\t\t\t\t\tthat.steps += speed;\n\t\t\t\t\tif(that.steps >= that.max*100) clearInterval(that.timer);\n\n\t\t\t\t\tthat.step.style.width = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t\tthat.btn.style.left = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t}, 1000)\n\n\t\t\treturn this.timer\n\t\t},\n```\n想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：\n```js\nAudio.timer = progress.running;\n```\n这样清楚定时器也方便：\n·\n```\nclearInterval(Audio.timer);\n```","slug":"调用定时器的正确姿势","published":1,"updated":"2022-12-06T15:30:38.847Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv5d008omcq0bxi28t8b","content":"<h2 id=\"定时器最怕的问题\"><a href=\"#定时器最怕的问题\" class=\"headerlink\" title=\"定时器最怕的问题\"></a>定时器最怕的问题</h2><p>用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  </p>\n<p>最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  </p>\n<p>在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。</p>\n<p>而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。</p>\n<p>废话不多说，调用定时器的正确姿势如下图(code)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//进度计时</span></span><br><span class=\"line\">\t\t<span class=\"attr\">timing</span>: <span class=\"keyword\">function</span>(<span class=\"params\">speed</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> n = ++<span class=\"variable language_\">this</span>.<span class=\"property\">n</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> curr = <span class=\"variable language_\">this</span>.<span class=\"title function_\">toDub</span>(m) + <span class=\"string\">&#x27;:&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"title function_\">toDub</span>(s);</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">currNode</span>.<span class=\"property\">innerHTML</span> = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span> += speed;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span> &gt;= <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>*<span class=\"number\">100</span>) <span class=\"built_in\">clearInterval</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">timer</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">step</span>.<span class=\"property\">style</span>.<span class=\"property\">width</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">btn</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"attr\">running</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> speed = (that.<span class=\"property\">max</span>/that.<span class=\"property\">sum</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\tspeed = <span class=\"built_in\">parseFloat</span>(speed) * <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//播放时立即调用</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"title function_\">timing</span>(speed);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">clearInterval</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">timer</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//必须返回出去，在外才能清除计时器</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">timer</span> = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> n = ++that.<span class=\"property\">n</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(n &gt; that.<span class=\"property\">sum</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tn = that.<span class=\"property\">sum</span></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> curr = that.<span class=\"title function_\">toDub</span>(m) + <span class=\"string\">&#x27;:&#x27;</span> + that.<span class=\"title function_\">toDub</span>(s);</span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">currNode</span>.<span class=\"property\">innerHTML</span> = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">steps</span> += speed;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(that.<span class=\"property\">steps</span> &gt;= that.<span class=\"property\">max</span>*<span class=\"number\">100</span>) <span class=\"built_in\">clearInterval</span>(that.<span class=\"property\">timer</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">step</span>.<span class=\"property\">style</span>.<span class=\"property\">width</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(that.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, that.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">btn</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(that.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, that.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">timer</span></span><br><span class=\"line\">\t\t&#125;,</span><br></pre></td></tr></table></figure><br>想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Audio</span>.<span class=\"property\">timer</span> = progress.<span class=\"property\">running</span>;</span><br></pre></td></tr></table></figure><br>这样清楚定时器也方便：<br>·<br><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear<span class=\"constructor\">Interval(Audio.<span class=\"params\">timer</span>)</span>;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"定时器最怕的问题\"><a href=\"#定时器最怕的问题\" class=\"headerlink\" title=\"定时器最怕的问题\"></a>定时器最怕的问题</h2><p>用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  </p>\n<p>最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  </p>\n<p>在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。</p>\n<p>而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。</p>\n<p>废话不多说，调用定时器的正确姿势如下图(code)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//进度计时</span></span><br><span class=\"line\">\t\t<span class=\"attr\">timing</span>: <span class=\"keyword\">function</span>(<span class=\"params\">speed</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> n = ++<span class=\"variable language_\">this</span>.<span class=\"property\">n</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> curr = <span class=\"variable language_\">this</span>.<span class=\"title function_\">toDub</span>(m) + <span class=\"string\">&#x27;:&#x27;</span> + <span class=\"variable language_\">this</span>.<span class=\"title function_\">toDub</span>(s);</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">currNode</span>.<span class=\"property\">innerHTML</span> = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span> += speed;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span> &gt;= <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>*<span class=\"number\">100</span>) <span class=\"built_in\">clearInterval</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">timer</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">step</span>.<span class=\"property\">style</span>.<span class=\"property\">width</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">btn</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"attr\">running</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> speed = (that.<span class=\"property\">max</span>/that.<span class=\"property\">sum</span>).<span class=\"title function_\">toFixed</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\tspeed = <span class=\"built_in\">parseFloat</span>(speed) * <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//播放时立即调用</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"title function_\">timing</span>(speed);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">clearInterval</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">timer</span>);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//必须返回出去，在外才能清除计时器</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"property\">timer</span> = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> n = ++that.<span class=\"property\">n</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(n &gt; that.<span class=\"property\">sum</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tn = that.<span class=\"property\">sum</span></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> curr = that.<span class=\"title function_\">toDub</span>(m) + <span class=\"string\">&#x27;:&#x27;</span> + that.<span class=\"title function_\">toDub</span>(s);</span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">currNode</span>.<span class=\"property\">innerHTML</span> = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">steps</span> += speed;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(that.<span class=\"property\">steps</span> &gt;= that.<span class=\"property\">max</span>*<span class=\"number\">100</span>) <span class=\"built_in\">clearInterval</span>(that.<span class=\"property\">timer</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">step</span>.<span class=\"property\">style</span>.<span class=\"property\">width</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(that.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, that.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t\tthat.<span class=\"property\">btn</span>.<span class=\"property\">style</span>.<span class=\"property\">left</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(that.<span class=\"property\">steps</span>/<span class=\"number\">100</span>, that.<span class=\"property\">max</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">timer</span></span><br><span class=\"line\">\t\t&#125;,</span><br></pre></td></tr></table></figure><br>想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Audio</span>.<span class=\"property\">timer</span> = progress.<span class=\"property\">running</span>;</span><br></pre></td></tr></table></figure><br>这样清楚定时器也方便：<br>·<br><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear<span class=\"constructor\">Interval(Audio.<span class=\"params\">timer</span>)</span>;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"踏平windows下安装fabric遇到的坑s","date":"2018-04-15T14:41:22.000Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&fm=27&gp=0.jpg)\n\n# 前言\n本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案\n\n<!--more-->\n\n# fabric\nfabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署\n\nfabric提供了几个简单的api来完成所有的部署  \n* local() 本地执行命令\n* run() 服务器运行命令\n* put() 把本地文件上传到服务器\n* with cd('/path/to/dir/') 指定服务器的目录\n\n在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本\n\n详细请参考廖雪峰老师的fabric介绍：[https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000](https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000)\n\n# 安装python\n所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）\n\npython下载地址：[https://www.python.org/getit/](https://www.python.org/getit/)  \n最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本\n\n# 安装pip\npip可以理解为python的一个包管理工具,用pip工具去安装fabric\n```\npip install fabric\n```\n\npip下载地址：[https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb](https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb)\n\n进入pip的安装目录，运行：\n```\npython setup.py build\npython setup.py install\n```\n若此时出现错误说，not found module 'setuptools',需要补装一下  \nsetuptools下载地址：[https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26](https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26)\n\n进入安装目录执行\n```\npython setup.py build\npython setup.py install\n```\n\n或者参考另一个方法：[https://blog.csdn.net/newjueqi/article/details/47446965](https://blog.csdn.net/newjueqi/article/details/47446965)\n\n此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)\n\n这时就可以用前面说的命令安装fabric了\n\n# 运行fabfile.py\n\n```\nfab test\n```\ntest是fabfile.py里定义的一个方法\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('make test')\n    remote_dir = '/home/lukou/app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % (os.getcwd() + '/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n这时候window上会报错，说make test这命令执行出错  \n\n前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具\n\n其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好\n\n在次运行fabfile脚本\n\n还是会出错，说没有rsync命令\n\n## 安装rsync工具\ncwrsync下载地址：[https://www.itefix.net/cwrsync](https://www.itefix.net/cwrsync)\n记得把安装目录添加到PATH\n\n再次运行fabfile脚本\n\n还是会出错，错误信息如下：\n```\ndup() in/out/err failed\nrsync: connection unexpectedly closed (0 bytes received so far) [sender]\nrsync error: unexplained error (code 255) at io.c(226) [sender=3.1.2]\n```\n百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  \n\n解决方案参考：[https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows](https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows)\n\n所以要把path里cwrsync的安装目录提前，像如下\n```\nλ where ssh\nE:\\ProgramFiles\\cwRsync_5.5.0_x86_Free\\bin\\ssh.exe\nC:\\Program Files (x86)\\Git\\usr\\bin\\ssh.exe\n```\n\n再次运行fab test\n\n也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了\n\n这次报的错误主要是语法错误\n```\nThe source and destination cannot both be remote.\nrsync error: syntax or usage error (code 1) at main.c(1274) [Receiver=3.1.2]\n```\n\n这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('npm run test')\n    remote_dir = 'app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % ('/cygdrive/E/work/lukou/mirror/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n\n最后运行，输入密码就成功了！！！\n\n![](http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg)\n\n\n\n\n\n\n\n\n","source":"_posts/踏平windows下安装fabric遇到的坑s.md","raw":"---\ntitle: 踏平windows下安装fabric遇到的坑s\ndate: 2018-04-15 22:41:22\ntags: [fabric]\ncategories: [工具]\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&fm=27&gp=0.jpg)\n\n# 前言\n本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案\n\n<!--more-->\n\n# fabric\nfabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署\n\nfabric提供了几个简单的api来完成所有的部署  \n* local() 本地执行命令\n* run() 服务器运行命令\n* put() 把本地文件上传到服务器\n* with cd('/path/to/dir/') 指定服务器的目录\n\n在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本\n\n详细请参考廖雪峰老师的fabric介绍：[https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000](https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000)\n\n# 安装python\n所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）\n\npython下载地址：[https://www.python.org/getit/](https://www.python.org/getit/)  \n最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本\n\n# 安装pip\npip可以理解为python的一个包管理工具,用pip工具去安装fabric\n```\npip install fabric\n```\n\npip下载地址：[https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb](https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb)\n\n进入pip的安装目录，运行：\n```\npython setup.py build\npython setup.py install\n```\n若此时出现错误说，not found module 'setuptools',需要补装一下  \nsetuptools下载地址：[https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26](https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26)\n\n进入安装目录执行\n```\npython setup.py build\npython setup.py install\n```\n\n或者参考另一个方法：[https://blog.csdn.net/newjueqi/article/details/47446965](https://blog.csdn.net/newjueqi/article/details/47446965)\n\n此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)\n\n这时就可以用前面说的命令安装fabric了\n\n# 运行fabfile.py\n\n```\nfab test\n```\ntest是fabfile.py里定义的一个方法\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('make test')\n    remote_dir = '/home/lukou/app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % (os.getcwd() + '/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n这时候window上会报错，说make test这命令执行出错  \n\n前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具\n\n其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好\n\n在次运行fabfile脚本\n\n还是会出错，说没有rsync命令\n\n## 安装rsync工具\ncwrsync下载地址：[https://www.itefix.net/cwrsync](https://www.itefix.net/cwrsync)\n记得把安装目录添加到PATH\n\n再次运行fabfile脚本\n\n还是会出错，错误信息如下：\n```\ndup() in/out/err failed\nrsync: connection unexpectedly closed (0 bytes received so far) [sender]\nrsync error: unexplained error (code 255) at io.c(226) [sender=3.1.2]\n```\n百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  \n\n解决方案参考：[https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows](https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows)\n\n所以要把path里cwrsync的安装目录提前，像如下\n```\nλ where ssh\nE:\\ProgramFiles\\cwRsync_5.5.0_x86_Free\\bin\\ssh.exe\nC:\\Program Files (x86)\\Git\\usr\\bin\\ssh.exe\n```\n\n再次运行fab test\n\n也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了\n\n这次报的错误主要是语法错误\n```\nThe source and destination cannot both be remote.\nrsync error: syntax or usage error (code 1) at main.c(1274) [Receiver=3.1.2]\n```\n\n这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('npm run test')\n    remote_dir = 'app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % ('/cygdrive/E/work/lukou/mirror/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n\n最后运行，输入密码就成功了！！！\n\n![](http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg)\n\n\n\n\n\n\n\n\n","slug":"踏平windows下安装fabric遇到的坑s","published":1,"updated":"2022-12-06T15:30:38.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv5e008pmcq0d4tx8xv1","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案</p>\n<span id=\"more\"></span>\n<h1 id=\"fabric\"><a href=\"#fabric\" class=\"headerlink\" title=\"fabric\"></a>fabric</h1><p>fabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署</p>\n<p>fabric提供了几个简单的api来完成所有的部署  </p>\n<ul>\n<li>local() 本地执行命令</li>\n<li>run() 服务器运行命令</li>\n<li>put() 把本地文件上传到服务器</li>\n<li>with cd(‘/path/to/dir/‘) 指定服务器的目录</li>\n</ul>\n<p>在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本</p>\n<p>详细请参考廖雪峰老师的fabric介绍：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000\">https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000</a></p>\n<h1 id=\"安装python\"><a href=\"#安装python\" class=\"headerlink\" title=\"安装python\"></a>安装python</h1><p>所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）</p>\n<p>python下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/getit/\">https://www.python.org/getit/</a><br>最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本</p>\n<h1 id=\"安装pip\"><a href=\"#安装pip\" class=\"headerlink\" title=\"安装pip\"></a>安装pip</h1><p>pip可以理解为python的一个包管理工具,用pip工具去安装fabric<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"keyword\">install</span> fabric</span><br></pre></td></tr></table></figure></p>\n<p>pip下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb\">https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb</a></p>\n<p>进入pip的安装目录，运行：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> build</span><br><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> install</span><br></pre></td></tr></table></figure><br>若此时出现错误说，not found module ‘setuptools’,需要补装一下<br>setuptools下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26\">https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26</a></p>\n<p>进入安装目录执行<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> build</span><br><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> install</span><br></pre></td></tr></table></figure></p>\n<p>或者参考另一个方法：<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/newjueqi/article/details/47446965\">https://blog.csdn.net/newjueqi/article/details/47446965</a></p>\n<p>此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)</p>\n<p>这时就可以用前面说的命令安装fabric了</p>\n<h1 id=\"运行fabfile-py\"><a href=\"#运行fabfile-py\" class=\"headerlink\" title=\"运行fabfile.py\"></a>运行fabfile.py</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>test是fabfile.py里定义的一个方法<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\">def test(<span class=\"attribute\">remote</span>=<span class=\"string\">&#x27;121.41.121.230&#x27;</span>, <span class=\"attribute\">make</span>=<span class=\"literal\">True</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;开始同步代码...&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">&#x27;make test&#x27;</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">&#x27;/home/lukou/app/paidan/test2&#x27;</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">&#x27;rsync --delete-after -r %s %s@%s:%s&#x27;</span></span><br><span class=\"line\">    local(sync_str % (os.getcwd() + <span class=\"string\">&#x27;/dist/*&#x27;</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;同步完毕&#x27;</span></span><br></pre></td></tr></table></figure><br>这时候window上会报错，说make test这命令执行出错  </p>\n<p>前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具</p>\n<p>其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好</p>\n<p>在次运行fabfile脚本</p>\n<p>还是会出错，说没有rsync命令</p>\n<h2 id=\"安装rsync工具\"><a href=\"#安装rsync工具\" class=\"headerlink\" title=\"安装rsync工具\"></a>安装rsync工具</h2><p>cwrsync下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.itefix.net/cwrsync\">https://www.itefix.net/cwrsync</a><br>记得把安装目录添加到PATH</p>\n<p>再次运行fabfile脚本</p>\n<p>还是会出错，错误信息如下：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">dup</span><span class=\"params\">()</span></span> <span class=\"keyword\">in</span>/out/err failed</span><br><span class=\"line\">rsync: connection unexpectedly closed (<span class=\"number\">0</span> bytes received so far) <span class=\"selector-attr\">[sender]</span></span><br><span class=\"line\">rsync error: unexplained error (<span class=\"selector-tag\">code</span> <span class=\"number\">255</span>) at io<span class=\"selector-class\">.c</span>(<span class=\"number\">226</span>) <span class=\"selector-attr\">[sender=3.1.2]</span></span><br></pre></td></tr></table></figure><br>百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  </p>\n<p>解决方案参考：<a target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows\">https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows</a></p>\n<p>所以要把path里cwrsync的安装目录提前，像如下<br><figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">λ where ssh</span><br><span class=\"line\"><span class=\"name\">E</span>:\\ProgramFiles\\cwRsync_5<span class=\"number\">.5</span><span class=\"number\">.0</span>_x86_Free\\bin\\ssh.exe</span><br><span class=\"line\"><span class=\"name\">C</span>:\\Program Files (x86)\\Git\\usr\\bin\\ssh.exe</span><br></pre></td></tr></table></figure></p>\n<p>再次运行fab test</p>\n<p>也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了</p>\n<p>这次报的错误主要是语法错误<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The source <span class=\"keyword\">and </span>destination cannot <span class=\"keyword\">both </span><span class=\"keyword\">be </span>remote.</span><br><span class=\"line\">rsync error: syntax <span class=\"keyword\">or </span>usage error (code <span class=\"number\">1</span>) <span class=\"built_in\">at</span> main.c(<span class=\"number\">1274</span>) [Receiver=<span class=\"number\">3</span>.<span class=\"number\">1</span>.<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure></p>\n<p>这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\">def test(<span class=\"attribute\">remote</span>=<span class=\"string\">&#x27;121.41.121.230&#x27;</span>, <span class=\"attribute\">make</span>=<span class=\"literal\">True</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;开始同步代码...&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">&#x27;npm run test&#x27;</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">&#x27;app/paidan/test2&#x27;</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">&#x27;rsync --delete-after -r %s %s@%s:%s&#x27;</span></span><br><span class=\"line\">    local(sync_str % (<span class=\"string\">&#x27;/cygdrive/E/work/lukou/mirror/dist/*&#x27;</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;同步完毕&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>最后运行，输入密码就成功了！！！</p>\n<p><img src=\"http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案</p>","more":"<h1 id=\"fabric\"><a href=\"#fabric\" class=\"headerlink\" title=\"fabric\"></a>fabric</h1><p>fabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署</p>\n<p>fabric提供了几个简单的api来完成所有的部署  </p>\n<ul>\n<li>local() 本地执行命令</li>\n<li>run() 服务器运行命令</li>\n<li>put() 把本地文件上传到服务器</li>\n<li>with cd(‘/path/to/dir/‘) 指定服务器的目录</li>\n</ul>\n<p>在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本</p>\n<p>详细请参考廖雪峰老师的fabric介绍：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000\">https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000</a></p>\n<h1 id=\"安装python\"><a href=\"#安装python\" class=\"headerlink\" title=\"安装python\"></a>安装python</h1><p>所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）</p>\n<p>python下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.python.org/getit/\">https://www.python.org/getit/</a><br>最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本</p>\n<h1 id=\"安装pip\"><a href=\"#安装pip\" class=\"headerlink\" title=\"安装pip\"></a>安装pip</h1><p>pip可以理解为python的一个包管理工具,用pip工具去安装fabric<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"keyword\">install</span> fabric</span><br></pre></td></tr></table></figure></p>\n<p>pip下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb\">https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb</a></p>\n<p>进入pip的安装目录，运行：<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> build</span><br><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> install</span><br></pre></td></tr></table></figure><br>若此时出现错误说，not found module ‘setuptools’,需要补装一下<br>setuptools下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26\">https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26</a></p>\n<p>进入安装目录执行<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> build</span><br><span class=\"line\"><span class=\"keyword\">python</span> setup.<span class=\"keyword\">py</span> install</span><br></pre></td></tr></table></figure></p>\n<p>或者参考另一个方法：<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/newjueqi/article/details/47446965\">https://blog.csdn.net/newjueqi/article/details/47446965</a></p>\n<p>此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)</p>\n<p>这时就可以用前面说的命令安装fabric了</p>\n<h1 id=\"运行fabfile-py\"><a href=\"#运行fabfile-py\" class=\"headerlink\" title=\"运行fabfile.py\"></a>运行fabfile.py</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>test是fabfile.py里定义的一个方法<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\">def test(<span class=\"attribute\">remote</span>=<span class=\"string\">&#x27;121.41.121.230&#x27;</span>, <span class=\"attribute\">make</span>=<span class=\"literal\">True</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;开始同步代码...&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">&#x27;make test&#x27;</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">&#x27;/home/lukou/app/paidan/test2&#x27;</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">&#x27;rsync --delete-after -r %s %s@%s:%s&#x27;</span></span><br><span class=\"line\">    local(sync_str % (os.getcwd() + <span class=\"string\">&#x27;/dist/*&#x27;</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;同步完毕&#x27;</span></span><br></pre></td></tr></table></figure><br>这时候window上会报错，说make test这命令执行出错  </p>\n<p>前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具</p>\n<p>其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好</p>\n<p>在次运行fabfile脚本</p>\n<p>还是会出错，说没有rsync命令</p>\n<h2 id=\"安装rsync工具\"><a href=\"#安装rsync工具\" class=\"headerlink\" title=\"安装rsync工具\"></a>安装rsync工具</h2><p>cwrsync下载地址：<a target=\"_blank\" rel=\"noopener\" href=\"https://www.itefix.net/cwrsync\">https://www.itefix.net/cwrsync</a><br>记得把安装目录添加到PATH</p>\n<p>再次运行fabfile脚本</p>\n<p>还是会出错，错误信息如下：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">dup</span><span class=\"params\">()</span></span> <span class=\"keyword\">in</span>/out/err failed</span><br><span class=\"line\">rsync: connection unexpectedly closed (<span class=\"number\">0</span> bytes received so far) <span class=\"selector-attr\">[sender]</span></span><br><span class=\"line\">rsync error: unexplained error (<span class=\"selector-tag\">code</span> <span class=\"number\">255</span>) at io<span class=\"selector-class\">.c</span>(<span class=\"number\">226</span>) <span class=\"selector-attr\">[sender=3.1.2]</span></span><br></pre></td></tr></table></figure><br>百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  </p>\n<p>解决方案参考：<a target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows\">https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows</a></p>\n<p>所以要把path里cwrsync的安装目录提前，像如下<br><figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">λ where ssh</span><br><span class=\"line\"><span class=\"name\">E</span>:\\ProgramFiles\\cwRsync_5<span class=\"number\">.5</span><span class=\"number\">.0</span>_x86_Free\\bin\\ssh.exe</span><br><span class=\"line\"><span class=\"name\">C</span>:\\Program Files (x86)\\Git\\usr\\bin\\ssh.exe</span><br></pre></td></tr></table></figure></p>\n<p>再次运行fab test</p>\n<p>也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了</p>\n<p>这次报的错误主要是语法错误<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The source <span class=\"keyword\">and </span>destination cannot <span class=\"keyword\">both </span><span class=\"keyword\">be </span>remote.</span><br><span class=\"line\">rsync error: syntax <span class=\"keyword\">or </span>usage error (code <span class=\"number\">1</span>) <span class=\"built_in\">at</span> main.c(<span class=\"number\">1274</span>) [Receiver=<span class=\"number\">3</span>.<span class=\"number\">1</span>.<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure></p>\n<p>这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\">def test(<span class=\"attribute\">remote</span>=<span class=\"string\">&#x27;121.41.121.230&#x27;</span>, <span class=\"attribute\">make</span>=<span class=\"literal\">True</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;开始同步代码...&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">&#x27;npm run test&#x27;</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">&#x27;app/paidan/test2&#x27;</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">&#x27;rsync --delete-after -r %s %s@%s:%s&#x27;</span></span><br><span class=\"line\">    local(sync_str % (<span class=\"string\">&#x27;/cygdrive/E/work/lukou/mirror/dist/*&#x27;</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&#x27;同步完毕&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>最后运行，输入密码就成功了！！！</p>\n<p><img src=\"http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg\" alt=\"\"></p>"},{"title":"音乐播放器WebApp有感","date":"2017-04-30T16:00:00.000Z","_content":"\n\n## 前言\n花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。\n\n在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。\n\n第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：\n* controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来\n* controller/playerController.js  播放器的控制器\n* view/pageStyle.js 页面样式的改变逻辑\n* view/scale.js  进度条对象\n* songs.js  全局的songs模型\n\n结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。\n\n下面就这个项目里一些零散的知识点做些记录，以便一下使用。\n\n## 圣杯布局\n圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。  \n```\n<div class=\"both\">\n    <div class=\"middle\">中间</div> //优先加载\n    <div class=\"left\">左边</div>\n    <div class=\"right\">右边</div>\n</div>\n\n<style>\n    .box{\n        padding-left: 250px;  //关键\n        padding-right: 250px;  //关键\n        line-height: 200px;\n        text-align: center;\n        color: #fff;\n    }\n    .box:before,.box:after{ //伪类清除浮动，父元素有高度\n        content: '.';\n        display: block;\n        clear:　both;\n        height: 0；\n        visibility: hidden; //元素不可见,但占据空间\n    }\n    .middle,.left,.right{\n        float: left;\n        height: 200px;\n    }\n    .middle{\n        width: 100%;\n        background-color: red;\n    }\n    .left{\n        width: 250px;\n        background-color: blue;\n        margin-left: -250px; //关键\n    }\n    .right{\n        width: 250px;\n        background-color: yellow;\n        margin-right: -250px; //关键\n    }\n</style>\n```\n三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。  \n另一种方法是利用定位：\n```\n  <style>\n   body{margin:0; padding:0;}\n   #left{float:left;width:150px;background:red;}\n   #right{float:right;width:200px;background:green;}\n   #middle{\n   position:absolute; //关键\n   left:150px;\n   right:200px;\n   word-wrap:break-word;  //让字体打断，不会超出div\n   background:blue;\n   }\n</style>\n\n<div id=\"middle\">\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n</div>\n<div id=\"left\">left</div>\n<div id=\"right\">right</div>\n```\n关于布局，还有很多种，请参考：\n[http://blog.csdn.net/andiqu/article/details/50045609](前端布局)\n关注弹性布局（flex），和rem\n\n## animition的播放和暂停\n```\n-webkit-animation-play-state: running | paused\n```\n```\nanimation-fill-mode: backwards | forwards | both; //播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用\nanimation-direction: reverse | alternate; //播放顺序，resverse反向\nanimation-iteration-count: num | infinite // 2 | 循环 \n```\n\n## 进度条的制作\n```\n<ul id=\"lanren\">\n\t<li class=\"curr\">00:00</li>\n\t<li class=\"progress\">\n\t\t<div class=\"scale\" id=\"bar\">\n\t\t\t<div></div>\n\t\t\t<span id=\"btn\"></span>\n\t\t</div>\n\t</li>\n\t<li class=\"total\">00:10</li>\n</ul>\n\n<style>\nbody{margin:0;padding:0;font-size:12px;}\nul#lanren{ margin:50px auto; overflow: hidden; padding: 0 50px 0 50px;}\n#lanren li{font-size:12px;line-height:24px; height:24px;list-style:none; position: relative; float: left;}\nli.progress{\n\twidth: 100%;\n}\nli.curr{\n\twidth: 50px;\n\tmargin-right: -50px;\n\tleft: -50px;\n\ttext-align: center;\n}\nli.total{\n\twidth: 50px;\n\tmargin-left: -50px;\n\tright: -50px;\n\ttext-align: center;\n}\n.scale{ background-color: #E4E4E4; border-left: 1px #83BBD9 solid;  width: 100%; height: 3px; position: relative; font-size: 0px; border-radius: 3px; top:11px;}\n\n.scale span{width:8px;height:8px;position:absolute;left:-2px;top:-2.5px;cursor:pointer; background-color: #000; display: inline-block; -webkit-border-radius: 50%;}\n\n.scale div{ background-color: #3BE3FF; width: 0px; position: absolute; height: 3px; width: 0; left: 0; bottom: 0; }\n</style>\n```\n\n## 播放按钮的制作和发光动画\n```\n<div class=\"playContainer\">\n\t<li class=\"rewindBtn\">  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t</li>\n\t<li class=\"playBtn BtnBig\">  \n\t    <a href=\"javascript:;\" title=\"start\">Start</a>  \n\t</li>\n\t<!--\n\t<li class=\"pauseBtn\">  \n\t    <a href=\"#\" title=\"pause\">Pause</a>  \n\t</li> \n\t--> \n\t \n\t<li class=\"forwardBtn playBtn\">  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t</li>  \n</div>\n\n<style>\n.playContainer li { \n\tposition: relative; \n\tfloat: left; \n\tborder: 50px solid #404040; \n\tborder-color: rgba(119, 119, 119, 0.3);\n\tcolor: transparent; \n\theight: 0; \n\twidth: 0; \n\t-webkit-border-radius: 100%; \n\t-moz-border-radius: 100%; \n\t-o-border-radius: 100%; \n\tborder-radius: 100%; \n\tmargin: 0 50px; \n}  \n.playContainer a { \n\tborder-style: solid; \n\ttext-indent: -9999px; \n\tposition: absolute; \n\ttop: -16px; \n\tleft: -6px;  \n}  \nli.BtnBig{\n\tborder-width: 70px;\n\tmargin-top: -15px;\n}\n.playBtn a { \n\tborder-color: transparent transparent transparent #fff;  \n\twidth: 0; \n\theight: 0; \n\tborder-width: 24px 0 24px 36px;\n\tleft: -10px;\n\ttop: -22px;\n}  \n.pauseBtn a { \n\tborder-color: transparent white;  \n\tborder-width: 0 14px;\n    height: 36px;\n    width: 12px;\n    left: -20px;\n}    \n.forwardBtn a { \n\tborder-left-width: 16px; \n\tleft: 2px;\n\tborder-width: 16px 0 16px 16px;\n\ttop: -15px;\n}  \n.forwardBtn a:first-child { \n\tmargin-left: -14px;  \n}  \n.rewindBtn a { \n\tborder-width: 16px 16px 16px 0; \n\tborder-color: transparent #fff transparent transparent; \n\twidth: 0; \n\theight: 0; \n}  \n.rewindBtn a:first-child { \n\tmargin-left: -14px; \n} \n\n//发光动画\n@-webkit-keyframes bs {\n  0% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #787776;\n  }\n\n  50% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 40px 0 #ffffff;\n  }\n\n  100% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #b2ff1a;\n }\n}\n</style>   \n\n\n```\n\n## URI编码\nurl里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。\n```\nencodeURI(\"春节\") //%DD%DD%DD\ndecodeURI(\"%DD%DD%DD\")  //解码：春节\n相同：\nescape()\nunescape()\n```\n\n## ajax跨域\n不涉及后台的跨域，直接用ajax发http请求：\n[https://bird.ioliu.cn/#interface](http://note.youdao.com/)\n其他的跨域都要设计到后台\n与jsonp有关\n\n## QQ音乐的API\n```\nsongsAPI = http://s.music.qq.com/fcgi-bin/music_search_new_platform?t=0&n=10&aggr=1&cr=1&loginUin=0&format=json&inCharset=GB2312&outCharset=utf-8&notice=0&platform=jqminiframe.json&needNewCode=0&p=1&catZhida=0&remoteplace=sizer.newclient.next_song&w={0}\n\nn= 10 ,搜索的数据条目\nw= content ,搜索内容\n返回的数据中有个f属性，\nDATA.data.song.list[i].f: xxx|xxx|xxx.....\n其中第一个是songID,第五个是imgID\n\n\nimgAPI = http://imgcache.qq.com/music/photo/album_500/imgID后面两个数/500_albumpic_imgID_0.jpg\n\n500是图片的大小，支持300和500\n\n\n\nsrcAPI = http://210.38.1.134:9999/ws.stream.qqmusic.qq.com/songID.m4a?fromtag=46\n```\n\n## 计时器\n当在页面要多次用到定时器时，可以考虑把它挂载到全局。  \n当用到多个计时器是可以把它放在一个数组里，方便管理。\n\n## 百度到的资源\n专门说进度条的网站：[https://usablica.github.io/progress.js/](https://usablica.github.io/progress.js/)  \njs,jq获取div高度：[http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html](http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html)  \n[获取div的margin，border，padding，content的宽高](http://blog.csdn.net/zy1281539626/article/details/61913770)  \njs控制audio标签：[http://blog.csdn.net/u014520745/article/details/52412427](http://blog.csdn.net/u014520745/article/details/52412427)","source":"_posts/音乐播放器WebApp.md","raw":"---\ntitle: 音乐播放器WebApp有感\ndate: 2017-5\ntags: [layout,animation,clear,audio,进度条, 播放按钮, QQ音乐API]\n---\n\n\n## 前言\n花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。\n\n在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。\n\n第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：\n* controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来\n* controller/playerController.js  播放器的控制器\n* view/pageStyle.js 页面样式的改变逻辑\n* view/scale.js  进度条对象\n* songs.js  全局的songs模型\n\n结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。\n\n下面就这个项目里一些零散的知识点做些记录，以便一下使用。\n\n## 圣杯布局\n圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。  \n```\n<div class=\"both\">\n    <div class=\"middle\">中间</div> //优先加载\n    <div class=\"left\">左边</div>\n    <div class=\"right\">右边</div>\n</div>\n\n<style>\n    .box{\n        padding-left: 250px;  //关键\n        padding-right: 250px;  //关键\n        line-height: 200px;\n        text-align: center;\n        color: #fff;\n    }\n    .box:before,.box:after{ //伪类清除浮动，父元素有高度\n        content: '.';\n        display: block;\n        clear:　both;\n        height: 0；\n        visibility: hidden; //元素不可见,但占据空间\n    }\n    .middle,.left,.right{\n        float: left;\n        height: 200px;\n    }\n    .middle{\n        width: 100%;\n        background-color: red;\n    }\n    .left{\n        width: 250px;\n        background-color: blue;\n        margin-left: -250px; //关键\n    }\n    .right{\n        width: 250px;\n        background-color: yellow;\n        margin-right: -250px; //关键\n    }\n</style>\n```\n三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。  \n另一种方法是利用定位：\n```\n  <style>\n   body{margin:0; padding:0;}\n   #left{float:left;width:150px;background:red;}\n   #right{float:right;width:200px;background:green;}\n   #middle{\n   position:absolute; //关键\n   left:150px;\n   right:200px;\n   word-wrap:break-word;  //让字体打断，不会超出div\n   background:blue;\n   }\n</style>\n\n<div id=\"middle\">\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n</div>\n<div id=\"left\">left</div>\n<div id=\"right\">right</div>\n```\n关于布局，还有很多种，请参考：\n[http://blog.csdn.net/andiqu/article/details/50045609](前端布局)\n关注弹性布局（flex），和rem\n\n## animition的播放和暂停\n```\n-webkit-animation-play-state: running | paused\n```\n```\nanimation-fill-mode: backwards | forwards | both; //播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用\nanimation-direction: reverse | alternate; //播放顺序，resverse反向\nanimation-iteration-count: num | infinite // 2 | 循环 \n```\n\n## 进度条的制作\n```\n<ul id=\"lanren\">\n\t<li class=\"curr\">00:00</li>\n\t<li class=\"progress\">\n\t\t<div class=\"scale\" id=\"bar\">\n\t\t\t<div></div>\n\t\t\t<span id=\"btn\"></span>\n\t\t</div>\n\t</li>\n\t<li class=\"total\">00:10</li>\n</ul>\n\n<style>\nbody{margin:0;padding:0;font-size:12px;}\nul#lanren{ margin:50px auto; overflow: hidden; padding: 0 50px 0 50px;}\n#lanren li{font-size:12px;line-height:24px; height:24px;list-style:none; position: relative; float: left;}\nli.progress{\n\twidth: 100%;\n}\nli.curr{\n\twidth: 50px;\n\tmargin-right: -50px;\n\tleft: -50px;\n\ttext-align: center;\n}\nli.total{\n\twidth: 50px;\n\tmargin-left: -50px;\n\tright: -50px;\n\ttext-align: center;\n}\n.scale{ background-color: #E4E4E4; border-left: 1px #83BBD9 solid;  width: 100%; height: 3px; position: relative; font-size: 0px; border-radius: 3px; top:11px;}\n\n.scale span{width:8px;height:8px;position:absolute;left:-2px;top:-2.5px;cursor:pointer; background-color: #000; display: inline-block; -webkit-border-radius: 50%;}\n\n.scale div{ background-color: #3BE3FF; width: 0px; position: absolute; height: 3px; width: 0; left: 0; bottom: 0; }\n</style>\n```\n\n## 播放按钮的制作和发光动画\n```\n<div class=\"playContainer\">\n\t<li class=\"rewindBtn\">  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t</li>\n\t<li class=\"playBtn BtnBig\">  \n\t    <a href=\"javascript:;\" title=\"start\">Start</a>  \n\t</li>\n\t<!--\n\t<li class=\"pauseBtn\">  \n\t    <a href=\"#\" title=\"pause\">Pause</a>  \n\t</li> \n\t--> \n\t \n\t<li class=\"forwardBtn playBtn\">  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t</li>  \n</div>\n\n<style>\n.playContainer li { \n\tposition: relative; \n\tfloat: left; \n\tborder: 50px solid #404040; \n\tborder-color: rgba(119, 119, 119, 0.3);\n\tcolor: transparent; \n\theight: 0; \n\twidth: 0; \n\t-webkit-border-radius: 100%; \n\t-moz-border-radius: 100%; \n\t-o-border-radius: 100%; \n\tborder-radius: 100%; \n\tmargin: 0 50px; \n}  \n.playContainer a { \n\tborder-style: solid; \n\ttext-indent: -9999px; \n\tposition: absolute; \n\ttop: -16px; \n\tleft: -6px;  \n}  \nli.BtnBig{\n\tborder-width: 70px;\n\tmargin-top: -15px;\n}\n.playBtn a { \n\tborder-color: transparent transparent transparent #fff;  \n\twidth: 0; \n\theight: 0; \n\tborder-width: 24px 0 24px 36px;\n\tleft: -10px;\n\ttop: -22px;\n}  \n.pauseBtn a { \n\tborder-color: transparent white;  \n\tborder-width: 0 14px;\n    height: 36px;\n    width: 12px;\n    left: -20px;\n}    \n.forwardBtn a { \n\tborder-left-width: 16px; \n\tleft: 2px;\n\tborder-width: 16px 0 16px 16px;\n\ttop: -15px;\n}  \n.forwardBtn a:first-child { \n\tmargin-left: -14px;  \n}  \n.rewindBtn a { \n\tborder-width: 16px 16px 16px 0; \n\tborder-color: transparent #fff transparent transparent; \n\twidth: 0; \n\theight: 0; \n}  \n.rewindBtn a:first-child { \n\tmargin-left: -14px; \n} \n\n//发光动画\n@-webkit-keyframes bs {\n  0% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #787776;\n  }\n\n  50% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 40px 0 #ffffff;\n  }\n\n  100% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #b2ff1a;\n }\n}\n</style>   \n\n\n```\n\n## URI编码\nurl里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。\n```\nencodeURI(\"春节\") //%DD%DD%DD\ndecodeURI(\"%DD%DD%DD\")  //解码：春节\n相同：\nescape()\nunescape()\n```\n\n## ajax跨域\n不涉及后台的跨域，直接用ajax发http请求：\n[https://bird.ioliu.cn/#interface](http://note.youdao.com/)\n其他的跨域都要设计到后台\n与jsonp有关\n\n## QQ音乐的API\n```\nsongsAPI = http://s.music.qq.com/fcgi-bin/music_search_new_platform?t=0&n=10&aggr=1&cr=1&loginUin=0&format=json&inCharset=GB2312&outCharset=utf-8&notice=0&platform=jqminiframe.json&needNewCode=0&p=1&catZhida=0&remoteplace=sizer.newclient.next_song&w={0}\n\nn= 10 ,搜索的数据条目\nw= content ,搜索内容\n返回的数据中有个f属性，\nDATA.data.song.list[i].f: xxx|xxx|xxx.....\n其中第一个是songID,第五个是imgID\n\n\nimgAPI = http://imgcache.qq.com/music/photo/album_500/imgID后面两个数/500_albumpic_imgID_0.jpg\n\n500是图片的大小，支持300和500\n\n\n\nsrcAPI = http://210.38.1.134:9999/ws.stream.qqmusic.qq.com/songID.m4a?fromtag=46\n```\n\n## 计时器\n当在页面要多次用到定时器时，可以考虑把它挂载到全局。  \n当用到多个计时器是可以把它放在一个数组里，方便管理。\n\n## 百度到的资源\n专门说进度条的网站：[https://usablica.github.io/progress.js/](https://usablica.github.io/progress.js/)  \njs,jq获取div高度：[http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html](http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html)  \n[获取div的margin，border，padding，content的宽高](http://blog.csdn.net/zy1281539626/article/details/61913770)  \njs控制audio标签：[http://blog.csdn.net/u014520745/article/details/52412427](http://blog.csdn.net/u014520745/article/details/52412427)","slug":"音乐播放器WebApp","published":1,"updated":"2022-12-06T15:30:38.863Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv5f008rmcq036dwghd6","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。</p>\n<p>在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。</p>\n<p>第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：</p>\n<ul>\n<li>controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来</li>\n<li>controller/playerController.js  播放器的控制器</li>\n<li>view/pageStyle.js 页面样式的改变逻辑</li>\n<li>view/scale.js  进度条对象</li>\n<li>songs.js  全局的songs模型</li>\n</ul>\n<p>结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。</p>\n<p>下面就这个项目里一些零散的知识点做些记录，以便一下使用。</p>\n<h2 id=\"圣杯布局\"><a href=\"#圣杯布局\" class=\"headerlink\" title=\"圣杯布局\"></a>圣杯布局</h2><p>圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;both&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;middle&quot;</span>&gt;</span>中间<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> //优先加载</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span>左边<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span>右边<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.box</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding-left</span>: <span class=\"number\">250px</span>;  //关键</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding-right</span>: <span class=\"number\">250px</span>;  //关键</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:before</span>,<span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:after</span>&#123; //伪类清除浮动，父元素有高度</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;.&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">clear</span>:　both;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>；</span></span><br><span class=\"line\"><span class=\"language-css\">        visibility: hidden; //元素不可见,但占据空间</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.middle</span>,<span class=\"selector-class\">.left</span>,<span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.middle</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.left</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">250px</span>; //关键</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-right</span>: -<span class=\"number\">250px</span>; //关键</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure><br>三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。<br>另一种方法是利用定位：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-tag\">body</span>&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>; <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-id\">#left</span>&#123;<span class=\"attribute\">float</span><span class=\"selector-pseudo\">:left</span>;<span class=\"attribute\">width</span>:<span class=\"number\">150px</span>;<span class=\"attribute\">background</span>:red;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-id\">#right</span>&#123;<span class=\"attribute\">float</span><span class=\"selector-pseudo\">:right</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">background</span>:green;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-id\">#middle</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">position</span>:absolute; //关键</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">left</span>:<span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">right</span>:<span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">word-wrap</span>:break-word;  //让字体打断，不会超出<span class=\"selector-tag\">div</span></span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">background</span>:blue;</span></span><br><span class=\"line\"><span class=\"language-css\">   &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;middle&quot;</span>&gt;</span></span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span>left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span>right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>关于布局，还有很多种，请参考：<br><a href=\"前端布局\">http://blog.csdn.net/andiqu/article/details/50045609</a><br>关注弹性布局（flex），和rem</p>\n<h2 id=\"animition的播放和暂停\"><a href=\"#animition的播放和暂停\" class=\"headerlink\" title=\"animition的播放和暂停\"></a>animition的播放和暂停</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-<span class=\"attribute\">animation-play-state</span>: running | paused</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-fill-mode: backwards | forwards | both; <span class=\"regexp\">//</span>播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用</span><br><span class=\"line\">animation-direction: reverse | alternate; <span class=\"regexp\">//</span>播放顺序，resverse反向</span><br><span class=\"line\">animation-iteration-count: num | infinite <span class=\"regexp\">//</span> <span class=\"number\">2</span> | 循环 </span><br></pre></td></tr></table></figure>\n<h2 id=\"进度条的制作\"><a href=\"#进度条的制作\" class=\"headerlink\" title=\"进度条的制作\"></a>进度条的制作</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;lanren&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;curr&quot;</span>&gt;</span>00:00<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;progress&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;scale&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bar&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;total&quot;</span>&gt;</span>00:10<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">body</span>&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#lanren</span>&#123; <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto; <span class=\"attribute\">overflow</span>: hidden; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">50px</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-id\">#lanren</span> <span class=\"selector-tag\">li</span>&#123;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;<span class=\"attribute\">line-height</span>:<span class=\"number\">24px</span>; <span class=\"attribute\">height</span>:<span class=\"number\">24px</span>;<span class=\"attribute\">list-style</span>:none; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">float</span>: left;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.progress</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.curr</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-right</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.total</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">right</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.scale</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#E4E4E4</span>; <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> <span class=\"number\">#83BBD9</span> solid;  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">font-size</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">top</span>:<span class=\"number\">11px</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">span</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">height</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">left</span>:-<span class=\"number\">2px</span>;<span class=\"attribute\">top</span>:-<span class=\"number\">2.5px</span>;<span class=\"attribute\">cursor</span>:pointer; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>; <span class=\"attribute\">display</span>: inline-block; -webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#3BE3FF</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"播放按钮的制作和发光动画\"><a href=\"#播放按钮的制作和发光动画\" class=\"headerlink\" title=\"播放按钮的制作和发光动画\"></a>播放按钮的制作和发光动画</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;playContainer&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;rewindBtn&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;rewind&quot;</span>&gt;</span>Rewind<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;rewind&quot;</span>&gt;</span>Rewind<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;playBtn BtnBig&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;start&quot;</span>&gt;</span>Start<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">\t&lt;li class=&quot;pauseBtn&quot;&gt;  </span></span><br><span class=\"line\"><span class=\"comment\">\t    &lt;a href=&quot;#&quot; title=&quot;pause&quot;&gt;Pause&lt;/a&gt;  </span></span><br><span class=\"line\"><span class=\"comment\">\t&lt;/li&gt; </span></span><br><span class=\"line\"><span class=\"comment\">\t--&gt;</span> </span><br><span class=\"line\">\t </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;forwardBtn playBtn&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;forward&quot;</span>&gt;</span>Forward<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;forward&quot;</span>&gt;</span>Forward<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">li</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">position</span>: relative; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">float</span>: left; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border</span>: <span class=\"number\">50px</span> solid <span class=\"number\">#404040</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">0.3</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">color</span>: transparent; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t-moz-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t-o-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-style</span>: solid; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">text-indent</span>: -<span class=\"number\">9999px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">position</span>: absolute; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">16px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">6px</span>;  </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.BtnBig</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">70px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.playBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: transparent transparent transparent <span class=\"number\">#fff</span>;  </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">24px</span> <span class=\"number\">0</span> <span class=\"number\">24px</span> <span class=\"number\">36px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">22px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.pauseBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: transparent white;  </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">0</span> <span class=\"number\">14px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">36px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">left</span>: -<span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;    </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-left-width</span>: <span class=\"number\">16px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">0</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:first</span>-child &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>;  </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#fff</span> transparent transparent; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:first</span>-child &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">&#125; </span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">//发光动画</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"keyword\">@-webkit-keyframes</span> bs &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"number\">0%</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#787776</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"number\">50%</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">40px</span> <span class=\"number\">0</span> <span class=\"number\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"number\">100%</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#b2ff1a</span>;</span></span><br><span class=\"line\"><span class=\"language-css\"> &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"URI编码\"><a href=\"#URI编码\" class=\"headerlink\" title=\"URI编码\"></a>URI编码</h2><p>url里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">encodeURI</span><span class=\"params\">(<span class=\"string\">&quot;春节&quot;</span>)</span></span> <span class=\"comment\">//%DD%DD%DD</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">decodeURI</span><span class=\"params\">(<span class=\"string\">&quot;%DD%DD%DD&quot;</span>)</span></span>  <span class=\"comment\">//解码：春节</span></span><br><span class=\"line\">相同：</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">escape</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">unescape</span><span class=\"params\">()</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ajax跨域\"><a href=\"#ajax跨域\" class=\"headerlink\" title=\"ajax跨域\"></a>ajax跨域</h2><p>不涉及后台的跨域，直接用ajax发http请求：<br><a target=\"_blank\" rel=\"noopener\" href=\"http://note.youdao.com/\">https://bird.ioliu.cn/#interface</a><br>其他的跨域都要设计到后台<br>与jsonp有关</p>\n<h2 id=\"QQ音乐的API\"><a href=\"#QQ音乐的API\" class=\"headerlink\" title=\"QQ音乐的API\"></a>QQ音乐的API</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">songsAPI = http:<span class=\"regexp\">//</span>s.music.qq.com<span class=\"regexp\">/fcgi-bin/mu</span>sic_search_new_platform?t=<span class=\"number\">0</span>&amp;n=<span class=\"number\">10</span>&amp;aggr=<span class=\"number\">1</span>&amp;cr=<span class=\"number\">1</span>&amp;loginUin=<span class=\"number\">0</span>&amp;format=json&amp;inCharset=GB2312&amp;outCharset=utf-<span class=\"number\">8</span>&amp;notice=<span class=\"number\">0</span>&amp;platform=jqminiframe.json&amp;needNewCode=<span class=\"number\">0</span>&amp;p=<span class=\"number\">1</span>&amp;catZhida=<span class=\"number\">0</span>&amp;remoteplace=sizer.newclient.next_song&amp;w=&#123;<span class=\"number\">0</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">n= <span class=\"number\">10</span> ,搜索的数据条目</span><br><span class=\"line\">w= content ,搜索内容</span><br><span class=\"line\">返回的数据中有个f属性，</span><br><span class=\"line\">DATA.data.song.list[i].f: xxx|xxx|xxx.....</span><br><span class=\"line\">其中第一个是songID,第五个是imgID</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">imgAPI = http:<span class=\"regexp\">//img</span>cache.qq.com<span class=\"regexp\">/music/</span>photo<span class=\"regexp\">/album_500/img</span>ID后面两个数/<span class=\"number\">500</span>_albumpic_imgID_0.jpg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">500</span>是图片的大小，支持<span class=\"number\">300</span>和<span class=\"number\">500</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">srcAPI = http:<span class=\"regexp\">//</span><span class=\"number\">210.38</span>.<span class=\"number\">1.134</span>:<span class=\"number\">9999</span><span class=\"regexp\">/ws.stream.qqmusic.qq.com/</span>songID.m4a?fromtag=<span class=\"number\">46</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"计时器\"><a href=\"#计时器\" class=\"headerlink\" title=\"计时器\"></a>计时器</h2><p>当在页面要多次用到定时器时，可以考虑把它挂载到全局。<br>当用到多个计时器是可以把它放在一个数组里，方便管理。</p>\n<h2 id=\"百度到的资源\"><a href=\"#百度到的资源\" class=\"headerlink\" title=\"百度到的资源\"></a>百度到的资源</h2><p>专门说进度条的网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://usablica.github.io/progress.js/\">https://usablica.github.io/progress.js/</a><br>js,jq获取div高度：<a target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html\">http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html</a><br><a target=\"_blank\" rel=\"noopener\" href=\"http://blog.csdn.net/zy1281539626/article/details/61913770\">获取div的margin，border，padding，content的宽高</a><br>js控制audio标签：<a target=\"_blank\" rel=\"noopener\" href=\"http://blog.csdn.net/u014520745/article/details/52412427\">http://blog.csdn.net/u014520745/article/details/52412427</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。</p>\n<p>在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。</p>\n<p>第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：</p>\n<ul>\n<li>controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来</li>\n<li>controller/playerController.js  播放器的控制器</li>\n<li>view/pageStyle.js 页面样式的改变逻辑</li>\n<li>view/scale.js  进度条对象</li>\n<li>songs.js  全局的songs模型</li>\n</ul>\n<p>结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。</p>\n<p>下面就这个项目里一些零散的知识点做些记录，以便一下使用。</p>\n<h2 id=\"圣杯布局\"><a href=\"#圣杯布局\" class=\"headerlink\" title=\"圣杯布局\"></a>圣杯布局</h2><p>圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;both&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;middle&quot;</span>&gt;</span>中间<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> //优先加载</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span>左边<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span>右边<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.box</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding-left</span>: <span class=\"number\">250px</span>;  //关键</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">padding-right</span>: <span class=\"number\">250px</span>;  //关键</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:before</span>,<span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:after</span>&#123; //伪类清除浮动，父元素有高度</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;.&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">display</span>: block;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">clear</span>:　both;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>；</span></span><br><span class=\"line\"><span class=\"language-css\">        visibility: hidden; //元素不可见,但占据空间</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.middle</span>,<span class=\"selector-class\">.left</span>,<span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">float</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.middle</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.left</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: blue;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">250px</span>; //关键</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.right</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: yellow;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">margin-right</span>: -<span class=\"number\">250px</span>; //关键</span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure><br>三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。<br>另一种方法是利用定位：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-tag\">body</span>&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>; <span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-id\">#left</span>&#123;<span class=\"attribute\">float</span><span class=\"selector-pseudo\">:left</span>;<span class=\"attribute\">width</span>:<span class=\"number\">150px</span>;<span class=\"attribute\">background</span>:red;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-id\">#right</span>&#123;<span class=\"attribute\">float</span><span class=\"selector-pseudo\">:right</span>;<span class=\"attribute\">width</span>:<span class=\"number\">200px</span>;<span class=\"attribute\">background</span>:green;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"selector-id\">#middle</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">position</span>:absolute; //关键</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">left</span>:<span class=\"number\">150px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">right</span>:<span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">word-wrap</span>:break-word;  //让字体打断，不会超出<span class=\"selector-tag\">div</span></span></span><br><span class=\"line\"><span class=\"language-css\">   <span class=\"attribute\">background</span>:blue;</span></span><br><span class=\"line\"><span class=\"language-css\">   &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;middle&quot;</span>&gt;</span></span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;left&quot;</span>&gt;</span>left<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;right&quot;</span>&gt;</span>right<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>关于布局，还有很多种，请参考：<br><a href=\"前端布局\">http://blog.csdn.net/andiqu/article/details/50045609</a><br>关注弹性布局（flex），和rem</p>\n<h2 id=\"animition的播放和暂停\"><a href=\"#animition的播放和暂停\" class=\"headerlink\" title=\"animition的播放和暂停\"></a>animition的播放和暂停</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-<span class=\"attribute\">animation-play-state</span>: running | paused</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-fill-mode: backwards | forwards | both; <span class=\"regexp\">//</span>播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用</span><br><span class=\"line\">animation-direction: reverse | alternate; <span class=\"regexp\">//</span>播放顺序，resverse反向</span><br><span class=\"line\">animation-iteration-count: num | infinite <span class=\"regexp\">//</span> <span class=\"number\">2</span> | 循环 </span><br></pre></td></tr></table></figure>\n<h2 id=\"进度条的制作\"><a href=\"#进度条的制作\" class=\"headerlink\" title=\"进度条的制作\"></a>进度条的制作</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;lanren&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;curr&quot;</span>&gt;</span>00:00<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;progress&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;scale&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bar&quot;</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;total&quot;</span>&gt;</span>00:10<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">body</span>&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#lanren</span>&#123; <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto; <span class=\"attribute\">overflow</span>: hidden; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">50px</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-id\">#lanren</span> <span class=\"selector-tag\">li</span>&#123;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;<span class=\"attribute\">line-height</span>:<span class=\"number\">24px</span>; <span class=\"attribute\">height</span>:<span class=\"number\">24px</span>;<span class=\"attribute\">list-style</span>:none; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">float</span>: left;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.progress</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.curr</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-right</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.total</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">right</span>: -<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.scale</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#E4E4E4</span>; <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> <span class=\"number\">#83BBD9</span> solid;  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">font-size</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">top</span>:<span class=\"number\">11px</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">span</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">height</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">left</span>:-<span class=\"number\">2px</span>;<span class=\"attribute\">top</span>:-<span class=\"number\">2.5px</span>;<span class=\"attribute\">cursor</span>:pointer; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>; <span class=\"attribute\">display</span>: inline-block; -webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#3BE3FF</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"播放按钮的制作和发光动画\"><a href=\"#播放按钮的制作和发光动画\" class=\"headerlink\" title=\"播放按钮的制作和发光动画\"></a>播放按钮的制作和发光动画</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;playContainer&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;rewindBtn&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;rewind&quot;</span>&gt;</span>Rewind<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;rewind&quot;</span>&gt;</span>Rewind<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;playBtn BtnBig&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;start&quot;</span>&gt;</span>Start<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">\t&lt;li class=&quot;pauseBtn&quot;&gt;  </span></span><br><span class=\"line\"><span class=\"comment\">\t    &lt;a href=&quot;#&quot; title=&quot;pause&quot;&gt;Pause&lt;/a&gt;  </span></span><br><span class=\"line\"><span class=\"comment\">\t&lt;/li&gt; </span></span><br><span class=\"line\"><span class=\"comment\">\t--&gt;</span> </span><br><span class=\"line\">\t </span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;forwardBtn playBtn&quot;</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;forward&quot;</span>&gt;</span>Forward<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:;&quot;</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;forward&quot;</span>&gt;</span>Forward<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>  </span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">li</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">position</span>: relative; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">float</span>: left; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border</span>: <span class=\"number\">50px</span> solid <span class=\"number\">#404040</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">0.3</span>);</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">color</span>: transparent; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t-moz-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t-o-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-style</span>: solid; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">text-indent</span>: -<span class=\"number\">9999px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">position</span>: absolute; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">16px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">6px</span>;  </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.BtnBig</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">70px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.playBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: transparent transparent transparent <span class=\"number\">#fff</span>;  </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">24px</span> <span class=\"number\">0</span> <span class=\"number\">24px</span> <span class=\"number\">36px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">10px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">22px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.pauseBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: transparent white;  </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">0</span> <span class=\"number\">14px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">height</span>: <span class=\"number\">36px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">width</span>: <span class=\"number\">12px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">left</span>: -<span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;    </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-left-width</span>: <span class=\"number\">16px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">left</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">0</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">15px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:first</span>-child &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>;  </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span> &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#fff</span> transparent transparent; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">&#125;  </span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:first</span>-child &#123; </span></span><br><span class=\"line\"><span class=\"language-css\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>; </span></span><br><span class=\"line\"><span class=\"language-css\">&#125; </span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">//发光动画</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"keyword\">@-webkit-keyframes</span> bs &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"number\">0%</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#787776</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"number\">50%</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">40px</span> <span class=\"number\">0</span> <span class=\"number\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"number\">100%</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#b2ff1a</span>;</span></span><br><span class=\"line\"><span class=\"language-css\"> &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"URI编码\"><a href=\"#URI编码\" class=\"headerlink\" title=\"URI编码\"></a>URI编码</h2><p>url里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">encodeURI</span><span class=\"params\">(<span class=\"string\">&quot;春节&quot;</span>)</span></span> <span class=\"comment\">//%DD%DD%DD</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">decodeURI</span><span class=\"params\">(<span class=\"string\">&quot;%DD%DD%DD&quot;</span>)</span></span>  <span class=\"comment\">//解码：春节</span></span><br><span class=\"line\">相同：</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">escape</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">unescape</span><span class=\"params\">()</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ajax跨域\"><a href=\"#ajax跨域\" class=\"headerlink\" title=\"ajax跨域\"></a>ajax跨域</h2><p>不涉及后台的跨域，直接用ajax发http请求：<br><a target=\"_blank\" rel=\"noopener\" href=\"http://note.youdao.com/\">https://bird.ioliu.cn/#interface</a><br>其他的跨域都要设计到后台<br>与jsonp有关</p>\n<h2 id=\"QQ音乐的API\"><a href=\"#QQ音乐的API\" class=\"headerlink\" title=\"QQ音乐的API\"></a>QQ音乐的API</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">songsAPI = http:<span class=\"regexp\">//</span>s.music.qq.com<span class=\"regexp\">/fcgi-bin/mu</span>sic_search_new_platform?t=<span class=\"number\">0</span>&amp;n=<span class=\"number\">10</span>&amp;aggr=<span class=\"number\">1</span>&amp;cr=<span class=\"number\">1</span>&amp;loginUin=<span class=\"number\">0</span>&amp;format=json&amp;inCharset=GB2312&amp;outCharset=utf-<span class=\"number\">8</span>&amp;notice=<span class=\"number\">0</span>&amp;platform=jqminiframe.json&amp;needNewCode=<span class=\"number\">0</span>&amp;p=<span class=\"number\">1</span>&amp;catZhida=<span class=\"number\">0</span>&amp;remoteplace=sizer.newclient.next_song&amp;w=&#123;<span class=\"number\">0</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">n= <span class=\"number\">10</span> ,搜索的数据条目</span><br><span class=\"line\">w= content ,搜索内容</span><br><span class=\"line\">返回的数据中有个f属性，</span><br><span class=\"line\">DATA.data.song.list[i].f: xxx|xxx|xxx.....</span><br><span class=\"line\">其中第一个是songID,第五个是imgID</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">imgAPI = http:<span class=\"regexp\">//img</span>cache.qq.com<span class=\"regexp\">/music/</span>photo<span class=\"regexp\">/album_500/img</span>ID后面两个数/<span class=\"number\">500</span>_albumpic_imgID_0.jpg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">500</span>是图片的大小，支持<span class=\"number\">300</span>和<span class=\"number\">500</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">srcAPI = http:<span class=\"regexp\">//</span><span class=\"number\">210.38</span>.<span class=\"number\">1.134</span>:<span class=\"number\">9999</span><span class=\"regexp\">/ws.stream.qqmusic.qq.com/</span>songID.m4a?fromtag=<span class=\"number\">46</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"计时器\"><a href=\"#计时器\" class=\"headerlink\" title=\"计时器\"></a>计时器</h2><p>当在页面要多次用到定时器时，可以考虑把它挂载到全局。<br>当用到多个计时器是可以把它放在一个数组里，方便管理。</p>\n<h2 id=\"百度到的资源\"><a href=\"#百度到的资源\" class=\"headerlink\" title=\"百度到的资源\"></a>百度到的资源</h2><p>专门说进度条的网站：<a target=\"_blank\" rel=\"noopener\" href=\"https://usablica.github.io/progress.js/\">https://usablica.github.io/progress.js/</a><br>js,jq获取div高度：<a target=\"_blank\" rel=\"noopener\" href=\"http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html\">http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html</a><br><a target=\"_blank\" rel=\"noopener\" href=\"http://blog.csdn.net/zy1281539626/article/details/61913770\">获取div的margin，border，padding，content的宽高</a><br>js控制audio标签：<a target=\"_blank\" rel=\"noopener\" href=\"http://blog.csdn.net/u014520745/article/details/52412427\">http://blog.csdn.net/u014520745/article/details/52412427</a></p>\n"},{"title":"网络层","date":"2022-05-14T16:00:00.000Z","_content":"\n![](网络层/image_FgCmH2uIWr.png)\n\n<!-- more -->\n\n# 网络层\n\n![](网络层/image_FgCmH2uIWr.png)\n\n数据传输格式使用protobuf工具协定，tolua集成了protobuf提供使用。\n\nprotobuf.lua：构造协议体、赋值、扩展。\n\n![](网络层/image_skRP8CouhK.png)\n\n数据上行下行序列化过程\n\n![](网络层/image_UuuQAgKiON.png)\n\n大小端\n\n大小端指数据在机器中的字节在内存中的排序方式。[链接](https://blog.csdn.net/wwwlyj123321/article/details/100066463 \"链接\")\n\n![](网络层/image_Dxda6OJqZV.png)","source":"_posts/网络层.md","raw":"---\ntitle: 网络层\ndate: 2022-05-15\ntags: [network]\ncategories: [Unity游戏开发,基础系统]\n---\n\n![](网络层/image_FgCmH2uIWr.png)\n\n<!-- more -->\n\n# 网络层\n\n![](网络层/image_FgCmH2uIWr.png)\n\n数据传输格式使用protobuf工具协定，tolua集成了protobuf提供使用。\n\nprotobuf.lua：构造协议体、赋值、扩展。\n\n![](网络层/image_skRP8CouhK.png)\n\n数据上行下行序列化过程\n\n![](网络层/image_UuuQAgKiON.png)\n\n大小端\n\n大小端指数据在机器中的字节在内存中的排序方式。[链接](https://blog.csdn.net/wwwlyj123321/article/details/100066463 \"链接\")\n\n![](网络层/image_Dxda6OJqZV.png)","slug":"网络层","published":1,"updated":"2022-12-17T13:53:29.951Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv5f008tmcq03ioc0jsh","content":"<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_FgCmH2uIWr.png\" class=\"\">\n<span id=\"more\"></span>\n<h1 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h1><img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_FgCmH2uIWr.png\" class=\"\">\n<p>数据传输格式使用protobuf工具协定，tolua集成了protobuf提供使用。</p>\n<p>protobuf.lua：构造协议体、赋值、扩展。</p>\n<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_skRP8CouhK.png\" class=\"\">\n<p>数据上行下行序列化过程</p>\n<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_UuuQAgKiON.png\" class=\"\">\n<p>大小端</p>\n<p>大小端指数据在机器中的字节在内存中的排序方式。<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/wwwlyj123321/article/details/100066463\" title=\"链接\">链接</a></p>\n<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_Dxda6OJqZV.png\" class=\"\">","site":{"data":{}},"excerpt":"<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_FgCmH2uIWr.png\" class=\"\">","more":"<h1 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h1><img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_FgCmH2uIWr.png\" class=\"\">\n<p>数据传输格式使用protobuf工具协定，tolua集成了protobuf提供使用。</p>\n<p>protobuf.lua：构造协议体、赋值、扩展。</p>\n<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_skRP8CouhK.png\" class=\"\">\n<p>数据上行下行序列化过程</p>\n<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_UuuQAgKiON.png\" class=\"\">\n<p>大小端</p>\n<p>大小端指数据在机器中的字节在内存中的排序方式。<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/wwwlyj123321/article/details/100066463\" title=\"链接\">链接</a></p>\n<img src=\"/2022/05/15/%E7%BD%91%E7%BB%9C%E5%B1%82/image_Dxda6OJqZV.png\" class=\"\">"},{"title":"SQLite替换lua配置表方案实现","date":"2022-09-29T16:00:00.000Z","_content":"\n<!-- # SQLite替换lua配置表方案实现 -->\n\n## 前言\n\n目前游戏中的配置数据实在启动时一次性全部加载进内存，这种方式会造成一定的浪费。而SQLite是一个轻量级的、动态连接的数据库引擎。\n\n下文探索使用SQLite替换Lua配置表解决内存浪费方案的实现。\n\n<!-- more -->\n## splite库的编译与引入\n\n两个方向：\n\n1.C#层引入sqlite3.dll，写好接口，暴露给lua层调用。\n\nsqlite3.dll引入：[https://cloud.tencent.com/developer/news/314242](https://cloud.tencent.com/developer/news/314242 \"https://cloud.tencent.com/developer/news/314242\")\n\n2.lua层使用第三方库lsqlite3，将lsqlite3库编译进tolua.dll，在lua层直接链接并操作数据库。\n\n如何将三方库编译进tolua：[https://blog.csdn.net/linxinfa/article/details/90046840。](https://blog.csdn.net/linxinfa/article/details/90046840。 \"https://blog.csdn.net/linxinfa/article/details/90046840。\")\n\n这个方案代价是需要将各个平台的tolua动态库文件都编译一遍，将lsqlite3库包含进来。\n\n有两个三方库文件可以使用：\n\n1.lsqlite3：动态链接sqlite3（所以需要将sqlite3也编译进tolua）。\n\n2.lsqlite3complete：包含sqlite3在内，静态链接sqlite3（不用再将sqlite3编译进tolua）。\n\n## 测试数据\n\nunity：2020.3.2f\n\n真机：联想 拯救者2 pro/CPU晓龙888/内存8GB/Android 11\n\n### 1.堆内存对比\n\n|            | **首次进入主界面** | **播放剧情** | **过一遍各个系统** |\n| ---------- | ----------- | -------- | ----------- |\n| lua配置表全加载  | 11.2MB      | 11.54MB  | 16.4MB      |\n| sqlite按需加载 | 9.2MB       | 9.45MB   | 15.69MB     |\n\n由于2020unity打的包真机上连不上profiler，所以以上数据在**Editor**用工具测试lua内存。\n\n简单对比，sqlite按需加载配置方案在内存上比全加载lua配置表要**节省内存。** 理由可想而知，不必要的配置不用加载进内存。\n\n### 2.执行时间对比\n\na.启动方式耗时对比\n\n| **启动时配置的加载方式**      | **Editor-时间(s)** | **Android-时间(s)** |\n| ------------------- | ---------------- | ----------------- |\n| lua配置表全加载           | 0.035            | 0.030             |\n| sqlite连接db，加载所有表并解析 | 2.694            | 1.242             |\n| sqlite只链接db，按需加载表   | 0.004            | 0.016             |\n\n对比来看，启动时使用sqlite连接db按需加载表的方式快一点，但是比较是毫秒级别，原来的lua配置表全加载方式也不是很慢。\n\nb.查找时间对比\n\n|        | **查1次** | **查100次** | **查10000次** |\n| ------ | ------- | --------- | ----------- |\n| lua配置表 | 4.3e-05 | 0.0005    | 0.0025      |\n| sqlite | 5.4e-05 | 0.0285    | 2.580       |\n\n配置表一般是只读，不会新增、修改、删除。从查找速度来看，肯定是lua配置表块，字典结构而且直接从内存中读，读取db就相对慢很多。单独看，单独一句查询id的sql执行效率也非常快。\n\n### 3.热更新方式对比\n\n数据量：\n\n*   小量数据：对标周更后的hotfix，一般只会修改一两处配置，修改数据量在个位数。\n\n*   一般数据：对标周更，使用git命令统计食物语周更lua配置文件修改情况，大约会有20个左右文件被修改。\n\n*   大量数据：对标月更，统计得出大约有150个lua配置文件被修改。\n\n假设平均一个文件10行数据被修改，那么周更大约200条修改，月更大约1500条修改，一条修改对应一条sql语句。\n\n对于替换db的热更方式，不管数据量都是整个db替换。\n\n以下是测试数据，多次测量取平均的结果：\n\n| **【时间ms】**            | **小量数据(9)** | **一般数据(200)** | **一般数据(800)** | **大量数据(1500)** |\n| --------------------- | ----------- | ------------- | ------------- | -------------- |\n| 热更sql （一个sql文件作为一条命令） | 12.9        | 51.2          | 892.3         | 2717           |\n\n以下是热更不同大小db文件的统计情况：\n\n| **db大小**          | **1576kb（1.53MB）** | **33.4MB** | **60.6MB** |\n| ----------------- | ------------------ | ---------- | ---------- |\n| 压缩后               | 284kb              | 7.58MB     | 15.7MB     |\n| 压缩率               | 82%                | 77%        | 74%        |\n| 热更耗时ms (解压+替换+连接) | 81.6               | 1000.5     | 1778.7     |\n\n![](SQLite替换lua配置表方案实现/image_gp3VMdO0Er.png)\n\n将两种方式放在一起对比，可以直观得出结论：**hotfix、周更比较适合选sql方式，月更选替换db方式**。\n\n**上面sql执行是一次性执行整个sql文件字符串，所以sql命令解析时间比较长。后面优化以行为单位执行sql文件，5000行左右的sql执行效率在0.5s左右，效率比替换30M DB还高。**\n\n## 工作量设计\n\n流程图：\n\n![](SQLite替换lua配置表方案实现/image_iqXG1maoM7.png)\n\n### 1.导表工具改造，cvs表格导入db\n\na.类型转换\n\nC#方法获取的数值类型在lua中属于userdata，发现的影响是不能直接和string直接拼接，稳妥起见，最好使用tonumber(tostring(userdata))转换为lua的数值类型。\n\n配置表中常见的类型需要对应db的存储类型：\n\n| **配置表中的类型** | **number** | **string&mlstring** | **float** | **boolean** | **datetime** | [type] ([number]&[string])|\n| ----------- | ---------- | -------------------- | --------- | ----------- | ------------ | -------------------------------------------------------------------------------------------------------------- |\n| 对应的db存储的类型  | int64      | string               | float     | boolean     | string       | string                                                                                                         |\n\n说明：\\[type]表示数组类型，元素类型多为number或者string，db中存储为string类型即可，lua中取出来时再解析为table。存为string时候，开头添加标识符`[type]:`，表示需要被解析。\n\nlua中获取各类型转换方式如下：\n\n```lua\nlocal fieldName, value = reader:GetName(i), nil;\nlocal type = reader:GetFieldType(i);\ntype = tostring(type)\nif type == \"System.Int64\" or type == \"System.Int32\" or type == \"System.Int16\" then\n    value = tonumber(tostring(reader:get_Item(fieldName)))\nelseif type == \"System.Float\" then\n    value = tonumber(tostring(reader:GetFloat(i)))\nelseif type == \"System.Double\" then\n    value = tonumber(tostring(reader:GetDouble(i)))\nelseif type == \"System.Decimal\" then\n    value = tonumber(tostring(reader:GetDecimal(i)))\nelseif type == \"System.Boolean\" then\n    value = tostring(reader:GetBoolean(i))==\"true\" and true or false\nelseif type == \"System.String\" then\n    value = tostring(reader:get_Item(fieldName)\n   if \"[type]:\" == string.sub(value, 1, 7) then\n        value = GameUtils.json.decode(string.sub(value, 8))\n    end\nend\n```\n\nb.cvs2db数据解析导入工具\n\nsqlite清空表不支持TRUNCATE TABLE语句，需用DELETE FROM TableName。\n\nsqlite语句和传统的sql语句不太一样，比如不支持多行插入数据，只支持单行插入。\n\n推荐[在线sqlite运行工具](http://sqlite.jsrun.net/ \"在线sqlite运行工具\")测试语句，或者在[Navicat for SQLite](https://www.navicat.com.cn/download/navicat-for-sqlite \"Navicat for SQLite\")软件上新建查询执行sql语句。\n\n### 2.config类接口适配\n\n需要在lua层链接数据库，查询表读出数据，然后将数据格式化成相同结构的lua配置表类（t\\_xxx.lua），这样就可以低成本适配config类接口。\n\n这里关键点在于处理db数据类型转换lua数据类型，也就是上述的lua中获取各类型转换方式。\n\n```lua\nlocal M = class(\"SqliteMonoMgr\")\n \nlocal TInt64 = \"Int64\"\nlocal TInt32 = \"Int32\"\nlocal TInt16 = \"Int16\"\nlocal TFloat = \"Float\"\nlocal TDouble = \"Double\"\nlocal TDecimal = \"Decimal\"\nlocal TBoolean = \"Boolean\"\nlocal TString = \"String\"\nlocal TArrayPrefix = \"[type]:\"\n \nfunction M:loadConfigTable(tableName)\n    local ret,reader = true\n \n    xpcall(function ()\n        local pks = self:_getPrimaryKeys(tableName)\n        reader = self._sqliteManager:SQLSelect(tableName)\n        if reader and not reader.IsClosed then\n            self._cache[tableName] = self:_readConfigTable(reader, pks)\n            self._loadedTable[tableName] = true\n            reader:Close()\n        else\n            ret = false\n            printWarn(\"not such table \"..tableName)\n        end\n    end, function (err)\n        ret = false\n        if reader then\n            reader:Close()\n        end\n        printError(err)\n        -- self:close()\n    end)\n \n    return ret\n     \nend\n \nfunction M:_readConfigTable(reader, pks)\n    local configTable = {}\n    if not reader.HasRows then\n        return configTable\n    end\n     \n    local dataList, title = self:_readDataListAndTitle(reader)\n    configTable.dataList = dataList\n    -- 按索引构造字典\n    local pkCount,temp = #pks,nil\n    if pkCount>0 then\n        for i,v in ipairs(dataList) do\n            temp = configTable\n            for i=1,pkCount,1 do\n                local pk = pks[i]\n                local pv = v[pk]\n                if i==pkCount then\n                    temp[pv] = v\n                    break\n                end\n                if not temp[pv] then\n                    temp[pv] = {}\n                end\n                temp = temp[pv]\n            end\n        end\n         \n    end\n    return configTable\nend\n \nfunction M:_readDataListAndTitle(reader)\n    local title = {}\n    local dataList = {}\n    while reader:Read() do\n        local visibleFieldCount, row = reader.VisibleFieldCount, {}\n        for i = 0, visibleFieldCount - 1 do\n            local fieldName, value = reader:GetName(i), nil;\n            title[fieldName] = i+1\n            local type = reader:GetFieldType(i);\n            type = string.sub(tostring(type), 8)\n            if type == TInt64 or type == TInt32 or type == TInt16 then\n                value = tonumber(tostring(reader:get_Item(fieldName)))\n            elseif type == TFloat then\n                value = tonumber(tostring(reader:GetFloat(i)))\n            elseif type == TDouble then\n                value = tonumber(tostring(reader:GetDouble(i)))\n            elseif type == TDecimal then\n                value = tonumber(tostring(reader:GetDecimal(i)))\n            elseif type == TBoolean then\n                value = tostring(reader:GetBoolean(i))==\"true\" and true or false\n            elseif type == TString then\n                -- value = reader:GetString(i)\n                value = tostring(reader:get_Item(fieldName))\n                if TArrayPrefix == string.sub(value, 1, 7) then\n                    value = GameUtils.json.decode(string.sub(value, 8))\n                end\n            end\n            table.insert(row, value)\n        end\n        table.insert(dataList, row)\n    end\n \n     -- 构造元表\n     local mt = {\n        __index = function(t, key)\n            local index = title[key]\n            if index then\n                return rawget(t, index)\n            end\n        end\n    }\n    for i,v in ipairs(dataList) do\n        setmetatable(v, mt)\n    end\n    return dataList, title\nend\n \nfunction M:_getPrimaryKeys(tableName)\n    if self._tablePrimaryKeyCache[tableName] then\n        return self._tablePrimaryKeyCache[tableName]\n    end\n    local pks = {}\n    local reader = self._sqliteManager:ExecuteReader(\"PRAGMA table_info(\"..tableName..\")\")\n    if reader then\n        while reader:Read() do\n            local isPk = reader:GetBoolean(reader:GetOrdinal(\"pk\"))\n            if isPk then\n                table.insert(pks, reader:get_Item(\"name\"))\n            end\n        end\n        reader:Close()\n    end\n    self._tablePrimaryKeyCache[tableName] = pks\n    return pks\nend\n```\n\n### 3.按需加载表\n\n可以利用lua元表，当table索引一个表时再去查询db读取整个表并解析成lua配置表类。\n\n```lua\nlocal configDictMetaTable = {\n    __index = function(t, key)\n        if not rawget(t, key) then\n            print(\"sqlite 加载表：\" .. key)\n            local configTable = SqliteMonoMgr.instance:findAll(key)\n            rawset(t, key, configTable)\n            return configTable\n        end\n    end\n}\n \nConfigMgr.instance.requestConfig = function(self, name, configObj)\n    local mt = getmetatable(configObj._dict)\n    if mt ~= configDictMetaTable then\n        setmetatable(configObj._dict, configDictMetaTable)\n    end\n    local isExistInDB = SqliteMonoMgr.instance:isExistTable(name)\n    if self._configDict[name] then\n        local content = self._configDict[name]\n        configObj:handleConfig(name, content)\n    else\n        local content\n        if not isExistInDB then\n            local path = self._pathPrefix .. name\n            content = require(path)\n            self._configDict[name] = content\n        end\n        configObj:handleConfig(name, content)\n    end\nend\n```\n\n框架中lua配置是预加载+全加载的，其实也可以利用元表做到懒加载，当真正用到数据是才加载。\n\n```lua\nfunction genProxyMt(name, path)\n    local name = name\n    local path = path\n    local loaded = false\n    local datasource = nil\n     \n    return function (t, k)\n            if not loaded then\n                datasource = require(path)\n                ConfigMgr.instance:_preProcessConfig(datasource, name)\n                loaded = true\n            end\n            return datasource[k]\n        end\nend\n \nfunction ConfigMgr:requestConfig(name,configObj)\n    local proxy = {}\n    local mt_proxy = {\n        __index = genProxyMt(name, path)\n    }\n    setmetatable(proxy, mt_proxy)\n    configObj:handleConfig(name, proxy)\nend\n```\n\n### 4.单独一套sqlite lua查询接口\n\n用于业务查询配置，区别于以往方案的baseConfig类。\n\n```lua\nlocal M = class(\"SqliteMonoMgr\")\n \n-- 根据id查询\n-- @return 返回主键查询结果，只有一条数据返回数据本身，多条数据返回table（多个主键的情况）\nfunction M:findById(tableName, value, pk)\n    if GameUtils.isEmptyString(tableName) then\n        printError(\"tableName is nil.\")\n        return\n    end\n    local t = os.clock()\n    if pk==nil then\n        pk = \"id\"\n    end\n    if self._cache[tableName] and self._cache[tableName][value] then\n        print(\"findById 命中缓存耗时：\"..os.clock()-t, tableName, value, pk)\n        return self._cache[tableName][value]\n    end\n \n    local reader = self._sqliteManager:SQLSelect(tableName, \"*\", string.format(\"where %s=%s\", pk, value))\n    if reader and not reader.IsClosed then\n        local dataList = self:_readDataListAndTitle(reader)\n        reader:Close()\n        if not self._cache[tableName] then\n            self._cache[tableName] = {}\n        end\n        if #dataList==1 then\n            self._cache[tableName][value] = dataList[1]\n            print(\"findById 耗时：\"..os.clock()-t, tableName, value, pk)\n            return dataList[1]\n        else\n            print(\"findById 耗时：\"..os.clock()-t, tableName, value, pk)\n            self._cache[tableName][value] = dataList\n            return dataList\n        end\n    end\n \nend\n \n-- 根据条件查询\n-- @return 返回table\nfunction M:findAll(tableName, ...)\n    local t = os.clock()\n    local conditions = {...}\n    if #conditions==0 then\n        if not self._loadedTable[tableName] then\n            self:loadConfigTable(tableName)\n        end\n        print(\"findAll 耗时：\"..os.clock()-t, tableName)\n        return self._cache[tableName]\n    end\n \n    local conditionStr = \"where\"\n    for i=1,#conditions,2 do\n        local key = conditions[i]\n        local value = conditions[i+1]\n        conditionStr = conditionStr..string.format(\" %s=%s and\", key, value)\n    end\n    conditionStr = string.sub(conditionStr, 1, -4)\n    print(\"sql conditionStr:\", conditionStr)\n    local reader = self._sqliteManager:SQLSelect(tableName, \"*\", conditionStr)\n    if reader and not reader.IsClosed then\n        local dataList = self:_readDataListAndTitle(reader)\n        reader:Close()\n        print(\"findAll 耗时：\"..os.clock()-t, tableName)\n        return dataList\n    end\nend\n \n-- 通过输入sql查询\nfunction M:findAllBySql(sql)\n    if string.isEmptyString(sql) then return end\n    local t = os.clock()\n    local reader = self._sqliteManager:ExecuteReader(sql)\n    if reader and not reader.IsClosed then\n        local dataList = self:_readDataListAndTitle(reader)\n        reader:Close()\n        print(\"findAllBySql 耗时：\"..os.clock()-t)\n        return dataList\n    end\nend\n```\n\n### 5.db化整为零\n\n导表工具按Excel目录划分db，一级子目录下Excel表导入到db中，db名以目录名命名。\n\n同时游戏运行时支持多db连接。\n\n表划分db分类：\n\n*   经常改动的配置\n\n*   很少改动的配置\n\n*   剧情表\n\n### 6.压缩和热更db\n\n制作Editor工具，使用ICSharpCode.SharpZipLib.Zip库压缩db，这个库有个控制压缩率的参数compressionLevel(0-9)，以上实测得到的压缩率使用参数值为5，压缩率80%左右。\n\n热更db主要是解压缩和提取替换db文件。\n\n### 7.数据量大的表的读取方式\n\n比如language表有13w条数据，这样的表一般不能整个表加载，而要逐条根据id加载+缓存的方式，需要测试下性能。\n\n## 注意点\n\n### 1.Mono.Data.Sqlite.dll\n\n根据网上的资料实测，不能使用Editor\\Data\\MonoBleedingEdge\\lib\\mono\\2.0-api目录下的Mono.Data.Sqlite.dll，使用这个dll打成apk会报类的属性和方法引用空报错。说明不兼容。\n\n![](SQLite替换lua配置表方案实现/image_SUK4XBL1kd.png)\n\n而应该引用\\Editor\\Data\\Mono\\lib\\mono\\2.0目录下的Mono.Data.Sqlite.dll，即使两者都是Targets .NET 3.5。\n\n使用的Unity版本是Unity2020.3.2f1，其下没有\\Editor\\Data\\Mono目录，但发现**2018.2.3f1，2017.4.37f1下**有这个目录 **。**\n\n一开始就使用了Editor\\Data\\MonoBleedingEdge\\下的，Editor上测试正常使用，但是安卓上Mono.Data.Sqlite下的类的某些属性和方法会不兼容报空引用报错（state属性、CreateCommand方法）。\n\n从**2018.2.3f1**下拷贝过来使用，Editor和apk上测试正常了。理解应该是\\Editor\\Data\\Mono\\lib\\mono\\2.0下的dll才兼容，而且这个dll在vs上可以查看到源码。\n\n用ILSpy反编译dll对比：\n\n![](SQLite替换lua配置表方案实现/image_S_dTSQElWB.png)\n\n![](SQLite替换lua配置表方案实现/image_DulaDCWifu.png)\n\n最大区别就是版本和Runtime不一样、一个包含源代码和一个只包含了元数据。空报错的原因最大可能是没有把执行代码编译进来。\n\n### 2..Net Standard [2.0和.Net](http://2.xn--0-se9a.Net \"2.0和.Net\") 4.x\n\nProject Setting>player的Api Compatibility Level选择2.0或4.x，测试都是正常。\n\n### 3.System.Data.dll\n\n网上说需要引入这个dll，但是实测不引入也正常使用。\n\n### 4.connectionString和db存放位置\n\n安卓上connectionString使用data source=或者URI=file:都可以，但是后面路径不能包内路径，即jar:file://开头的，不然读取失败报错：System.ArgumentException: Invalid ConnectionString format。\n\ndb文件只能放在外部可读写目录，即Application.persistentDataPath。db位于包体内，需要拷贝到外部目录。\n\n参考：\n\n*   [https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity](https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity \"https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity\")\n\n*   [https://zhuanlan.zhihu.com/p/112232175](https://zhuanlan.zhihu.com/p/112232175 \"https://zhuanlan.zhihu.com/p/112232175\")\n","source":"_posts/SQLite替换lua配置表方案实现.md","raw":"---\ntitle: SQLite替换lua配置表方案实现\ndate: 2022-09-30\ntags: [SQLite,配置表]\ncategories: [Unity游戏开发,基础系统]\n---\n\n<!-- # SQLite替换lua配置表方案实现 -->\n\n## 前言\n\n目前游戏中的配置数据实在启动时一次性全部加载进内存，这种方式会造成一定的浪费。而SQLite是一个轻量级的、动态连接的数据库引擎。\n\n下文探索使用SQLite替换Lua配置表解决内存浪费方案的实现。\n\n<!-- more -->\n## splite库的编译与引入\n\n两个方向：\n\n1.C#层引入sqlite3.dll，写好接口，暴露给lua层调用。\n\nsqlite3.dll引入：[https://cloud.tencent.com/developer/news/314242](https://cloud.tencent.com/developer/news/314242 \"https://cloud.tencent.com/developer/news/314242\")\n\n2.lua层使用第三方库lsqlite3，将lsqlite3库编译进tolua.dll，在lua层直接链接并操作数据库。\n\n如何将三方库编译进tolua：[https://blog.csdn.net/linxinfa/article/details/90046840。](https://blog.csdn.net/linxinfa/article/details/90046840。 \"https://blog.csdn.net/linxinfa/article/details/90046840。\")\n\n这个方案代价是需要将各个平台的tolua动态库文件都编译一遍，将lsqlite3库包含进来。\n\n有两个三方库文件可以使用：\n\n1.lsqlite3：动态链接sqlite3（所以需要将sqlite3也编译进tolua）。\n\n2.lsqlite3complete：包含sqlite3在内，静态链接sqlite3（不用再将sqlite3编译进tolua）。\n\n## 测试数据\n\nunity：2020.3.2f\n\n真机：联想 拯救者2 pro/CPU晓龙888/内存8GB/Android 11\n\n### 1.堆内存对比\n\n|            | **首次进入主界面** | **播放剧情** | **过一遍各个系统** |\n| ---------- | ----------- | -------- | ----------- |\n| lua配置表全加载  | 11.2MB      | 11.54MB  | 16.4MB      |\n| sqlite按需加载 | 9.2MB       | 9.45MB   | 15.69MB     |\n\n由于2020unity打的包真机上连不上profiler，所以以上数据在**Editor**用工具测试lua内存。\n\n简单对比，sqlite按需加载配置方案在内存上比全加载lua配置表要**节省内存。** 理由可想而知，不必要的配置不用加载进内存。\n\n### 2.执行时间对比\n\na.启动方式耗时对比\n\n| **启动时配置的加载方式**      | **Editor-时间(s)** | **Android-时间(s)** |\n| ------------------- | ---------------- | ----------------- |\n| lua配置表全加载           | 0.035            | 0.030             |\n| sqlite连接db，加载所有表并解析 | 2.694            | 1.242             |\n| sqlite只链接db，按需加载表   | 0.004            | 0.016             |\n\n对比来看，启动时使用sqlite连接db按需加载表的方式快一点，但是比较是毫秒级别，原来的lua配置表全加载方式也不是很慢。\n\nb.查找时间对比\n\n|        | **查1次** | **查100次** | **查10000次** |\n| ------ | ------- | --------- | ----------- |\n| lua配置表 | 4.3e-05 | 0.0005    | 0.0025      |\n| sqlite | 5.4e-05 | 0.0285    | 2.580       |\n\n配置表一般是只读，不会新增、修改、删除。从查找速度来看，肯定是lua配置表块，字典结构而且直接从内存中读，读取db就相对慢很多。单独看，单独一句查询id的sql执行效率也非常快。\n\n### 3.热更新方式对比\n\n数据量：\n\n*   小量数据：对标周更后的hotfix，一般只会修改一两处配置，修改数据量在个位数。\n\n*   一般数据：对标周更，使用git命令统计食物语周更lua配置文件修改情况，大约会有20个左右文件被修改。\n\n*   大量数据：对标月更，统计得出大约有150个lua配置文件被修改。\n\n假设平均一个文件10行数据被修改，那么周更大约200条修改，月更大约1500条修改，一条修改对应一条sql语句。\n\n对于替换db的热更方式，不管数据量都是整个db替换。\n\n以下是测试数据，多次测量取平均的结果：\n\n| **【时间ms】**            | **小量数据(9)** | **一般数据(200)** | **一般数据(800)** | **大量数据(1500)** |\n| --------------------- | ----------- | ------------- | ------------- | -------------- |\n| 热更sql （一个sql文件作为一条命令） | 12.9        | 51.2          | 892.3         | 2717           |\n\n以下是热更不同大小db文件的统计情况：\n\n| **db大小**          | **1576kb（1.53MB）** | **33.4MB** | **60.6MB** |\n| ----------------- | ------------------ | ---------- | ---------- |\n| 压缩后               | 284kb              | 7.58MB     | 15.7MB     |\n| 压缩率               | 82%                | 77%        | 74%        |\n| 热更耗时ms (解压+替换+连接) | 81.6               | 1000.5     | 1778.7     |\n\n![](SQLite替换lua配置表方案实现/image_gp3VMdO0Er.png)\n\n将两种方式放在一起对比，可以直观得出结论：**hotfix、周更比较适合选sql方式，月更选替换db方式**。\n\n**上面sql执行是一次性执行整个sql文件字符串，所以sql命令解析时间比较长。后面优化以行为单位执行sql文件，5000行左右的sql执行效率在0.5s左右，效率比替换30M DB还高。**\n\n## 工作量设计\n\n流程图：\n\n![](SQLite替换lua配置表方案实现/image_iqXG1maoM7.png)\n\n### 1.导表工具改造，cvs表格导入db\n\na.类型转换\n\nC#方法获取的数值类型在lua中属于userdata，发现的影响是不能直接和string直接拼接，稳妥起见，最好使用tonumber(tostring(userdata))转换为lua的数值类型。\n\n配置表中常见的类型需要对应db的存储类型：\n\n| **配置表中的类型** | **number** | **string&mlstring** | **float** | **boolean** | **datetime** | [type] ([number]&[string])|\n| ----------- | ---------- | -------------------- | --------- | ----------- | ------------ | -------------------------------------------------------------------------------------------------------------- |\n| 对应的db存储的类型  | int64      | string               | float     | boolean     | string       | string                                                                                                         |\n\n说明：\\[type]表示数组类型，元素类型多为number或者string，db中存储为string类型即可，lua中取出来时再解析为table。存为string时候，开头添加标识符`[type]:`，表示需要被解析。\n\nlua中获取各类型转换方式如下：\n\n```lua\nlocal fieldName, value = reader:GetName(i), nil;\nlocal type = reader:GetFieldType(i);\ntype = tostring(type)\nif type == \"System.Int64\" or type == \"System.Int32\" or type == \"System.Int16\" then\n    value = tonumber(tostring(reader:get_Item(fieldName)))\nelseif type == \"System.Float\" then\n    value = tonumber(tostring(reader:GetFloat(i)))\nelseif type == \"System.Double\" then\n    value = tonumber(tostring(reader:GetDouble(i)))\nelseif type == \"System.Decimal\" then\n    value = tonumber(tostring(reader:GetDecimal(i)))\nelseif type == \"System.Boolean\" then\n    value = tostring(reader:GetBoolean(i))==\"true\" and true or false\nelseif type == \"System.String\" then\n    value = tostring(reader:get_Item(fieldName)\n   if \"[type]:\" == string.sub(value, 1, 7) then\n        value = GameUtils.json.decode(string.sub(value, 8))\n    end\nend\n```\n\nb.cvs2db数据解析导入工具\n\nsqlite清空表不支持TRUNCATE TABLE语句，需用DELETE FROM TableName。\n\nsqlite语句和传统的sql语句不太一样，比如不支持多行插入数据，只支持单行插入。\n\n推荐[在线sqlite运行工具](http://sqlite.jsrun.net/ \"在线sqlite运行工具\")测试语句，或者在[Navicat for SQLite](https://www.navicat.com.cn/download/navicat-for-sqlite \"Navicat for SQLite\")软件上新建查询执行sql语句。\n\n### 2.config类接口适配\n\n需要在lua层链接数据库，查询表读出数据，然后将数据格式化成相同结构的lua配置表类（t\\_xxx.lua），这样就可以低成本适配config类接口。\n\n这里关键点在于处理db数据类型转换lua数据类型，也就是上述的lua中获取各类型转换方式。\n\n```lua\nlocal M = class(\"SqliteMonoMgr\")\n \nlocal TInt64 = \"Int64\"\nlocal TInt32 = \"Int32\"\nlocal TInt16 = \"Int16\"\nlocal TFloat = \"Float\"\nlocal TDouble = \"Double\"\nlocal TDecimal = \"Decimal\"\nlocal TBoolean = \"Boolean\"\nlocal TString = \"String\"\nlocal TArrayPrefix = \"[type]:\"\n \nfunction M:loadConfigTable(tableName)\n    local ret,reader = true\n \n    xpcall(function ()\n        local pks = self:_getPrimaryKeys(tableName)\n        reader = self._sqliteManager:SQLSelect(tableName)\n        if reader and not reader.IsClosed then\n            self._cache[tableName] = self:_readConfigTable(reader, pks)\n            self._loadedTable[tableName] = true\n            reader:Close()\n        else\n            ret = false\n            printWarn(\"not such table \"..tableName)\n        end\n    end, function (err)\n        ret = false\n        if reader then\n            reader:Close()\n        end\n        printError(err)\n        -- self:close()\n    end)\n \n    return ret\n     \nend\n \nfunction M:_readConfigTable(reader, pks)\n    local configTable = {}\n    if not reader.HasRows then\n        return configTable\n    end\n     \n    local dataList, title = self:_readDataListAndTitle(reader)\n    configTable.dataList = dataList\n    -- 按索引构造字典\n    local pkCount,temp = #pks,nil\n    if pkCount>0 then\n        for i,v in ipairs(dataList) do\n            temp = configTable\n            for i=1,pkCount,1 do\n                local pk = pks[i]\n                local pv = v[pk]\n                if i==pkCount then\n                    temp[pv] = v\n                    break\n                end\n                if not temp[pv] then\n                    temp[pv] = {}\n                end\n                temp = temp[pv]\n            end\n        end\n         \n    end\n    return configTable\nend\n \nfunction M:_readDataListAndTitle(reader)\n    local title = {}\n    local dataList = {}\n    while reader:Read() do\n        local visibleFieldCount, row = reader.VisibleFieldCount, {}\n        for i = 0, visibleFieldCount - 1 do\n            local fieldName, value = reader:GetName(i), nil;\n            title[fieldName] = i+1\n            local type = reader:GetFieldType(i);\n            type = string.sub(tostring(type), 8)\n            if type == TInt64 or type == TInt32 or type == TInt16 then\n                value = tonumber(tostring(reader:get_Item(fieldName)))\n            elseif type == TFloat then\n                value = tonumber(tostring(reader:GetFloat(i)))\n            elseif type == TDouble then\n                value = tonumber(tostring(reader:GetDouble(i)))\n            elseif type == TDecimal then\n                value = tonumber(tostring(reader:GetDecimal(i)))\n            elseif type == TBoolean then\n                value = tostring(reader:GetBoolean(i))==\"true\" and true or false\n            elseif type == TString then\n                -- value = reader:GetString(i)\n                value = tostring(reader:get_Item(fieldName))\n                if TArrayPrefix == string.sub(value, 1, 7) then\n                    value = GameUtils.json.decode(string.sub(value, 8))\n                end\n            end\n            table.insert(row, value)\n        end\n        table.insert(dataList, row)\n    end\n \n     -- 构造元表\n     local mt = {\n        __index = function(t, key)\n            local index = title[key]\n            if index then\n                return rawget(t, index)\n            end\n        end\n    }\n    for i,v in ipairs(dataList) do\n        setmetatable(v, mt)\n    end\n    return dataList, title\nend\n \nfunction M:_getPrimaryKeys(tableName)\n    if self._tablePrimaryKeyCache[tableName] then\n        return self._tablePrimaryKeyCache[tableName]\n    end\n    local pks = {}\n    local reader = self._sqliteManager:ExecuteReader(\"PRAGMA table_info(\"..tableName..\")\")\n    if reader then\n        while reader:Read() do\n            local isPk = reader:GetBoolean(reader:GetOrdinal(\"pk\"))\n            if isPk then\n                table.insert(pks, reader:get_Item(\"name\"))\n            end\n        end\n        reader:Close()\n    end\n    self._tablePrimaryKeyCache[tableName] = pks\n    return pks\nend\n```\n\n### 3.按需加载表\n\n可以利用lua元表，当table索引一个表时再去查询db读取整个表并解析成lua配置表类。\n\n```lua\nlocal configDictMetaTable = {\n    __index = function(t, key)\n        if not rawget(t, key) then\n            print(\"sqlite 加载表：\" .. key)\n            local configTable = SqliteMonoMgr.instance:findAll(key)\n            rawset(t, key, configTable)\n            return configTable\n        end\n    end\n}\n \nConfigMgr.instance.requestConfig = function(self, name, configObj)\n    local mt = getmetatable(configObj._dict)\n    if mt ~= configDictMetaTable then\n        setmetatable(configObj._dict, configDictMetaTable)\n    end\n    local isExistInDB = SqliteMonoMgr.instance:isExistTable(name)\n    if self._configDict[name] then\n        local content = self._configDict[name]\n        configObj:handleConfig(name, content)\n    else\n        local content\n        if not isExistInDB then\n            local path = self._pathPrefix .. name\n            content = require(path)\n            self._configDict[name] = content\n        end\n        configObj:handleConfig(name, content)\n    end\nend\n```\n\n框架中lua配置是预加载+全加载的，其实也可以利用元表做到懒加载，当真正用到数据是才加载。\n\n```lua\nfunction genProxyMt(name, path)\n    local name = name\n    local path = path\n    local loaded = false\n    local datasource = nil\n     \n    return function (t, k)\n            if not loaded then\n                datasource = require(path)\n                ConfigMgr.instance:_preProcessConfig(datasource, name)\n                loaded = true\n            end\n            return datasource[k]\n        end\nend\n \nfunction ConfigMgr:requestConfig(name,configObj)\n    local proxy = {}\n    local mt_proxy = {\n        __index = genProxyMt(name, path)\n    }\n    setmetatable(proxy, mt_proxy)\n    configObj:handleConfig(name, proxy)\nend\n```\n\n### 4.单独一套sqlite lua查询接口\n\n用于业务查询配置，区别于以往方案的baseConfig类。\n\n```lua\nlocal M = class(\"SqliteMonoMgr\")\n \n-- 根据id查询\n-- @return 返回主键查询结果，只有一条数据返回数据本身，多条数据返回table（多个主键的情况）\nfunction M:findById(tableName, value, pk)\n    if GameUtils.isEmptyString(tableName) then\n        printError(\"tableName is nil.\")\n        return\n    end\n    local t = os.clock()\n    if pk==nil then\n        pk = \"id\"\n    end\n    if self._cache[tableName] and self._cache[tableName][value] then\n        print(\"findById 命中缓存耗时：\"..os.clock()-t, tableName, value, pk)\n        return self._cache[tableName][value]\n    end\n \n    local reader = self._sqliteManager:SQLSelect(tableName, \"*\", string.format(\"where %s=%s\", pk, value))\n    if reader and not reader.IsClosed then\n        local dataList = self:_readDataListAndTitle(reader)\n        reader:Close()\n        if not self._cache[tableName] then\n            self._cache[tableName] = {}\n        end\n        if #dataList==1 then\n            self._cache[tableName][value] = dataList[1]\n            print(\"findById 耗时：\"..os.clock()-t, tableName, value, pk)\n            return dataList[1]\n        else\n            print(\"findById 耗时：\"..os.clock()-t, tableName, value, pk)\n            self._cache[tableName][value] = dataList\n            return dataList\n        end\n    end\n \nend\n \n-- 根据条件查询\n-- @return 返回table\nfunction M:findAll(tableName, ...)\n    local t = os.clock()\n    local conditions = {...}\n    if #conditions==0 then\n        if not self._loadedTable[tableName] then\n            self:loadConfigTable(tableName)\n        end\n        print(\"findAll 耗时：\"..os.clock()-t, tableName)\n        return self._cache[tableName]\n    end\n \n    local conditionStr = \"where\"\n    for i=1,#conditions,2 do\n        local key = conditions[i]\n        local value = conditions[i+1]\n        conditionStr = conditionStr..string.format(\" %s=%s and\", key, value)\n    end\n    conditionStr = string.sub(conditionStr, 1, -4)\n    print(\"sql conditionStr:\", conditionStr)\n    local reader = self._sqliteManager:SQLSelect(tableName, \"*\", conditionStr)\n    if reader and not reader.IsClosed then\n        local dataList = self:_readDataListAndTitle(reader)\n        reader:Close()\n        print(\"findAll 耗时：\"..os.clock()-t, tableName)\n        return dataList\n    end\nend\n \n-- 通过输入sql查询\nfunction M:findAllBySql(sql)\n    if string.isEmptyString(sql) then return end\n    local t = os.clock()\n    local reader = self._sqliteManager:ExecuteReader(sql)\n    if reader and not reader.IsClosed then\n        local dataList = self:_readDataListAndTitle(reader)\n        reader:Close()\n        print(\"findAllBySql 耗时：\"..os.clock()-t)\n        return dataList\n    end\nend\n```\n\n### 5.db化整为零\n\n导表工具按Excel目录划分db，一级子目录下Excel表导入到db中，db名以目录名命名。\n\n同时游戏运行时支持多db连接。\n\n表划分db分类：\n\n*   经常改动的配置\n\n*   很少改动的配置\n\n*   剧情表\n\n### 6.压缩和热更db\n\n制作Editor工具，使用ICSharpCode.SharpZipLib.Zip库压缩db，这个库有个控制压缩率的参数compressionLevel(0-9)，以上实测得到的压缩率使用参数值为5，压缩率80%左右。\n\n热更db主要是解压缩和提取替换db文件。\n\n### 7.数据量大的表的读取方式\n\n比如language表有13w条数据，这样的表一般不能整个表加载，而要逐条根据id加载+缓存的方式，需要测试下性能。\n\n## 注意点\n\n### 1.Mono.Data.Sqlite.dll\n\n根据网上的资料实测，不能使用Editor\\Data\\MonoBleedingEdge\\lib\\mono\\2.0-api目录下的Mono.Data.Sqlite.dll，使用这个dll打成apk会报类的属性和方法引用空报错。说明不兼容。\n\n![](SQLite替换lua配置表方案实现/image_SUK4XBL1kd.png)\n\n而应该引用\\Editor\\Data\\Mono\\lib\\mono\\2.0目录下的Mono.Data.Sqlite.dll，即使两者都是Targets .NET 3.5。\n\n使用的Unity版本是Unity2020.3.2f1，其下没有\\Editor\\Data\\Mono目录，但发现**2018.2.3f1，2017.4.37f1下**有这个目录 **。**\n\n一开始就使用了Editor\\Data\\MonoBleedingEdge\\下的，Editor上测试正常使用，但是安卓上Mono.Data.Sqlite下的类的某些属性和方法会不兼容报空引用报错（state属性、CreateCommand方法）。\n\n从**2018.2.3f1**下拷贝过来使用，Editor和apk上测试正常了。理解应该是\\Editor\\Data\\Mono\\lib\\mono\\2.0下的dll才兼容，而且这个dll在vs上可以查看到源码。\n\n用ILSpy反编译dll对比：\n\n![](SQLite替换lua配置表方案实现/image_S_dTSQElWB.png)\n\n![](SQLite替换lua配置表方案实现/image_DulaDCWifu.png)\n\n最大区别就是版本和Runtime不一样、一个包含源代码和一个只包含了元数据。空报错的原因最大可能是没有把执行代码编译进来。\n\n### 2..Net Standard [2.0和.Net](http://2.xn--0-se9a.Net \"2.0和.Net\") 4.x\n\nProject Setting>player的Api Compatibility Level选择2.0或4.x，测试都是正常。\n\n### 3.System.Data.dll\n\n网上说需要引入这个dll，但是实测不引入也正常使用。\n\n### 4.connectionString和db存放位置\n\n安卓上connectionString使用data source=或者URI=file:都可以，但是后面路径不能包内路径，即jar:file://开头的，不然读取失败报错：System.ArgumentException: Invalid ConnectionString format。\n\ndb文件只能放在外部可读写目录，即Application.persistentDataPath。db位于包体内，需要拷贝到外部目录。\n\n参考：\n\n*   [https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity](https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity \"https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity\")\n\n*   [https://zhuanlan.zhihu.com/p/112232175](https://zhuanlan.zhihu.com/p/112232175 \"https://zhuanlan.zhihu.com/p/112232175\")\n","slug":"SQLite替换lua配置表方案实现","published":1,"updated":"2022-12-17T14:04:08.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv5f008umcq037dq4wun","content":"<!-- # SQLite替换lua配置表方案实现 -->\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前游戏中的配置数据实在启动时一次性全部加载进内存，这种方式会造成一定的浪费。而SQLite是一个轻量级的、动态连接的数据库引擎。</p>\n<p>下文探索使用SQLite替换Lua配置表解决内存浪费方案的实现。</p>\n<span id=\"more\"></span>\n<h2 id=\"splite库的编译与引入\"><a href=\"#splite库的编译与引入\" class=\"headerlink\" title=\"splite库的编译与引入\"></a>splite库的编译与引入</h2><p>两个方向：</p>\n<p>1.C#层引入sqlite3.dll，写好接口，暴露给lua层调用。</p>\n<p>sqlite3.dll引入：<a target=\"_blank\" rel=\"noopener\" href=\"https://cloud.tencent.com/developer/news/314242\" title=\"https://cloud.tencent.com/developer/news/314242\">https://cloud.tencent.com/developer/news/314242</a></p>\n<p>2.lua层使用第三方库lsqlite3，将lsqlite3库编译进tolua.dll，在lua层直接链接并操作数据库。</p>\n<p>如何将三方库编译进tolua：<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/linxinfa/article/details/90046840。\" title=\"https://blog.csdn.net/linxinfa/article/details/90046840。\">https://blog.csdn.net/linxinfa/article/details/90046840。</a></p>\n<p>这个方案代价是需要将各个平台的tolua动态库文件都编译一遍，将lsqlite3库包含进来。</p>\n<p>有两个三方库文件可以使用：</p>\n<p>1.lsqlite3：动态链接sqlite3（所以需要将sqlite3也编译进tolua）。</p>\n<p>2.lsqlite3complete：包含sqlite3在内，静态链接sqlite3（不用再将sqlite3编译进tolua）。</p>\n<h2 id=\"测试数据\"><a href=\"#测试数据\" class=\"headerlink\" title=\"测试数据\"></a>测试数据</h2><p>unity：2020.3.2f</p>\n<p>真机：联想 拯救者2 pro/CPU晓龙888/内存8GB/Android 11</p>\n<h3 id=\"1-堆内存对比\"><a href=\"#1-堆内存对比\" class=\"headerlink\" title=\"1.堆内存对比\"></a>1.堆内存对比</h3><table>\n<thead>\n<tr>\n<th></th>\n<th><strong>首次进入主界面</strong></th>\n<th><strong>播放剧情</strong></th>\n<th><strong>过一遍各个系统</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lua配置表全加载</td>\n<td>11.2MB</td>\n<td>11.54MB</td>\n<td>16.4MB</td>\n</tr>\n<tr>\n<td>sqlite按需加载</td>\n<td>9.2MB</td>\n<td>9.45MB</td>\n<td>15.69MB</td>\n</tr>\n</tbody>\n</table>\n<p>由于2020unity打的包真机上连不上profiler，所以以上数据在<strong>Editor</strong>用工具测试lua内存。</p>\n<p>简单对比，sqlite按需加载配置方案在内存上比全加载lua配置表要<strong>节省内存。</strong> 理由可想而知，不必要的配置不用加载进内存。</p>\n<h3 id=\"2-执行时间对比\"><a href=\"#2-执行时间对比\" class=\"headerlink\" title=\"2.执行时间对比\"></a>2.执行时间对比</h3><p>a.启动方式耗时对比</p>\n<table>\n<thead>\n<tr>\n<th><strong>启动时配置的加载方式</strong></th>\n<th><strong>Editor-时间(s)</strong></th>\n<th><strong>Android-时间(s)</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lua配置表全加载</td>\n<td>0.035</td>\n<td>0.030</td>\n</tr>\n<tr>\n<td>sqlite连接db，加载所有表并解析</td>\n<td>2.694</td>\n<td>1.242</td>\n</tr>\n<tr>\n<td>sqlite只链接db，按需加载表</td>\n<td>0.004</td>\n<td>0.016</td>\n</tr>\n</tbody>\n</table>\n<p>对比来看，启动时使用sqlite连接db按需加载表的方式快一点，但是比较是毫秒级别，原来的lua配置表全加载方式也不是很慢。</p>\n<p>b.查找时间对比</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><strong>查1次</strong></th>\n<th><strong>查100次</strong></th>\n<th><strong>查10000次</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lua配置表</td>\n<td>4.3e-05</td>\n<td>0.0005</td>\n<td>0.0025</td>\n</tr>\n<tr>\n<td>sqlite</td>\n<td>5.4e-05</td>\n<td>0.0285</td>\n<td>2.580</td>\n</tr>\n</tbody>\n</table>\n<p>配置表一般是只读，不会新增、修改、删除。从查找速度来看，肯定是lua配置表块，字典结构而且直接从内存中读，读取db就相对慢很多。单独看，单独一句查询id的sql执行效率也非常快。</p>\n<h3 id=\"3-热更新方式对比\"><a href=\"#3-热更新方式对比\" class=\"headerlink\" title=\"3.热更新方式对比\"></a>3.热更新方式对比</h3><p>数据量：</p>\n<ul>\n<li><p>小量数据：对标周更后的hotfix，一般只会修改一两处配置，修改数据量在个位数。</p>\n</li>\n<li><p>一般数据：对标周更，使用git命令统计食物语周更lua配置文件修改情况，大约会有20个左右文件被修改。</p>\n</li>\n<li><p>大量数据：对标月更，统计得出大约有150个lua配置文件被修改。</p>\n</li>\n</ul>\n<p>假设平均一个文件10行数据被修改，那么周更大约200条修改，月更大约1500条修改，一条修改对应一条sql语句。</p>\n<p>对于替换db的热更方式，不管数据量都是整个db替换。</p>\n<p>以下是测试数据，多次测量取平均的结果：</p>\n<table>\n<thead>\n<tr>\n<th><strong>【时间ms】</strong></th>\n<th><strong>小量数据(9)</strong></th>\n<th><strong>一般数据(200)</strong></th>\n<th><strong>一般数据(800)</strong></th>\n<th><strong>大量数据(1500)</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>热更sql （一个sql文件作为一条命令）</td>\n<td>12.9</td>\n<td>51.2</td>\n<td>892.3</td>\n<td>2717</td>\n</tr>\n</tbody>\n</table>\n<p>以下是热更不同大小db文件的统计情况：</p>\n<table>\n<thead>\n<tr>\n<th><strong>db大小</strong></th>\n<th><strong>1576kb（1.53MB）</strong></th>\n<th><strong>33.4MB</strong></th>\n<th><strong>60.6MB</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>压缩后</td>\n<td>284kb</td>\n<td>7.58MB</td>\n<td>15.7MB</td>\n</tr>\n<tr>\n<td>压缩率</td>\n<td>82%</td>\n<td>77%</td>\n<td>74%</td>\n</tr>\n<tr>\n<td>热更耗时ms (解压+替换+连接)</td>\n<td>81.6</td>\n<td>1000.5</td>\n<td>1778.7</td>\n</tr>\n</tbody>\n</table>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_gp3VMdO0Er.png\" class=\"\">\n<p>将两种方式放在一起对比，可以直观得出结论：<strong>hotfix、周更比较适合选sql方式，月更选替换db方式</strong>。</p>\n<p><strong>上面sql执行是一次性执行整个sql文件字符串，所以sql命令解析时间比较长。后面优化以行为单位执行sql文件，5000行左右的sql执行效率在0.5s左右，效率比替换30M DB还高。</strong></p>\n<h2 id=\"工作量设计\"><a href=\"#工作量设计\" class=\"headerlink\" title=\"工作量设计\"></a>工作量设计</h2><p>流程图：</p>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_iqXG1maoM7.png\" class=\"\">\n<h3 id=\"1-导表工具改造，cvs表格导入db\"><a href=\"#1-导表工具改造，cvs表格导入db\" class=\"headerlink\" title=\"1.导表工具改造，cvs表格导入db\"></a>1.导表工具改造，cvs表格导入db</h3><p>a.类型转换</p>\n<p>C#方法获取的数值类型在lua中属于userdata，发现的影响是不能直接和string直接拼接，稳妥起见，最好使用tonumber(tostring(userdata))转换为lua的数值类型。</p>\n<p>配置表中常见的类型需要对应db的存储类型：</p>\n<table>\n<thead>\n<tr>\n<th><strong>配置表中的类型</strong></th>\n<th><strong>number</strong></th>\n<th><strong>string&amp;mlstring</strong></th>\n<th><strong>float</strong></th>\n<th><strong>boolean</strong></th>\n<th><strong>datetime</strong></th>\n<th>[type] ([number]&amp;[string])</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>对应的db存储的类型</td>\n<td>int64</td>\n<td>string</td>\n<td>float</td>\n<td>boolean</td>\n<td>string</td>\n<td>string</td>\n</tr>\n</tbody>\n</table>\n<p>说明：[type]表示数组类型，元素类型多为number或者string，db中存储为string类型即可，lua中取出来时再解析为table。存为string时候，开头添加标识符<code>[type]:</code>，表示需要被解析。</p>\n<p>lua中获取各类型转换方式如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> fieldName, value = reader:GetName(i), <span class=\"literal\">nil</span>;</span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">type</span> = reader:GetFieldType(i);</span><br><span class=\"line\"><span class=\"built_in\">type</span> = <span class=\"built_in\">tostring</span>(<span class=\"built_in\">type</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Int64&quot;</span> <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Int32&quot;</span> <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Int16&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:get_Item(fieldName)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Float&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetFloat(i)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Double&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDouble(i)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Decimal&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDecimal(i)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Boolean&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tostring</span>(reader:GetBoolean(i))==<span class=\"string\">&quot;true&quot;</span> <span class=\"keyword\">and</span> <span class=\"literal\">true</span> <span class=\"keyword\">or</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.String&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tostring</span>(reader:get_Item(fieldName)</span><br><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"string\">&quot;[type]:&quot;</span> == <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">1</span>, <span class=\"number\">7</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        value = GameUtils.json.decode(<span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">8</span>))</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>b.cvs2db数据解析导入工具</p>\n<p>sqlite清空表不支持TRUNCATE TABLE语句，需用DELETE FROM TableName。</p>\n<p>sqlite语句和传统的sql语句不太一样，比如不支持多行插入数据，只支持单行插入。</p>\n<p>推荐<a target=\"_blank\" rel=\"noopener\" href=\"http://sqlite.jsrun.net/\" title=\"在线sqlite运行工具\">在线sqlite运行工具</a>测试语句，或者在<a target=\"_blank\" rel=\"noopener\" href=\"https://www.navicat.com.cn/download/navicat-for-sqlite\" title=\"Navicat for SQLite\">Navicat for SQLite</a>软件上新建查询执行sql语句。</p>\n<h3 id=\"2-config类接口适配\"><a href=\"#2-config类接口适配\" class=\"headerlink\" title=\"2.config类接口适配\"></a>2.config类接口适配</h3><p>需要在lua层链接数据库，查询表读出数据，然后将数据格式化成相同结构的lua配置表类（t_xxx.lua），这样就可以低成本适配config类接口。</p>\n<p>这里关键点在于处理db数据类型转换lua数据类型，也就是上述的lua中获取各类型转换方式。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> M = class(<span class=\"string\">&quot;SqliteMonoMgr&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">local</span> TInt64 = <span class=\"string\">&quot;Int64&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TInt32 = <span class=\"string\">&quot;Int32&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TInt16 = <span class=\"string\">&quot;Int16&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TFloat = <span class=\"string\">&quot;Float&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TDouble = <span class=\"string\">&quot;Double&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TDecimal = <span class=\"string\">&quot;Decimal&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TBoolean = <span class=\"string\">&quot;Boolean&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TString = <span class=\"string\">&quot;String&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TArrayPrefix = <span class=\"string\">&quot;[type]:&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:loadConfigTable</span><span class=\"params\">(tableName)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> ret,reader = <span class=\"literal\">true</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"built_in\">xpcall</span>(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> pks = <span class=\"built_in\">self</span>:_getPrimaryKeys(tableName)</span><br><span class=\"line\">        reader = <span class=\"built_in\">self</span>._sqliteManager:SQLSelect(tableName)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName] = <span class=\"built_in\">self</span>:_readConfigTable(reader, pks)</span><br><span class=\"line\">            <span class=\"built_in\">self</span>._loadedTable[tableName] = <span class=\"literal\">true</span></span><br><span class=\"line\">            reader:Close()</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            ret = <span class=\"literal\">false</span></span><br><span class=\"line\">            printWarn(<span class=\"string\">&quot;not such table &quot;</span>..tableName)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(err)</span></span></span><br><span class=\"line\">        ret = <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> reader <span class=\"keyword\">then</span></span><br><span class=\"line\">            reader:Close()</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        printError(err)</span><br><span class=\"line\">        <span class=\"comment\">-- self:close()</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret</span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:_readConfigTable</span><span class=\"params\">(reader, pks)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> configTable = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> reader.HasRows <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> configTable</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">local</span> dataList, title = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">    configTable.dataList = dataList</span><br><span class=\"line\">    <span class=\"comment\">-- 按索引构造字典</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> pkCount,temp = #pks,<span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> pkCount&gt;<span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(dataList) <span class=\"keyword\">do</span></span><br><span class=\"line\">            temp = configTable</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,pkCount,<span class=\"number\">1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">                <span class=\"keyword\">local</span> pk = pks[i]</span><br><span class=\"line\">                <span class=\"keyword\">local</span> pv = v[pk]</span><br><span class=\"line\">                <span class=\"keyword\">if</span> i==pkCount <span class=\"keyword\">then</span></span><br><span class=\"line\">                    temp[pv] = v</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> temp[pv] <span class=\"keyword\">then</span></span><br><span class=\"line\">                    temp[pv] = &#123;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">                temp = temp[pv]</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">         </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> configTable</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:_readDataListAndTitle</span><span class=\"params\">(reader)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> title = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">local</span> dataList = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> reader:Read() <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> visibleFieldCount, row = reader.VisibleFieldCount, &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i = <span class=\"number\">0</span>, visibleFieldCount - <span class=\"number\">1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> fieldName, value = reader:GetName(i), <span class=\"literal\">nil</span>;</span><br><span class=\"line\">            title[fieldName] = i+<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> <span class=\"built_in\">type</span> = reader:GetFieldType(i);</span><br><span class=\"line\">            <span class=\"built_in\">type</span> = <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(<span class=\"built_in\">tostring</span>(<span class=\"built_in\">type</span>), <span class=\"number\">8</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == TInt64 <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == TInt32 <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == TInt16 <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:get_Item(fieldName)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TFloat <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetFloat(i)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TDouble <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDouble(i)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TDecimal <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDecimal(i)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TBoolean <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tostring</span>(reader:GetBoolean(i))==<span class=\"string\">&quot;true&quot;</span> <span class=\"keyword\">and</span> <span class=\"literal\">true</span> <span class=\"keyword\">or</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TString <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"comment\">-- value = reader:GetString(i)</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tostring</span>(reader:get_Item(fieldName))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> TArrayPrefix == <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">1</span>, <span class=\"number\">7</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">                    value = GameUtils.json.decode(<span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">8</span>))</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(row, value)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(dataList, row)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">     <span class=\"comment\">-- 构造元表</span></span><br><span class=\"line\">     <span class=\"keyword\">local</span> mt = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t, key)</span></span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> index = title[key]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> index <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">rawget</span>(t, index)</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(dataList) <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(v, mt)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dataList, title</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:_getPrimaryKeys</span><span class=\"params\">(tableName)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._tablePrimaryKeyCache[tableName] <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._tablePrimaryKeyCache[tableName]</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> pks = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:ExecuteReader(<span class=\"string\">&quot;PRAGMA table_info(&quot;</span>..tableName..<span class=\"string\">&quot;)&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> reader:Read() <span class=\"keyword\">do</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> isPk = reader:GetBoolean(reader:GetOrdinal(<span class=\"string\">&quot;pk&quot;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> isPk <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(pks, reader:get_Item(<span class=\"string\">&quot;name&quot;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._tablePrimaryKeyCache[tableName] = pks</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pks</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-按需加载表\"><a href=\"#3-按需加载表\" class=\"headerlink\" title=\"3.按需加载表\"></a>3.按需加载表</h3><p>可以利用lua元表，当table索引一个表时再去查询db读取整个表并解析成lua配置表类。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> configDictMetaTable = &#123;</span><br><span class=\"line\">    <span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t, key)</span></span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">rawget</span>(t, key) <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;sqlite 加载表：&quot;</span> .. key)</span><br><span class=\"line\">            <span class=\"keyword\">local</span> configTable = SqliteMonoMgr.instance:findAll(key)</span><br><span class=\"line\">            <span class=\"built_in\">rawset</span>(t, key, configTable)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> configTable</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">ConfigMgr.instance.requestConfig = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(self, name, configObj)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> mt = <span class=\"built_in\">getmetatable</span>(configObj._dict)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> mt ~= configDictMetaTable <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(configObj._dict, configDictMetaTable)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> isExistInDB = SqliteMonoMgr.instance:isExistTable(name)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._configDict[name] <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> content = <span class=\"built_in\">self</span>._configDict[name]</span><br><span class=\"line\">        configObj:handleConfig(name, content)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> content</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isExistInDB <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> <span class=\"built_in\">path</span> = <span class=\"built_in\">self</span>._pathPrefix .. name</span><br><span class=\"line\">            content = <span class=\"built_in\">require</span>(<span class=\"built_in\">path</span>)</span><br><span class=\"line\">            <span class=\"built_in\">self</span>._configDict[name] = content</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        configObj:handleConfig(name, content)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>框架中lua配置是预加载+全加载的，其实也可以利用元表做到懒加载，当真正用到数据是才加载。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">genProxyMt</span><span class=\"params\">(name, path)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> name = name</span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">path</span> = <span class=\"built_in\">path</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">loaded</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> datasource = <span class=\"literal\">nil</span></span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(t, k)</span></span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">loaded</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">                datasource = <span class=\"built_in\">require</span>(<span class=\"built_in\">path</span>)</span><br><span class=\"line\">                ConfigMgr.instance:_preProcessConfig(datasource, name)</span><br><span class=\"line\">                <span class=\"built_in\">loaded</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> datasource[k]</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ConfigMgr:requestConfig</span><span class=\"params\">(name,configObj)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> proxy = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">local</span> mt_proxy = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">__index</span> = genProxyMt(name, <span class=\"built_in\">path</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">setmetatable</span>(proxy, mt_proxy)</span><br><span class=\"line\">    configObj:handleConfig(name, proxy)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-单独一套sqlite-lua查询接口\"><a href=\"#4-单独一套sqlite-lua查询接口\" class=\"headerlink\" title=\"4.单独一套sqlite lua查询接口\"></a>4.单独一套sqlite lua查询接口</h3><p>用于业务查询配置，区别于以往方案的baseConfig类。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> M = class(<span class=\"string\">&quot;SqliteMonoMgr&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 根据id查询</span></span><br><span class=\"line\"><span class=\"comment\">-- @return 返回主键查询结果，只有一条数据返回数据本身，多条数据返回table（多个主键的情况）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:findById</span><span class=\"params\">(tableName, value, pk)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> GameUtils.isEmptyString(tableName) <span class=\"keyword\">then</span></span><br><span class=\"line\">        printError(<span class=\"string\">&quot;tableName is nil.&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> pk==<span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        pk = <span class=\"string\">&quot;id&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._cache[tableName] <span class=\"keyword\">and</span> <span class=\"built_in\">self</span>._cache[tableName][value] <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findById 命中缓存耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName, value, pk)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._cache[tableName][value]</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:SQLSelect(tableName, <span class=\"string\">&quot;*&quot;</span>, <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&quot;where %s=%s&quot;</span>, pk, value))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> dataList = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">self</span>._cache[tableName] <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName] = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> #dataList==<span class=\"number\">1</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName][value] = dataList[<span class=\"number\">1</span>]</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findById 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName, value, pk)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dataList[<span class=\"number\">1</span>]</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findById 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName, value, pk)</span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName][value] = dataList</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dataList</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 根据条件查询</span></span><br><span class=\"line\"><span class=\"comment\">-- @return 返回table</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:findAll</span><span class=\"params\">(tableName, ...)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br><span class=\"line\">    <span class=\"keyword\">local</span> conditions = &#123;...&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> #conditions==<span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">self</span>._loadedTable[tableName] <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>:loadConfigTable(tableName)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findAll 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._cache[tableName]</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">local</span> conditionStr = <span class=\"string\">&quot;where&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#conditions,<span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> key = conditions[i]</span><br><span class=\"line\">        <span class=\"keyword\">local</span> value = conditions[i+<span class=\"number\">1</span>]</span><br><span class=\"line\">        conditionStr = conditionStr..<span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&quot; %s=%s and&quot;</span>, key, value)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    conditionStr = <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(conditionStr, <span class=\"number\">1</span>, <span class=\"number\">-4</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;sql conditionStr:&quot;</span>, conditionStr)</span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:SQLSelect(tableName, <span class=\"string\">&quot;*&quot;</span>, conditionStr)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> dataList = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findAll 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataList</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 通过输入sql查询</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:findAllBySql</span><span class=\"params\">(sql)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">string</span>.isEmptyString(sql) <span class=\"keyword\">then</span> <span class=\"keyword\">return</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:ExecuteReader(sql)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> dataList = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findAllBySql 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataList</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-db化整为零\"><a href=\"#5-db化整为零\" class=\"headerlink\" title=\"5.db化整为零\"></a>5.db化整为零</h3><p>导表工具按Excel目录划分db，一级子目录下Excel表导入到db中，db名以目录名命名。</p>\n<p>同时游戏运行时支持多db连接。</p>\n<p>表划分db分类：</p>\n<ul>\n<li><p>经常改动的配置</p>\n</li>\n<li><p>很少改动的配置</p>\n</li>\n<li><p>剧情表</p>\n</li>\n</ul>\n<h3 id=\"6-压缩和热更db\"><a href=\"#6-压缩和热更db\" class=\"headerlink\" title=\"6.压缩和热更db\"></a>6.压缩和热更db</h3><p>制作Editor工具，使用ICSharpCode.SharpZipLib.Zip库压缩db，这个库有个控制压缩率的参数compressionLevel(0-9)，以上实测得到的压缩率使用参数值为5，压缩率80%左右。</p>\n<p>热更db主要是解压缩和提取替换db文件。</p>\n<h3 id=\"7-数据量大的表的读取方式\"><a href=\"#7-数据量大的表的读取方式\" class=\"headerlink\" title=\"7.数据量大的表的读取方式\"></a>7.数据量大的表的读取方式</h3><p>比如language表有13w条数据，这样的表一般不能整个表加载，而要逐条根据id加载+缓存的方式，需要测试下性能。</p>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><h3 id=\"1-Mono-Data-Sqlite-dll\"><a href=\"#1-Mono-Data-Sqlite-dll\" class=\"headerlink\" title=\"1.Mono.Data.Sqlite.dll\"></a>1.Mono.Data.Sqlite.dll</h3><p>根据网上的资料实测，不能使用Editor\\Data\\MonoBleedingEdge\\lib\\mono\\2.0-api目录下的Mono.Data.Sqlite.dll，使用这个dll打成apk会报类的属性和方法引用空报错。说明不兼容。</p>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_SUK4XBL1kd.png\" class=\"\">\n<p>而应该引用\\Editor\\Data\\Mono\\lib\\mono\\2.0目录下的Mono.Data.Sqlite.dll，即使两者都是Targets .NET 3.5。</p>\n<p>使用的Unity版本是Unity2020.3.2f1，其下没有\\Editor\\Data\\Mono目录，但发现<strong>2018.2.3f1，2017.4.37f1下</strong>有这个目录 <strong>。</strong></p>\n<p>一开始就使用了Editor\\Data\\MonoBleedingEdge\\下的，Editor上测试正常使用，但是安卓上Mono.Data.Sqlite下的类的某些属性和方法会不兼容报空引用报错（state属性、CreateCommand方法）。</p>\n<p>从<strong>2018.2.3f1</strong>下拷贝过来使用，Editor和apk上测试正常了。理解应该是\\Editor\\Data\\Mono\\lib\\mono\\2.0下的dll才兼容，而且这个dll在vs上可以查看到源码。</p>\n<p>用ILSpy反编译dll对比：</p>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_S_dTSQElWB.png\" class=\"\">\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_DulaDCWifu.png\" class=\"\">\n<p>最大区别就是版本和Runtime不一样、一个包含源代码和一个只包含了元数据。空报错的原因最大可能是没有把执行代码编译进来。</p>\n<h3 id=\"2-Net-Standard-2-0和-Net-4-x\"><a href=\"#2-Net-Standard-2-0和-Net-4-x\" class=\"headerlink\" title=\"2..Net Standard 2.0和.Net 4.x\"></a>2..Net Standard <a target=\"_blank\" rel=\"noopener\" href=\"http://2.xn--0-se9a.Net\" title=\"2.0和.Net\">2.0和.Net</a> 4.x</h3><p>Project Setting&gt;player的Api Compatibility Level选择2.0或4.x，测试都是正常。</p>\n<h3 id=\"3-System-Data-dll\"><a href=\"#3-System-Data-dll\" class=\"headerlink\" title=\"3.System.Data.dll\"></a>3.System.Data.dll</h3><p>网上说需要引入这个dll，但是实测不引入也正常使用。</p>\n<h3 id=\"4-connectionString和db存放位置\"><a href=\"#4-connectionString和db存放位置\" class=\"headerlink\" title=\"4.connectionString和db存放位置\"></a>4.connectionString和db存放位置</h3><p>安卓上connectionString使用data source=或者URI=file:都可以，但是后面路径不能包内路径，即jar:file://开头的，不然读取失败报错：System.ArgumentException: Invalid ConnectionString format。</p>\n<p>db文件只能放在外部可读写目录，即Application.persistentDataPath。db位于包体内，需要拷贝到外部目录。</p>\n<p>参考：</p>\n<ul>\n<li><p><a target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity\" title=\"https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity\">https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/112232175\" title=\"https://zhuanlan.zhihu.com/p/112232175\">https://zhuanlan.zhihu.com/p/112232175</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<!-- # SQLite替换lua配置表方案实现 -->\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前游戏中的配置数据实在启动时一次性全部加载进内存，这种方式会造成一定的浪费。而SQLite是一个轻量级的、动态连接的数据库引擎。</p>\n<p>下文探索使用SQLite替换Lua配置表解决内存浪费方案的实现。</p>","more":"<h2 id=\"splite库的编译与引入\"><a href=\"#splite库的编译与引入\" class=\"headerlink\" title=\"splite库的编译与引入\"></a>splite库的编译与引入</h2><p>两个方向：</p>\n<p>1.C#层引入sqlite3.dll，写好接口，暴露给lua层调用。</p>\n<p>sqlite3.dll引入：<a target=\"_blank\" rel=\"noopener\" href=\"https://cloud.tencent.com/developer/news/314242\" title=\"https://cloud.tencent.com/developer/news/314242\">https://cloud.tencent.com/developer/news/314242</a></p>\n<p>2.lua层使用第三方库lsqlite3，将lsqlite3库编译进tolua.dll，在lua层直接链接并操作数据库。</p>\n<p>如何将三方库编译进tolua：<a target=\"_blank\" rel=\"noopener\" href=\"https://blog.csdn.net/linxinfa/article/details/90046840。\" title=\"https://blog.csdn.net/linxinfa/article/details/90046840。\">https://blog.csdn.net/linxinfa/article/details/90046840。</a></p>\n<p>这个方案代价是需要将各个平台的tolua动态库文件都编译一遍，将lsqlite3库包含进来。</p>\n<p>有两个三方库文件可以使用：</p>\n<p>1.lsqlite3：动态链接sqlite3（所以需要将sqlite3也编译进tolua）。</p>\n<p>2.lsqlite3complete：包含sqlite3在内，静态链接sqlite3（不用再将sqlite3编译进tolua）。</p>\n<h2 id=\"测试数据\"><a href=\"#测试数据\" class=\"headerlink\" title=\"测试数据\"></a>测试数据</h2><p>unity：2020.3.2f</p>\n<p>真机：联想 拯救者2 pro/CPU晓龙888/内存8GB/Android 11</p>\n<h3 id=\"1-堆内存对比\"><a href=\"#1-堆内存对比\" class=\"headerlink\" title=\"1.堆内存对比\"></a>1.堆内存对比</h3><table>\n<thead>\n<tr>\n<th></th>\n<th><strong>首次进入主界面</strong></th>\n<th><strong>播放剧情</strong></th>\n<th><strong>过一遍各个系统</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lua配置表全加载</td>\n<td>11.2MB</td>\n<td>11.54MB</td>\n<td>16.4MB</td>\n</tr>\n<tr>\n<td>sqlite按需加载</td>\n<td>9.2MB</td>\n<td>9.45MB</td>\n<td>15.69MB</td>\n</tr>\n</tbody>\n</table>\n<p>由于2020unity打的包真机上连不上profiler，所以以上数据在<strong>Editor</strong>用工具测试lua内存。</p>\n<p>简单对比，sqlite按需加载配置方案在内存上比全加载lua配置表要<strong>节省内存。</strong> 理由可想而知，不必要的配置不用加载进内存。</p>\n<h3 id=\"2-执行时间对比\"><a href=\"#2-执行时间对比\" class=\"headerlink\" title=\"2.执行时间对比\"></a>2.执行时间对比</h3><p>a.启动方式耗时对比</p>\n<table>\n<thead>\n<tr>\n<th><strong>启动时配置的加载方式</strong></th>\n<th><strong>Editor-时间(s)</strong></th>\n<th><strong>Android-时间(s)</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lua配置表全加载</td>\n<td>0.035</td>\n<td>0.030</td>\n</tr>\n<tr>\n<td>sqlite连接db，加载所有表并解析</td>\n<td>2.694</td>\n<td>1.242</td>\n</tr>\n<tr>\n<td>sqlite只链接db，按需加载表</td>\n<td>0.004</td>\n<td>0.016</td>\n</tr>\n</tbody>\n</table>\n<p>对比来看，启动时使用sqlite连接db按需加载表的方式快一点，但是比较是毫秒级别，原来的lua配置表全加载方式也不是很慢。</p>\n<p>b.查找时间对比</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><strong>查1次</strong></th>\n<th><strong>查100次</strong></th>\n<th><strong>查10000次</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lua配置表</td>\n<td>4.3e-05</td>\n<td>0.0005</td>\n<td>0.0025</td>\n</tr>\n<tr>\n<td>sqlite</td>\n<td>5.4e-05</td>\n<td>0.0285</td>\n<td>2.580</td>\n</tr>\n</tbody>\n</table>\n<p>配置表一般是只读，不会新增、修改、删除。从查找速度来看，肯定是lua配置表块，字典结构而且直接从内存中读，读取db就相对慢很多。单独看，单独一句查询id的sql执行效率也非常快。</p>\n<h3 id=\"3-热更新方式对比\"><a href=\"#3-热更新方式对比\" class=\"headerlink\" title=\"3.热更新方式对比\"></a>3.热更新方式对比</h3><p>数据量：</p>\n<ul>\n<li><p>小量数据：对标周更后的hotfix，一般只会修改一两处配置，修改数据量在个位数。</p>\n</li>\n<li><p>一般数据：对标周更，使用git命令统计食物语周更lua配置文件修改情况，大约会有20个左右文件被修改。</p>\n</li>\n<li><p>大量数据：对标月更，统计得出大约有150个lua配置文件被修改。</p>\n</li>\n</ul>\n<p>假设平均一个文件10行数据被修改，那么周更大约200条修改，月更大约1500条修改，一条修改对应一条sql语句。</p>\n<p>对于替换db的热更方式，不管数据量都是整个db替换。</p>\n<p>以下是测试数据，多次测量取平均的结果：</p>\n<table>\n<thead>\n<tr>\n<th><strong>【时间ms】</strong></th>\n<th><strong>小量数据(9)</strong></th>\n<th><strong>一般数据(200)</strong></th>\n<th><strong>一般数据(800)</strong></th>\n<th><strong>大量数据(1500)</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>热更sql （一个sql文件作为一条命令）</td>\n<td>12.9</td>\n<td>51.2</td>\n<td>892.3</td>\n<td>2717</td>\n</tr>\n</tbody>\n</table>\n<p>以下是热更不同大小db文件的统计情况：</p>\n<table>\n<thead>\n<tr>\n<th><strong>db大小</strong></th>\n<th><strong>1576kb（1.53MB）</strong></th>\n<th><strong>33.4MB</strong></th>\n<th><strong>60.6MB</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>压缩后</td>\n<td>284kb</td>\n<td>7.58MB</td>\n<td>15.7MB</td>\n</tr>\n<tr>\n<td>压缩率</td>\n<td>82%</td>\n<td>77%</td>\n<td>74%</td>\n</tr>\n<tr>\n<td>热更耗时ms (解压+替换+连接)</td>\n<td>81.6</td>\n<td>1000.5</td>\n<td>1778.7</td>\n</tr>\n</tbody>\n</table>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_gp3VMdO0Er.png\" class=\"\">\n<p>将两种方式放在一起对比，可以直观得出结论：<strong>hotfix、周更比较适合选sql方式，月更选替换db方式</strong>。</p>\n<p><strong>上面sql执行是一次性执行整个sql文件字符串，所以sql命令解析时间比较长。后面优化以行为单位执行sql文件，5000行左右的sql执行效率在0.5s左右，效率比替换30M DB还高。</strong></p>\n<h2 id=\"工作量设计\"><a href=\"#工作量设计\" class=\"headerlink\" title=\"工作量设计\"></a>工作量设计</h2><p>流程图：</p>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_iqXG1maoM7.png\" class=\"\">\n<h3 id=\"1-导表工具改造，cvs表格导入db\"><a href=\"#1-导表工具改造，cvs表格导入db\" class=\"headerlink\" title=\"1.导表工具改造，cvs表格导入db\"></a>1.导表工具改造，cvs表格导入db</h3><p>a.类型转换</p>\n<p>C#方法获取的数值类型在lua中属于userdata，发现的影响是不能直接和string直接拼接，稳妥起见，最好使用tonumber(tostring(userdata))转换为lua的数值类型。</p>\n<p>配置表中常见的类型需要对应db的存储类型：</p>\n<table>\n<thead>\n<tr>\n<th><strong>配置表中的类型</strong></th>\n<th><strong>number</strong></th>\n<th><strong>string&amp;mlstring</strong></th>\n<th><strong>float</strong></th>\n<th><strong>boolean</strong></th>\n<th><strong>datetime</strong></th>\n<th>[type] ([number]&amp;[string])</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>对应的db存储的类型</td>\n<td>int64</td>\n<td>string</td>\n<td>float</td>\n<td>boolean</td>\n<td>string</td>\n<td>string</td>\n</tr>\n</tbody>\n</table>\n<p>说明：[type]表示数组类型，元素类型多为number或者string，db中存储为string类型即可，lua中取出来时再解析为table。存为string时候，开头添加标识符<code>[type]:</code>，表示需要被解析。</p>\n<p>lua中获取各类型转换方式如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> fieldName, value = reader:GetName(i), <span class=\"literal\">nil</span>;</span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">type</span> = reader:GetFieldType(i);</span><br><span class=\"line\"><span class=\"built_in\">type</span> = <span class=\"built_in\">tostring</span>(<span class=\"built_in\">type</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Int64&quot;</span> <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Int32&quot;</span> <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Int16&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:get_Item(fieldName)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Float&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetFloat(i)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Double&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDouble(i)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Decimal&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDecimal(i)))</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.Boolean&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tostring</span>(reader:GetBoolean(i))==<span class=\"string\">&quot;true&quot;</span> <span class=\"keyword\">and</span> <span class=\"literal\">true</span> <span class=\"keyword\">or</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == <span class=\"string\">&quot;System.String&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    value = <span class=\"built_in\">tostring</span>(reader:get_Item(fieldName)</span><br><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"string\">&quot;[type]:&quot;</span> == <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">1</span>, <span class=\"number\">7</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">        value = GameUtils.json.decode(<span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">8</span>))</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>b.cvs2db数据解析导入工具</p>\n<p>sqlite清空表不支持TRUNCATE TABLE语句，需用DELETE FROM TableName。</p>\n<p>sqlite语句和传统的sql语句不太一样，比如不支持多行插入数据，只支持单行插入。</p>\n<p>推荐<a target=\"_blank\" rel=\"noopener\" href=\"http://sqlite.jsrun.net/\" title=\"在线sqlite运行工具\">在线sqlite运行工具</a>测试语句，或者在<a target=\"_blank\" rel=\"noopener\" href=\"https://www.navicat.com.cn/download/navicat-for-sqlite\" title=\"Navicat for SQLite\">Navicat for SQLite</a>软件上新建查询执行sql语句。</p>\n<h3 id=\"2-config类接口适配\"><a href=\"#2-config类接口适配\" class=\"headerlink\" title=\"2.config类接口适配\"></a>2.config类接口适配</h3><p>需要在lua层链接数据库，查询表读出数据，然后将数据格式化成相同结构的lua配置表类（t_xxx.lua），这样就可以低成本适配config类接口。</p>\n<p>这里关键点在于处理db数据类型转换lua数据类型，也就是上述的lua中获取各类型转换方式。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> M = class(<span class=\"string\">&quot;SqliteMonoMgr&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">local</span> TInt64 = <span class=\"string\">&quot;Int64&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TInt32 = <span class=\"string\">&quot;Int32&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TInt16 = <span class=\"string\">&quot;Int16&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TFloat = <span class=\"string\">&quot;Float&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TDouble = <span class=\"string\">&quot;Double&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TDecimal = <span class=\"string\">&quot;Decimal&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TBoolean = <span class=\"string\">&quot;Boolean&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TString = <span class=\"string\">&quot;String&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> TArrayPrefix = <span class=\"string\">&quot;[type]:&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:loadConfigTable</span><span class=\"params\">(tableName)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> ret,reader = <span class=\"literal\">true</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"built_in\">xpcall</span>(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> pks = <span class=\"built_in\">self</span>:_getPrimaryKeys(tableName)</span><br><span class=\"line\">        reader = <span class=\"built_in\">self</span>._sqliteManager:SQLSelect(tableName)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName] = <span class=\"built_in\">self</span>:_readConfigTable(reader, pks)</span><br><span class=\"line\">            <span class=\"built_in\">self</span>._loadedTable[tableName] = <span class=\"literal\">true</span></span><br><span class=\"line\">            reader:Close()</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            ret = <span class=\"literal\">false</span></span><br><span class=\"line\">            printWarn(<span class=\"string\">&quot;not such table &quot;</span>..tableName)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(err)</span></span></span><br><span class=\"line\">        ret = <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> reader <span class=\"keyword\">then</span></span><br><span class=\"line\">            reader:Close()</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        printError(err)</span><br><span class=\"line\">        <span class=\"comment\">-- self:close()</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret</span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:_readConfigTable</span><span class=\"params\">(reader, pks)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> configTable = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> reader.HasRows <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> configTable</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">local</span> dataList, title = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">    configTable.dataList = dataList</span><br><span class=\"line\">    <span class=\"comment\">-- 按索引构造字典</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> pkCount,temp = #pks,<span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> pkCount&gt;<span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(dataList) <span class=\"keyword\">do</span></span><br><span class=\"line\">            temp = configTable</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,pkCount,<span class=\"number\">1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">                <span class=\"keyword\">local</span> pk = pks[i]</span><br><span class=\"line\">                <span class=\"keyword\">local</span> pv = v[pk]</span><br><span class=\"line\">                <span class=\"keyword\">if</span> i==pkCount <span class=\"keyword\">then</span></span><br><span class=\"line\">                    temp[pv] = v</span><br><span class=\"line\">                    <span class=\"keyword\">break</span></span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> temp[pv] <span class=\"keyword\">then</span></span><br><span class=\"line\">                    temp[pv] = &#123;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">                temp = temp[pv]</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">         </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> configTable</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:_readDataListAndTitle</span><span class=\"params\">(reader)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> title = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">local</span> dataList = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> reader:Read() <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> visibleFieldCount, row = reader.VisibleFieldCount, &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i = <span class=\"number\">0</span>, visibleFieldCount - <span class=\"number\">1</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> fieldName, value = reader:GetName(i), <span class=\"literal\">nil</span>;</span><br><span class=\"line\">            title[fieldName] = i+<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> <span class=\"built_in\">type</span> = reader:GetFieldType(i);</span><br><span class=\"line\">            <span class=\"built_in\">type</span> = <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(<span class=\"built_in\">tostring</span>(<span class=\"built_in\">type</span>), <span class=\"number\">8</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == TInt64 <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == TInt32 <span class=\"keyword\">or</span> <span class=\"built_in\">type</span> == TInt16 <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:get_Item(fieldName)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TFloat <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetFloat(i)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TDouble <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDouble(i)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TDecimal <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tonumber</span>(<span class=\"built_in\">tostring</span>(reader:GetDecimal(i)))</span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TBoolean <span class=\"keyword\">then</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tostring</span>(reader:GetBoolean(i))==<span class=\"string\">&quot;true&quot;</span> <span class=\"keyword\">and</span> <span class=\"literal\">true</span> <span class=\"keyword\">or</span> <span class=\"literal\">false</span></span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> <span class=\"built_in\">type</span> == TString <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"comment\">-- value = reader:GetString(i)</span></span><br><span class=\"line\">                value = <span class=\"built_in\">tostring</span>(reader:get_Item(fieldName))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> TArrayPrefix == <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">1</span>, <span class=\"number\">7</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">                    value = GameUtils.json.decode(<span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(value, <span class=\"number\">8</span>))</span><br><span class=\"line\">                <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(row, value)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(dataList, row)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">     <span class=\"comment\">-- 构造元表</span></span><br><span class=\"line\">     <span class=\"keyword\">local</span> mt = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t, key)</span></span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> index = title[key]</span><br><span class=\"line\">            <span class=\"keyword\">if</span> index <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">rawget</span>(t, index)</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(dataList) <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(v, mt)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> dataList, title</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:_getPrimaryKeys</span><span class=\"params\">(tableName)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._tablePrimaryKeyCache[tableName] <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._tablePrimaryKeyCache[tableName]</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> pks = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:ExecuteReader(<span class=\"string\">&quot;PRAGMA table_info(&quot;</span>..tableName..<span class=\"string\">&quot;)&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> reader:Read() <span class=\"keyword\">do</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> isPk = reader:GetBoolean(reader:GetOrdinal(<span class=\"string\">&quot;pk&quot;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> isPk <span class=\"keyword\">then</span></span><br><span class=\"line\">                <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(pks, reader:get_Item(<span class=\"string\">&quot;name&quot;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>._tablePrimaryKeyCache[tableName] = pks</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pks</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-按需加载表\"><a href=\"#3-按需加载表\" class=\"headerlink\" title=\"3.按需加载表\"></a>3.按需加载表</h3><p>可以利用lua元表，当table索引一个表时再去查询db读取整个表并解析成lua配置表类。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> configDictMetaTable = &#123;</span><br><span class=\"line\">    <span class=\"built_in\">__index</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t, key)</span></span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">rawget</span>(t, key) <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;sqlite 加载表：&quot;</span> .. key)</span><br><span class=\"line\">            <span class=\"keyword\">local</span> configTable = SqliteMonoMgr.instance:findAll(key)</span><br><span class=\"line\">            <span class=\"built_in\">rawset</span>(t, key, configTable)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> configTable</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">ConfigMgr.instance.requestConfig = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(self, name, configObj)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> mt = <span class=\"built_in\">getmetatable</span>(configObj._dict)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> mt ~= configDictMetaTable <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(configObj._dict, configDictMetaTable)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> isExistInDB = SqliteMonoMgr.instance:isExistTable(name)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._configDict[name] <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> content = <span class=\"built_in\">self</span>._configDict[name]</span><br><span class=\"line\">        configObj:handleConfig(name, content)</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> content</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isExistInDB <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> <span class=\"built_in\">path</span> = <span class=\"built_in\">self</span>._pathPrefix .. name</span><br><span class=\"line\">            content = <span class=\"built_in\">require</span>(<span class=\"built_in\">path</span>)</span><br><span class=\"line\">            <span class=\"built_in\">self</span>._configDict[name] = content</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        configObj:handleConfig(name, content)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>框架中lua配置是预加载+全加载的，其实也可以利用元表做到懒加载，当真正用到数据是才加载。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">genProxyMt</span><span class=\"params\">(name, path)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> name = name</span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">path</span> = <span class=\"built_in\">path</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">loaded</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> datasource = <span class=\"literal\">nil</span></span><br><span class=\"line\">     </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(t, k)</span></span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">loaded</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">                datasource = <span class=\"built_in\">require</span>(<span class=\"built_in\">path</span>)</span><br><span class=\"line\">                ConfigMgr.instance:_preProcessConfig(datasource, name)</span><br><span class=\"line\">                <span class=\"built_in\">loaded</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> datasource[k]</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ConfigMgr:requestConfig</span><span class=\"params\">(name,configObj)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> proxy = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">local</span> mt_proxy = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">__index</span> = genProxyMt(name, <span class=\"built_in\">path</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">setmetatable</span>(proxy, mt_proxy)</span><br><span class=\"line\">    configObj:handleConfig(name, proxy)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-单独一套sqlite-lua查询接口\"><a href=\"#4-单独一套sqlite-lua查询接口\" class=\"headerlink\" title=\"4.单独一套sqlite lua查询接口\"></a>4.单独一套sqlite lua查询接口</h3><p>用于业务查询配置，区别于以往方案的baseConfig类。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> M = class(<span class=\"string\">&quot;SqliteMonoMgr&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 根据id查询</span></span><br><span class=\"line\"><span class=\"comment\">-- @return 返回主键查询结果，只有一条数据返回数据本身，多条数据返回table（多个主键的情况）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:findById</span><span class=\"params\">(tableName, value, pk)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> GameUtils.isEmptyString(tableName) <span class=\"keyword\">then</span></span><br><span class=\"line\">        printError(<span class=\"string\">&quot;tableName is nil.&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> pk==<span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        pk = <span class=\"string\">&quot;id&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">self</span>._cache[tableName] <span class=\"keyword\">and</span> <span class=\"built_in\">self</span>._cache[tableName][value] <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findById 命中缓存耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName, value, pk)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._cache[tableName][value]</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:SQLSelect(tableName, <span class=\"string\">&quot;*&quot;</span>, <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&quot;where %s=%s&quot;</span>, pk, value))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> dataList = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">self</span>._cache[tableName] <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName] = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> #dataList==<span class=\"number\">1</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName][value] = dataList[<span class=\"number\">1</span>]</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findById 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName, value, pk)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dataList[<span class=\"number\">1</span>]</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findById 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName, value, pk)</span><br><span class=\"line\">            <span class=\"built_in\">self</span>._cache[tableName][value] = dataList</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dataList</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 根据条件查询</span></span><br><span class=\"line\"><span class=\"comment\">-- @return 返回table</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:findAll</span><span class=\"params\">(tableName, ...)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br><span class=\"line\">    <span class=\"keyword\">local</span> conditions = &#123;...&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> #conditions==<span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">self</span>._loadedTable[tableName] <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">self</span>:loadConfigTable(tableName)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findAll 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>._cache[tableName]</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">local</span> conditionStr = <span class=\"string\">&quot;where&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#conditions,<span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> key = conditions[i]</span><br><span class=\"line\">        <span class=\"keyword\">local</span> value = conditions[i+<span class=\"number\">1</span>]</span><br><span class=\"line\">        conditionStr = conditionStr..<span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&quot; %s=%s and&quot;</span>, key, value)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    conditionStr = <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(conditionStr, <span class=\"number\">1</span>, <span class=\"number\">-4</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;sql conditionStr:&quot;</span>, conditionStr)</span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:SQLSelect(tableName, <span class=\"string\">&quot;*&quot;</span>, conditionStr)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> dataList = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findAll 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t, tableName)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataList</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">-- 通过输入sql查询</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">M:findAllBySql</span><span class=\"params\">(sql)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">string</span>.isEmptyString(sql) <span class=\"keyword\">then</span> <span class=\"keyword\">return</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br><span class=\"line\">    <span class=\"keyword\">local</span> reader = <span class=\"built_in\">self</span>._sqliteManager:ExecuteReader(sql)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reader <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> reader.IsClosed <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> dataList = <span class=\"built_in\">self</span>:_readDataListAndTitle(reader)</span><br><span class=\"line\">        reader:Close()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;findAllBySql 耗时：&quot;</span>..<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()-t)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataList</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-db化整为零\"><a href=\"#5-db化整为零\" class=\"headerlink\" title=\"5.db化整为零\"></a>5.db化整为零</h3><p>导表工具按Excel目录划分db，一级子目录下Excel表导入到db中，db名以目录名命名。</p>\n<p>同时游戏运行时支持多db连接。</p>\n<p>表划分db分类：</p>\n<ul>\n<li><p>经常改动的配置</p>\n</li>\n<li><p>很少改动的配置</p>\n</li>\n<li><p>剧情表</p>\n</li>\n</ul>\n<h3 id=\"6-压缩和热更db\"><a href=\"#6-压缩和热更db\" class=\"headerlink\" title=\"6.压缩和热更db\"></a>6.压缩和热更db</h3><p>制作Editor工具，使用ICSharpCode.SharpZipLib.Zip库压缩db，这个库有个控制压缩率的参数compressionLevel(0-9)，以上实测得到的压缩率使用参数值为5，压缩率80%左右。</p>\n<p>热更db主要是解压缩和提取替换db文件。</p>\n<h3 id=\"7-数据量大的表的读取方式\"><a href=\"#7-数据量大的表的读取方式\" class=\"headerlink\" title=\"7.数据量大的表的读取方式\"></a>7.数据量大的表的读取方式</h3><p>比如language表有13w条数据，这样的表一般不能整个表加载，而要逐条根据id加载+缓存的方式，需要测试下性能。</p>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><h3 id=\"1-Mono-Data-Sqlite-dll\"><a href=\"#1-Mono-Data-Sqlite-dll\" class=\"headerlink\" title=\"1.Mono.Data.Sqlite.dll\"></a>1.Mono.Data.Sqlite.dll</h3><p>根据网上的资料实测，不能使用Editor\\Data\\MonoBleedingEdge\\lib\\mono\\2.0-api目录下的Mono.Data.Sqlite.dll，使用这个dll打成apk会报类的属性和方法引用空报错。说明不兼容。</p>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_SUK4XBL1kd.png\" class=\"\">\n<p>而应该引用\\Editor\\Data\\Mono\\lib\\mono\\2.0目录下的Mono.Data.Sqlite.dll，即使两者都是Targets .NET 3.5。</p>\n<p>使用的Unity版本是Unity2020.3.2f1，其下没有\\Editor\\Data\\Mono目录，但发现<strong>2018.2.3f1，2017.4.37f1下</strong>有这个目录 <strong>。</strong></p>\n<p>一开始就使用了Editor\\Data\\MonoBleedingEdge\\下的，Editor上测试正常使用，但是安卓上Mono.Data.Sqlite下的类的某些属性和方法会不兼容报空引用报错（state属性、CreateCommand方法）。</p>\n<p>从<strong>2018.2.3f1</strong>下拷贝过来使用，Editor和apk上测试正常了。理解应该是\\Editor\\Data\\Mono\\lib\\mono\\2.0下的dll才兼容，而且这个dll在vs上可以查看到源码。</p>\n<p>用ILSpy反编译dll对比：</p>\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_S_dTSQElWB.png\" class=\"\">\n<img src=\"/2022/09/30/SQLite%E6%9B%BF%E6%8D%A2lua%E9%85%8D%E7%BD%AE%E8%A1%A8%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0/image_DulaDCWifu.png\" class=\"\">\n<p>最大区别就是版本和Runtime不一样、一个包含源代码和一个只包含了元数据。空报错的原因最大可能是没有把执行代码编译进来。</p>\n<h3 id=\"2-Net-Standard-2-0和-Net-4-x\"><a href=\"#2-Net-Standard-2-0和-Net-4-x\" class=\"headerlink\" title=\"2..Net Standard 2.0和.Net 4.x\"></a>2..Net Standard <a target=\"_blank\" rel=\"noopener\" href=\"http://2.xn--0-se9a.Net\" title=\"2.0和.Net\">2.0和.Net</a> 4.x</h3><p>Project Setting&gt;player的Api Compatibility Level选择2.0或4.x，测试都是正常。</p>\n<h3 id=\"3-System-Data-dll\"><a href=\"#3-System-Data-dll\" class=\"headerlink\" title=\"3.System.Data.dll\"></a>3.System.Data.dll</h3><p>网上说需要引入这个dll，但是实测不引入也正常使用。</p>\n<h3 id=\"4-connectionString和db存放位置\"><a href=\"#4-connectionString和db存放位置\" class=\"headerlink\" title=\"4.connectionString和db存放位置\"></a>4.connectionString和db存放位置</h3><p>安卓上connectionString使用data source=或者URI=file:都可以，但是后面路径不能包内路径，即jar:file://开头的，不然读取失败报错：System.ArgumentException: Invalid ConnectionString format。</p>\n<p>db文件只能放在外部可读写目录，即Application.persistentDataPath。db位于包体内，需要拷贝到外部目录。</p>\n<p>参考：</p>\n<ul>\n<li><p><a target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity\" title=\"https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity\">https://stackoverflow.com/questions/50753569/setup-database-sqlite-for-unity</a></p>\n</li>\n<li><p><a target=\"_blank\" rel=\"noopener\" href=\"https://zhuanlan.zhihu.com/p/112232175\" title=\"https://zhuanlan.zhihu.com/p/112232175\">https://zhuanlan.zhihu.com/p/112232175</a></p>\n</li>\n</ul>"},{"title":"游戏中特效加载原理和优化方法","date":"2021-01-24T16:00:00.000Z","_content":"\n<!-- more -->\n\n\n游戏项目中一般会用到一些优化手段，大部分优化的是资源的大小对内存的影响，比如项目中特效的加载会拥有两个类：photoFactoryEffect和photoMutilEffect\n\n**photoFactory与photoMutil的区别**\n\nphotoFactory是一个优化类，作用就是减轻通过photoMutil生成的特效克隆go的大小，优化的是内存\n\nphotoMutil生成一个挂载特效rt的go，真正管理特效的是photoProducer。\n\n**特效加载原理**\n\n特效的gameObject通过camaro和rt映射到其他的gameObject上，一个特效只会加载一次，利用rt分发多份。\n\n// PhotoEffectFactory.lua  module(\"logic.common.ugui.PhotoEffectFactory\",package.seeall)  local PhotoEffectFactory = class(\"PhotoEffectFactory\")  function PhotoEffectFactory:ctor()     self.\\_factoryContainer = goutil.create(\"PHOTOFACTORYROOT\", false)     GameUtils.setPos(self.\\_factoryContainer, -2500, 0, 0)     -- 所有生效的特效     self.\\_effects={}     -- 池化     self.\\_pool=ObjectPool.New(20,PhotoEffectFactory.\\_createEffect,         PhotoEffectFactory.\\_disposeEffect,         PhotoEffectFactory.\\_resetEffect         ) end  function PhotoEffectFactory.\\_createEffect()     local effect = {}     local container = goutil.create(\"eff\", true)     container.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     effect.container = container     effect.photoEff = Framework.LuaComponentContainer.Add(container, PhotoMultiEffect)     effect.photoEff:setEffectLoadedCallback(PhotoEffectFactory.\\_onEffectLoaded, PhotoEffectFactory.instance)     --克隆的特效     effect.clones={}     -- 引用数     effect.count=0     return effect end  function PhotoEffectFactory.\\_resetEffect(effect)     effect.count=0     effect.clones={}     effect.photoEff:clear() end  function PhotoEffectFactory.\\_disposeEffect(effect)     if not goutil.isNil(effect.container) then          goutil.destroy(effect.container)     end end  -- 外部接口：提供256 \\* 144规格的RT特效克隆体 --uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getSmallClonePhotoEffect(url, uiWidth, uiHeight)     return self:getClonePhotoEffect(url, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight, uiWidth, uiHeight) end  -- 外部接口：重新播放RT特效 function PhotoEffectFactory:rePlayPhotoEffect(url)     local photoData = url and self.\\_effects[url]     if photoData then         if not goutil.isNil(photoData.orgGoInst) then             goutil.setActive(photoData.orgGoInst, false)             goutil.setActive(photoData.orgGoInst, true)         end     end end  -- 获取克隆的RT特效预制物 --uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getClonePhotoEffect(url, rtWidth, rtHeight, uiWidth, uiHeight)     if GameUtils.isEmptyString(url) then         return     end     -- 如果未生成     local eff=self.\\_effects[url]     if eff==nil then         eff=self.\\_pool:fetchObject()         local container=eff.container         rtWidth = rtWidth or PhotoUtil.PartRTWidth         rtHeight = rtHeight or PhotoUtil.PartRTHeight         goutil.setWidth(container.transform, uiWidth or rtWidth)--ui尺寸默认是rt大小         goutil.setHeight(container.transform, uiHeight or rtHeight)         -- 放在factory root 下         goutil.addChildToParent(eff.container, self.\\_factoryContainer)         -- rename         eff.container.name=url         self.\\_effects[url]=eff         --临时处理，后续优化         if rtWidth == PhotoUtil.SmallRTWidth and rtHeight == PhotoUtil.SmallRTHeight then             eff.photoEff:showSmallEffect(url)         else                     eff.photoEff:showPartEffect(url)         end     end      eff.count = eff.count + 1     --只是克隆rawImage，transform     local objClone = goutil.create(tostring(eff.count),true)     objClone.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     GameUtils.copyRectTransform(objClone:GetComponent(goutil.Type\\_RectTransform), eff.container:GetComponent(goutil.Type\\_RectTransform))     GameUtils.copyRawImage(objClone:AddComponent(typeof(UnityEngine.UI.RawImage)), eff.container:GetComponent(typeof(UnityEngine.UI.RawImage)))     -- local objClone = goutil.clone(self.\\_urlToPhotoDict[url].container, tostring(self.\\_urlToPhotoDict[url].count))     -----------------------------     -- 判断当前特效是否已经加载完成，是则直接显示     if eff.photoEff:checkIsFinishLoadByUrl(url) then         local rawImageComp = objClone:GetComponent(typeof(UnityEngine.UI.RawImage))         if rawImageComp then             rawImageComp.enabled = true         end     end     table.insert(eff.clones, objClone)     return objClone end  -- 判断创建出来的GameObject的RT与复制品的RT是否指向同一张RT，如果不是，则需要将复制品指向的RT修改过来 function PhotoEffectFactory:\\_pointToSameRT(url)     local photoData = self.\\_effects[url]     if photoData and photoData.photoEff then         local orgRawImage = photoData.photoEff:getRawImage()         if orgRawImage then             local goCopy = photoData.clones and photoData.clones[1]             if not goutil.isNil(goCopy) then                 local copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                 if copyRawImage and orgRawImage.texture ~= copyRawImage.texture then                     for i = 1, #photoData.clones do                         goCopy = photoData.clones[i]                         if not goutil.isNil(goCopy) then                             copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                             if copyRawImage then                                 copyRawImage.texture = orgRawImage.texture                             end                         end                     end                 end             end         end     end end  function PhotoEffectFactory:turnOn(url)     if self.\\_effects and self.\\_effects[url] then         if self.\\_effects[url].photoEff then             self.\\_effects[url].photoEff:turnOn()             self:\\_pointToSameRT(url)         end     end end  function PhotoEffectFactory:turnOff(url)     if self.\\_effects and self.\\_effects[url] then         if self.\\_effects[url].photoEff then             self.\\_effects[url].photoEff:turnOff()           end     end end  function PhotoEffectFactory:\\_onEffectLoaded(goInst, res)     if res and res.ResPath then         local data = self.\\_effects and self.\\_effects[res.ResPath]         if data then             data.orgGoInst = goInst             if data.clones then                 local rawImageComp                 for i = 1, #data.clones do                     if not goutil.isNil(data.clones[i]) then                         rawImageComp = data.clones[i]:GetComponent(typeof(UnityEngine.UI.RawImage))                         if rawImageComp then                             rawImageComp.enabled = true                         end                     end                 end             end         end     end end  function PhotoEffectFactory:destroyClonePhotoEffect(url,justclear)     local photoEffect=self.\\_effects and self.\\_effects[url]      if photoEffect then         photoEffect.count = photoEffect.count - 1         if photoEffect.count <= 0 then             self.\\_pool:returnObject(photoEffect)             self.\\_effects[url]=nil         end     end end   -- 预留接口：清除所有的PhotoEffect function PhotoEffectFactory:destroy()     if self.\\_effects then         self.\\_pool:clear()         self.\\_effects={}     end end  PhotoEffectFactory.instance = PhotoEffectFactory.New()  return PhotoEffectFactory\n\n// photoMultiEffect.lua  module(\"logic.common.ugui.PhotoMultiEffect\", package.seeall)  local PhotoMultiEffect = class(\"PhotoMultiEffect\")  function PhotoMultiEffect:ctor(compContainer)     self.\\_compContainer = compContainer     self.\\_go = self.\\_compContainer.gameObject     self.\\_multiLoader = MultiResLoader.New() --资源的引用都在这里引用     self.\\_photo = Framework.PhotoBase.Add(self.\\_go)     self.\\_rtWidth = PhotoUtil.PartRTWidth     self.\\_rtHeight = PhotoUtil.PartRTHeight     self.\\_effectLoadedCallback = nil     self.\\_effectLoadedCallbackObj = nil     self.\\_effectOnePlayFinishCallback = nil     self.\\_effectOnePlayFinishCallbackObj = nil     self.\\_bInitUVRect = true     self.\\_urls = {}     self.\\_goInstList = {}     PhotoUtil.initPhotoSetting()     self:\\_initRawImage() end  function PhotoMultiEffect:\\_initRawImage()     if not goutil.isNil(self.\\_go) then         self.\\_rawImage = self.\\_go:GetComponent(typeof(UnityEngine.UI.RawImage))         if self.\\_rawImage == nil then             self.\\_rawImage = self.\\_go:AddComponent(typeof(UnityEngine.UI.RawImage))         end         self.\\_rawImage.enabled = false         self.\\_rawImage.raycastTarget = false         self.\\_rawImage.material = PhotoUtil.getEffMaterial()     end end  function PhotoMultiEffect:\\_setRawImageUVRect(rtWidth, rtHeight)     if self.\\_bInitUVRect and self.\\_rawImage then         self.\\_rtWidth = rtWidth         self.\\_rtHeight = rtHeight         PhotoUtil.setRTCapacity(rtWidth, rtHeight)         --计算RawImage的大小以及偏移         local uvRectW = math.min(1, goutil.getWidth(self.\\_go.transform) / rtWidth)         local uvRectH = math.min(1, goutil.getHeight(self.\\_go.transform) / rtHeight)         local uvRectX = (1 - uvRectW) \\* 0.5         local uvRectY = (1 - uvRectH) \\* 0.5         self.\\_rawImage.uvRect = UnityEngine.Rect.New(uvRectX, uvRectY, uvRectW, uvRectH)         self.\\_bInitUVRect = false     end end  -- 该接口只提供给PhotoEffectFactory使用，其他地方不允许调用 function PhotoMultiEffect:getRawImage()     return self.\\_rawImage end  function PhotoMultiEffect:setEffectLoadedCallback(callback, callbackObj)     self.\\_effectLoadedCallback = callback     self.\\_effectLoadedCallbackObj = callbackObj end  function PhotoMultiEffect:setEffectOnePlayFinishCallback(callback, callbackObj)     self.\\_effectOnePlayFinishCallback = callback     self.\\_effectOnePlayFinishCallbackObj = callbackObj end  function PhotoMultiEffect:setClickEnable(bRaycastTarget)     if self.\\_rawImage then         self.\\_rawImage.raycastTarget = bRaycastTarget     end end  function PhotoMultiEffect:setClickCallback(callback, callbackObj)     if callback == nil then         return     end     if goutil.isNil(self.\\_go) then         return     end     if not self.\\_btnClick then         local compButton = self.\\_go:GetComponent(typeof(UnityEngine.UI.Button))         if compButton == nil then             self.\\_go:AddComponent(typeof(UnityEngine.UI.Button))         end         self.\\_btnClick = Framework.ButtonAdapter.Get(self.\\_go)         self.\\_btnClick:AddClickListener(callback, callbackObj)     end end  -- 小图标规格的RT特效 256 \\* 144 function PhotoMultiEffect:showSmallEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight) end  -- 中等规格的RT特效 512 \\* 288 function PhotoMultiEffect:showPartEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.PartRTWidth, PhotoUtil.PartRTHeight) end  -- 全屏规格的RT特效 1280 \\* 720 function PhotoMultiEffect:showFullScreneEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.RTWidth, PhotoUtil.RTHeight) end  -- 最大全屏规格的RT特效 1560 \\* 720，不能再接受更大的尺寸规格 function PhotoMultiEffect:showMaxScreneEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.MaxRTWidth, PhotoUtil.MaxRTHeight) end  function PhotoMultiEffect:loadRes(urls, rtWidth, rtHeight)     if self.\\_photo == nil then         return     end     self:\\_setRawImageUVRect(rtWidth, rtHeight)     self.\\_photo:TurnOn(rtWidth, rtHeight)     self.\\_isOn = true     local renderTexture = self.\\_photo and self.\\_photo.producer and self.\\_photo.producer.renderTexture     if renderTexture == nil then         printError(\"renderTexture is nil, self.\\_go=\", self.\\_go.name)         self.\\_rawImage.enabled = false         return     -- 重复 photobase.turnOn里已经做了     -- else         -- self.\\_rawImage.texture = renderTexture     end     local len = #urls     for i = 1, len do         if not self.\\_urls then             self.\\_urls = {}         end         table.insert(self.\\_urls, urls[i])         self.\\_multiLoader:addResPath(urls[i])     end     PhotoUtil.addUsingRTCount(self, rtWidth, rtHeight)     --暂时没有全部加载完毕逻辑回调     self.\\_multiLoader:load(\\_, self.\\_onSingleResLoaded, self) end  function PhotoMultiEffect:\\_onSingleResLoaded(res)     if res.IsSuccess then         if goutil.isNil(self.\\_go) or self.\\_photo == nil then             self:clear()             return         end         --9/4修改：self.\\_isOn为false表示有两种情况，一种是在特效加载完成之前调用了turnOff接口，一种是调用了clear接口；         --按道理调用clear接口并不会回调到这里，所以处理第一种情况就好         if not self.\\_isOn then             if self.\\_urls == nil or #self.\\_urls == 0 then                 self:turnOff()                 return             end         end         local goInst         if self.\\_urls then             for i = #self.\\_urls, 1, -1 do                 if res.ResPath == self.\\_urls[i] then                     table.remove(self.\\_urls, i)                     goInst = goutil.clone(res:GetAsset(nil, nil))                     goInst.layer = Framework.LayerUtil.NameToLayer(PhotoUtil.LayerName)                     table.insert(self.\\_goInstList, goInst)                     break                 end             end         end         if goInst then             if self.\\_photo then                 --检查当前是turnOff还是turnOn                 -- goutil.setActive(goInst, self.\\_isOn)                 self.\\_rawImage.enabled = self.\\_isOn                 if self.\\_isOn then                     self.\\_photo:ShowTarget(goInst, true)                 else                     goutil.addChildToParent(goInst, self.\\_go)                 end             end             if self.\\_effectLoadedCallback then                 if self.\\_effectLoadedCallbackObj then                     self.\\_effectLoadedCallback(self.\\_effectLoadedCallbackObj, goInst, res)                 else                     self.\\_effectLoadedCallback(goInst, res)                 end             end             --检查美术是否有挂载EffectPlayer的组件             local \\_effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))             if \\_effectCSComp and not goutil.isNil(\\_effectCSComp) then                 --参数默认以组件的，暂不支持外部设置参数                 \\_effectCSComp:AddFinishListener(self.\\_onEffectOnePlayFinish, self)                 --加载好就立即执行play                 \\_effectCSComp:Play()             end         end     end end  --暂时没有全部播放完毕逻辑回调 function PhotoMultiEffect:\\_onEffectOnePlayFinish()     if goutil.isNil(self.\\_go) then         return     end     if self.\\_effectOnePlayFinishCallback then         if self.\\_effectOnePlayFinishCallbackObj then             self.\\_effectOnePlayFinishCallback(self.\\_effectOnePlayFinishCallbackObj)         else             self.\\_effectOnePlayFinishCallback()         end     end end  function PhotoMultiEffect:getFirstUrl()     return self.\\_urls and self.\\_urls[1] end  function PhotoMultiEffect:getUrlString()     return table.concat(self.\\_urls, \"#\") end  -- 根据传入的路径判断该特效是否已经加载完成 function PhotoMultiEffect:checkIsFinishLoadByUrl(url)     local bLoaded = false     if self.\\_multiLoader and self.\\_multiLoader:getResource(url) then         return true     end end  -- bReplay：是否重播，有些特效需要再次打开的时候调用 -- 注意：重播只针对本身是显示状态的特效，如果本身特效由于功能需要自己被隐藏，bReplay传入true也是没法重播 function PhotoMultiEffect:turnOn(bReplay)     if not self.\\_isOn then         if self.\\_rawImage then             self.\\_rawImage.enabled = true         end         if self.\\_goInstList and self.\\_photo then             self.\\_photo:TurnOn(self.\\_rtWidth, self.\\_rtHeight)             PhotoUtil.addUsingRTCount(self, self.\\_rtWidth, self.\\_rtHeight)             local goInst             for i = 1, #self.\\_goInstList do                 goInst = self.\\_goInstList[i]                 if not goutil.isNil(goInst) then                     if bReplay and goInst.activeSelf then                         goutil.setActive(goInst, false)                         goutil.setActive(goInst, true)                     end                     --检查美术是否有挂载EffectPlayer的组件                     local \\_effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))                     if \\_effectCSComp and not goutil.isNil(\\_effectCSComp) then                         \\_effectCSComp:Stop()                         \\_effectCSComp:RemoveFinishListener()                         --参数默认以组件的，暂不支持外部设置参数                         \\_effectCSComp:AddFinishListener(self.\\_onEffectOnePlayFinish, self)                         \\_effectCSComp:Play()                     end                     self.\\_photo:ShowTarget(goInst, true)                 end             end         end         self.\\_isOn = true     end end  function PhotoMultiEffect:turnOff()     if goutil.isNil(self.\\_go) then         return     end     if self.\\_isOn then         if self.\\_rawImage then             self.\\_rawImage.enabled = false         end         if self.\\_goInstList and self.\\_photo then             for i = 1, #self.\\_goInstList do                 if not goutil.isNil(self.\\_goInstList[i]) then                     --goutil.setActive(self.\\_goInstList[i], false)                     goutil.addChildToParent(self.\\_goInstList[i], self.\\_go)                 end             end         end         if self.\\_photo then             self.\\_photo:TurnOff()             PhotoUtil.reduceUsingRTCount(self, self.\\_rtWidth, self.\\_rtHeight)         end         self.\\_isOn = false     end end  function PhotoMultiEffect:clear()     self.\\_urls = {}     if self.\\_multiLoader then         self.\\_multiLoader:clear()     end     if self.\\_goInstList then         for i = 1, #self.\\_goInstList do             if not goutil.isNil(self.\\_goInstList[i]) then                 --检查美术是否有挂载EffectPlayer的组件                 local \\_effectCSComp = self.\\_goInstList[i]:GetComponent(typeof(Pjg.EffectPlayer))                 if \\_effectCSComp and not goutil.isNil(\\_effectCSComp) then                     \\_effectCSComp:Stop()                     \\_effectCSComp:RemoveFinishListener()                 end                 goutil.destroy(self.\\_goInstList[i])             end         end         self.\\_goInstList = {}     end     if self.\\_photo then         self.\\_photo:TurnOff()         PhotoUtil.reduceUsingRTCount(self, self.\\_rtWidth, self.\\_rtHeight)     end     self.\\_isOn = false     if goutil.isNil(self.\\_go) then         return     end     if self.\\_rawImage then         self.\\_rawImage.enabled = false     end     self.\\_bInitUVRect = true end  function PhotoMultiEffect:OnDestroy()     self:clear()     self.\\_multiLoader=nil     self.\\_compContainer = nil     self.\\_go = nil     self.\\_photo = nil     self.\\_rawImage = nil     self.\\_effectLoadedCallback = nil     self.\\_effectLoadedCallbackObj = nil     self.\\_effectOnePlayFinishCallback = nil     self.\\_effectOnePlayFinishCallbackObj = nil     self.\\_urls = nil     self.\\_goInstList = nil      if self.\\_btnClick then         self.\\_btnClick:RemoveClickListener()         self.\\_btnClick = nil     end end -- 判断是否是空闲，需要加载特效 function PhotoMultiEffect:isFree()     return not self.\\_isOn and self.\\_multiLoader.totalCount==0 end  return PhotoMultiEffect\n\n// PhotoBase.cs  using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI;  namespace Framework {     public class PhotoBase : MonoBehaviour      {         protected PhotoProducer \\_producer;         protected RawImage \\_rawImg;          public static PhotoBase Add(GameObject go)         {             return go.AddComponentOnce<PhotoBase>();         }          void Awake()         {             //2018/8/8修改,防止gameObject或父节点被隐藏，lua已经初始化RawImage后显示gameObject的时候Awake接口被调用             \\_rawImg = gameObject.GetComponent<RawImage> ();             if (\\_rawImg == null) {                 \\_rawImg = gameObject.AddComponentOnce<RawImage>();                 \\_rawImg.raycastTarget = false;                 \\_rawImg.texture = null;                 \\_rawImg.material = PhotoProducerCache.Instance.GetPhotoMaterial();             }         }          protected virtual void OnEnable()         {             if(\\_producer != null)             {                 \\_producer.producerContainer.SetActive(true);             }         }          protected virtual void OnDisable()         {             if(\\_producer != null && \\_producer.producerContainer != null)             {                 \\_producer.producerContainer.SetActive(false);             }         }          public void EnableClick(bool isEnable)         {             if(isEnable)             {                 \\_rawImg.raycastTarget = true;             }             else             {                 \\_rawImg.raycastTarget = false;             }         }          //在turn on的时候才有值         public PhotoProducer producer         {             get{ return \\_producer;}         }          //在turn on的时候才能调用         public void SetCameraPosition(float x,float y,float z)         {             GlobalObject.gVec3.x = x;             GlobalObject.gVec3.y = y;             GlobalObject.gVec3.z = z;              \\_producer.rtCamera.transform.localPosition = GlobalObject.gVec3;         }          //在turn on的时候才能调用         public void SetCameraRotation(float x,float y,float z)         {             \\_producer.rtCamera.transform.localRotation = Quaternion.Euler(x,y,z);         }          /\\*\\*          \\*  将一个物体放入拍摄空间内          \\* \\*/         public void ShowTarget(GameObject go,bool allSameLayer)         {             if(allSameLayer)                 go.SetLayerRecursively(PhotoProducerCache.Instance.GetCullingLayer());             else                 go.layer = PhotoProducerCache.Instance.GetCullingLayer();                          go.transform.SetParent(\\_producer.targetContainer.transform,false);         }          /\\*\\*          \\*  把拍摄目标全部移除          \\* \\*/         public void RemoveAllTargets()         {             GameObjectUtil.ClearChildren(\\_producer.targetContainer);         }                      public void TurnOn()         {             if(\\_producer == null)             {                 Rect size = (gameObject.transform as RectTransform).rect;                 \\_producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(size.width),Mathf.CeilToInt(size.height));                 \\_rawImg.texture = \\_producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 \\_producer.producerContainer.SetActive(true);             }             else             {                 \\_producer.producerContainer.SetActive(false);             }         }          /// <summary>         /// 重载TurnOn接口，支持外部传入需要创建的RT大小         /// </summary>         public void TurnOn(float width, float height)         {             if(\\_producer == null)             {                 if (\\_rawImg == null) {                     \\_rawImg = gameObject.GetComponent<RawImage> ();                 }                 \\_producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(width),Mathf.CeilToInt(height));                 \\_rawImg.texture = \\_producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 \\_producer.producerContainer.SetActive(true);             }             else             {                 \\_producer.producerContainer.SetActive(false);             }         }          public bool IsOn         {             get{ return \\_producer != null;}         }          public void TurnOff()         {             if(\\_producer != null)             {                 PhotoProducerCache.Instance.Return(\\_producer);                 \\_producer = null;             }         }          void OnDestroy()         {             TurnOff();         }     } }\n\n// photoProducer.cs  using System.Collections; using System.Collections.Generic; using UnityEngine;  namespace Framework  {     public class PhotoProducer     {         private GameObject \\_rtContainer;         private GameObject \\_targetContainer;         private Camera \\_rtCamera;         private RenderTexture \\_rt;          public GameObject producerContainer         {             get { return \\_rtContainer;}         }          public GameObject targetContainer         {             get {return \\_targetContainer;}         }          public Camera rtCamera         {             get {return \\_rtCamera;}         }          public RenderTexture renderTexture         {             get {return \\_rt;}         }          public PhotoProducer(int width,int height,int cullingMask,int rtDepth,RenderTextureFormat rtFormat,int antiAliasing)         {             \\_rtContainer = new GameObject(\"PhotoProducer\\_\" + PhotoProducerCounter.GetCounter());              \\_targetContainer = new GameObject(\"TargetContainer\");             \\_targetContainer.transform.SetParent(\\_rtContainer.transform,false);              \\_rtContainer.transform.position = PhotoProducerCounter.GenPosition();             GameObject.DontDestroyOnLoad(\\_rtContainer);              GameObject cameraObj = new GameObject(\"Camera\");             cameraObj.transform.SetParent(\\_rtContainer.transform, false);             this.\\_rtCamera = cameraObj.AddComponent<Camera>();             this.\\_rtCamera.useOcclusionCulling = false;              \\_rtCamera.enabled = true;             \\_rtCamera.clearFlags = CameraClearFlags.SolidColor;             \\_rtCamera.backgroundColor = new Color(0, 0, 0, 0);             \\_rtCamera.cullingMask = cullingMask;             \\_rtCamera.targetTexture = \\_rt;             \\_rtCamera.farClipPlane = 1000;              \\_rt = new RenderTexture(width, height,rtDepth,rtFormat);             if(antiAliasing > 0)                 \\_rt.antiAliasing = antiAliasing;              \\_rtCamera.targetTexture = \\_rt;         }          public void Dispose()         {             if (\\_rtCamera != null) {                 \\_rtCamera.targetTexture = null;             }             if(\\_rt != null)             {                 GameObject.Destroy(\\_rt);                 \\_rt = null;             }             GameObjectUtil.Destroy(\\_rtContainer);         }     } }\n\n\n// photoProducerCache.cs  using System.Collections.Generic; using UnityEngine;  namespace Framework {     /\\*\\*      \\*  UI特效公用的RenderTexture缓存 以及 用于绘制的Camera和GameObject      \\*  RenderTexture的大小  有若干种规格,游戏项目中规划好预定的几种规格规范      \\*  规格1   1136 640                                    \\*  规格2   200\\*200      \\* \\*/     public class PhotoProducerCache : Singleton<PhotoProducerCache>     {         //一些设置         private int \\_photoCullingLayer = 0;         private int \\_photoCullingMask = 0;          private int \\_rtDepth = 32;         private RenderTextureFormat \\_rtFormat = RenderTextureFormat.ARGB32;          private int \\_antiAliasing = 2;         private Material \\_photoMat;          //每种规格 对应的 缓存RenderTexture列表         private Dictionary<int,List<PhotoProducer>> \\_cache = new Dictionary<int,List<PhotoProducer>>();         private Dictionary<int,int> \\_capacityDict = new Dictionary<int, int>();          public void SetAALevel(int aaLevel)         {             this.\\_antiAliasing = aaLevel;         }          public void SetCullingLayer(int mask)         {             \\_photoCullingLayer = mask;             \\_photoCullingMask = 1<<\\_photoCullingLayer;         }          public int GetCullingLayer()         {             return \\_photoCullingLayer;         }                      public void SetRenderTextureDepth(int depth)         {             \\_rtDepth = depth;         }          public void SetRenderTextureFormat(RenderTextureFormat format)         {             \\_rtFormat = format;         }                      public void SetCapacity(int width,int height,int capacity)         {             int key = (width << 16) + height;             \\_capacityDict[key] = capacity;         }          public void SetPhotoMaterial(Material mat)         {             \\_photoMat = mat;         }          public Material GetPhotoMaterial()         {             return \\_photoMat;         }                      public PhotoProducer Fetch(int width,int height)         {             if(width <= 0 || height <= 0) return null;             int key = (width << 16) + height;             PhotoProducer producer;             if(\\_cache.ContainsKey(key))             {                 List<PhotoProducer> producers = \\_cache[key];                 if(producers.Count > 0)                 {                     producer = producers[producers.Count-1];                     producer.targetContainer.SetActive(true);                     producers.RemoveAt(producers.Count-1);                 }                 else                 {                     producer =  new PhotoProducer(width,height,\\_photoCullingMask,\\_rtDepth,\\_rtFormat,\\_antiAliasing);                 }             }             else             {                 producer = new PhotoProducer(width,height,\\_photoCullingMask,\\_rtDepth,\\_rtFormat,\\_antiAliasing);             }             return producer;         }          public void Return(PhotoProducer producer)         {             if(producer == null) return;             RenderTexture rt = producer.renderTexture;             int key = (rt.width << 16) + rt.height;             int capacity;             \\_capacityDict.TryGetValue(key,out capacity);              if(capacity > 0)             {                 List<PhotoProducer> producers;                 \\_cache.TryGetValue(key,out producers);                 if(producers == null)                 {                     producers = new List<PhotoProducer>();                     \\_cache[key] = producers;                 }                  if(producers.Count < capacity)                   {                     if (producer.producerContainer) {                         producer.producerContainer.SetActive(false);                     }                     producers.Add(producer);                 }                 else //剩余容量不够了，销毁掉                 {                     producer.Dispose();                 }             }             else //不需要缓存的             {                 producer.Dispose();             }         }            } }\n\n","source":"_posts/游戏中特效加载原理和优化方法.md","raw":"---\ntitle: 游戏中特效加载原理和优化方法\ndate: 2021-01-25\ntags: [特效]\ncategories: [Unity游戏开发,Unity,特效]\n---\n\n<!-- more -->\n\n\n游戏项目中一般会用到一些优化手段，大部分优化的是资源的大小对内存的影响，比如项目中特效的加载会拥有两个类：photoFactoryEffect和photoMutilEffect\n\n**photoFactory与photoMutil的区别**\n\nphotoFactory是一个优化类，作用就是减轻通过photoMutil生成的特效克隆go的大小，优化的是内存\n\nphotoMutil生成一个挂载特效rt的go，真正管理特效的是photoProducer。\n\n**特效加载原理**\n\n特效的gameObject通过camaro和rt映射到其他的gameObject上，一个特效只会加载一次，利用rt分发多份。\n\n// PhotoEffectFactory.lua  module(\"logic.common.ugui.PhotoEffectFactory\",package.seeall)  local PhotoEffectFactory = class(\"PhotoEffectFactory\")  function PhotoEffectFactory:ctor()     self.\\_factoryContainer = goutil.create(\"PHOTOFACTORYROOT\", false)     GameUtils.setPos(self.\\_factoryContainer, -2500, 0, 0)     -- 所有生效的特效     self.\\_effects={}     -- 池化     self.\\_pool=ObjectPool.New(20,PhotoEffectFactory.\\_createEffect,         PhotoEffectFactory.\\_disposeEffect,         PhotoEffectFactory.\\_resetEffect         ) end  function PhotoEffectFactory.\\_createEffect()     local effect = {}     local container = goutil.create(\"eff\", true)     container.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     effect.container = container     effect.photoEff = Framework.LuaComponentContainer.Add(container, PhotoMultiEffect)     effect.photoEff:setEffectLoadedCallback(PhotoEffectFactory.\\_onEffectLoaded, PhotoEffectFactory.instance)     --克隆的特效     effect.clones={}     -- 引用数     effect.count=0     return effect end  function PhotoEffectFactory.\\_resetEffect(effect)     effect.count=0     effect.clones={}     effect.photoEff:clear() end  function PhotoEffectFactory.\\_disposeEffect(effect)     if not goutil.isNil(effect.container) then          goutil.destroy(effect.container)     end end  -- 外部接口：提供256 \\* 144规格的RT特效克隆体 --uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getSmallClonePhotoEffect(url, uiWidth, uiHeight)     return self:getClonePhotoEffect(url, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight, uiWidth, uiHeight) end  -- 外部接口：重新播放RT特效 function PhotoEffectFactory:rePlayPhotoEffect(url)     local photoData = url and self.\\_effects[url]     if photoData then         if not goutil.isNil(photoData.orgGoInst) then             goutil.setActive(photoData.orgGoInst, false)             goutil.setActive(photoData.orgGoInst, true)         end     end end  -- 获取克隆的RT特效预制物 --uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getClonePhotoEffect(url, rtWidth, rtHeight, uiWidth, uiHeight)     if GameUtils.isEmptyString(url) then         return     end     -- 如果未生成     local eff=self.\\_effects[url]     if eff==nil then         eff=self.\\_pool:fetchObject()         local container=eff.container         rtWidth = rtWidth or PhotoUtil.PartRTWidth         rtHeight = rtHeight or PhotoUtil.PartRTHeight         goutil.setWidth(container.transform, uiWidth or rtWidth)--ui尺寸默认是rt大小         goutil.setHeight(container.transform, uiHeight or rtHeight)         -- 放在factory root 下         goutil.addChildToParent(eff.container, self.\\_factoryContainer)         -- rename         eff.container.name=url         self.\\_effects[url]=eff         --临时处理，后续优化         if rtWidth == PhotoUtil.SmallRTWidth and rtHeight == PhotoUtil.SmallRTHeight then             eff.photoEff:showSmallEffect(url)         else                     eff.photoEff:showPartEffect(url)         end     end      eff.count = eff.count + 1     --只是克隆rawImage，transform     local objClone = goutil.create(tostring(eff.count),true)     objClone.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     GameUtils.copyRectTransform(objClone:GetComponent(goutil.Type\\_RectTransform), eff.container:GetComponent(goutil.Type\\_RectTransform))     GameUtils.copyRawImage(objClone:AddComponent(typeof(UnityEngine.UI.RawImage)), eff.container:GetComponent(typeof(UnityEngine.UI.RawImage)))     -- local objClone = goutil.clone(self.\\_urlToPhotoDict[url].container, tostring(self.\\_urlToPhotoDict[url].count))     -----------------------------     -- 判断当前特效是否已经加载完成，是则直接显示     if eff.photoEff:checkIsFinishLoadByUrl(url) then         local rawImageComp = objClone:GetComponent(typeof(UnityEngine.UI.RawImage))         if rawImageComp then             rawImageComp.enabled = true         end     end     table.insert(eff.clones, objClone)     return objClone end  -- 判断创建出来的GameObject的RT与复制品的RT是否指向同一张RT，如果不是，则需要将复制品指向的RT修改过来 function PhotoEffectFactory:\\_pointToSameRT(url)     local photoData = self.\\_effects[url]     if photoData and photoData.photoEff then         local orgRawImage = photoData.photoEff:getRawImage()         if orgRawImage then             local goCopy = photoData.clones and photoData.clones[1]             if not goutil.isNil(goCopy) then                 local copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                 if copyRawImage and orgRawImage.texture ~= copyRawImage.texture then                     for i = 1, #photoData.clones do                         goCopy = photoData.clones[i]                         if not goutil.isNil(goCopy) then                             copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                             if copyRawImage then                                 copyRawImage.texture = orgRawImage.texture                             end                         end                     end                 end             end         end     end end  function PhotoEffectFactory:turnOn(url)     if self.\\_effects and self.\\_effects[url] then         if self.\\_effects[url].photoEff then             self.\\_effects[url].photoEff:turnOn()             self:\\_pointToSameRT(url)         end     end end  function PhotoEffectFactory:turnOff(url)     if self.\\_effects and self.\\_effects[url] then         if self.\\_effects[url].photoEff then             self.\\_effects[url].photoEff:turnOff()           end     end end  function PhotoEffectFactory:\\_onEffectLoaded(goInst, res)     if res and res.ResPath then         local data = self.\\_effects and self.\\_effects[res.ResPath]         if data then             data.orgGoInst = goInst             if data.clones then                 local rawImageComp                 for i = 1, #data.clones do                     if not goutil.isNil(data.clones[i]) then                         rawImageComp = data.clones[i]:GetComponent(typeof(UnityEngine.UI.RawImage))                         if rawImageComp then                             rawImageComp.enabled = true                         end                     end                 end             end         end     end end  function PhotoEffectFactory:destroyClonePhotoEffect(url,justclear)     local photoEffect=self.\\_effects and self.\\_effects[url]      if photoEffect then         photoEffect.count = photoEffect.count - 1         if photoEffect.count <= 0 then             self.\\_pool:returnObject(photoEffect)             self.\\_effects[url]=nil         end     end end   -- 预留接口：清除所有的PhotoEffect function PhotoEffectFactory:destroy()     if self.\\_effects then         self.\\_pool:clear()         self.\\_effects={}     end end  PhotoEffectFactory.instance = PhotoEffectFactory.New()  return PhotoEffectFactory\n\n// photoMultiEffect.lua  module(\"logic.common.ugui.PhotoMultiEffect\", package.seeall)  local PhotoMultiEffect = class(\"PhotoMultiEffect\")  function PhotoMultiEffect:ctor(compContainer)     self.\\_compContainer = compContainer     self.\\_go = self.\\_compContainer.gameObject     self.\\_multiLoader = MultiResLoader.New() --资源的引用都在这里引用     self.\\_photo = Framework.PhotoBase.Add(self.\\_go)     self.\\_rtWidth = PhotoUtil.PartRTWidth     self.\\_rtHeight = PhotoUtil.PartRTHeight     self.\\_effectLoadedCallback = nil     self.\\_effectLoadedCallbackObj = nil     self.\\_effectOnePlayFinishCallback = nil     self.\\_effectOnePlayFinishCallbackObj = nil     self.\\_bInitUVRect = true     self.\\_urls = {}     self.\\_goInstList = {}     PhotoUtil.initPhotoSetting()     self:\\_initRawImage() end  function PhotoMultiEffect:\\_initRawImage()     if not goutil.isNil(self.\\_go) then         self.\\_rawImage = self.\\_go:GetComponent(typeof(UnityEngine.UI.RawImage))         if self.\\_rawImage == nil then             self.\\_rawImage = self.\\_go:AddComponent(typeof(UnityEngine.UI.RawImage))         end         self.\\_rawImage.enabled = false         self.\\_rawImage.raycastTarget = false         self.\\_rawImage.material = PhotoUtil.getEffMaterial()     end end  function PhotoMultiEffect:\\_setRawImageUVRect(rtWidth, rtHeight)     if self.\\_bInitUVRect and self.\\_rawImage then         self.\\_rtWidth = rtWidth         self.\\_rtHeight = rtHeight         PhotoUtil.setRTCapacity(rtWidth, rtHeight)         --计算RawImage的大小以及偏移         local uvRectW = math.min(1, goutil.getWidth(self.\\_go.transform) / rtWidth)         local uvRectH = math.min(1, goutil.getHeight(self.\\_go.transform) / rtHeight)         local uvRectX = (1 - uvRectW) \\* 0.5         local uvRectY = (1 - uvRectH) \\* 0.5         self.\\_rawImage.uvRect = UnityEngine.Rect.New(uvRectX, uvRectY, uvRectW, uvRectH)         self.\\_bInitUVRect = false     end end  -- 该接口只提供给PhotoEffectFactory使用，其他地方不允许调用 function PhotoMultiEffect:getRawImage()     return self.\\_rawImage end  function PhotoMultiEffect:setEffectLoadedCallback(callback, callbackObj)     self.\\_effectLoadedCallback = callback     self.\\_effectLoadedCallbackObj = callbackObj end  function PhotoMultiEffect:setEffectOnePlayFinishCallback(callback, callbackObj)     self.\\_effectOnePlayFinishCallback = callback     self.\\_effectOnePlayFinishCallbackObj = callbackObj end  function PhotoMultiEffect:setClickEnable(bRaycastTarget)     if self.\\_rawImage then         self.\\_rawImage.raycastTarget = bRaycastTarget     end end  function PhotoMultiEffect:setClickCallback(callback, callbackObj)     if callback == nil then         return     end     if goutil.isNil(self.\\_go) then         return     end     if not self.\\_btnClick then         local compButton = self.\\_go:GetComponent(typeof(UnityEngine.UI.Button))         if compButton == nil then             self.\\_go:AddComponent(typeof(UnityEngine.UI.Button))         end         self.\\_btnClick = Framework.ButtonAdapter.Get(self.\\_go)         self.\\_btnClick:AddClickListener(callback, callbackObj)     end end  -- 小图标规格的RT特效 256 \\* 144 function PhotoMultiEffect:showSmallEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight) end  -- 中等规格的RT特效 512 \\* 288 function PhotoMultiEffect:showPartEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.PartRTWidth, PhotoUtil.PartRTHeight) end  -- 全屏规格的RT特效 1280 \\* 720 function PhotoMultiEffect:showFullScreneEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.RTWidth, PhotoUtil.RTHeight) end  -- 最大全屏规格的RT特效 1560 \\* 720，不能再接受更大的尺寸规格 function PhotoMultiEffect:showMaxScreneEffect(...)     local urls = {...}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.MaxRTWidth, PhotoUtil.MaxRTHeight) end  function PhotoMultiEffect:loadRes(urls, rtWidth, rtHeight)     if self.\\_photo == nil then         return     end     self:\\_setRawImageUVRect(rtWidth, rtHeight)     self.\\_photo:TurnOn(rtWidth, rtHeight)     self.\\_isOn = true     local renderTexture = self.\\_photo and self.\\_photo.producer and self.\\_photo.producer.renderTexture     if renderTexture == nil then         printError(\"renderTexture is nil, self.\\_go=\", self.\\_go.name)         self.\\_rawImage.enabled = false         return     -- 重复 photobase.turnOn里已经做了     -- else         -- self.\\_rawImage.texture = renderTexture     end     local len = #urls     for i = 1, len do         if not self.\\_urls then             self.\\_urls = {}         end         table.insert(self.\\_urls, urls[i])         self.\\_multiLoader:addResPath(urls[i])     end     PhotoUtil.addUsingRTCount(self, rtWidth, rtHeight)     --暂时没有全部加载完毕逻辑回调     self.\\_multiLoader:load(\\_, self.\\_onSingleResLoaded, self) end  function PhotoMultiEffect:\\_onSingleResLoaded(res)     if res.IsSuccess then         if goutil.isNil(self.\\_go) or self.\\_photo == nil then             self:clear()             return         end         --9/4修改：self.\\_isOn为false表示有两种情况，一种是在特效加载完成之前调用了turnOff接口，一种是调用了clear接口；         --按道理调用clear接口并不会回调到这里，所以处理第一种情况就好         if not self.\\_isOn then             if self.\\_urls == nil or #self.\\_urls == 0 then                 self:turnOff()                 return             end         end         local goInst         if self.\\_urls then             for i = #self.\\_urls, 1, -1 do                 if res.ResPath == self.\\_urls[i] then                     table.remove(self.\\_urls, i)                     goInst = goutil.clone(res:GetAsset(nil, nil))                     goInst.layer = Framework.LayerUtil.NameToLayer(PhotoUtil.LayerName)                     table.insert(self.\\_goInstList, goInst)                     break                 end             end         end         if goInst then             if self.\\_photo then                 --检查当前是turnOff还是turnOn                 -- goutil.setActive(goInst, self.\\_isOn)                 self.\\_rawImage.enabled = self.\\_isOn                 if self.\\_isOn then                     self.\\_photo:ShowTarget(goInst, true)                 else                     goutil.addChildToParent(goInst, self.\\_go)                 end             end             if self.\\_effectLoadedCallback then                 if self.\\_effectLoadedCallbackObj then                     self.\\_effectLoadedCallback(self.\\_effectLoadedCallbackObj, goInst, res)                 else                     self.\\_effectLoadedCallback(goInst, res)                 end             end             --检查美术是否有挂载EffectPlayer的组件             local \\_effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))             if \\_effectCSComp and not goutil.isNil(\\_effectCSComp) then                 --参数默认以组件的，暂不支持外部设置参数                 \\_effectCSComp:AddFinishListener(self.\\_onEffectOnePlayFinish, self)                 --加载好就立即执行play                 \\_effectCSComp:Play()             end         end     end end  --暂时没有全部播放完毕逻辑回调 function PhotoMultiEffect:\\_onEffectOnePlayFinish()     if goutil.isNil(self.\\_go) then         return     end     if self.\\_effectOnePlayFinishCallback then         if self.\\_effectOnePlayFinishCallbackObj then             self.\\_effectOnePlayFinishCallback(self.\\_effectOnePlayFinishCallbackObj)         else             self.\\_effectOnePlayFinishCallback()         end     end end  function PhotoMultiEffect:getFirstUrl()     return self.\\_urls and self.\\_urls[1] end  function PhotoMultiEffect:getUrlString()     return table.concat(self.\\_urls, \"#\") end  -- 根据传入的路径判断该特效是否已经加载完成 function PhotoMultiEffect:checkIsFinishLoadByUrl(url)     local bLoaded = false     if self.\\_multiLoader and self.\\_multiLoader:getResource(url) then         return true     end end  -- bReplay：是否重播，有些特效需要再次打开的时候调用 -- 注意：重播只针对本身是显示状态的特效，如果本身特效由于功能需要自己被隐藏，bReplay传入true也是没法重播 function PhotoMultiEffect:turnOn(bReplay)     if not self.\\_isOn then         if self.\\_rawImage then             self.\\_rawImage.enabled = true         end         if self.\\_goInstList and self.\\_photo then             self.\\_photo:TurnOn(self.\\_rtWidth, self.\\_rtHeight)             PhotoUtil.addUsingRTCount(self, self.\\_rtWidth, self.\\_rtHeight)             local goInst             for i = 1, #self.\\_goInstList do                 goInst = self.\\_goInstList[i]                 if not goutil.isNil(goInst) then                     if bReplay and goInst.activeSelf then                         goutil.setActive(goInst, false)                         goutil.setActive(goInst, true)                     end                     --检查美术是否有挂载EffectPlayer的组件                     local \\_effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))                     if \\_effectCSComp and not goutil.isNil(\\_effectCSComp) then                         \\_effectCSComp:Stop()                         \\_effectCSComp:RemoveFinishListener()                         --参数默认以组件的，暂不支持外部设置参数                         \\_effectCSComp:AddFinishListener(self.\\_onEffectOnePlayFinish, self)                         \\_effectCSComp:Play()                     end                     self.\\_photo:ShowTarget(goInst, true)                 end             end         end         self.\\_isOn = true     end end  function PhotoMultiEffect:turnOff()     if goutil.isNil(self.\\_go) then         return     end     if self.\\_isOn then         if self.\\_rawImage then             self.\\_rawImage.enabled = false         end         if self.\\_goInstList and self.\\_photo then             for i = 1, #self.\\_goInstList do                 if not goutil.isNil(self.\\_goInstList[i]) then                     --goutil.setActive(self.\\_goInstList[i], false)                     goutil.addChildToParent(self.\\_goInstList[i], self.\\_go)                 end             end         end         if self.\\_photo then             self.\\_photo:TurnOff()             PhotoUtil.reduceUsingRTCount(self, self.\\_rtWidth, self.\\_rtHeight)         end         self.\\_isOn = false     end end  function PhotoMultiEffect:clear()     self.\\_urls = {}     if self.\\_multiLoader then         self.\\_multiLoader:clear()     end     if self.\\_goInstList then         for i = 1, #self.\\_goInstList do             if not goutil.isNil(self.\\_goInstList[i]) then                 --检查美术是否有挂载EffectPlayer的组件                 local \\_effectCSComp = self.\\_goInstList[i]:GetComponent(typeof(Pjg.EffectPlayer))                 if \\_effectCSComp and not goutil.isNil(\\_effectCSComp) then                     \\_effectCSComp:Stop()                     \\_effectCSComp:RemoveFinishListener()                 end                 goutil.destroy(self.\\_goInstList[i])             end         end         self.\\_goInstList = {}     end     if self.\\_photo then         self.\\_photo:TurnOff()         PhotoUtil.reduceUsingRTCount(self, self.\\_rtWidth, self.\\_rtHeight)     end     self.\\_isOn = false     if goutil.isNil(self.\\_go) then         return     end     if self.\\_rawImage then         self.\\_rawImage.enabled = false     end     self.\\_bInitUVRect = true end  function PhotoMultiEffect:OnDestroy()     self:clear()     self.\\_multiLoader=nil     self.\\_compContainer = nil     self.\\_go = nil     self.\\_photo = nil     self.\\_rawImage = nil     self.\\_effectLoadedCallback = nil     self.\\_effectLoadedCallbackObj = nil     self.\\_effectOnePlayFinishCallback = nil     self.\\_effectOnePlayFinishCallbackObj = nil     self.\\_urls = nil     self.\\_goInstList = nil      if self.\\_btnClick then         self.\\_btnClick:RemoveClickListener()         self.\\_btnClick = nil     end end -- 判断是否是空闲，需要加载特效 function PhotoMultiEffect:isFree()     return not self.\\_isOn and self.\\_multiLoader.totalCount==0 end  return PhotoMultiEffect\n\n// PhotoBase.cs  using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI;  namespace Framework {     public class PhotoBase : MonoBehaviour      {         protected PhotoProducer \\_producer;         protected RawImage \\_rawImg;          public static PhotoBase Add(GameObject go)         {             return go.AddComponentOnce<PhotoBase>();         }          void Awake()         {             //2018/8/8修改,防止gameObject或父节点被隐藏，lua已经初始化RawImage后显示gameObject的时候Awake接口被调用             \\_rawImg = gameObject.GetComponent<RawImage> ();             if (\\_rawImg == null) {                 \\_rawImg = gameObject.AddComponentOnce<RawImage>();                 \\_rawImg.raycastTarget = false;                 \\_rawImg.texture = null;                 \\_rawImg.material = PhotoProducerCache.Instance.GetPhotoMaterial();             }         }          protected virtual void OnEnable()         {             if(\\_producer != null)             {                 \\_producer.producerContainer.SetActive(true);             }         }          protected virtual void OnDisable()         {             if(\\_producer != null && \\_producer.producerContainer != null)             {                 \\_producer.producerContainer.SetActive(false);             }         }          public void EnableClick(bool isEnable)         {             if(isEnable)             {                 \\_rawImg.raycastTarget = true;             }             else             {                 \\_rawImg.raycastTarget = false;             }         }          //在turn on的时候才有值         public PhotoProducer producer         {             get{ return \\_producer;}         }          //在turn on的时候才能调用         public void SetCameraPosition(float x,float y,float z)         {             GlobalObject.gVec3.x = x;             GlobalObject.gVec3.y = y;             GlobalObject.gVec3.z = z;              \\_producer.rtCamera.transform.localPosition = GlobalObject.gVec3;         }          //在turn on的时候才能调用         public void SetCameraRotation(float x,float y,float z)         {             \\_producer.rtCamera.transform.localRotation = Quaternion.Euler(x,y,z);         }          /\\*\\*          \\*  将一个物体放入拍摄空间内          \\* \\*/         public void ShowTarget(GameObject go,bool allSameLayer)         {             if(allSameLayer)                 go.SetLayerRecursively(PhotoProducerCache.Instance.GetCullingLayer());             else                 go.layer = PhotoProducerCache.Instance.GetCullingLayer();                          go.transform.SetParent(\\_producer.targetContainer.transform,false);         }          /\\*\\*          \\*  把拍摄目标全部移除          \\* \\*/         public void RemoveAllTargets()         {             GameObjectUtil.ClearChildren(\\_producer.targetContainer);         }                      public void TurnOn()         {             if(\\_producer == null)             {                 Rect size = (gameObject.transform as RectTransform).rect;                 \\_producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(size.width),Mathf.CeilToInt(size.height));                 \\_rawImg.texture = \\_producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 \\_producer.producerContainer.SetActive(true);             }             else             {                 \\_producer.producerContainer.SetActive(false);             }         }          /// <summary>         /// 重载TurnOn接口，支持外部传入需要创建的RT大小         /// </summary>         public void TurnOn(float width, float height)         {             if(\\_producer == null)             {                 if (\\_rawImg == null) {                     \\_rawImg = gameObject.GetComponent<RawImage> ();                 }                 \\_producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(width),Mathf.CeilToInt(height));                 \\_rawImg.texture = \\_producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 \\_producer.producerContainer.SetActive(true);             }             else             {                 \\_producer.producerContainer.SetActive(false);             }         }          public bool IsOn         {             get{ return \\_producer != null;}         }          public void TurnOff()         {             if(\\_producer != null)             {                 PhotoProducerCache.Instance.Return(\\_producer);                 \\_producer = null;             }         }          void OnDestroy()         {             TurnOff();         }     } }\n\n// photoProducer.cs  using System.Collections; using System.Collections.Generic; using UnityEngine;  namespace Framework  {     public class PhotoProducer     {         private GameObject \\_rtContainer;         private GameObject \\_targetContainer;         private Camera \\_rtCamera;         private RenderTexture \\_rt;          public GameObject producerContainer         {             get { return \\_rtContainer;}         }          public GameObject targetContainer         {             get {return \\_targetContainer;}         }          public Camera rtCamera         {             get {return \\_rtCamera;}         }          public RenderTexture renderTexture         {             get {return \\_rt;}         }          public PhotoProducer(int width,int height,int cullingMask,int rtDepth,RenderTextureFormat rtFormat,int antiAliasing)         {             \\_rtContainer = new GameObject(\"PhotoProducer\\_\" + PhotoProducerCounter.GetCounter());              \\_targetContainer = new GameObject(\"TargetContainer\");             \\_targetContainer.transform.SetParent(\\_rtContainer.transform,false);              \\_rtContainer.transform.position = PhotoProducerCounter.GenPosition();             GameObject.DontDestroyOnLoad(\\_rtContainer);              GameObject cameraObj = new GameObject(\"Camera\");             cameraObj.transform.SetParent(\\_rtContainer.transform, false);             this.\\_rtCamera = cameraObj.AddComponent<Camera>();             this.\\_rtCamera.useOcclusionCulling = false;              \\_rtCamera.enabled = true;             \\_rtCamera.clearFlags = CameraClearFlags.SolidColor;             \\_rtCamera.backgroundColor = new Color(0, 0, 0, 0);             \\_rtCamera.cullingMask = cullingMask;             \\_rtCamera.targetTexture = \\_rt;             \\_rtCamera.farClipPlane = 1000;              \\_rt = new RenderTexture(width, height,rtDepth,rtFormat);             if(antiAliasing > 0)                 \\_rt.antiAliasing = antiAliasing;              \\_rtCamera.targetTexture = \\_rt;         }          public void Dispose()         {             if (\\_rtCamera != null) {                 \\_rtCamera.targetTexture = null;             }             if(\\_rt != null)             {                 GameObject.Destroy(\\_rt);                 \\_rt = null;             }             GameObjectUtil.Destroy(\\_rtContainer);         }     } }\n\n\n// photoProducerCache.cs  using System.Collections.Generic; using UnityEngine;  namespace Framework {     /\\*\\*      \\*  UI特效公用的RenderTexture缓存 以及 用于绘制的Camera和GameObject      \\*  RenderTexture的大小  有若干种规格,游戏项目中规划好预定的几种规格规范      \\*  规格1   1136 640                                    \\*  规格2   200\\*200      \\* \\*/     public class PhotoProducerCache : Singleton<PhotoProducerCache>     {         //一些设置         private int \\_photoCullingLayer = 0;         private int \\_photoCullingMask = 0;          private int \\_rtDepth = 32;         private RenderTextureFormat \\_rtFormat = RenderTextureFormat.ARGB32;          private int \\_antiAliasing = 2;         private Material \\_photoMat;          //每种规格 对应的 缓存RenderTexture列表         private Dictionary<int,List<PhotoProducer>> \\_cache = new Dictionary<int,List<PhotoProducer>>();         private Dictionary<int,int> \\_capacityDict = new Dictionary<int, int>();          public void SetAALevel(int aaLevel)         {             this.\\_antiAliasing = aaLevel;         }          public void SetCullingLayer(int mask)         {             \\_photoCullingLayer = mask;             \\_photoCullingMask = 1<<\\_photoCullingLayer;         }          public int GetCullingLayer()         {             return \\_photoCullingLayer;         }                      public void SetRenderTextureDepth(int depth)         {             \\_rtDepth = depth;         }          public void SetRenderTextureFormat(RenderTextureFormat format)         {             \\_rtFormat = format;         }                      public void SetCapacity(int width,int height,int capacity)         {             int key = (width << 16) + height;             \\_capacityDict[key] = capacity;         }          public void SetPhotoMaterial(Material mat)         {             \\_photoMat = mat;         }          public Material GetPhotoMaterial()         {             return \\_photoMat;         }                      public PhotoProducer Fetch(int width,int height)         {             if(width <= 0 || height <= 0) return null;             int key = (width << 16) + height;             PhotoProducer producer;             if(\\_cache.ContainsKey(key))             {                 List<PhotoProducer> producers = \\_cache[key];                 if(producers.Count > 0)                 {                     producer = producers[producers.Count-1];                     producer.targetContainer.SetActive(true);                     producers.RemoveAt(producers.Count-1);                 }                 else                 {                     producer =  new PhotoProducer(width,height,\\_photoCullingMask,\\_rtDepth,\\_rtFormat,\\_antiAliasing);                 }             }             else             {                 producer = new PhotoProducer(width,height,\\_photoCullingMask,\\_rtDepth,\\_rtFormat,\\_antiAliasing);             }             return producer;         }          public void Return(PhotoProducer producer)         {             if(producer == null) return;             RenderTexture rt = producer.renderTexture;             int key = (rt.width << 16) + rt.height;             int capacity;             \\_capacityDict.TryGetValue(key,out capacity);              if(capacity > 0)             {                 List<PhotoProducer> producers;                 \\_cache.TryGetValue(key,out producers);                 if(producers == null)                 {                     producers = new List<PhotoProducer>();                     \\_cache[key] = producers;                 }                  if(producers.Count < capacity)                   {                     if (producer.producerContainer) {                         producer.producerContainer.SetActive(false);                     }                     producers.Add(producer);                 }                 else //剩余容量不够了，销毁掉                 {                     producer.Dispose();                 }             }             else //不需要缓存的             {                 producer.Dispose();             }         }            } }\n\n","slug":"游戏中特效加载原理和优化方法","published":1,"updated":"2022-12-07T13:34:27.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv5j009kmcq0c5nee2bz","content":"<span id=\"more\"></span>\n<p>游戏项目中一般会用到一些优化手段，大部分优化的是资源的大小对内存的影响，比如项目中特效的加载会拥有两个类：photoFactoryEffect和photoMutilEffect</p>\n<p><strong>photoFactory与photoMutil的区别</strong></p>\n<p>photoFactory是一个优化类，作用就是减轻通过photoMutil生成的特效克隆go的大小，优化的是内存</p>\n<p>photoMutil生成一个挂载特效rt的go，真正管理特效的是photoProducer。</p>\n<p><strong>特效加载原理</strong></p>\n<p>特效的gameObject通过camaro和rt映射到其他的gameObject上，一个特效只会加载一次，利用rt分发多份。</p>\n<p>// PhotoEffectFactory.lua  module(“logic.common.ugui.PhotoEffectFactory”,package.seeall)  local PhotoEffectFactory = class(“PhotoEffectFactory”)  function PhotoEffectFactory:ctor()     self._factoryContainer = goutil.create(“PHOTOFACTORYROOT”, false)     GameUtils.setPos(self._factoryContainer, -2500, 0, 0)     – 所有生效的特效     self._effects={}     – 池化     self._pool=ObjectPool.New(20,PhotoEffectFactory._createEffect,         PhotoEffectFactory._disposeEffect,         PhotoEffectFactory._resetEffect         ) end  function PhotoEffectFactory._createEffect()     local effect = {}     local container = goutil.create(“eff”, true)     container.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     effect.container = container     effect.photoEff = Framework.LuaComponentContainer.Add(container, PhotoMultiEffect)     effect.photoEff:setEffectLoadedCallback(PhotoEffectFactory._onEffectLoaded, PhotoEffectFactory.instance)     –克隆的特效     effect.clones={}     – 引用数     effect.count=0     return effect end  function PhotoEffectFactory._resetEffect(effect)     effect.count=0     effect.clones={}     effect.photoEff:clear() end  function PhotoEffectFactory._disposeEffect(effect)     if not goutil.isNil(effect.container) then          goutil.destroy(effect.container)     end end  – 外部接口：提供256 * 144规格的RT特效克隆体 –uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getSmallClonePhotoEffect(url, uiWidth, uiHeight)     return self:getClonePhotoEffect(url, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight, uiWidth, uiHeight) end  – 外部接口：重新播放RT特效 function PhotoEffectFactory:rePlayPhotoEffect(url)     local photoData = url and self._effects[url]     if photoData then         if not goutil.isNil(photoData.orgGoInst) then             goutil.setActive(photoData.orgGoInst, false)             goutil.setActive(photoData.orgGoInst, true)         end     end end  – 获取克隆的RT特效预制物 –uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getClonePhotoEffect(url, rtWidth, rtHeight, uiWidth, uiHeight)     if GameUtils.isEmptyString(url) then         return     end     – 如果未生成     local eff=self._effects[url]     if eff==nil then         eff=self._pool:fetchObject()         local container=eff.container         rtWidth = rtWidth or PhotoUtil.PartRTWidth         rtHeight = rtHeight or PhotoUtil.PartRTHeight         goutil.setWidth(container.transform, uiWidth or rtWidth)–ui尺寸默认是rt大小         goutil.setHeight(container.transform, uiHeight or rtHeight)         – 放在factory root 下         goutil.addChildToParent(eff.container, self._factoryContainer)         – rename         eff.container.name=url         self._effects[url]=eff         –临时处理，后续优化         if rtWidth == PhotoUtil.SmallRTWidth and rtHeight == PhotoUtil.SmallRTHeight then             eff.photoEff:showSmallEffect(url)         else                     eff.photoEff:showPartEffect(url)         end     end      eff.count = eff.count + 1     –只是克隆rawImage，transform     local objClone = goutil.create(tostring(eff.count),true)     objClone.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     GameUtils.copyRectTransform(objClone:GetComponent(goutil.Type_RectTransform), eff.container:GetComponent(goutil.Type_RectTransform))     GameUtils.copyRawImage(objClone:AddComponent(typeof(UnityEngine.UI.RawImage)), eff.container:GetComponent(typeof(UnityEngine.UI.RawImage)))     – local objClone = goutil.clone(self._urlToPhotoDict[url].container, tostring(self._urlToPhotoDict[url].count))     —————————–     – 判断当前特效是否已经加载完成，是则直接显示     if eff.photoEff:checkIsFinishLoadByUrl(url) then         local rawImageComp = objClone:GetComponent(typeof(UnityEngine.UI.RawImage))         if rawImageComp then             rawImageComp.enabled = true         end     end     table.insert(eff.clones, objClone)     return objClone end  – 判断创建出来的GameObject的RT与复制品的RT是否指向同一张RT，如果不是，则需要将复制品指向的RT修改过来 function PhotoEffectFactory:_pointToSameRT(url)     local photoData = self._effects[url]     if photoData and photoData.photoEff then         local orgRawImage = photoData.photoEff:getRawImage()         if orgRawImage then             local goCopy = photoData.clones and photoData.clones[1]             if not goutil.isNil(goCopy) then                 local copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                 if copyRawImage and orgRawImage.texture ~= copyRawImage.texture then                     for i = 1, #photoData.clones do                         goCopy = photoData.clones[i]                         if not goutil.isNil(goCopy) then                             copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                             if copyRawImage then                                 copyRawImage.texture = orgRawImage.texture                             end                         end                     end                 end             end         end     end end  function PhotoEffectFactory:turnOn(url)     if self._effects and self._effects[url] then         if self._effects[url].photoEff then             self._effects[url].photoEff:turnOn()             self:_pointToSameRT(url)         end     end end  function PhotoEffectFactory:turnOff(url)     if self._effects and self._effects[url] then         if self._effects[url].photoEff then             self._effects[url].photoEff:turnOff()           end     end end  function PhotoEffectFactory:_onEffectLoaded(goInst, res)     if res and res.ResPath then         local data = self._effects and self._effects[res.ResPath]         if data then             data.orgGoInst = goInst             if data.clones then                 local rawImageComp                 for i = 1, #data.clones do                     if not goutil.isNil(data.clones[i]) then                         rawImageComp = data.clones[i]:GetComponent(typeof(UnityEngine.UI.RawImage))                         if rawImageComp then                             rawImageComp.enabled = true                         end                     end                 end             end         end     end end  function PhotoEffectFactory:destroyClonePhotoEffect(url,justclear)     local photoEffect=self._effects and self._effects[url]      if photoEffect then         photoEffect.count = photoEffect.count - 1         if photoEffect.count &lt;= 0 then             self._pool:returnObject(photoEffect)             self._effects[url]=nil         end     end end   – 预留接口：清除所有的PhotoEffect function PhotoEffectFactory:destroy()     if self._effects then         self._pool:clear()         self._effects={}     end end  PhotoEffectFactory.instance = PhotoEffectFactory.New()  return PhotoEffectFactory</p>\n<p>// photoMultiEffect.lua  module(“logic.common.ugui.PhotoMultiEffect”, package.seeall)  local PhotoMultiEffect = class(“PhotoMultiEffect”)  function PhotoMultiEffect:ctor(compContainer)     self._compContainer = compContainer     self._go = self._compContainer.gameObject     self._multiLoader = MultiResLoader.New() –资源的引用都在这里引用     self._photo = Framework.PhotoBase.Add(self._go)     self._rtWidth = PhotoUtil.PartRTWidth     self._rtHeight = PhotoUtil.PartRTHeight     self._effectLoadedCallback = nil     self._effectLoadedCallbackObj = nil     self._effectOnePlayFinishCallback = nil     self._effectOnePlayFinishCallbackObj = nil     self._bInitUVRect = true     self._urls = {}     self._goInstList = {}     PhotoUtil.initPhotoSetting()     self:_initRawImage() end  function PhotoMultiEffect:_initRawImage()     if not goutil.isNil(self._go) then         self._rawImage = self._go:GetComponent(typeof(UnityEngine.UI.RawImage))         if self._rawImage == nil then             self._rawImage = self._go:AddComponent(typeof(UnityEngine.UI.RawImage))         end         self._rawImage.enabled = false         self._rawImage.raycastTarget = false         self._rawImage.material = PhotoUtil.getEffMaterial()     end end  function PhotoMultiEffect:_setRawImageUVRect(rtWidth, rtHeight)     if self._bInitUVRect and self._rawImage then         self._rtWidth = rtWidth         self._rtHeight = rtHeight         PhotoUtil.setRTCapacity(rtWidth, rtHeight)         –计算RawImage的大小以及偏移         local uvRectW = math.min(1, goutil.getWidth(self._go.transform) / rtWidth)         local uvRectH = math.min(1, goutil.getHeight(self._go.transform) / rtHeight)         local uvRectX = (1 - uvRectW) * 0.5         local uvRectY = (1 - uvRectH) * 0.5         self._rawImage.uvRect = UnityEngine.Rect.New(uvRectX, uvRectY, uvRectW, uvRectH)         self._bInitUVRect = false     end end  – 该接口只提供给PhotoEffectFactory使用，其他地方不允许调用 function PhotoMultiEffect:getRawImage()     return self._rawImage end  function PhotoMultiEffect:setEffectLoadedCallback(callback, callbackObj)     self._effectLoadedCallback = callback     self._effectLoadedCallbackObj = callbackObj end  function PhotoMultiEffect:setEffectOnePlayFinishCallback(callback, callbackObj)     self._effectOnePlayFinishCallback = callback     self._effectOnePlayFinishCallbackObj = callbackObj end  function PhotoMultiEffect:setClickEnable(bRaycastTarget)     if self._rawImage then         self._rawImage.raycastTarget = bRaycastTarget     end end  function PhotoMultiEffect:setClickCallback(callback, callbackObj)     if callback == nil then         return     end     if goutil.isNil(self._go) then         return     end     if not self._btnClick then         local compButton = self._go:GetComponent(typeof(UnityEngine.UI.Button))         if compButton == nil then             self._go:AddComponent(typeof(UnityEngine.UI.Button))         end         self._btnClick = Framework.ButtonAdapter.Get(self._go)         self._btnClick:AddClickListener(callback, callbackObj)     end end  – 小图标规格的RT特效 256 * 144 function PhotoMultiEffect:showSmallEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight) end  – 中等规格的RT特效 512 * 288 function PhotoMultiEffect:showPartEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.PartRTWidth, PhotoUtil.PartRTHeight) end  – 全屏规格的RT特效 1280 * 720 function PhotoMultiEffect:showFullScreneEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.RTWidth, PhotoUtil.RTHeight) end  – 最大全屏规格的RT特效 1560 * 720，不能再接受更大的尺寸规格 function PhotoMultiEffect:showMaxScreneEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.MaxRTWidth, PhotoUtil.MaxRTHeight) end  function PhotoMultiEffect:loadRes(urls, rtWidth, rtHeight)     if self._photo == nil then         return     end     self:_setRawImageUVRect(rtWidth, rtHeight)     self._photo:TurnOn(rtWidth, rtHeight)     self._isOn = true     local renderTexture = self._photo and self._photo.producer and self._photo.producer.renderTexture     if renderTexture == nil then         printError(“renderTexture is nil, self._go=”, self._go.name)         self._rawImage.enabled = false         return     – 重复 photobase.turnOn里已经做了     – else         – self._rawImage.texture = renderTexture     end     local len = #urls     for i = 1, len do         if not self._urls then             self._urls = {}         end         table.insert(self._urls, urls[i])         self._multiLoader:addResPath(urls[i])     end     PhotoUtil.addUsingRTCount(self, rtWidth, rtHeight)     –暂时没有全部加载完毕逻辑回调     self._multiLoader:load(_, self._onSingleResLoaded, self) end  function PhotoMultiEffect:_onSingleResLoaded(res)     if res.IsSuccess then         if goutil.isNil(self._go) or self._photo == nil then             self:clear()             return         end         –9/4修改：self._isOn为false表示有两种情况，一种是在特效加载完成之前调用了turnOff接口，一种是调用了clear接口；         –按道理调用clear接口并不会回调到这里，所以处理第一种情况就好         if not self._isOn then             if self._urls == nil or #self._urls == 0 then                 self:turnOff()                 return             end         end         local goInst         if self._urls then             for i = #self._urls, 1, -1 do                 if res.ResPath == self._urls[i] then                     table.remove(self._urls, i)                     goInst = goutil.clone(res:GetAsset(nil, nil))                     goInst.layer = Framework.LayerUtil.NameToLayer(PhotoUtil.LayerName)                     table.insert(self._goInstList, goInst)                     break                 end             end         end         if goInst then             if self._photo then                 –检查当前是turnOff还是turnOn                 – goutil.setActive(goInst, self._isOn)                 self._rawImage.enabled = self._isOn                 if self._isOn then                     self._photo:ShowTarget(goInst, true)                 else                     goutil.addChildToParent(goInst, self._go)                 end             end             if self._effectLoadedCallback then                 if self._effectLoadedCallbackObj then                     self._effectLoadedCallback(self._effectLoadedCallbackObj, goInst, res)                 else                     self._effectLoadedCallback(goInst, res)                 end             end             –检查美术是否有挂载EffectPlayer的组件             local _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))             if _effectCSComp and not goutil.isNil(_effectCSComp) then                 –参数默认以组件的，暂不支持外部设置参数                 _effectCSComp:AddFinishListener(self._onEffectOnePlayFinish, self)                 –加载好就立即执行play                 _effectCSComp:Play()             end         end     end end  –暂时没有全部播放完毕逻辑回调 function PhotoMultiEffect:_onEffectOnePlayFinish()     if goutil.isNil(self._go) then         return     end     if self._effectOnePlayFinishCallback then         if self._effectOnePlayFinishCallbackObj then             self._effectOnePlayFinishCallback(self._effectOnePlayFinishCallbackObj)         else             self._effectOnePlayFinishCallback()         end     end end  function PhotoMultiEffect:getFirstUrl()     return self._urls and self._urls[1] end  function PhotoMultiEffect:getUrlString()     return table.concat(self._urls, “#”) end  – 根据传入的路径判断该特效是否已经加载完成 function PhotoMultiEffect:checkIsFinishLoadByUrl(url)     local bLoaded = false     if self._multiLoader and self._multiLoader:getResource(url) then         return true     end end  – bReplay：是否重播，有些特效需要再次打开的时候调用 – 注意：重播只针对本身是显示状态的特效，如果本身特效由于功能需要自己被隐藏，bReplay传入true也是没法重播 function PhotoMultiEffect:turnOn(bReplay)     if not self._isOn then         if self._rawImage then             self._rawImage.enabled = true         end         if self._goInstList and self._photo then             self._photo:TurnOn(self._rtWidth, self._rtHeight)             PhotoUtil.addUsingRTCount(self, self._rtWidth, self._rtHeight)             local goInst             for i = 1, #self._goInstList do                 goInst = self._goInstList[i]                 if not goutil.isNil(goInst) then                     if bReplay and goInst.activeSelf then                         goutil.setActive(goInst, false)                         goutil.setActive(goInst, true)                     end                     –检查美术是否有挂载EffectPlayer的组件                     local _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))                     if _effectCSComp and not goutil.isNil(_effectCSComp) then                         _effectCSComp:Stop()                         _effectCSComp:RemoveFinishListener()                         –参数默认以组件的，暂不支持外部设置参数                         _effectCSComp:AddFinishListener(self._onEffectOnePlayFinish, self)                         _effectCSComp:Play()                     end                     self._photo:ShowTarget(goInst, true)                 end             end         end         self._isOn = true     end end  function PhotoMultiEffect:turnOff()     if goutil.isNil(self._go) then         return     end     if self._isOn then         if self._rawImage then             self._rawImage.enabled = false         end         if self._goInstList and self._photo then             for i = 1, #self._goInstList do                 if not goutil.isNil(self._goInstList[i]) then                     –goutil.setActive(self._goInstList[i], false)                     goutil.addChildToParent(self._goInstList[i], self._go)                 end             end         end         if self._photo then             self._photo:TurnOff()             PhotoUtil.reduceUsingRTCount(self, self._rtWidth, self._rtHeight)         end         self._isOn = false     end end  function PhotoMultiEffect:clear()     self._urls = {}     if self._multiLoader then         self._multiLoader:clear()     end     if self._goInstList then         for i = 1, #self._goInstList do             if not goutil.isNil(self._goInstList[i]) then                 –检查美术是否有挂载EffectPlayer的组件                 local _effectCSComp = self._goInstList[i]:GetComponent(typeof(Pjg.EffectPlayer))                 if _effectCSComp and not goutil.isNil(_effectCSComp) then                     _effectCSComp:Stop()                     _effectCSComp:RemoveFinishListener()                 end                 goutil.destroy(self._goInstList[i])             end         end         self._goInstList = {}     end     if self._photo then         self._photo:TurnOff()         PhotoUtil.reduceUsingRTCount(self, self._rtWidth, self._rtHeight)     end     self._isOn = false     if goutil.isNil(self._go) then         return     end     if self._rawImage then         self._rawImage.enabled = false     end     self._bInitUVRect = true end  function PhotoMultiEffect:OnDestroy()     self:clear()     self._multiLoader=nil     self._compContainer = nil     self._go = nil     self._photo = nil     self._rawImage = nil     self._effectLoadedCallback = nil     self._effectLoadedCallbackObj = nil     self._effectOnePlayFinishCallback = nil     self._effectOnePlayFinishCallbackObj = nil     self._urls = nil     self._goInstList = nil      if self._btnClick then         self._btnClick:RemoveClickListener()         self._btnClick = nil     end end – 判断是否是空闲，需要加载特效 function PhotoMultiEffect:isFree()     return not self._isOn and self._multiLoader.totalCount==0 end  return PhotoMultiEffect</p>\n<p>// PhotoBase.cs  using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI;  namespace Framework {     public class PhotoBase : MonoBehaviour      {         protected PhotoProducer _producer;         protected RawImage _rawImg;          public static PhotoBase Add(GameObject go)         {             return go.AddComponentOnce<PhotoBase>();         }          void Awake()         {             //2018/8/8修改,防止gameObject或父节点被隐藏，lua已经初始化RawImage后显示gameObject的时候Awake接口被调用             _rawImg = gameObject.GetComponent<RawImage> ();             if (_rawImg == null) {                 _rawImg = gameObject.AddComponentOnce<RawImage>();                 _rawImg.raycastTarget = false;                 _rawImg.texture = null;                 _rawImg.material = PhotoProducerCache.Instance.GetPhotoMaterial();             }         }          protected virtual void OnEnable()         {             if(_producer != null)             {                 _producer.producerContainer.SetActive(true);             }         }          protected virtual void OnDisable()         {             if(_producer != null &amp;&amp; _producer.producerContainer != null)             {                 _producer.producerContainer.SetActive(false);             }         }          public void EnableClick(bool isEnable)         {             if(isEnable)             {                 _rawImg.raycastTarget = true;             }             else             {                 _rawImg.raycastTarget = false;             }         }          //在turn on的时候才有值         public PhotoProducer producer         {             get{ return _producer;}         }          //在turn on的时候才能调用         public void SetCameraPosition(float x,float y,float z)         {             GlobalObject.gVec3.x = x;             GlobalObject.gVec3.y = y;             GlobalObject.gVec3.z = z;              _producer.rtCamera.transform.localPosition = GlobalObject.gVec3;         }          //在turn on的时候才能调用         public void SetCameraRotation(float x,float y,float z)         {             _producer.rtCamera.transform.localRotation = Quaternion.Euler(x,y,z);         }          /**          *  将一个物体放入拍摄空间内          * */         public void ShowTarget(GameObject go,bool allSameLayer)         {             if(allSameLayer)                 go.SetLayerRecursively(PhotoProducerCache.Instance.GetCullingLayer());             else                 go.layer = PhotoProducerCache.Instance.GetCullingLayer();                          go.transform.SetParent(_producer.targetContainer.transform,false);         }          /**          *  把拍摄目标全部移除          * */         public void RemoveAllTargets()         {             GameObjectUtil.ClearChildren(_producer.targetContainer);         }                      public void TurnOn()         {             if(_producer == null)             {                 Rect size = (gameObject.transform as RectTransform).rect;                 _producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(size.width),Mathf.CeilToInt(size.height));                 _rawImg.texture = _producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 _producer.producerContainer.SetActive(true);             }             else             {                 _producer.producerContainer.SetActive(false);             }         }          /// <summary>         /// 重载TurnOn接口，支持外部传入需要创建的RT大小         /// </summary>         public void TurnOn(float width, float height)         {             if(_producer == null)             {                 if (_rawImg == null) {                     _rawImg = gameObject.GetComponent<RawImage> ();                 }                 _producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(width),Mathf.CeilToInt(height));                 _rawImg.texture = _producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 _producer.producerContainer.SetActive(true);             }             else             {                 _producer.producerContainer.SetActive(false);             }         }          public bool IsOn         {             get{ return _producer != null;}         }          public void TurnOff()         {             if(_producer != null)             {                 PhotoProducerCache.Instance.Return(_producer);                 _producer = null;             }         }          void OnDestroy()         {             TurnOff();         }     } }</p>\n<p>// photoProducer.cs  using System.Collections; using System.Collections.Generic; using UnityEngine;  namespace Framework  {     public class PhotoProducer     {         private GameObject _rtContainer;         private GameObject _targetContainer;         private Camera _rtCamera;         private RenderTexture _rt;          public GameObject producerContainer         {             get { return _rtContainer;}         }          public GameObject targetContainer         {             get {return _targetContainer;}         }          public Camera rtCamera         {             get {return _rtCamera;}         }          public RenderTexture renderTexture         {             get {return _rt;}         }          public PhotoProducer(int width,int height,int cullingMask,int rtDepth,RenderTextureFormat rtFormat,int antiAliasing)         {             _rtContainer = new GameObject(“PhotoProducer_“ + PhotoProducerCounter.GetCounter());              _targetContainer = new GameObject(“TargetContainer”);             _targetContainer.transform.SetParent(_rtContainer.transform,false);              _rtContainer.transform.position = PhotoProducerCounter.GenPosition();             GameObject.DontDestroyOnLoad(_rtContainer);              GameObject cameraObj = new GameObject(“Camera”);             cameraObj.transform.SetParent(_rtContainer.transform, false);             this._rtCamera = cameraObj.AddComponent<Camera>();             this._rtCamera.useOcclusionCulling = false;              _rtCamera.enabled = true;             _rtCamera.clearFlags = CameraClearFlags.SolidColor;             _rtCamera.backgroundColor = new Color(0, 0, 0, 0);             _rtCamera.cullingMask = cullingMask;             _rtCamera.targetTexture = _rt;             _rtCamera.farClipPlane = 1000;              _rt = new RenderTexture(width, height,rtDepth,rtFormat);             if(antiAliasing &gt; 0)                 _rt.antiAliasing = antiAliasing;              _rtCamera.targetTexture = _rt;         }          public void Dispose()         {             if (_rtCamera != null) {                 _rtCamera.targetTexture = null;             }             if(_rt != null)             {                 GameObject.Destroy(_rt);                 _rt = null;             }             GameObjectUtil.Destroy(_rtContainer);         }     } }</p>\n<p>// photoProducerCache.cs  using System.Collections.Generic; using UnityEngine;  namespace Framework {     /**      *  UI特效公用的RenderTexture缓存 以及 用于绘制的Camera和GameObject      *  RenderTexture的大小  有若干种规格,游戏项目中规划好预定的几种规格规范      *  规格1   1136 640                                    *  规格2   200*200      * */     public class PhotoProducerCache : Singleton<PhotoProducerCache>     {         //一些设置         private int _photoCullingLayer = 0;         private int _photoCullingMask = 0;          private int _rtDepth = 32;         private RenderTextureFormat _rtFormat = RenderTextureFormat.ARGB32;          private int _antiAliasing = 2;         private Material _photoMat;          //每种规格 对应的 缓存RenderTexture列表         private Dictionary&lt;int,List<PhotoProducer>&gt; _cache = new Dictionary&lt;int,List<PhotoProducer>&gt;();         private Dictionary&lt;int,int&gt; _capacityDict = new Dictionary&lt;int, int&gt;();          public void SetAALevel(int aaLevel)         {             this._antiAliasing = aaLevel;         }          public void SetCullingLayer(int mask)         {             _photoCullingLayer = mask;             _photoCullingMask = 1&lt;&lt;_photoCullingLayer;         }          public int GetCullingLayer()         {             return _photoCullingLayer;         }                      public void SetRenderTextureDepth(int depth)         {             _rtDepth = depth;         }          public void SetRenderTextureFormat(RenderTextureFormat format)         {             _rtFormat = format;         }                      public void SetCapacity(int width,int height,int capacity)         {             int key = (width &lt;&lt; 16) + height;             _capacityDict[key] = capacity;         }          public void SetPhotoMaterial(Material mat)         {             _photoMat = mat;         }          public Material GetPhotoMaterial()         {             return _photoMat;         }                      public PhotoProducer Fetch(int width,int height)         {             if(width &lt;= 0 || height &lt;= 0) return null;             int key = (width &lt;&lt; 16) + height;             PhotoProducer producer;             if(_cache.ContainsKey(key))             {                 List<PhotoProducer> producers = _cache[key];                 if(producers.Count &gt; 0)                 {                     producer = producers[producers.Count-1];                     producer.targetContainer.SetActive(true);                     producers.RemoveAt(producers.Count-1);                 }                 else                 {                     producer =  new PhotoProducer(width,height,_photoCullingMask,_rtDepth,_rtFormat,_antiAliasing);                 }             }             else             {                 producer = new PhotoProducer(width,height,_photoCullingMask,_rtDepth,_rtFormat,_antiAliasing);             }             return producer;         }          public void Return(PhotoProducer producer)         {             if(producer == null) return;             RenderTexture rt = producer.renderTexture;             int key = (rt.width &lt;&lt; 16) + rt.height;             int capacity;             _capacityDict.TryGetValue(key,out capacity);              if(capacity &gt; 0)             {                 List<PhotoProducer> producers;                 _cache.TryGetValue(key,out producers);                 if(producers == null)                 {                     producers = new List<PhotoProducer>();                     _cache[key] = producers;                 }                  if(producers.Count &lt; capacity)                   {                     if (producer.producerContainer) {                         producer.producerContainer.SetActive(false);                     }                     producers.Add(producer);                 }                 else //剩余容量不够了，销毁掉                 {                     producer.Dispose();                 }             }             else //不需要缓存的             {                 producer.Dispose();             }         }            } }</p>\n","site":{"data":{}},"excerpt":"","more":"<p>游戏项目中一般会用到一些优化手段，大部分优化的是资源的大小对内存的影响，比如项目中特效的加载会拥有两个类：photoFactoryEffect和photoMutilEffect</p>\n<p><strong>photoFactory与photoMutil的区别</strong></p>\n<p>photoFactory是一个优化类，作用就是减轻通过photoMutil生成的特效克隆go的大小，优化的是内存</p>\n<p>photoMutil生成一个挂载特效rt的go，真正管理特效的是photoProducer。</p>\n<p><strong>特效加载原理</strong></p>\n<p>特效的gameObject通过camaro和rt映射到其他的gameObject上，一个特效只会加载一次，利用rt分发多份。</p>\n<p>// PhotoEffectFactory.lua  module(“logic.common.ugui.PhotoEffectFactory”,package.seeall)  local PhotoEffectFactory = class(“PhotoEffectFactory”)  function PhotoEffectFactory:ctor()     self._factoryContainer = goutil.create(“PHOTOFACTORYROOT”, false)     GameUtils.setPos(self._factoryContainer, -2500, 0, 0)     – 所有生效的特效     self._effects={}     – 池化     self._pool=ObjectPool.New(20,PhotoEffectFactory._createEffect,         PhotoEffectFactory._disposeEffect,         PhotoEffectFactory._resetEffect         ) end  function PhotoEffectFactory._createEffect()     local effect = {}     local container = goutil.create(“eff”, true)     container.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     effect.container = container     effect.photoEff = Framework.LuaComponentContainer.Add(container, PhotoMultiEffect)     effect.photoEff:setEffectLoadedCallback(PhotoEffectFactory._onEffectLoaded, PhotoEffectFactory.instance)     –克隆的特效     effect.clones={}     – 引用数     effect.count=0     return effect end  function PhotoEffectFactory._resetEffect(effect)     effect.count=0     effect.clones={}     effect.photoEff:clear() end  function PhotoEffectFactory._disposeEffect(effect)     if not goutil.isNil(effect.container) then          goutil.destroy(effect.container)     end end  – 外部接口：提供256 * 144规格的RT特效克隆体 –uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getSmallClonePhotoEffect(url, uiWidth, uiHeight)     return self:getClonePhotoEffect(url, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight, uiWidth, uiHeight) end  – 外部接口：重新播放RT特效 function PhotoEffectFactory:rePlayPhotoEffect(url)     local photoData = url and self._effects[url]     if photoData then         if not goutil.isNil(photoData.orgGoInst) then             goutil.setActive(photoData.orgGoInst, false)             goutil.setActive(photoData.orgGoInst, true)         end     end end  – 获取克隆的RT特效预制物 –uiWidth, uiHeight  需要显示的ui尺寸，请根据具体界面情况传入 function PhotoEffectFactory:getClonePhotoEffect(url, rtWidth, rtHeight, uiWidth, uiHeight)     if GameUtils.isEmptyString(url) then         return     end     – 如果未生成     local eff=self._effects[url]     if eff==nil then         eff=self._pool:fetchObject()         local container=eff.container         rtWidth = rtWidth or PhotoUtil.PartRTWidth         rtHeight = rtHeight or PhotoUtil.PartRTHeight         goutil.setWidth(container.transform, uiWidth or rtWidth)–ui尺寸默认是rt大小         goutil.setHeight(container.transform, uiHeight or rtHeight)         – 放在factory root 下         goutil.addChildToParent(eff.container, self._factoryContainer)         – rename         eff.container.name=url         self._effects[url]=eff         –临时处理，后续优化         if rtWidth == PhotoUtil.SmallRTWidth and rtHeight == PhotoUtil.SmallRTHeight then             eff.photoEff:showSmallEffect(url)         else                     eff.photoEff:showPartEffect(url)         end     end      eff.count = eff.count + 1     –只是克隆rawImage，transform     local objClone = goutil.create(tostring(eff.count),true)     objClone.layer = Framework.LayerUtil.NameToLayer(SceneLayer.UI)     GameUtils.copyRectTransform(objClone:GetComponent(goutil.Type_RectTransform), eff.container:GetComponent(goutil.Type_RectTransform))     GameUtils.copyRawImage(objClone:AddComponent(typeof(UnityEngine.UI.RawImage)), eff.container:GetComponent(typeof(UnityEngine.UI.RawImage)))     – local objClone = goutil.clone(self._urlToPhotoDict[url].container, tostring(self._urlToPhotoDict[url].count))     —————————–     – 判断当前特效是否已经加载完成，是则直接显示     if eff.photoEff:checkIsFinishLoadByUrl(url) then         local rawImageComp = objClone:GetComponent(typeof(UnityEngine.UI.RawImage))         if rawImageComp then             rawImageComp.enabled = true         end     end     table.insert(eff.clones, objClone)     return objClone end  – 判断创建出来的GameObject的RT与复制品的RT是否指向同一张RT，如果不是，则需要将复制品指向的RT修改过来 function PhotoEffectFactory:_pointToSameRT(url)     local photoData = self._effects[url]     if photoData and photoData.photoEff then         local orgRawImage = photoData.photoEff:getRawImage()         if orgRawImage then             local goCopy = photoData.clones and photoData.clones[1]             if not goutil.isNil(goCopy) then                 local copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                 if copyRawImage and orgRawImage.texture ~= copyRawImage.texture then                     for i = 1, #photoData.clones do                         goCopy = photoData.clones[i]                         if not goutil.isNil(goCopy) then                             copyRawImage = goCopy:GetComponent(typeof(UnityEngine.UI.RawImage))                             if copyRawImage then                                 copyRawImage.texture = orgRawImage.texture                             end                         end                     end                 end             end         end     end end  function PhotoEffectFactory:turnOn(url)     if self._effects and self._effects[url] then         if self._effects[url].photoEff then             self._effects[url].photoEff:turnOn()             self:_pointToSameRT(url)         end     end end  function PhotoEffectFactory:turnOff(url)     if self._effects and self._effects[url] then         if self._effects[url].photoEff then             self._effects[url].photoEff:turnOff()           end     end end  function PhotoEffectFactory:_onEffectLoaded(goInst, res)     if res and res.ResPath then         local data = self._effects and self._effects[res.ResPath]         if data then             data.orgGoInst = goInst             if data.clones then                 local rawImageComp                 for i = 1, #data.clones do                     if not goutil.isNil(data.clones[i]) then                         rawImageComp = data.clones[i]:GetComponent(typeof(UnityEngine.UI.RawImage))                         if rawImageComp then                             rawImageComp.enabled = true                         end                     end                 end             end         end     end end  function PhotoEffectFactory:destroyClonePhotoEffect(url,justclear)     local photoEffect=self._effects and self._effects[url]      if photoEffect then         photoEffect.count = photoEffect.count - 1         if photoEffect.count &lt;= 0 then             self._pool:returnObject(photoEffect)             self._effects[url]=nil         end     end end   – 预留接口：清除所有的PhotoEffect function PhotoEffectFactory:destroy()     if self._effects then         self._pool:clear()         self._effects={}     end end  PhotoEffectFactory.instance = PhotoEffectFactory.New()  return PhotoEffectFactory</p>\n<p>// photoMultiEffect.lua  module(“logic.common.ugui.PhotoMultiEffect”, package.seeall)  local PhotoMultiEffect = class(“PhotoMultiEffect”)  function PhotoMultiEffect:ctor(compContainer)     self._compContainer = compContainer     self._go = self._compContainer.gameObject     self._multiLoader = MultiResLoader.New() –资源的引用都在这里引用     self._photo = Framework.PhotoBase.Add(self._go)     self._rtWidth = PhotoUtil.PartRTWidth     self._rtHeight = PhotoUtil.PartRTHeight     self._effectLoadedCallback = nil     self._effectLoadedCallbackObj = nil     self._effectOnePlayFinishCallback = nil     self._effectOnePlayFinishCallbackObj = nil     self._bInitUVRect = true     self._urls = {}     self._goInstList = {}     PhotoUtil.initPhotoSetting()     self:_initRawImage() end  function PhotoMultiEffect:_initRawImage()     if not goutil.isNil(self._go) then         self._rawImage = self._go:GetComponent(typeof(UnityEngine.UI.RawImage))         if self._rawImage == nil then             self._rawImage = self._go:AddComponent(typeof(UnityEngine.UI.RawImage))         end         self._rawImage.enabled = false         self._rawImage.raycastTarget = false         self._rawImage.material = PhotoUtil.getEffMaterial()     end end  function PhotoMultiEffect:_setRawImageUVRect(rtWidth, rtHeight)     if self._bInitUVRect and self._rawImage then         self._rtWidth = rtWidth         self._rtHeight = rtHeight         PhotoUtil.setRTCapacity(rtWidth, rtHeight)         –计算RawImage的大小以及偏移         local uvRectW = math.min(1, goutil.getWidth(self._go.transform) / rtWidth)         local uvRectH = math.min(1, goutil.getHeight(self._go.transform) / rtHeight)         local uvRectX = (1 - uvRectW) * 0.5         local uvRectY = (1 - uvRectH) * 0.5         self._rawImage.uvRect = UnityEngine.Rect.New(uvRectX, uvRectY, uvRectW, uvRectH)         self._bInitUVRect = false     end end  – 该接口只提供给PhotoEffectFactory使用，其他地方不允许调用 function PhotoMultiEffect:getRawImage()     return self._rawImage end  function PhotoMultiEffect:setEffectLoadedCallback(callback, callbackObj)     self._effectLoadedCallback = callback     self._effectLoadedCallbackObj = callbackObj end  function PhotoMultiEffect:setEffectOnePlayFinishCallback(callback, callbackObj)     self._effectOnePlayFinishCallback = callback     self._effectOnePlayFinishCallbackObj = callbackObj end  function PhotoMultiEffect:setClickEnable(bRaycastTarget)     if self._rawImage then         self._rawImage.raycastTarget = bRaycastTarget     end end  function PhotoMultiEffect:setClickCallback(callback, callbackObj)     if callback == nil then         return     end     if goutil.isNil(self._go) then         return     end     if not self._btnClick then         local compButton = self._go:GetComponent(typeof(UnityEngine.UI.Button))         if compButton == nil then             self._go:AddComponent(typeof(UnityEngine.UI.Button))         end         self._btnClick = Framework.ButtonAdapter.Get(self._go)         self._btnClick:AddClickListener(callback, callbackObj)     end end  – 小图标规格的RT特效 256 * 144 function PhotoMultiEffect:showSmallEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.SmallRTWidth, PhotoUtil.SmallRTHeight) end  – 中等规格的RT特效 512 * 288 function PhotoMultiEffect:showPartEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.PartRTWidth, PhotoUtil.PartRTHeight) end  – 全屏规格的RT特效 1280 * 720 function PhotoMultiEffect:showFullScreneEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.RTWidth, PhotoUtil.RTHeight) end  – 最大全屏规格的RT特效 1560 * 720，不能再接受更大的尺寸规格 function PhotoMultiEffect:showMaxScreneEffect(…)     local urls = {…}     if not urls or #urls == 0 then         return     end     self:loadRes(urls, PhotoUtil.MaxRTWidth, PhotoUtil.MaxRTHeight) end  function PhotoMultiEffect:loadRes(urls, rtWidth, rtHeight)     if self._photo == nil then         return     end     self:_setRawImageUVRect(rtWidth, rtHeight)     self._photo:TurnOn(rtWidth, rtHeight)     self._isOn = true     local renderTexture = self._photo and self._photo.producer and self._photo.producer.renderTexture     if renderTexture == nil then         printError(“renderTexture is nil, self._go=”, self._go.name)         self._rawImage.enabled = false         return     – 重复 photobase.turnOn里已经做了     – else         – self._rawImage.texture = renderTexture     end     local len = #urls     for i = 1, len do         if not self._urls then             self._urls = {}         end         table.insert(self._urls, urls[i])         self._multiLoader:addResPath(urls[i])     end     PhotoUtil.addUsingRTCount(self, rtWidth, rtHeight)     –暂时没有全部加载完毕逻辑回调     self._multiLoader:load(_, self._onSingleResLoaded, self) end  function PhotoMultiEffect:_onSingleResLoaded(res)     if res.IsSuccess then         if goutil.isNil(self._go) or self._photo == nil then             self:clear()             return         end         –9/4修改：self._isOn为false表示有两种情况，一种是在特效加载完成之前调用了turnOff接口，一种是调用了clear接口；         –按道理调用clear接口并不会回调到这里，所以处理第一种情况就好         if not self._isOn then             if self._urls == nil or #self._urls == 0 then                 self:turnOff()                 return             end         end         local goInst         if self._urls then             for i = #self._urls, 1, -1 do                 if res.ResPath == self._urls[i] then                     table.remove(self._urls, i)                     goInst = goutil.clone(res:GetAsset(nil, nil))                     goInst.layer = Framework.LayerUtil.NameToLayer(PhotoUtil.LayerName)                     table.insert(self._goInstList, goInst)                     break                 end             end         end         if goInst then             if self._photo then                 –检查当前是turnOff还是turnOn                 – goutil.setActive(goInst, self._isOn)                 self._rawImage.enabled = self._isOn                 if self._isOn then                     self._photo:ShowTarget(goInst, true)                 else                     goutil.addChildToParent(goInst, self._go)                 end             end             if self._effectLoadedCallback then                 if self._effectLoadedCallbackObj then                     self._effectLoadedCallback(self._effectLoadedCallbackObj, goInst, res)                 else                     self._effectLoadedCallback(goInst, res)                 end             end             –检查美术是否有挂载EffectPlayer的组件             local _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))             if _effectCSComp and not goutil.isNil(_effectCSComp) then                 –参数默认以组件的，暂不支持外部设置参数                 _effectCSComp:AddFinishListener(self._onEffectOnePlayFinish, self)                 –加载好就立即执行play                 _effectCSComp:Play()             end         end     end end  –暂时没有全部播放完毕逻辑回调 function PhotoMultiEffect:_onEffectOnePlayFinish()     if goutil.isNil(self._go) then         return     end     if self._effectOnePlayFinishCallback then         if self._effectOnePlayFinishCallbackObj then             self._effectOnePlayFinishCallback(self._effectOnePlayFinishCallbackObj)         else             self._effectOnePlayFinishCallback()         end     end end  function PhotoMultiEffect:getFirstUrl()     return self._urls and self._urls[1] end  function PhotoMultiEffect:getUrlString()     return table.concat(self._urls, “#”) end  – 根据传入的路径判断该特效是否已经加载完成 function PhotoMultiEffect:checkIsFinishLoadByUrl(url)     local bLoaded = false     if self._multiLoader and self._multiLoader:getResource(url) then         return true     end end  – bReplay：是否重播，有些特效需要再次打开的时候调用 – 注意：重播只针对本身是显示状态的特效，如果本身特效由于功能需要自己被隐藏，bReplay传入true也是没法重播 function PhotoMultiEffect:turnOn(bReplay)     if not self._isOn then         if self._rawImage then             self._rawImage.enabled = true         end         if self._goInstList and self._photo then             self._photo:TurnOn(self._rtWidth, self._rtHeight)             PhotoUtil.addUsingRTCount(self, self._rtWidth, self._rtHeight)             local goInst             for i = 1, #self._goInstList do                 goInst = self._goInstList[i]                 if not goutil.isNil(goInst) then                     if bReplay and goInst.activeSelf then                         goutil.setActive(goInst, false)                         goutil.setActive(goInst, true)                     end                     –检查美术是否有挂载EffectPlayer的组件                     local _effectCSComp = goInst:GetComponent(typeof(Pjg.EffectPlayer))                     if _effectCSComp and not goutil.isNil(_effectCSComp) then                         _effectCSComp:Stop()                         _effectCSComp:RemoveFinishListener()                         –参数默认以组件的，暂不支持外部设置参数                         _effectCSComp:AddFinishListener(self._onEffectOnePlayFinish, self)                         _effectCSComp:Play()                     end                     self._photo:ShowTarget(goInst, true)                 end             end         end         self._isOn = true     end end  function PhotoMultiEffect:turnOff()     if goutil.isNil(self._go) then         return     end     if self._isOn then         if self._rawImage then             self._rawImage.enabled = false         end         if self._goInstList and self._photo then             for i = 1, #self._goInstList do                 if not goutil.isNil(self._goInstList[i]) then                     –goutil.setActive(self._goInstList[i], false)                     goutil.addChildToParent(self._goInstList[i], self._go)                 end             end         end         if self._photo then             self._photo:TurnOff()             PhotoUtil.reduceUsingRTCount(self, self._rtWidth, self._rtHeight)         end         self._isOn = false     end end  function PhotoMultiEffect:clear()     self._urls = {}     if self._multiLoader then         self._multiLoader:clear()     end     if self._goInstList then         for i = 1, #self._goInstList do             if not goutil.isNil(self._goInstList[i]) then                 –检查美术是否有挂载EffectPlayer的组件                 local _effectCSComp = self._goInstList[i]:GetComponent(typeof(Pjg.EffectPlayer))                 if _effectCSComp and not goutil.isNil(_effectCSComp) then                     _effectCSComp:Stop()                     _effectCSComp:RemoveFinishListener()                 end                 goutil.destroy(self._goInstList[i])             end         end         self._goInstList = {}     end     if self._photo then         self._photo:TurnOff()         PhotoUtil.reduceUsingRTCount(self, self._rtWidth, self._rtHeight)     end     self._isOn = false     if goutil.isNil(self._go) then         return     end     if self._rawImage then         self._rawImage.enabled = false     end     self._bInitUVRect = true end  function PhotoMultiEffect:OnDestroy()     self:clear()     self._multiLoader=nil     self._compContainer = nil     self._go = nil     self._photo = nil     self._rawImage = nil     self._effectLoadedCallback = nil     self._effectLoadedCallbackObj = nil     self._effectOnePlayFinishCallback = nil     self._effectOnePlayFinishCallbackObj = nil     self._urls = nil     self._goInstList = nil      if self._btnClick then         self._btnClick:RemoveClickListener()         self._btnClick = nil     end end – 判断是否是空闲，需要加载特效 function PhotoMultiEffect:isFree()     return not self._isOn and self._multiLoader.totalCount==0 end  return PhotoMultiEffect</p>\n<p>// PhotoBase.cs  using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI;  namespace Framework {     public class PhotoBase : MonoBehaviour      {         protected PhotoProducer _producer;         protected RawImage _rawImg;          public static PhotoBase Add(GameObject go)         {             return go.AddComponentOnce<PhotoBase>();         }          void Awake()         {             //2018/8/8修改,防止gameObject或父节点被隐藏，lua已经初始化RawImage后显示gameObject的时候Awake接口被调用             _rawImg = gameObject.GetComponent<RawImage> ();             if (_rawImg == null) {                 _rawImg = gameObject.AddComponentOnce<RawImage>();                 _rawImg.raycastTarget = false;                 _rawImg.texture = null;                 _rawImg.material = PhotoProducerCache.Instance.GetPhotoMaterial();             }         }          protected virtual void OnEnable()         {             if(_producer != null)             {                 _producer.producerContainer.SetActive(true);             }         }          protected virtual void OnDisable()         {             if(_producer != null &amp;&amp; _producer.producerContainer != null)             {                 _producer.producerContainer.SetActive(false);             }         }          public void EnableClick(bool isEnable)         {             if(isEnable)             {                 _rawImg.raycastTarget = true;             }             else             {                 _rawImg.raycastTarget = false;             }         }          //在turn on的时候才有值         public PhotoProducer producer         {             get{ return _producer;}         }          //在turn on的时候才能调用         public void SetCameraPosition(float x,float y,float z)         {             GlobalObject.gVec3.x = x;             GlobalObject.gVec3.y = y;             GlobalObject.gVec3.z = z;              _producer.rtCamera.transform.localPosition = GlobalObject.gVec3;         }          //在turn on的时候才能调用         public void SetCameraRotation(float x,float y,float z)         {             _producer.rtCamera.transform.localRotation = Quaternion.Euler(x,y,z);         }          /**          *  将一个物体放入拍摄空间内          * */         public void ShowTarget(GameObject go,bool allSameLayer)         {             if(allSameLayer)                 go.SetLayerRecursively(PhotoProducerCache.Instance.GetCullingLayer());             else                 go.layer = PhotoProducerCache.Instance.GetCullingLayer();                          go.transform.SetParent(_producer.targetContainer.transform,false);         }          /**          *  把拍摄目标全部移除          * */         public void RemoveAllTargets()         {             GameObjectUtil.ClearChildren(_producer.targetContainer);         }                      public void TurnOn()         {             if(_producer == null)             {                 Rect size = (gameObject.transform as RectTransform).rect;                 _producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(size.width),Mathf.CeilToInt(size.height));                 _rawImg.texture = _producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 _producer.producerContainer.SetActive(true);             }             else             {                 _producer.producerContainer.SetActive(false);             }         }          /// <summary>         /// 重载TurnOn接口，支持外部传入需要创建的RT大小         /// </summary>         public void TurnOn(float width, float height)         {             if(_producer == null)             {                 if (_rawImg == null) {                     _rawImg = gameObject.GetComponent<RawImage> ();                 }                 _producer = PhotoProducerCache.Instance.Fetch(Mathf.CeilToInt(width),Mathf.CeilToInt(height));                 _rawImg.texture = _producer.renderTexture;              }              if(this.gameObject.activeInHierarchy)             {                 _producer.producerContainer.SetActive(true);             }             else             {                 _producer.producerContainer.SetActive(false);             }         }          public bool IsOn         {             get{ return _producer != null;}         }          public void TurnOff()         {             if(_producer != null)             {                 PhotoProducerCache.Instance.Return(_producer);                 _producer = null;             }         }          void OnDestroy()         {             TurnOff();         }     } }</p>\n<p>// photoProducer.cs  using System.Collections; using System.Collections.Generic; using UnityEngine;  namespace Framework  {     public class PhotoProducer     {         private GameObject _rtContainer;         private GameObject _targetContainer;         private Camera _rtCamera;         private RenderTexture _rt;          public GameObject producerContainer         {             get { return _rtContainer;}         }          public GameObject targetContainer         {             get {return _targetContainer;}         }          public Camera rtCamera         {             get {return _rtCamera;}         }          public RenderTexture renderTexture         {             get {return _rt;}         }          public PhotoProducer(int width,int height,int cullingMask,int rtDepth,RenderTextureFormat rtFormat,int antiAliasing)         {             _rtContainer = new GameObject(“PhotoProducer_“ + PhotoProducerCounter.GetCounter());              _targetContainer = new GameObject(“TargetContainer”);             _targetContainer.transform.SetParent(_rtContainer.transform,false);              _rtContainer.transform.position = PhotoProducerCounter.GenPosition();             GameObject.DontDestroyOnLoad(_rtContainer);              GameObject cameraObj = new GameObject(“Camera”);             cameraObj.transform.SetParent(_rtContainer.transform, false);             this._rtCamera = cameraObj.AddComponent<Camera>();             this._rtCamera.useOcclusionCulling = false;              _rtCamera.enabled = true;             _rtCamera.clearFlags = CameraClearFlags.SolidColor;             _rtCamera.backgroundColor = new Color(0, 0, 0, 0);             _rtCamera.cullingMask = cullingMask;             _rtCamera.targetTexture = _rt;             _rtCamera.farClipPlane = 1000;              _rt = new RenderTexture(width, height,rtDepth,rtFormat);             if(antiAliasing &gt; 0)                 _rt.antiAliasing = antiAliasing;              _rtCamera.targetTexture = _rt;         }          public void Dispose()         {             if (_rtCamera != null) {                 _rtCamera.targetTexture = null;             }             if(_rt != null)             {                 GameObject.Destroy(_rt);                 _rt = null;             }             GameObjectUtil.Destroy(_rtContainer);         }     } }</p>\n<p>// photoProducerCache.cs  using System.Collections.Generic; using UnityEngine;  namespace Framework {     /**      *  UI特效公用的RenderTexture缓存 以及 用于绘制的Camera和GameObject      *  RenderTexture的大小  有若干种规格,游戏项目中规划好预定的几种规格规范      *  规格1   1136 640                                    *  规格2   200*200      * */     public class PhotoProducerCache : Singleton<PhotoProducerCache>     {         //一些设置         private int _photoCullingLayer = 0;         private int _photoCullingMask = 0;          private int _rtDepth = 32;         private RenderTextureFormat _rtFormat = RenderTextureFormat.ARGB32;          private int _antiAliasing = 2;         private Material _photoMat;          //每种规格 对应的 缓存RenderTexture列表         private Dictionary&lt;int,List<PhotoProducer>&gt; _cache = new Dictionary&lt;int,List<PhotoProducer>&gt;();         private Dictionary&lt;int,int&gt; _capacityDict = new Dictionary&lt;int, int&gt;();          public void SetAALevel(int aaLevel)         {             this._antiAliasing = aaLevel;         }          public void SetCullingLayer(int mask)         {             _photoCullingLayer = mask;             _photoCullingMask = 1&lt;&lt;_photoCullingLayer;         }          public int GetCullingLayer()         {             return _photoCullingLayer;         }                      public void SetRenderTextureDepth(int depth)         {             _rtDepth = depth;         }          public void SetRenderTextureFormat(RenderTextureFormat format)         {             _rtFormat = format;         }                      public void SetCapacity(int width,int height,int capacity)         {             int key = (width &lt;&lt; 16) + height;             _capacityDict[key] = capacity;         }          public void SetPhotoMaterial(Material mat)         {             _photoMat = mat;         }          public Material GetPhotoMaterial()         {             return _photoMat;         }                      public PhotoProducer Fetch(int width,int height)         {             if(width &lt;= 0 || height &lt;= 0) return null;             int key = (width &lt;&lt; 16) + height;             PhotoProducer producer;             if(_cache.ContainsKey(key))             {                 List<PhotoProducer> producers = _cache[key];                 if(producers.Count &gt; 0)                 {                     producer = producers[producers.Count-1];                     producer.targetContainer.SetActive(true);                     producers.RemoveAt(producers.Count-1);                 }                 else                 {                     producer =  new PhotoProducer(width,height,_photoCullingMask,_rtDepth,_rtFormat,_antiAliasing);                 }             }             else             {                 producer = new PhotoProducer(width,height,_photoCullingMask,_rtDepth,_rtFormat,_antiAliasing);             }             return producer;         }          public void Return(PhotoProducer producer)         {             if(producer == null) return;             RenderTexture rt = producer.renderTexture;             int key = (rt.width &lt;&lt; 16) + rt.height;             int capacity;             _capacityDict.TryGetValue(key,out capacity);              if(capacity &gt; 0)             {                 List<PhotoProducer> producers;                 _cache.TryGetValue(key,out producers);                 if(producers == null)                 {                     producers = new List<PhotoProducer>();                     _cache[key] = producers;                 }                  if(producers.Count &lt; capacity)                   {                     if (producer.producerContainer) {                         producer.producerContainer.SetActive(false);                     }                     producers.Add(producer);                 }                 else //剩余容量不够了，销毁掉                 {                     producer.Dispose();                 }             }             else //不需要缓存的             {                 producer.Dispose();             }         }            } }</p>"},{"title":"node开发微信公众号","date":"2017-06-12T16:00:00.000Z","_content":"\n\n## 开发第一步\n\n不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。\n\n开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  \n\n开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  \n\n## 开始开发\n我们使用koa框架。  \napp.js\n```js\n'use strict'\n\nvar Koa = require('koa')\nvar wechat = require('./wechat/g')  //可以看作是程序的第二个流程，实现验证 以及调用回复功能\nvar config = require('./config') //公众号的配置配置信息\nvar reply = require('./wx/reply')  //处理客户发过来的消息，回复逻辑\nvar Wechat = require('./wechat/wechat') //回复各种消息类型获取的api，封装在Wechat对象中\n\nvar app = new Koa()\n\napp.use(wechat(config.wechat, reply.reply))\n\napp.listen(1234)\nconsole.log(\"listening at port 1234...\")\n```\n\nwechat/g.js\n```js\n'use strict'\n\nvar sha1 = require('sha1')\nvar getRawBody = require('raw-body')\nvar Wechat = require('./wechat')\nvar util = require('./util')\n\nmodule.exports = function(opts, handler) {\n    var wechat = new Wechat(opts)\n\n    return function *(next){\n\n                var token = opts.token\n                var signature = this.query.signature\n                var nonce = this.query.nonce\n                var timestamp = this.query.timestamp\n                var echostr = this.query.echostr\n                var str = [token, timestamp, nonce].sort().join('')\n                var sha = sha1(str)\n\n                if(this.method == 'GET'){\n                    if(sha === signature){\n                        this.body = echostr + ''\n                    }\n                    else{\n                        this.body = 'wrong'\n                    }\n                }\n                else if(this.method == 'POST'){\n                    console.log(this.method)\n                    if(sha !== signature){\n                        this.body = 'wrong'\n\n                        return false\n                    }\n\n                    var data = yield getRawBody(this.req, { //xml格式的数据\n                        length: this.length,\n                        limit: '1mb',\n                        encoding: this.charset\n                    })\n\n                    //console.log(data.toString())\n                    var content = yield util.parseXMLAsync(data) //转化为json格式的数据\n                    //console.log(content)\n                    var message = util.formatMessage(content.xml)\n                    //console.log(message)\n\n                   this.weixin = message\n\n                   yield handler.call(this, next)\n\n                   wechat.reply.call(this)   //数据转化为最终的xml格式，客户端只能解析xml格式数据\n                }\n                \n            }\n}\n```\n\nwechat/wechat.js\n```js\n'use strict'\n\nvar Promise = require('bluebird')\nvar request = require('request')\nvar util = require('./util')\nvar fs = require('fs')\nvar _ = require('lodash')\n\nvar prefix = 'https://api.weixin.qq.com/cgi-bin/'\nvar api = {\n    accessToken : prefix + 'token?grant_type=client_credential',\n    temporary: {\n        upload : prefix + 'media/upload?',\n        fetch: prefix + 'media/get?'\n    },\n    permanent: {\n        upload: prefix + 'material/add_material?',\n        fetch: prefix + 'material/get_material?',\n        uploadNews: prefix + 'material/add_news?',\n        uploadNewsPic:prefix + 'material/uploadimg?',\n        del: prefix + 'material/del_material?',\n        update: prefix + 'material/update_news?',\n        count: prefix + 'material/get_materialcount?',\n        batch: prefix + 'material/batchget_material?'\n    },\n    group: {\n        create: prefix + 'groups/create?',\n        fetch: prefix + 'groups/get?',\n        check: prefix + 'groups/getid?',\n        update:prefix + 'groups/update?',\n        move: prefix + 'groups/members/update?',\n        batchupdata: prefix + 'groups/members/batchupdate?',\n        del: prefix + 'groups/delete?'\n    },\n    user: {\n        remark: prefix +　'user/info/updateremark?',\n        fetch: prefix +　'user/info?',\n        batchFetch: prefix + 'user/info/batchget?',\n        list: prefix +　'user/get?'\n    },\n    mass: {\n        group: prefix + 'message/mass/sendall?',\n        openId: prefix + 'message/mass/send?',\n        del: prefix + 'message/mass/delete?',\n        preview: prefix + 'message/mass/preview?',\n        check: prefix + 'message/mass/get?'\n    },\n    menu: {\n        create: prefix + 'menu/create?',\n        get:　prefix +　'menu/get?',\n        del: prefix + 'menu/delete?',\n        current: prefix + 'get_current_selfmenu_info?'\n    },   \n    semantic: 'https://api.weixin.qq.com/semantic/semproxy/search?',\n    ticket: {\n        get : prefix +　'ticket/getticket?'\n    }\n    \n}\n\nfunction Wechat(opts){\n    var that = this\n\n    this.appID = opts.appID\n    this.appSecret = opts.appSecret\n    this.getAccessToken = opts.getAccessToken\n    this.saveAccessToken = opts.saveAccessToken\n    this.getTicket = opts.getTicket\n    this.saveTicket = opts.saveTicket\n\n    this.fetchAccessToken()\n}\n\n//获取ticket\nWechat.prototype.fetchTicket = function(access_token){\n    var that = this\n\n    return this.getTicket()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateTicket(access_token)\n            }\n            \n            if(that.isValidTicket(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateTicket(access_token)\n            }\n        })\n        .then(function(data){\n            that.saveTicket(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.updateTicket = function(access_token){\n\n   var url = api.ticket.get + '&access_token=' + access_token + '&type=jsapi'\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.isValidTicket = function(data){\n    if(!data || !data.ticket || !data.expires_in){\n        return false\n    }\n\n    var ticket = data.ticket\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(ticket && now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\n//获取access_token\nWechat.prototype.fetchAccessToken = function(data){\n    var that = this\n\n    if(this.access_token && this.expires_in){\n        if(this.isValidAccessToken(this)){\n            return Promise.resolve(this)\n        }\n    }\n\n    return this.getAccessToken()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateAccessToken()\n            }\n            \n            if(that.isValidAccessToken(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateAccessToken()\n            }\n        })\n        .then(function(data){\n            that.access_token = data.access_token\n            that.expires_in = data.expires_in\n\n            that.saveAccessToken(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.isValidAccessToken = function(data){\n    if(!data || !data.access_token || !data.expires_in){\n        return false\n    }\n\n    var access_token = data.access_token\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\nWechat.prototype.updateAccessToken = function(){\n   var appID = this.appID\n   var appSecret = this.appSecret\n   var url = api.accessToken + '&appid=' + appID + '&secret=' + appSecret\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get access_token')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.uploadMaterial = function(type, material, permanent){\n    var that = this\n    var form = {}\n    var uploadUrl = api.temporary.upload\n\n    if(permanent){\n        uploadUrl = api.permanent.upload\n\n        _.extend(form, permanent)\n    }\n\n    if(type === 'pic'){\n        uploadUrl = api.permanent.uploadNewsPic\n    }\n\n    if(type === 'news'){\n        uploadUrl = api.permanent.uploadNews\n        form = material\n    }\n    else{\n        form.media = fs.createReadStream(material)\n    }\n   \n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = uploadUrl + 'access_token=' + data.access_token \n\n                if(!permanent) {\n                    url += '&type=' + type\n                }\n                else{\n                    form.access_token = data.access_token\n                }\n\n                var options = {\n                    method: 'POST',\n                    url: url,\n                    json: true\n                }\n\n                if(type === 'news'){\n                    options.body = form\n                }\n                else{\n                    options.formData = form\n                }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        //console.log(_data);\n                    } else {\n                        throw new Error('upload material fails')\n                    }\n                }) \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.fetchMaterial = function(mediaId, type, permanent){\n    var that = this\n    var fetchUrl = api.temporary.fetch\n\n    if(permanent){\n        fetchUrl = api.permanent.fetch\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = fetchUrl + 'access_token=' + data.access_token \n                var form = {}\n                var options = {method:'POST', url: url, json: true}\n\n                if(permanent){\n                    form.media_id = mediaId\n                    form.access_token = data.access_token\n                    options.body = form\n                }\n                else{\n                    if(type === 'video'){\n                        url = url.replace('https://', 'http://')\n                    }\n                    url += '&media_id=' + mediaId\n                }\n\n               if(type === 'news' || type === 'video'){\n                   request(options, function (error, response, body) {\n                        if (!error && response.statusCode === 200) {\n                            var _data = body;\n                            \n                            if(_data){\n                                resolve(_data);\n                            }                     \n                        \n                        } else {\n                            throw new Error('delete material fails')\n                        }\n                    })\n               }\n               else{\n                   resolve(url)\n               }\n\n                \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.deleteMaterial = function(mediaId){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.del + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateMaterial = function(mediaId, news){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n\n    _.extend(form, news)\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.update + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.countMaterial = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.count + 'access_token=' + data.access_token\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('count material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.batchMaterial = function(options){\n    var that = this\n\n    options.type = options.type || 'image'\n    options.offset = options.offset || 0\n    options.count = options.count || 1\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.batch + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:options, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('batch material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//用户分组\nWechat.prototype.createGroup = function(name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.create + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('create group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchGroup = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.fetch + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkGroup = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.check + 'access_token=' + data.access_token\n                var form = {\n                    openid : openId\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('check group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateGroup = function(id, name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.update + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id,\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('update group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.moveGroup = function(openIds, to_groupid){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var url\n               var form = {\n                   to_groupid : to_groupid\n               }\n\n               if(_.isArray(openIds)){\n                   url = api.group.batchupdata + 'access_token=' + data.access_token\n                   form.openid_list = openIds\n               }\n               else{\n                   url = api.group.move + 'access_token=' + data.access_token\n                   form.openid = openIds\n               }  \n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('move group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteGroup = function(id){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.del + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//获取用户信息\nWechat.prototype.remarkUser = function(openId, remark){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.remark + 'access_token=' + data.access_token\n                var form = {\n                    openid:　openId,\n                    remark: remark\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('remark user fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchUser = function(openIds, lang){\n    var that = this\n    \n    var lang = lang || 'zh_CN'\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var options　= {\n                   json: true\n               }\n\n               if(_.isArray(openIds)){\n                   options.url = api.user.batchFetch + 'access_token=' + data.access_token\n                   options.method = 'POST'\n                   options.body = {\n                       user_list : openIds\n                   }\n               }\n               else{\n                   options.url = api.user.fetch + 'access_token=' + data.access_token + '&openid=' + openIds + '&lang=' + lang\n               }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch users fails')\n                    }\n                }) \n           })         \n    })  \n}\n\nWechat.prototype.listUsers = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.list + 'access_token=' + data.access_token\n                \n                if(openId){\n                    url += '&next_openid=' + openId\n                }\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('list users fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByGroup = function(type, message, groupId){\n    var that = this\n    var msg = {\n        filter:{},\n        msgtype:type\n    }\n    msg[type] = message\n    if(!groupId){\n        msg.filter.is_to_all = true\n    }else{\n        msg.filter.is_to_all = false\n        msg.filter.group_id = groupId\n    }\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.group + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('sell by group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByOpenId = function(type, message, openIds){\n    var that = this\n\n    var msg = {\n        touser:openIds,\n        msgtype:type\n    }\n\n   msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.openId + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('sell by openid fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMass = function(msgId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.del + 'access_token=' + data.access_token\n                var form = {\n                    msg_id : msgId\n                }\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete Mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.previewMass = function(type, message, openId){\n    var that = this\n    var msg = {\n        touser:openId,\n        msgtype:type\n    }\n    msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.preview + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('preview mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkMass = function(msgId){\n    var that = this\n    var form = {\n        msg_id : msgId\n    }\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.check + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('check mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.createMenu = function(menu){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.menu.create + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:menu, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('create menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.getMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.get + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.del + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.currentSelfMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.current + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get current selfmenu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.semantic = function(semanticData){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.semantic + 'access_token=' + data.access_token\n                semanticData.appid = data.appID\n\n                request({method:'POST', url: url,body:semanticData, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('semantic data fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.reply = function(){  //实现完整的回复逻辑，放回给客户端xml格式数据\n    var content = this.body   //此时的this.body是json数据格式\n    var message = this.weixin\n    var xml = util.tpl(content, message)  //将content与message中的内容提出整合，此时已经变成了xml格式\n    //console.log('xml:'+ xml)\n\n    this.status = 200\n    this.type = 'application/xml'\n    this.body = xml\n\n}\n\nmodule.exports = Wechat\n```\n\nwx/reply.js  处理客户端消息\n```js\n'use strict'\n\nvar config = require('../config')\nvar Wechat = require('../wechat/wechat')\nvar wechatApi = new Wechat(config.wechat)\nvar menu = require('./menu')\n\n/*wechatApi.deleteMenu().then(function(){\n    return wechatApi.createMenu(menu)\n}).then(function(msg){\n    console.log(msg)\n})*/\n\nexports.reply = function *(next){\n \n    var message = this.weixin\n\n    if(message.MsgType === 'event'){\n        if(message.Event === 'subscribe'){\n            if(message.EventKey) {\n                console.log('扫二维码进来：'+ message.EventKey +' '+ message.ticket)\n            }\n            this.body =  '么么哒'\n        }\n        else if(message.Event === 'unsubscribe'){\n            console.log('无情取关！')\n            this.body = ' '\n        }\n        else if(message.Event === 'LOCATION'){\n            this.body = '您上报的位置是：' + message.Latitude + '/' + message.Longitude + '-' +message.Precision\n        }\n        else if(message.Event === 'CLICK'){\n            this.body = '您点击了菜单：'+ message.EventKey\n        }\n        else if(message.Event === 'SCAN'){\n            console.log('关注后扫二维码'+ message.EventKey + ' '+ message.Ticket)\n            this.body = '您扫了二维码哦'\n        }\n        else if(message.Event === 'VIEW'){\n            this.body = '您点击了菜单中的连接：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_push'){\n            console.log(message.ScanCodeInfo.ScanType)\n            console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_waitmsg'){\n             console.log(message.ScanCodeInfo.ScanType)\n             console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_sysphoto'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_photo_or_album'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_weixin'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'location_select'){\n             console.log(message.SendLocationInfo.Location_X)\n             console.log(message.SendLocationInfo.Location_Y)\n             console.log(message.SendLocationInfo.Scale)\n             console.log(message.SendLocationInfo.Label)\n             console.log(message.SendLocationInfo.Poiname)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n    }\n    else if(message.MsgType === 'text'){\n        var content = message.Content\n        var reply = '你说的“' + message.Content + '” 我们没有这样的服务'\n\n        if(content === '1'){\n            reply = '天下第一'\n        }\n        else if(content === '2'){\n            reply = '天下第二'\n        }\n        else if(content === '3'){\n            reply = '天下第三'\n        }\n        else if(content === '4'){\n            reply = [{\n                title: 'nodejs开发微信',\n                description: 'nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么',\n                picUrl: 'http://www.aseoe.com/images/aseoe_nodejs_txal.jpg',\n                url: 'https://nodejs.org'\n            },{\n                title: '前端三大框架',\n                description: 'vue.js React.js angular.js是目前前端最火的三大框架',\n                picUrl: 'http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png',\n                url: 'https://cn.vuejs.org/'\n            }\n            ]\n        }\n        else if(content === '5'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n            console.log(data.media_id)\n        }\n        else if(content === '6'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4')\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '7'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'music',\n                title: '《李白》--李荣浩',\n                description: '轻松时刻',\n                musicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                hqMusicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                thumbMediaId: data.media_id\n            }\n        }\n        else if(content === '8'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{type:'image'})\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '9'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4',{type:'video', description:'{\"title\":\"VIDEO_TITLE\",\"introduction\":\"INTRODUCTION\"}'})\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '10'){\n            var picData  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{})\n\n            var media = {\n                articles:[{\n                    title:'angularjs入门',\n                    thumb_media_id:picData.media_id,\n                    show_cover_pic:1,\n                    author:'Leo',\n                    digest:'关于angularjs摘要',\n                    content:'augular是目前前端最火框架之一',\n                    content_source_url:'https://docs.angularjs.org/'\n                    }\n                ]\n                \n            }\n\n           var  data = yield wechatApi.uploadMaterial('news', media, {})\n           console.log('我要的mediaId：'+ data.media_id)\n           data = yield wechatApi.fetchMaterial(data.media_id, 'news', {})\n\n           console.log(data)\n\n           var items = data.news_item\n           var news = []\n\n           items.forEach(function(item){\n               news.push({\n                   title: item.title,\n                   description: item.digest,\n                   picUrl: picData.url,\n                   url: item.url\n               })\n           })\n\n           reply = news\n\n        }\n        else if(content === '11'){\n            var counts  = yield wechatApi.countMaterial()\n\n            console.log(JSON.stringify(counts))\n\n            var results = yield [\n                wechatApi.batchMaterial({\n                    type: 'image',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'video',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'vioce',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'news',\n                    offset: 0,\n                    count: 10\n                })\n            ]\n\n            console.log(JSON.stringify(results))\n\n            reply = 'ok'\n        }\n        else if(content === '12'){\n           /* var group1 = yield wechatApi.createGroup('wechat1')\n            console.log('新分组wechat1:')\n            console.log(group1)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('加了wechat1的分组:')\n            console.log(groups)\n\n            var group2 = yield wechatApi.checkGroup(message.FromUserName)\n            console.log('查看自己的分组:')\n            console.log(group2)\n\n            var group3 = yield wechatApi.updateGroup(100, 'wechat_update')\n            console.log('把wechat1分组改为wechat_update')\n            console.log(group3)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把wechat1分组改为wechat_update后的分组:')\n            console.log(groups)\n\n            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)\n            console.log('把我移动到2组')\n            console.log(group4)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把我移动到2组后的分组:')\n            console.log(groups)\n\n            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)\n            console.log('批量移动 把我移动到0组')\n            console.log(group5)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('查看 批量移动 把我移动到0组后的分组:')\n            console.log(groups)\n*/          \n            var groups = yield wechatApi.fetchGroup()\n            console.log(groups)\n            var group_delete = yield wechatApi.deleteGroup(101)\n            console.log('删除101')\n            console.log(group_delete)\n            groups = yield wechatApi.fetchGroup()\n            console.log('删除101后的分组')\n            console.log(groups)\n\n            reply = 'Groups done'\n\n        }\n        else if(content === '13'){\n          /* var remark = yield wechatApi.remarkUser(message.FromUserName, '超级大帅哥')\n            console.log(remark)\n            */\n            var user = yield wechatApi.fetchUser(message.FromUserName)\n            console.log(user)\n\n           /* var openIds = [{\n                openid : message.FromUserName, \n                lang:'zh_CN'\n            }]\n            var users = yield wechatApi.fetchUser(openIds)\n            console.log(users)\n            */\n            reply = JSON.stringify(user)\n\n        }\n        else if(content === '14'){\n            var list = yield wechatApi.listUsers()\n            console.log(list)\n\n            reply = list.total\n        }\n        else if(content === '15'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n\n            var text = {\n                content: '天要下雨了'\n            }\n\n            var msgData = yield wechatApi.sendByGroup('text', text, 0)\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n        else if(content === '16'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n          \n           /* var text = {\n                content: '天一直在打雷还没下雨'\n            }\n  */\n            var msgData = yield wechatApi.previewMass('mpnews', mpnews, 'okFRawx2UAkxdtKG1i9QNGzgXLA4')\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n         else if(content === '17'){\n             var msgData = yield wechatApi.checkMass('1000000010')\n             console.log(msgData)\n             reply = 'done'\n         }\n         else if(content === '18'){\n            \n                wechatApi.createMenu(menu).then(function(msg){\n                console.log('菜单生成状态：'+ JSON.stringify(msg))\n            })\n             /*var createMenu = yield wechatApi.createMenu(menu)\n             console.log(createMenu)\n             */\n             reply = 'done'\n         }\n         else if(content === '19'){\n            var semanticData = {\n                query:\"查一下明天从北京到上海的南航机票\",\n                city:\"北京\",\n                category: \"flight,hotel\",\n                uid: message.FromUserName\n            }\n\n            var _semantic = yield wechatApi.semantic(semanticData)\n            console.log(_semantic)\n             reply = JSON.stringify(_semantic)\n         }\n\n        this.body = reply\n    }\n    \n\n    yield next\n}\n```\n\n\n### 在koa中使用ejs模板 与 heredoc模块\nheredoc模块是作用是封装模板  \n比如：\n```\n'use strict'\n\nvar ejs = require('ejs')\nvar heredoc = require('heredoc')\n\nvar tpl = heredoc(function(){/*\n    <xml> \n        <ToUserName><![CDATA[<%= toUserName %>]]></ToUserName>\n        <FromUserName><![CDATA[<%= fromUserName %>]]></FromUserName> \n        <CreateTime> <%= createTime %> </CreateTime>\n        <MsgType><![CDATA[<%= msgType%>]]></MsgType>\n        <% if (msgType === 'text') {%>\n            <Content><![CDATA[<%= content%>]]></Content>\n        <% } else if(msgType === 'image') { %>\n            <Image>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Image>\n         <% } else if(msgType === 'video') { %>\n             <Video>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n            </Video> \n         <% } else if(msgType === 'voice') { %>\n             <Voice>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Voice>\n        <% } else if(msgType === 'music') { %>\n            <Music>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n                <MusicUrl><![CDATA[<%= content.musicUrl %>]]></MusicUrl>\n                <HQMusicUrl><![CDATA[<%= content.hqMusicUrl%>]]></HQMusicUrl>\n                <ThumbMediaId><![CDATA[<%= content.thumbMediaId %>]]></ThumbMediaId>\n            </Music> \n        <% } else if(msgType === 'news') { %>\n            <ArticleCount><%= content.length %></ArticleCount>           \n            <Articles>\n            <% content.forEach(function(item){ %>\n                <item>\n                    <Title><![CDATA[<%= item.title %>]]></Title> \n                    <Description><![CDATA[<%= item.description %>]]></Description>\n                    <PicUrl><![CDATA[<%= item.picUrl %>]]></PicUrl>\n                    <Url><![CDATA[<%= item.url %>]]></Url>\n                </item>\n            <% }) %>\n            </Articles>\n        <% } %>\n    </xml>\n\n*/})\n\nvar compiled = ejs.compile(tpl)\n\nexports = module.exports = {\n    compiled : compiled\n}\n```\n\n以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据  \n结合json数据\n```\nvar tpl = require('以上文件路径')\n\nvar data = {\n    msgType : 'text',\n    content : 'hello world'\n}\n\nvar xml = tpl.compiled(data)\n```\n或者可以使用render方法将模板和数据一并结合\n```\nvar xml = ejs.render(tpl, data)\n```\n\n******\n这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  \n\n其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  \n\n思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。\n\n这篇笔记就写到这吧，全部代码放在github上。\n\n\n\n","source":"_posts/node开发微信公众号.md","raw":"---\ntitle: node开发微信公众号 \ndate: 2017-06-13\ntags: [nodejs,微信公众号]\n---\n\n\n## 开发第一步\n\n不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。\n\n开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  \n\n开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  \n\n## 开始开发\n我们使用koa框架。  \napp.js\n```js\n'use strict'\n\nvar Koa = require('koa')\nvar wechat = require('./wechat/g')  //可以看作是程序的第二个流程，实现验证 以及调用回复功能\nvar config = require('./config') //公众号的配置配置信息\nvar reply = require('./wx/reply')  //处理客户发过来的消息，回复逻辑\nvar Wechat = require('./wechat/wechat') //回复各种消息类型获取的api，封装在Wechat对象中\n\nvar app = new Koa()\n\napp.use(wechat(config.wechat, reply.reply))\n\napp.listen(1234)\nconsole.log(\"listening at port 1234...\")\n```\n\nwechat/g.js\n```js\n'use strict'\n\nvar sha1 = require('sha1')\nvar getRawBody = require('raw-body')\nvar Wechat = require('./wechat')\nvar util = require('./util')\n\nmodule.exports = function(opts, handler) {\n    var wechat = new Wechat(opts)\n\n    return function *(next){\n\n                var token = opts.token\n                var signature = this.query.signature\n                var nonce = this.query.nonce\n                var timestamp = this.query.timestamp\n                var echostr = this.query.echostr\n                var str = [token, timestamp, nonce].sort().join('')\n                var sha = sha1(str)\n\n                if(this.method == 'GET'){\n                    if(sha === signature){\n                        this.body = echostr + ''\n                    }\n                    else{\n                        this.body = 'wrong'\n                    }\n                }\n                else if(this.method == 'POST'){\n                    console.log(this.method)\n                    if(sha !== signature){\n                        this.body = 'wrong'\n\n                        return false\n                    }\n\n                    var data = yield getRawBody(this.req, { //xml格式的数据\n                        length: this.length,\n                        limit: '1mb',\n                        encoding: this.charset\n                    })\n\n                    //console.log(data.toString())\n                    var content = yield util.parseXMLAsync(data) //转化为json格式的数据\n                    //console.log(content)\n                    var message = util.formatMessage(content.xml)\n                    //console.log(message)\n\n                   this.weixin = message\n\n                   yield handler.call(this, next)\n\n                   wechat.reply.call(this)   //数据转化为最终的xml格式，客户端只能解析xml格式数据\n                }\n                \n            }\n}\n```\n\nwechat/wechat.js\n```js\n'use strict'\n\nvar Promise = require('bluebird')\nvar request = require('request')\nvar util = require('./util')\nvar fs = require('fs')\nvar _ = require('lodash')\n\nvar prefix = 'https://api.weixin.qq.com/cgi-bin/'\nvar api = {\n    accessToken : prefix + 'token?grant_type=client_credential',\n    temporary: {\n        upload : prefix + 'media/upload?',\n        fetch: prefix + 'media/get?'\n    },\n    permanent: {\n        upload: prefix + 'material/add_material?',\n        fetch: prefix + 'material/get_material?',\n        uploadNews: prefix + 'material/add_news?',\n        uploadNewsPic:prefix + 'material/uploadimg?',\n        del: prefix + 'material/del_material?',\n        update: prefix + 'material/update_news?',\n        count: prefix + 'material/get_materialcount?',\n        batch: prefix + 'material/batchget_material?'\n    },\n    group: {\n        create: prefix + 'groups/create?',\n        fetch: prefix + 'groups/get?',\n        check: prefix + 'groups/getid?',\n        update:prefix + 'groups/update?',\n        move: prefix + 'groups/members/update?',\n        batchupdata: prefix + 'groups/members/batchupdate?',\n        del: prefix + 'groups/delete?'\n    },\n    user: {\n        remark: prefix +　'user/info/updateremark?',\n        fetch: prefix +　'user/info?',\n        batchFetch: prefix + 'user/info/batchget?',\n        list: prefix +　'user/get?'\n    },\n    mass: {\n        group: prefix + 'message/mass/sendall?',\n        openId: prefix + 'message/mass/send?',\n        del: prefix + 'message/mass/delete?',\n        preview: prefix + 'message/mass/preview?',\n        check: prefix + 'message/mass/get?'\n    },\n    menu: {\n        create: prefix + 'menu/create?',\n        get:　prefix +　'menu/get?',\n        del: prefix + 'menu/delete?',\n        current: prefix + 'get_current_selfmenu_info?'\n    },   \n    semantic: 'https://api.weixin.qq.com/semantic/semproxy/search?',\n    ticket: {\n        get : prefix +　'ticket/getticket?'\n    }\n    \n}\n\nfunction Wechat(opts){\n    var that = this\n\n    this.appID = opts.appID\n    this.appSecret = opts.appSecret\n    this.getAccessToken = opts.getAccessToken\n    this.saveAccessToken = opts.saveAccessToken\n    this.getTicket = opts.getTicket\n    this.saveTicket = opts.saveTicket\n\n    this.fetchAccessToken()\n}\n\n//获取ticket\nWechat.prototype.fetchTicket = function(access_token){\n    var that = this\n\n    return this.getTicket()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateTicket(access_token)\n            }\n            \n            if(that.isValidTicket(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateTicket(access_token)\n            }\n        })\n        .then(function(data){\n            that.saveTicket(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.updateTicket = function(access_token){\n\n   var url = api.ticket.get + '&access_token=' + access_token + '&type=jsapi'\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.isValidTicket = function(data){\n    if(!data || !data.ticket || !data.expires_in){\n        return false\n    }\n\n    var ticket = data.ticket\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(ticket && now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\n//获取access_token\nWechat.prototype.fetchAccessToken = function(data){\n    var that = this\n\n    if(this.access_token && this.expires_in){\n        if(this.isValidAccessToken(this)){\n            return Promise.resolve(this)\n        }\n    }\n\n    return this.getAccessToken()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateAccessToken()\n            }\n            \n            if(that.isValidAccessToken(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateAccessToken()\n            }\n        })\n        .then(function(data){\n            that.access_token = data.access_token\n            that.expires_in = data.expires_in\n\n            that.saveAccessToken(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.isValidAccessToken = function(data){\n    if(!data || !data.access_token || !data.expires_in){\n        return false\n    }\n\n    var access_token = data.access_token\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\nWechat.prototype.updateAccessToken = function(){\n   var appID = this.appID\n   var appSecret = this.appSecret\n   var url = api.accessToken + '&appid=' + appID + '&secret=' + appSecret\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get access_token')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.uploadMaterial = function(type, material, permanent){\n    var that = this\n    var form = {}\n    var uploadUrl = api.temporary.upload\n\n    if(permanent){\n        uploadUrl = api.permanent.upload\n\n        _.extend(form, permanent)\n    }\n\n    if(type === 'pic'){\n        uploadUrl = api.permanent.uploadNewsPic\n    }\n\n    if(type === 'news'){\n        uploadUrl = api.permanent.uploadNews\n        form = material\n    }\n    else{\n        form.media = fs.createReadStream(material)\n    }\n   \n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = uploadUrl + 'access_token=' + data.access_token \n\n                if(!permanent) {\n                    url += '&type=' + type\n                }\n                else{\n                    form.access_token = data.access_token\n                }\n\n                var options = {\n                    method: 'POST',\n                    url: url,\n                    json: true\n                }\n\n                if(type === 'news'){\n                    options.body = form\n                }\n                else{\n                    options.formData = form\n                }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        //console.log(_data);\n                    } else {\n                        throw new Error('upload material fails')\n                    }\n                }) \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.fetchMaterial = function(mediaId, type, permanent){\n    var that = this\n    var fetchUrl = api.temporary.fetch\n\n    if(permanent){\n        fetchUrl = api.permanent.fetch\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = fetchUrl + 'access_token=' + data.access_token \n                var form = {}\n                var options = {method:'POST', url: url, json: true}\n\n                if(permanent){\n                    form.media_id = mediaId\n                    form.access_token = data.access_token\n                    options.body = form\n                }\n                else{\n                    if(type === 'video'){\n                        url = url.replace('https://', 'http://')\n                    }\n                    url += '&media_id=' + mediaId\n                }\n\n               if(type === 'news' || type === 'video'){\n                   request(options, function (error, response, body) {\n                        if (!error && response.statusCode === 200) {\n                            var _data = body;\n                            \n                            if(_data){\n                                resolve(_data);\n                            }                     \n                        \n                        } else {\n                            throw new Error('delete material fails')\n                        }\n                    })\n               }\n               else{\n                   resolve(url)\n               }\n\n                \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.deleteMaterial = function(mediaId){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.del + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateMaterial = function(mediaId, news){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n\n    _.extend(form, news)\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.update + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.countMaterial = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.count + 'access_token=' + data.access_token\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('count material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.batchMaterial = function(options){\n    var that = this\n\n    options.type = options.type || 'image'\n    options.offset = options.offset || 0\n    options.count = options.count || 1\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.batch + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:options, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('batch material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//用户分组\nWechat.prototype.createGroup = function(name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.create + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('create group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchGroup = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.fetch + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkGroup = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.check + 'access_token=' + data.access_token\n                var form = {\n                    openid : openId\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('check group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateGroup = function(id, name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.update + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id,\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('update group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.moveGroup = function(openIds, to_groupid){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var url\n               var form = {\n                   to_groupid : to_groupid\n               }\n\n               if(_.isArray(openIds)){\n                   url = api.group.batchupdata + 'access_token=' + data.access_token\n                   form.openid_list = openIds\n               }\n               else{\n                   url = api.group.move + 'access_token=' + data.access_token\n                   form.openid = openIds\n               }  \n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('move group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteGroup = function(id){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.del + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//获取用户信息\nWechat.prototype.remarkUser = function(openId, remark){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.remark + 'access_token=' + data.access_token\n                var form = {\n                    openid:　openId,\n                    remark: remark\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('remark user fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchUser = function(openIds, lang){\n    var that = this\n    \n    var lang = lang || 'zh_CN'\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var options　= {\n                   json: true\n               }\n\n               if(_.isArray(openIds)){\n                   options.url = api.user.batchFetch + 'access_token=' + data.access_token\n                   options.method = 'POST'\n                   options.body = {\n                       user_list : openIds\n                   }\n               }\n               else{\n                   options.url = api.user.fetch + 'access_token=' + data.access_token + '&openid=' + openIds + '&lang=' + lang\n               }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch users fails')\n                    }\n                }) \n           })         \n    })  \n}\n\nWechat.prototype.listUsers = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.list + 'access_token=' + data.access_token\n                \n                if(openId){\n                    url += '&next_openid=' + openId\n                }\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('list users fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByGroup = function(type, message, groupId){\n    var that = this\n    var msg = {\n        filter:{},\n        msgtype:type\n    }\n    msg[type] = message\n    if(!groupId){\n        msg.filter.is_to_all = true\n    }else{\n        msg.filter.is_to_all = false\n        msg.filter.group_id = groupId\n    }\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.group + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('sell by group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByOpenId = function(type, message, openIds){\n    var that = this\n\n    var msg = {\n        touser:openIds,\n        msgtype:type\n    }\n\n   msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.openId + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('sell by openid fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMass = function(msgId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.del + 'access_token=' + data.access_token\n                var form = {\n                    msg_id : msgId\n                }\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete Mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.previewMass = function(type, message, openId){\n    var that = this\n    var msg = {\n        touser:openId,\n        msgtype:type\n    }\n    msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.preview + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('preview mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkMass = function(msgId){\n    var that = this\n    var form = {\n        msg_id : msgId\n    }\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.check + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('check mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.createMenu = function(menu){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.menu.create + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:menu, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('create menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.getMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.get + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.del + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.currentSelfMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.current + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get current selfmenu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.semantic = function(semanticData){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.semantic + 'access_token=' + data.access_token\n                semanticData.appid = data.appID\n\n                request({method:'POST', url: url,body:semanticData, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('semantic data fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.reply = function(){  //实现完整的回复逻辑，放回给客户端xml格式数据\n    var content = this.body   //此时的this.body是json数据格式\n    var message = this.weixin\n    var xml = util.tpl(content, message)  //将content与message中的内容提出整合，此时已经变成了xml格式\n    //console.log('xml:'+ xml)\n\n    this.status = 200\n    this.type = 'application/xml'\n    this.body = xml\n\n}\n\nmodule.exports = Wechat\n```\n\nwx/reply.js  处理客户端消息\n```js\n'use strict'\n\nvar config = require('../config')\nvar Wechat = require('../wechat/wechat')\nvar wechatApi = new Wechat(config.wechat)\nvar menu = require('./menu')\n\n/*wechatApi.deleteMenu().then(function(){\n    return wechatApi.createMenu(menu)\n}).then(function(msg){\n    console.log(msg)\n})*/\n\nexports.reply = function *(next){\n \n    var message = this.weixin\n\n    if(message.MsgType === 'event'){\n        if(message.Event === 'subscribe'){\n            if(message.EventKey) {\n                console.log('扫二维码进来：'+ message.EventKey +' '+ message.ticket)\n            }\n            this.body =  '么么哒'\n        }\n        else if(message.Event === 'unsubscribe'){\n            console.log('无情取关！')\n            this.body = ' '\n        }\n        else if(message.Event === 'LOCATION'){\n            this.body = '您上报的位置是：' + message.Latitude + '/' + message.Longitude + '-' +message.Precision\n        }\n        else if(message.Event === 'CLICK'){\n            this.body = '您点击了菜单：'+ message.EventKey\n        }\n        else if(message.Event === 'SCAN'){\n            console.log('关注后扫二维码'+ message.EventKey + ' '+ message.Ticket)\n            this.body = '您扫了二维码哦'\n        }\n        else if(message.Event === 'VIEW'){\n            this.body = '您点击了菜单中的连接：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_push'){\n            console.log(message.ScanCodeInfo.ScanType)\n            console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_waitmsg'){\n             console.log(message.ScanCodeInfo.ScanType)\n             console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_sysphoto'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_photo_or_album'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_weixin'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'location_select'){\n             console.log(message.SendLocationInfo.Location_X)\n             console.log(message.SendLocationInfo.Location_Y)\n             console.log(message.SendLocationInfo.Scale)\n             console.log(message.SendLocationInfo.Label)\n             console.log(message.SendLocationInfo.Poiname)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n    }\n    else if(message.MsgType === 'text'){\n        var content = message.Content\n        var reply = '你说的“' + message.Content + '” 我们没有这样的服务'\n\n        if(content === '1'){\n            reply = '天下第一'\n        }\n        else if(content === '2'){\n            reply = '天下第二'\n        }\n        else if(content === '3'){\n            reply = '天下第三'\n        }\n        else if(content === '4'){\n            reply = [{\n                title: 'nodejs开发微信',\n                description: 'nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么',\n                picUrl: 'http://www.aseoe.com/images/aseoe_nodejs_txal.jpg',\n                url: 'https://nodejs.org'\n            },{\n                title: '前端三大框架',\n                description: 'vue.js React.js angular.js是目前前端最火的三大框架',\n                picUrl: 'http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png',\n                url: 'https://cn.vuejs.org/'\n            }\n            ]\n        }\n        else if(content === '5'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n            console.log(data.media_id)\n        }\n        else if(content === '6'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4')\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '7'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'music',\n                title: '《李白》--李荣浩',\n                description: '轻松时刻',\n                musicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                hqMusicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                thumbMediaId: data.media_id\n            }\n        }\n        else if(content === '8'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{type:'image'})\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '9'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4',{type:'video', description:'{\"title\":\"VIDEO_TITLE\",\"introduction\":\"INTRODUCTION\"}'})\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '10'){\n            var picData  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{})\n\n            var media = {\n                articles:[{\n                    title:'angularjs入门',\n                    thumb_media_id:picData.media_id,\n                    show_cover_pic:1,\n                    author:'Leo',\n                    digest:'关于angularjs摘要',\n                    content:'augular是目前前端最火框架之一',\n                    content_source_url:'https://docs.angularjs.org/'\n                    }\n                ]\n                \n            }\n\n           var  data = yield wechatApi.uploadMaterial('news', media, {})\n           console.log('我要的mediaId：'+ data.media_id)\n           data = yield wechatApi.fetchMaterial(data.media_id, 'news', {})\n\n           console.log(data)\n\n           var items = data.news_item\n           var news = []\n\n           items.forEach(function(item){\n               news.push({\n                   title: item.title,\n                   description: item.digest,\n                   picUrl: picData.url,\n                   url: item.url\n               })\n           })\n\n           reply = news\n\n        }\n        else if(content === '11'){\n            var counts  = yield wechatApi.countMaterial()\n\n            console.log(JSON.stringify(counts))\n\n            var results = yield [\n                wechatApi.batchMaterial({\n                    type: 'image',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'video',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'vioce',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'news',\n                    offset: 0,\n                    count: 10\n                })\n            ]\n\n            console.log(JSON.stringify(results))\n\n            reply = 'ok'\n        }\n        else if(content === '12'){\n           /* var group1 = yield wechatApi.createGroup('wechat1')\n            console.log('新分组wechat1:')\n            console.log(group1)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('加了wechat1的分组:')\n            console.log(groups)\n\n            var group2 = yield wechatApi.checkGroup(message.FromUserName)\n            console.log('查看自己的分组:')\n            console.log(group2)\n\n            var group3 = yield wechatApi.updateGroup(100, 'wechat_update')\n            console.log('把wechat1分组改为wechat_update')\n            console.log(group3)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把wechat1分组改为wechat_update后的分组:')\n            console.log(groups)\n\n            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)\n            console.log('把我移动到2组')\n            console.log(group4)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把我移动到2组后的分组:')\n            console.log(groups)\n\n            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)\n            console.log('批量移动 把我移动到0组')\n            console.log(group5)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('查看 批量移动 把我移动到0组后的分组:')\n            console.log(groups)\n*/          \n            var groups = yield wechatApi.fetchGroup()\n            console.log(groups)\n            var group_delete = yield wechatApi.deleteGroup(101)\n            console.log('删除101')\n            console.log(group_delete)\n            groups = yield wechatApi.fetchGroup()\n            console.log('删除101后的分组')\n            console.log(groups)\n\n            reply = 'Groups done'\n\n        }\n        else if(content === '13'){\n          /* var remark = yield wechatApi.remarkUser(message.FromUserName, '超级大帅哥')\n            console.log(remark)\n            */\n            var user = yield wechatApi.fetchUser(message.FromUserName)\n            console.log(user)\n\n           /* var openIds = [{\n                openid : message.FromUserName, \n                lang:'zh_CN'\n            }]\n            var users = yield wechatApi.fetchUser(openIds)\n            console.log(users)\n            */\n            reply = JSON.stringify(user)\n\n        }\n        else if(content === '14'){\n            var list = yield wechatApi.listUsers()\n            console.log(list)\n\n            reply = list.total\n        }\n        else if(content === '15'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n\n            var text = {\n                content: '天要下雨了'\n            }\n\n            var msgData = yield wechatApi.sendByGroup('text', text, 0)\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n        else if(content === '16'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n          \n           /* var text = {\n                content: '天一直在打雷还没下雨'\n            }\n  */\n            var msgData = yield wechatApi.previewMass('mpnews', mpnews, 'okFRawx2UAkxdtKG1i9QNGzgXLA4')\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n         else if(content === '17'){\n             var msgData = yield wechatApi.checkMass('1000000010')\n             console.log(msgData)\n             reply = 'done'\n         }\n         else if(content === '18'){\n            \n                wechatApi.createMenu(menu).then(function(msg){\n                console.log('菜单生成状态：'+ JSON.stringify(msg))\n            })\n             /*var createMenu = yield wechatApi.createMenu(menu)\n             console.log(createMenu)\n             */\n             reply = 'done'\n         }\n         else if(content === '19'){\n            var semanticData = {\n                query:\"查一下明天从北京到上海的南航机票\",\n                city:\"北京\",\n                category: \"flight,hotel\",\n                uid: message.FromUserName\n            }\n\n            var _semantic = yield wechatApi.semantic(semanticData)\n            console.log(_semantic)\n             reply = JSON.stringify(_semantic)\n         }\n\n        this.body = reply\n    }\n    \n\n    yield next\n}\n```\n\n\n### 在koa中使用ejs模板 与 heredoc模块\nheredoc模块是作用是封装模板  \n比如：\n```\n'use strict'\n\nvar ejs = require('ejs')\nvar heredoc = require('heredoc')\n\nvar tpl = heredoc(function(){/*\n    <xml> \n        <ToUserName><![CDATA[<%= toUserName %>]]></ToUserName>\n        <FromUserName><![CDATA[<%= fromUserName %>]]></FromUserName> \n        <CreateTime> <%= createTime %> </CreateTime>\n        <MsgType><![CDATA[<%= msgType%>]]></MsgType>\n        <% if (msgType === 'text') {%>\n            <Content><![CDATA[<%= content%>]]></Content>\n        <% } else if(msgType === 'image') { %>\n            <Image>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Image>\n         <% } else if(msgType === 'video') { %>\n             <Video>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n            </Video> \n         <% } else if(msgType === 'voice') { %>\n             <Voice>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Voice>\n        <% } else if(msgType === 'music') { %>\n            <Music>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n                <MusicUrl><![CDATA[<%= content.musicUrl %>]]></MusicUrl>\n                <HQMusicUrl><![CDATA[<%= content.hqMusicUrl%>]]></HQMusicUrl>\n                <ThumbMediaId><![CDATA[<%= content.thumbMediaId %>]]></ThumbMediaId>\n            </Music> \n        <% } else if(msgType === 'news') { %>\n            <ArticleCount><%= content.length %></ArticleCount>           \n            <Articles>\n            <% content.forEach(function(item){ %>\n                <item>\n                    <Title><![CDATA[<%= item.title %>]]></Title> \n                    <Description><![CDATA[<%= item.description %>]]></Description>\n                    <PicUrl><![CDATA[<%= item.picUrl %>]]></PicUrl>\n                    <Url><![CDATA[<%= item.url %>]]></Url>\n                </item>\n            <% }) %>\n            </Articles>\n        <% } %>\n    </xml>\n\n*/})\n\nvar compiled = ejs.compile(tpl)\n\nexports = module.exports = {\n    compiled : compiled\n}\n```\n\n以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据  \n结合json数据\n```\nvar tpl = require('以上文件路径')\n\nvar data = {\n    msgType : 'text',\n    content : 'hello world'\n}\n\nvar xml = tpl.compiled(data)\n```\n或者可以使用render方法将模板和数据一并结合\n```\nvar xml = ejs.render(tpl, data)\n```\n\n******\n这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  \n\n其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  \n\n思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。\n\n这篇笔记就写到这吧，全部代码放在github上。\n\n\n\n","slug":"node开发微信公众号","published":1,"updated":"2022-12-06T15:30:38.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbwdlv5l009pmcq05f5r3h6m","content":"<h2 id=\"开发第一步\"><a href=\"#开发第一步\" class=\"headerlink\" title=\"开发第一步\"></a>开发第一步</h2><p>不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。</p>\n<p>开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  </p>\n<p>开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  </p>\n<h2 id=\"开始开发\"><a href=\"#开始开发\" class=\"headerlink\" title=\"开始开发\"></a>开始开发</h2><p>我们使用koa框架。<br>app.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wechat/g&#x27;</span>)  <span class=\"comment\">//可以看作是程序的第二个流程，实现验证 以及调用回复功能</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config&#x27;</span>) <span class=\"comment\">//公众号的配置配置信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reply = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wx/reply&#x27;</span>)  <span class=\"comment\">//处理客户发过来的消息，回复逻辑</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Wechat</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wechat/wechat&#x27;</span>) <span class=\"comment\">//回复各种消息类型获取的api，封装在Wechat对象中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">wechat</span>(config.<span class=\"property\">wechat</span>, reply.<span class=\"property\">reply</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">1234</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;listening at port 1234...&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<p>wechat/g.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sha1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sha1&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> getRawBody = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;raw-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Wechat</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wechat&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./util&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">opts, handler</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wechat = <span class=\"keyword\">new</span> <span class=\"title class_\">Wechat</span>(opts)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> *(next)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> token = opts.<span class=\"property\">token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> signature = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">signature</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> nonce = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">nonce</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> timestamp = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">timestamp</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> echostr = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">echostr</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> str = [token, timestamp, nonce].<span class=\"title function_\">sort</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">var</span> sha = <span class=\"title function_\">sha1</span>(str)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">method</span> == <span class=\"string\">&#x27;GET&#x27;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha === signature)&#123;</span><br><span class=\"line\">                        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = echostr + <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;wrong&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">method</span> == <span class=\"string\">&#x27;POST&#x27;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">method</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha !== signature)&#123;</span><br><span class=\"line\">                        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;wrong&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> data = <span class=\"keyword\">yield</span> <span class=\"title function_\">getRawBody</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">req</span>, &#123; <span class=\"comment\">//xml格式的数据</span></span><br><span class=\"line\">                        <span class=\"attr\">length</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">length</span>,</span><br><span class=\"line\">                        <span class=\"attr\">limit</span>: <span class=\"string\">&#x27;1mb&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"attr\">encoding</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">charset</span></span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(data.toString())</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> content = <span class=\"keyword\">yield</span> util.<span class=\"title function_\">parseXMLAsync</span>(data) <span class=\"comment\">//转化为json格式的数据</span></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(content)</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> message = util.<span class=\"title function_\">formatMessage</span>(content.<span class=\"property\">xml</span>)</span><br><span class=\"line\">                    <span class=\"comment\">//console.log(message)</span></span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"variable language_\">this</span>.<span class=\"property\">weixin</span> = message</span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">yield</span> handler.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, next)</span><br><span class=\"line\"></span><br><span class=\"line\">                   wechat.<span class=\"property\">reply</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>)   <span class=\"comment\">//数据转化为最终的xml格式，客户端只能解析xml格式数据</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>wechat/wechat.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Promise</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;bluebird&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./util&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> _ = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;lodash&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> prefix = <span class=\"string\">&#x27;https://api.weixin.qq.com/cgi-bin/&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> api = &#123;</span><br><span class=\"line\">    accessToken : prefix + <span class=\"string\">&#x27;token?grant_type=client_credential&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">temporary</span>: &#123;</span><br><span class=\"line\">        upload : prefix + <span class=\"string\">&#x27;media/upload?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix + <span class=\"string\">&#x27;media/get?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">permanent</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">upload</span>: prefix + <span class=\"string\">&#x27;material/add_material?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix + <span class=\"string\">&#x27;material/get_material?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">uploadNews</span>: prefix + <span class=\"string\">&#x27;material/add_news?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">uploadNewsPic</span>:prefix + <span class=\"string\">&#x27;material/uploadimg?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;material/del_material?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">update</span>: prefix + <span class=\"string\">&#x27;material/update_news?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">count</span>: prefix + <span class=\"string\">&#x27;material/get_materialcount?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">batch</span>: prefix + <span class=\"string\">&#x27;material/batchget_material?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">create</span>: prefix + <span class=\"string\">&#x27;groups/create?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix + <span class=\"string\">&#x27;groups/get?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">check</span>: prefix + <span class=\"string\">&#x27;groups/getid?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">update</span>:prefix + <span class=\"string\">&#x27;groups/update?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">move</span>: prefix + <span class=\"string\">&#x27;groups/members/update?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">batchupdata</span>: prefix + <span class=\"string\">&#x27;groups/members/batchupdate?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;groups/delete?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">user</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">remark</span>: prefix +　<span class=\"string\">&#x27;user/info/updateremark?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix +　<span class=\"string\">&#x27;user/info?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">batchFetch</span>: prefix + <span class=\"string\">&#x27;user/info/batchget?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">list</span>: prefix +　<span class=\"string\">&#x27;user/get?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mass</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">group</span>: prefix + <span class=\"string\">&#x27;message/mass/sendall?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">openId</span>: prefix + <span class=\"string\">&#x27;message/mass/send?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;message/mass/delete?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">preview</span>: prefix + <span class=\"string\">&#x27;message/mass/preview?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">check</span>: prefix + <span class=\"string\">&#x27;message/mass/get?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">menu</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">create</span>: prefix + <span class=\"string\">&#x27;menu/create?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">get</span>:　prefix +　<span class=\"string\">&#x27;menu/get?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;menu/delete?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">current</span>: prefix + <span class=\"string\">&#x27;get_current_selfmenu_info?&#x27;</span></span><br><span class=\"line\">    &#125;,   </span><br><span class=\"line\">    <span class=\"attr\">semantic</span>: <span class=\"string\">&#x27;https://api.weixin.qq.com/semantic/semproxy/search?&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">ticket</span>: &#123;</span><br><span class=\"line\">        get : prefix +　<span class=\"string\">&#x27;ticket/getticket?&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Wechat</span>(<span class=\"params\">opts</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">appID</span> = opts.<span class=\"property\">appID</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">appSecret</span> = opts.<span class=\"property\">appSecret</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">getAccessToken</span> = opts.<span class=\"property\">getAccessToken</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">saveAccessToken</span> = opts.<span class=\"property\">saveAccessToken</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">getTicket</span> = opts.<span class=\"property\">getTicket</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">saveTicket</span> = opts.<span class=\"property\">saveTicket</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取ticket</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchTicket</span> = <span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">getTicket</span>()</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateTicket</span>(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.<span class=\"title function_\">isValidTicket</span>(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateTicket</span>(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            that.<span class=\"title function_\">saveTicket</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateTicket</span> = <span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.<span class=\"property\">ticket</span>.<span class=\"property\">get</span> + <span class=\"string\">&#x27;&amp;access_token=&#x27;</span> + access_token + <span class=\"string\">&#x27;&amp;type=jsapi&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;can not get ticket&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">isValidTicket</span> = <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.<span class=\"property\">ticket</span> || !data.<span class=\"property\">expires_in</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ticket = data.<span class=\"property\">ticket</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.<span class=\"property\">expires_in</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ticket &amp;&amp; now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取access_token</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchAccessToken</span> = <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">access_token</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">expires_in</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">isValidAccessToken</span>(<span class=\"variable language_\">this</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">getAccessToken</span>()</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateAccessToken</span>()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.<span class=\"title function_\">isValidAccessToken</span>(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateAccessToken</span>()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            that.<span class=\"property\">access_token</span> = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">            that.<span class=\"property\">expires_in</span> = data.<span class=\"property\">expires_in</span></span><br><span class=\"line\"></span><br><span class=\"line\">            that.<span class=\"title function_\">saveAccessToken</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">isValidAccessToken</span> = <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.<span class=\"property\">access_token</span> || !data.<span class=\"property\">expires_in</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> access_token = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.<span class=\"property\">expires_in</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateAccessToken</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> appID = <span class=\"variable language_\">this</span>.<span class=\"property\">appID</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> appSecret = <span class=\"variable language_\">this</span>.<span class=\"property\">appSecret</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.<span class=\"property\">accessToken</span> + <span class=\"string\">&#x27;&amp;appid=&#x27;</span> + appID + <span class=\"string\">&#x27;&amp;secret=&#x27;</span> + appSecret</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;can not get access_token&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">uploadMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, material, permanent</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadUrl = api.<span class=\"property\">temporary</span>.<span class=\"property\">upload</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        uploadUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">upload</span></span><br><span class=\"line\"></span><br><span class=\"line\">        _.<span class=\"title function_\">extend</span>(form, permanent)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;pic&#x27;</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">uploadNewsPic</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;news&#x27;</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">uploadNews</span></span><br><span class=\"line\">        form = material</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        form.<span class=\"property\">media</span> = fs.<span class=\"title function_\">createReadStream</span>(material)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = uploadUrl + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> </span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!permanent) &#123;</span><br><span class=\"line\">                    url += <span class=\"string\">&#x27;&amp;type=&#x27;</span> + type</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    form.<span class=\"property\">access_token</span> = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">url</span>: url,</span><br><span class=\"line\">                    <span class=\"attr\">json</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;news&#x27;</span>)&#123;</span><br><span class=\"line\">                    options.<span class=\"property\">body</span> = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    options.<span class=\"property\">formData</span> = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        <span class=\"comment\">//console.log(_data);</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;upload material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">mediaId, type, permanent</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fetchUrl = api.<span class=\"property\">temporary</span>.<span class=\"property\">fetch</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        fetchUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">fetch</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = fetchUrl + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> </span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">                    form.<span class=\"property\">media_id</span> = mediaId</span><br><span class=\"line\">                    form.<span class=\"property\">access_token</span> = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                    options.<span class=\"property\">body</span> = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;video&#x27;</span>)&#123;</span><br><span class=\"line\">                        url = url.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;https://&#x27;</span>, <span class=\"string\">&#x27;http://&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    url += <span class=\"string\">&#x27;&amp;media_id=&#x27;</span> + mediaId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;news&#x27;</span> || type === <span class=\"string\">&#x27;video&#x27;</span>)&#123;</span><br><span class=\"line\">                   <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                            <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                                <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                            &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete material fails&#x27;</span>)</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   <span class=\"title function_\">resolve</span>(url)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">mediaId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        <span class=\"attr\">media_id</span>:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> + <span class=\"string\">&#x27;&amp;media_id=&#x27;</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">mediaId, news</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        <span class=\"attr\">media_id</span>:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _.<span class=\"title function_\">extend</span>(form, news)</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">update</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> + <span class=\"string\">&#x27;&amp;media_id=&#x27;</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">countMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">count</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;count material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">batchMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    options.<span class=\"property\">type</span> = options.<span class=\"property\">type</span> || <span class=\"string\">&#x27;image&#x27;</span></span><br><span class=\"line\">    options.<span class=\"property\">offset</span> = options.<span class=\"property\">offset</span> || <span class=\"number\">0</span></span><br><span class=\"line\">    options.<span class=\"property\">count</span> = options.<span class=\"property\">count</span> || <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">batch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:options, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;batch material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户分组</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">createGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">create</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">name</span>: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;create group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">fetch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;fetch group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">checkGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">check</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    openid : openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;check group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">id, name</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">update</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">id</span>: id,</span><br><span class=\"line\">                        <span class=\"attr\">name</span>: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;update group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">moveGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openIds, to_groupid</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> url</span><br><span class=\"line\">               <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                   to_groupid : to_groupid</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.<span class=\"title function_\">isArray</span>(openIds))&#123;</span><br><span class=\"line\">                   url = api.<span class=\"property\">group</span>.<span class=\"property\">batchupdata</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                   form.<span class=\"property\">openid_list</span> = openIds</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   url = api.<span class=\"property\">group</span>.<span class=\"property\">move</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                   form.<span class=\"property\">openid</span> = openIds</span><br><span class=\"line\">               &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;move group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">id</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">id</span>: id</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取用户信息</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">remarkUser</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openId, remark</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">user</span>.<span class=\"property\">remark</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">openid</span>:　openId,</span><br><span class=\"line\">                    <span class=\"attr\">remark</span>: remark</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;remark user fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchUser</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openIds, lang</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> lang = lang || <span class=\"string\">&#x27;zh_CN&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> options　= &#123;</span><br><span class=\"line\">                   <span class=\"attr\">json</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.<span class=\"title function_\">isArray</span>(openIds))&#123;</span><br><span class=\"line\">                   options.<span class=\"property\">url</span> = api.<span class=\"property\">user</span>.<span class=\"property\">batchFetch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                   options.<span class=\"property\">method</span> = <span class=\"string\">&#x27;POST&#x27;</span></span><br><span class=\"line\">                   options.<span class=\"property\">body</span> = &#123;</span><br><span class=\"line\">                       user_list : openIds</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   options.<span class=\"property\">url</span> = api.<span class=\"property\">user</span>.<span class=\"property\">fetch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> + <span class=\"string\">&#x27;&amp;openid=&#x27;</span> + openIds + <span class=\"string\">&#x27;&amp;lang=&#x27;</span> + lang</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;fetch users fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">    &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">listUsers</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">user</span>.<span class=\"property\">list</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span>(openId)&#123;</span><br><span class=\"line\">                    url += <span class=\"string\">&#x27;&amp;next_openid=&#x27;</span> + openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;list users fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sendByGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, message, groupId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        <span class=\"attr\">filter</span>:&#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">msgtype</span>:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!groupId)&#123;</span><br><span class=\"line\">        msg.<span class=\"property\">filter</span>.<span class=\"property\">is_to_all</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        msg.<span class=\"property\">filter</span>.<span class=\"property\">is_to_all</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">        msg.<span class=\"property\">filter</span>.<span class=\"property\">group_id</span> = groupId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">group</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:msg, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;sell by group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sendByOpenId</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, message, openIds</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        <span class=\"attr\">touser</span>:openIds,</span><br><span class=\"line\">        <span class=\"attr\">msgtype</span>:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">openId</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:msg, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;sell by openid fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteMass</span> = <span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    msg_id : msgId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete Mass fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">previewMass</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, message, openId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        <span class=\"attr\">touser</span>:openId,</span><br><span class=\"line\">        <span class=\"attr\">msgtype</span>:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">preview</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:msg, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;preview mass fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">checkMass</span> = <span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        msg_id : msgId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">check</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;check mass fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">createMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\">menu</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">create</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:menu, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;create menu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">get</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;get menu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete menu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">currentSelfMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">current</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;get current selfmenu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">semantic</span> = <span class=\"keyword\">function</span>(<span class=\"params\">semanticData</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">semantic</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                semanticData.<span class=\"property\">appid</span> = data.<span class=\"property\">appID</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:semanticData, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;semantic data fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">reply</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;  <span class=\"comment\">//实现完整的回复逻辑，放回给客户端xml格式数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> content = <span class=\"variable language_\">this</span>.<span class=\"property\">body</span>   <span class=\"comment\">//此时的this.body是json数据格式</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"variable language_\">this</span>.<span class=\"property\">weixin</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> xml = util.<span class=\"title function_\">tpl</span>(content, message)  <span class=\"comment\">//将content与message中的内容提出整合，此时已经变成了xml格式</span></span><br><span class=\"line\">    <span class=\"comment\">//console.log(&#x27;xml:&#x27;+ xml)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">type</span> = <span class=\"string\">&#x27;application/xml&#x27;</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = xml</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">Wechat</span></span><br></pre></td></tr></table></figure></p>\n<p>wx/reply.js  处理客户端消息<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Wechat</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../wechat/wechat&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechatApi = <span class=\"keyword\">new</span> <span class=\"title class_\">Wechat</span>(config.<span class=\"property\">wechat</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> menu = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./menu&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*wechatApi.deleteMenu().then(function()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    return wechatApi.createMenu(menu)</span></span><br><span class=\"line\"><span class=\"comment\">&#125;).then(function(msg)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    console.log(msg)</span></span><br><span class=\"line\"><span class=\"comment\">&#125;)*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">reply</span> = <span class=\"keyword\">function</span> *(next)&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"variable language_\">this</span>.<span class=\"property\">weixin</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(message.<span class=\"property\">MsgType</span> === <span class=\"string\">&#x27;event&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;subscribe&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(message.<span class=\"property\">EventKey</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;扫二维码进来：&#x27;</span>+ message.<span class=\"property\">EventKey</span> +<span class=\"string\">&#x27; &#x27;</span>+ message.<span class=\"property\">ticket</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> =  <span class=\"string\">&#x27;么么哒&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;unsubscribe&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;无情取关！&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;LOCATION&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您上报的位置是：&#x27;</span> + message.<span class=\"property\">Latitude</span> + <span class=\"string\">&#x27;/&#x27;</span> + message.<span class=\"property\">Longitude</span> + <span class=\"string\">&#x27;-&#x27;</span> +message.<span class=\"property\">Precision</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;CLICK&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;SCAN&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;关注后扫二维码&#x27;</span>+ message.<span class=\"property\">EventKey</span> + <span class=\"string\">&#x27; &#x27;</span>+ message.<span class=\"property\">Ticket</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您扫了二维码哦&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;VIEW&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的连接：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;scancode_push&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanType</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanResult</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;scancode_waitmsg&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanType</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanResult</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;pic_sysphoto&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">Count</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">PicList</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;pic_photo_or_album&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">Count</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">PicList</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;pic_weixin&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">Count</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">PicList</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;location_select&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Location_X</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Location_Y</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Scale</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Label</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Poiname</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">MsgType</span> === <span class=\"string\">&#x27;text&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> content = message.<span class=\"property\">Content</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> reply = <span class=\"string\">&#x27;你说的“&#x27;</span> + message.<span class=\"property\">Content</span> + <span class=\"string\">&#x27;” 我们没有这样的服务&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;1&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;天下第一&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;2&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;天下第二&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;3&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;天下第三&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;4&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = [&#123;</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;nodejs开发微信&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">picUrl</span>: <span class=\"string\">&#x27;http://www.aseoe.com/images/aseoe_nodejs_txal.jpg&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://nodejs.org&#x27;</span></span><br><span class=\"line\">            &#125;,&#123;</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;前端三大框架&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;vue.js React.js angular.js是目前前端最火的三大框架&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">picUrl</span>: <span class=\"string\">&#x27;http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://cn.vuejs.org/&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;5&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;image&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data.<span class=\"property\">media_id</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;6&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;video&#x27;</span>, __dirname + <span class=\"string\">&#x27;/6.mp4&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;video&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;跪着唱征服&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;试试这是个怎样的感觉&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;7&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;music&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;《李白》--李荣浩&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;轻松时刻&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">musicUrl</span>: <span class=\"string\">&#x27;http://link.hhtjim.com/163/27678655.mp3&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">hqMusicUrl</span>: <span class=\"string\">&#x27;http://link.hhtjim.com/163/27678655.mp3&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">thumbMediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;8&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>,&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;image&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;image&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;9&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;video&#x27;</span>, __dirname + <span class=\"string\">&#x27;/6.mp4&#x27;</span>,&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;video&#x27;</span>, <span class=\"attr\">description</span>:<span class=\"string\">&#x27;&#123;&quot;title&quot;:&quot;VIDEO_TITLE&quot;,&quot;introduction&quot;:&quot;INTRODUCTION&quot;&#125;&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;video&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;跪着唱征服&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;试试这是个怎样的感觉&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;10&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> picData  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>,&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> media = &#123;</span><br><span class=\"line\">                <span class=\"attr\">articles</span>:[&#123;</span><br><span class=\"line\">                    <span class=\"attr\">title</span>:<span class=\"string\">&#x27;angularjs入门&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">thumb_media_id</span>:picData.<span class=\"property\">media_id</span>,</span><br><span class=\"line\">                    <span class=\"attr\">show_cover_pic</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">author</span>:<span class=\"string\">&#x27;Leo&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">digest</span>:<span class=\"string\">&#x27;关于angularjs摘要&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">content</span>:<span class=\"string\">&#x27;augular是目前前端最火框架之一&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">content_source_url</span>:<span class=\"string\">&#x27;https://docs.angularjs.org/&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span>  data = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;news&#x27;</span>, media, &#123;&#125;)</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我要的mediaId：&#x27;</span>+ data.<span class=\"property\">media_id</span>)</span><br><span class=\"line\">           data = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchMaterial</span>(data.<span class=\"property\">media_id</span>, <span class=\"string\">&#x27;news&#x27;</span>, &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span> items = data.<span class=\"property\">news_item</span></span><br><span class=\"line\">           <span class=\"keyword\">var</span> news = []</span><br><span class=\"line\"></span><br><span class=\"line\">           items.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">item</span>)&#123;</span><br><span class=\"line\">               news.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">                   <span class=\"attr\">title</span>: item.<span class=\"property\">title</span>,</span><br><span class=\"line\">                   <span class=\"attr\">description</span>: item.<span class=\"property\">digest</span>,</span><br><span class=\"line\">                   <span class=\"attr\">picUrl</span>: picData.<span class=\"property\">url</span>,</span><br><span class=\"line\">                   <span class=\"attr\">url</span>: item.<span class=\"property\">url</span></span><br><span class=\"line\">               &#125;)</span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           reply = news</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;11&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> counts  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">countMaterial</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(counts))</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> results = <span class=\"keyword\">yield</span> [</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;image&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;video&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;vioce&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;news&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            ]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(results))</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;ok&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;12&#x27;</span>)&#123;</span><br><span class=\"line\">           <span class=\"comment\">/* var group1 = yield wechatApi.createGroup(&#x27;wechat1&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;新分组wechat1:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group1)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;加了wechat1的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group2 = yield wechatApi.checkGroup(message.FromUserName)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看自己的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group2)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group3 = yield wechatApi.updateGroup(100, &#x27;wechat_update&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;把wechat1分组改为wechat_update&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group3)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看把wechat1分组改为wechat_update后的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;把我移动到2组&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group4)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看把我移动到2组后的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;批量移动 把我移动到0组&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group5)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看 批量移动 把我移动到0组后的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>          </span><br><span class=\"line\">            <span class=\"keyword\">var</span> groups = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchGroup</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(groups)</span><br><span class=\"line\">            <span class=\"keyword\">var</span> group_delete = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">deleteGroup</span>(<span class=\"number\">101</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;删除101&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(group_delete)</span><br><span class=\"line\">            groups = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchGroup</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;删除101后的分组&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;Groups done&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;13&#x27;</span>)&#123;</span><br><span class=\"line\">          <span class=\"comment\">/* var remark = yield wechatApi.remarkUser(message.FromUserName, &#x27;超级大帅哥&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(remark)</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> user = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchUser</span>(message.<span class=\"property\">FromUserName</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(user)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">/* var openIds = [&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                openid : message.FromUserName, </span></span><br><span class=\"line\"><span class=\"comment\">                lang:&#x27;zh_CN&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;]</span></span><br><span class=\"line\"><span class=\"comment\">            var users = yield wechatApi.fetchUser(openIds)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(users)</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">            reply = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(user)</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;14&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> list = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">listUsers</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(list)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = list.<span class=\"property\">total</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;15&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">&#x27;fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> text = &#123;</span><br><span class=\"line\">                <span class=\"attr\">content</span>: <span class=\"string\">&#x27;天要下雨了&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">sendByGroup</span>(<span class=\"string\">&#x27;text&#x27;</span>, text, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;内容如下&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;16&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">&#x27;fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">           <span class=\"comment\">/* var text = &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                content: &#x27;天一直在打雷还没下雨&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">previewMass</span>(<span class=\"string\">&#x27;mpnews&#x27;</span>, mpnews, <span class=\"string\">&#x27;okFRawx2UAkxdtKG1i9QNGzgXLA4&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;内容如下&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;17&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">checkMass</span>(<span class=\"string\">&#x27;1000000010&#x27;</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(msgData)</span><br><span class=\"line\">             reply = <span class=\"string\">&#x27;done&#x27;</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;18&#x27;</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">createMenu</span>(menu).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">msg</span>)&#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;菜单生成状态：&#x27;</span>+ <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(msg))</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">             <span class=\"comment\">/*var createMenu = yield wechatApi.createMenu(menu)</span></span><br><span class=\"line\"><span class=\"comment\">             console.log(createMenu)</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">             reply = <span class=\"string\">&#x27;done&#x27;</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;19&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> semanticData = &#123;</span><br><span class=\"line\">                <span class=\"attr\">query</span>:<span class=\"string\">&quot;查一下明天从北京到上海的南航机票&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">city</span>:<span class=\"string\">&quot;北京&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">category</span>: <span class=\"string\">&quot;flight,hotel&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">uid</span>: message.<span class=\"property\">FromUserName</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> _semantic = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">semantic</span>(semanticData)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(_semantic)</span><br><span class=\"line\">             reply = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(_semantic)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = reply</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> next</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"在koa中使用ejs模板-与-heredoc模块\"><a href=\"#在koa中使用ejs模板-与-heredoc模块\" class=\"headerlink\" title=\"在koa中使用ejs模板 与 heredoc模块\"></a>在koa中使用ejs模板 与 heredoc模块</h3><p>heredoc模块是作用是封装模板<br>比如：<br><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">var ejs = require(&#x27;ejs&#x27;)</span></span><br><span class=\"line\"><span class=\"language-xml\">var heredoc = require(&#x27;heredoc&#x27;)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">var tpl = heredoc(function()&#123;/*</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">xml</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ToUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> toUserName </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ToUserName</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">FromUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> fromUserName </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">FromUserName</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">CreateTime</span>&gt;</span> &lt;%=</span><span class=\"language-ruby\"> createTime </span><span class=\"language-xml\">%&gt; <span class=\"tag\">&lt;/<span class=\"name\">CreateTime</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">MsgType</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> msgType</span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MsgType</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> <span class=\"keyword\">if</span> (msgType === <span class=\"string\">&#x27;text&#x27;</span>) &#123;</span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Content</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content</span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Content</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;image&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.mediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">         &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;video&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">             <span class=\"tag\">&lt;<span class=\"name\">Video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.mediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.title </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.description </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Video</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">         &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;voice&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">             <span class=\"tag\">&lt;<span class=\"name\">Voice</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.mediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Voice</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;music&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Music</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.title </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.description </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.musicUrl </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MusicUrl</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">HQMusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.hqMusicUrl</span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">HQMusicUrl</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">ThumbMediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.thumbMediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ThumbMediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Music</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;news&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">ArticleCount</span>&gt;</span>&lt;%=</span><span class=\"language-ruby\"> content.length </span><span class=\"language-xml\">%&gt;<span class=\"tag\">&lt;/<span class=\"name\">ArticleCount</span>&gt;</span>           </span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Articles</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            &lt;%</span><span class=\"language-ruby\"> content.forEach(function(item)&#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.title </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.description </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">PicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.picUrl </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">PicUrl</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Url</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.url </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Url</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            &lt;%</span><span class=\"language-ruby\"> &#125;) </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Articles</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">xml</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">*/&#125;)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">var compiled = ejs.compile(tpl)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">exports = module.exports = &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">    compiled : compiled</span></span><br><span class=\"line\"><span class=\"language-xml\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据<br>结合json数据<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> tpl = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;以上文件路径&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = &#123;</span><br><span class=\"line\">    msgType : <span class=\"string\">&#x27;text&#x27;</span>,</span><br><span class=\"line\">    content : <span class=\"string\">&#x27;hello world&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">xml</span> = tpl.compiled(<span class=\"built_in\">data</span>)</span><br></pre></td></tr></table></figure><br>或者可以使用render方法将模板和数据一并结合<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"keyword\">xml</span> <span class=\"title\">= ejs</span>.render(tpl, data)</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  </p>\n<p>其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  </p>\n<p>思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。</p>\n<p>这篇笔记就写到这吧，全部代码放在github上。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"开发第一步\"><a href=\"#开发第一步\" class=\"headerlink\" title=\"开发第一步\"></a>开发第一步</h2><p>不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。</p>\n<p>开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  </p>\n<p>开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  </p>\n<h2 id=\"开始开发\"><a href=\"#开始开发\" class=\"headerlink\" title=\"开始开发\"></a>开始开发</h2><p>我们使用koa框架。<br>app.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Koa</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;koa&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wechat/g&#x27;</span>)  <span class=\"comment\">//可以看作是程序的第二个流程，实现验证 以及调用回复功能</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./config&#x27;</span>) <span class=\"comment\">//公众号的配置配置信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reply = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wx/reply&#x27;</span>)  <span class=\"comment\">//处理客户发过来的消息，回复逻辑</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Wechat</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wechat/wechat&#x27;</span>) <span class=\"comment\">//回复各种消息类型获取的api，封装在Wechat对象中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Koa</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">wechat</span>(config.<span class=\"property\">wechat</span>, reply.<span class=\"property\">reply</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">1234</span>)</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;listening at port 1234...&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<p>wechat/g.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sha1 = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sha1&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> getRawBody = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;raw-body&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Wechat</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./wechat&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./util&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"keyword\">function</span>(<span class=\"params\">opts, handler</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wechat = <span class=\"keyword\">new</span> <span class=\"title class_\">Wechat</span>(opts)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> *(next)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> token = opts.<span class=\"property\">token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> signature = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">signature</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> nonce = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">nonce</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> timestamp = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">timestamp</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> echostr = <span class=\"variable language_\">this</span>.<span class=\"property\">query</span>.<span class=\"property\">echostr</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> str = [token, timestamp, nonce].<span class=\"title function_\">sort</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">var</span> sha = <span class=\"title function_\">sha1</span>(str)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">method</span> == <span class=\"string\">&#x27;GET&#x27;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha === signature)&#123;</span><br><span class=\"line\">                        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = echostr + <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;wrong&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">method</span> == <span class=\"string\">&#x27;POST&#x27;</span>)&#123;</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">method</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha !== signature)&#123;</span><br><span class=\"line\">                        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;wrong&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> data = <span class=\"keyword\">yield</span> <span class=\"title function_\">getRawBody</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">req</span>, &#123; <span class=\"comment\">//xml格式的数据</span></span><br><span class=\"line\">                        <span class=\"attr\">length</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">length</span>,</span><br><span class=\"line\">                        <span class=\"attr\">limit</span>: <span class=\"string\">&#x27;1mb&#x27;</span>,</span><br><span class=\"line\">                        <span class=\"attr\">encoding</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">charset</span></span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(data.toString())</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> content = <span class=\"keyword\">yield</span> util.<span class=\"title function_\">parseXMLAsync</span>(data) <span class=\"comment\">//转化为json格式的数据</span></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(content)</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> message = util.<span class=\"title function_\">formatMessage</span>(content.<span class=\"property\">xml</span>)</span><br><span class=\"line\">                    <span class=\"comment\">//console.log(message)</span></span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"variable language_\">this</span>.<span class=\"property\">weixin</span> = message</span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">yield</span> handler.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, next)</span><br><span class=\"line\"></span><br><span class=\"line\">                   wechat.<span class=\"property\">reply</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>)   <span class=\"comment\">//数据转化为最终的xml格式，客户端只能解析xml格式数据</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>wechat/wechat.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Promise</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;bluebird&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;request&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./util&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> _ = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;lodash&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> prefix = <span class=\"string\">&#x27;https://api.weixin.qq.com/cgi-bin/&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> api = &#123;</span><br><span class=\"line\">    accessToken : prefix + <span class=\"string\">&#x27;token?grant_type=client_credential&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">temporary</span>: &#123;</span><br><span class=\"line\">        upload : prefix + <span class=\"string\">&#x27;media/upload?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix + <span class=\"string\">&#x27;media/get?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">permanent</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">upload</span>: prefix + <span class=\"string\">&#x27;material/add_material?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix + <span class=\"string\">&#x27;material/get_material?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">uploadNews</span>: prefix + <span class=\"string\">&#x27;material/add_news?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">uploadNewsPic</span>:prefix + <span class=\"string\">&#x27;material/uploadimg?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;material/del_material?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">update</span>: prefix + <span class=\"string\">&#x27;material/update_news?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">count</span>: prefix + <span class=\"string\">&#x27;material/get_materialcount?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">batch</span>: prefix + <span class=\"string\">&#x27;material/batchget_material?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">create</span>: prefix + <span class=\"string\">&#x27;groups/create?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix + <span class=\"string\">&#x27;groups/get?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">check</span>: prefix + <span class=\"string\">&#x27;groups/getid?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">update</span>:prefix + <span class=\"string\">&#x27;groups/update?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">move</span>: prefix + <span class=\"string\">&#x27;groups/members/update?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">batchupdata</span>: prefix + <span class=\"string\">&#x27;groups/members/batchupdate?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;groups/delete?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">user</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">remark</span>: prefix +　<span class=\"string\">&#x27;user/info/updateremark?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">fetch</span>: prefix +　<span class=\"string\">&#x27;user/info?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">batchFetch</span>: prefix + <span class=\"string\">&#x27;user/info/batchget?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">list</span>: prefix +　<span class=\"string\">&#x27;user/get?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">mass</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">group</span>: prefix + <span class=\"string\">&#x27;message/mass/sendall?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">openId</span>: prefix + <span class=\"string\">&#x27;message/mass/send?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;message/mass/delete?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">preview</span>: prefix + <span class=\"string\">&#x27;message/mass/preview?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">check</span>: prefix + <span class=\"string\">&#x27;message/mass/get?&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">menu</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">create</span>: prefix + <span class=\"string\">&#x27;menu/create?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">get</span>:　prefix +　<span class=\"string\">&#x27;menu/get?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">del</span>: prefix + <span class=\"string\">&#x27;menu/delete?&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">current</span>: prefix + <span class=\"string\">&#x27;get_current_selfmenu_info?&#x27;</span></span><br><span class=\"line\">    &#125;,   </span><br><span class=\"line\">    <span class=\"attr\">semantic</span>: <span class=\"string\">&#x27;https://api.weixin.qq.com/semantic/semproxy/search?&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">ticket</span>: &#123;</span><br><span class=\"line\">        get : prefix +　<span class=\"string\">&#x27;ticket/getticket?&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Wechat</span>(<span class=\"params\">opts</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">appID</span> = opts.<span class=\"property\">appID</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">appSecret</span> = opts.<span class=\"property\">appSecret</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">getAccessToken</span> = opts.<span class=\"property\">getAccessToken</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">saveAccessToken</span> = opts.<span class=\"property\">saveAccessToken</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">getTicket</span> = opts.<span class=\"property\">getTicket</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">saveTicket</span> = opts.<span class=\"property\">saveTicket</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取ticket</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchTicket</span> = <span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">getTicket</span>()</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateTicket</span>(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.<span class=\"title function_\">isValidTicket</span>(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateTicket</span>(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            that.<span class=\"title function_\">saveTicket</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateTicket</span> = <span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.<span class=\"property\">ticket</span>.<span class=\"property\">get</span> + <span class=\"string\">&#x27;&amp;access_token=&#x27;</span> + access_token + <span class=\"string\">&#x27;&amp;type=jsapi&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;can not get ticket&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">isValidTicket</span> = <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.<span class=\"property\">ticket</span> || !data.<span class=\"property\">expires_in</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ticket = data.<span class=\"property\">ticket</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.<span class=\"property\">expires_in</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ticket &amp;&amp; now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取access_token</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchAccessToken</span> = <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">access_token</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">expires_in</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">isValidAccessToken</span>(<span class=\"variable language_\">this</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">getAccessToken</span>()</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateAccessToken</span>()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.<span class=\"title function_\">isValidAccessToken</span>(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.<span class=\"title function_\">updateAccessToken</span>()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">            that.<span class=\"property\">access_token</span> = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">            that.<span class=\"property\">expires_in</span> = data.<span class=\"property\">expires_in</span></span><br><span class=\"line\"></span><br><span class=\"line\">            that.<span class=\"title function_\">saveAccessToken</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">isValidAccessToken</span> = <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.<span class=\"property\">access_token</span> || !data.<span class=\"property\">expires_in</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> access_token = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.<span class=\"property\">expires_in</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateAccessToken</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> appID = <span class=\"variable language_\">this</span>.<span class=\"property\">appID</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> appSecret = <span class=\"variable language_\">this</span>.<span class=\"property\">appSecret</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.<span class=\"property\">accessToken</span> + <span class=\"string\">&#x27;&amp;appid=&#x27;</span> + appID + <span class=\"string\">&#x27;&amp;secret=&#x27;</span> + appSecret</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.<span class=\"property\">expires_in</span> - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.<span class=\"property\">expires_in</span> = expires_in;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;can not get access_token&#x27;</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">uploadMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, material, permanent</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadUrl = api.<span class=\"property\">temporary</span>.<span class=\"property\">upload</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        uploadUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">upload</span></span><br><span class=\"line\"></span><br><span class=\"line\">        _.<span class=\"title function_\">extend</span>(form, permanent)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;pic&#x27;</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">uploadNewsPic</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;news&#x27;</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">uploadNews</span></span><br><span class=\"line\">        form = material</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        form.<span class=\"property\">media</span> = fs.<span class=\"title function_\">createReadStream</span>(material)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = uploadUrl + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> </span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!permanent) &#123;</span><br><span class=\"line\">                    url += <span class=\"string\">&#x27;&amp;type=&#x27;</span> + type</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    form.<span class=\"property\">access_token</span> = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">url</span>: url,</span><br><span class=\"line\">                    <span class=\"attr\">json</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;news&#x27;</span>)&#123;</span><br><span class=\"line\">                    options.<span class=\"property\">body</span> = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    options.<span class=\"property\">formData</span> = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        <span class=\"comment\">//console.log(_data);</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;upload material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">mediaId, type, permanent</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fetchUrl = api.<span class=\"property\">temporary</span>.<span class=\"property\">fetch</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        fetchUrl = api.<span class=\"property\">permanent</span>.<span class=\"property\">fetch</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = fetchUrl + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> </span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">                    form.<span class=\"property\">media_id</span> = mediaId</span><br><span class=\"line\">                    form.<span class=\"property\">access_token</span> = data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                    options.<span class=\"property\">body</span> = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;video&#x27;</span>)&#123;</span><br><span class=\"line\">                        url = url.<span class=\"title function_\">replace</span>(<span class=\"string\">&#x27;https://&#x27;</span>, <span class=\"string\">&#x27;http://&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    url += <span class=\"string\">&#x27;&amp;media_id=&#x27;</span> + mediaId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(type === <span class=\"string\">&#x27;news&#x27;</span> || type === <span class=\"string\">&#x27;video&#x27;</span>)&#123;</span><br><span class=\"line\">                   <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                            <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                                <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                            &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete material fails&#x27;</span>)</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   <span class=\"title function_\">resolve</span>(url)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">mediaId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        <span class=\"attr\">media_id</span>:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> + <span class=\"string\">&#x27;&amp;media_id=&#x27;</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">mediaId, news</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        <span class=\"attr\">media_id</span>:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _.<span class=\"title function_\">extend</span>(form, news)</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">update</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> + <span class=\"string\">&#x27;&amp;media_id=&#x27;</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">countMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">count</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;count material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">batchMaterial</span> = <span class=\"keyword\">function</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    options.<span class=\"property\">type</span> = options.<span class=\"property\">type</span> || <span class=\"string\">&#x27;image&#x27;</span></span><br><span class=\"line\">    options.<span class=\"property\">offset</span> = options.<span class=\"property\">offset</span> || <span class=\"number\">0</span></span><br><span class=\"line\">    options.<span class=\"property\">count</span> = options.<span class=\"property\">count</span> || <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">permanent</span>.<span class=\"property\">batch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:options, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;batch material fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户分组</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">createGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">create</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">name</span>: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;create group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">fetch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;fetch group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">checkGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">check</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    openid : openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;check group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">updateGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">id, name</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">update</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">id</span>: id,</span><br><span class=\"line\">                        <span class=\"attr\">name</span>: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;update group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">moveGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openIds, to_groupid</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> url</span><br><span class=\"line\">               <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                   to_groupid : to_groupid</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.<span class=\"title function_\">isArray</span>(openIds))&#123;</span><br><span class=\"line\">                   url = api.<span class=\"property\">group</span>.<span class=\"property\">batchupdata</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                   form.<span class=\"property\">openid_list</span> = openIds</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   url = api.<span class=\"property\">group</span>.<span class=\"property\">move</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                   form.<span class=\"property\">openid</span> = openIds</span><br><span class=\"line\">               &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;move group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">id</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">group</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">group</span>: &#123;</span><br><span class=\"line\">                        <span class=\"attr\">id</span>: id</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取用户信息</span></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">remarkUser</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openId, remark</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">user</span>.<span class=\"property\">remark</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    <span class=\"attr\">openid</span>:　openId,</span><br><span class=\"line\">                    <span class=\"attr\">remark</span>: remark</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>: form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;remark user fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">fetchUser</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openIds, lang</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> lang = lang || <span class=\"string\">&#x27;zh_CN&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> options　= &#123;</span><br><span class=\"line\">                   <span class=\"attr\">json</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.<span class=\"title function_\">isArray</span>(openIds))&#123;</span><br><span class=\"line\">                   options.<span class=\"property\">url</span> = api.<span class=\"property\">user</span>.<span class=\"property\">batchFetch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                   options.<span class=\"property\">method</span> = <span class=\"string\">&#x27;POST&#x27;</span></span><br><span class=\"line\">                   options.<span class=\"property\">body</span> = &#123;</span><br><span class=\"line\">                       user_list : openIds</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   options.<span class=\"property\">url</span> = api.<span class=\"property\">user</span>.<span class=\"property\">fetch</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span> + <span class=\"string\">&#x27;&amp;openid=&#x27;</span> + openIds + <span class=\"string\">&#x27;&amp;lang=&#x27;</span> + lang</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(options, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;fetch users fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">    &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">listUsers</span> = <span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">user</span>.<span class=\"property\">list</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span>(openId)&#123;</span><br><span class=\"line\">                    url += <span class=\"string\">&#x27;&amp;next_openid=&#x27;</span> + openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;list users fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sendByGroup</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, message, groupId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        <span class=\"attr\">filter</span>:&#123;&#125;,</span><br><span class=\"line\">        <span class=\"attr\">msgtype</span>:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!groupId)&#123;</span><br><span class=\"line\">        msg.<span class=\"property\">filter</span>.<span class=\"property\">is_to_all</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        msg.<span class=\"property\">filter</span>.<span class=\"property\">is_to_all</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">        msg.<span class=\"property\">filter</span>.<span class=\"property\">group_id</span> = groupId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">group</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:msg, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;sell by group fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sendByOpenId</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, message, openIds</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        <span class=\"attr\">touser</span>:openIds,</span><br><span class=\"line\">        <span class=\"attr\">msgtype</span>:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">openId</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url, <span class=\"attr\">body</span>:msg, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;sell by openid fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteMass</span> = <span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    msg_id : msgId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete Mass fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">previewMass</span> = <span class=\"keyword\">function</span>(<span class=\"params\">type, message, openId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        <span class=\"attr\">touser</span>:openId,</span><br><span class=\"line\">        <span class=\"attr\">msgtype</span>:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">preview</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:msg, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;preview mass fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">checkMass</span> = <span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        msg_id : msgId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">mass</span>.<span class=\"property\">check</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:form, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;check mass fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">createMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\">menu</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">create</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:menu, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;create menu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">get</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;get menu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">deleteMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">del</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;delete menu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">currentSelfMenu</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">menu</span>.<span class=\"property\">current</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">url</span>: url, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;get current selfmenu fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">semantic</span> = <span class=\"keyword\">function</span>(<span class=\"params\">semanticData</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .<span class=\"title function_\">fetchAccessToken</span>()</span><br><span class=\"line\">           .<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.<span class=\"property\">semantic</span> + <span class=\"string\">&#x27;access_token=&#x27;</span> + data.<span class=\"property\">access_token</span></span><br><span class=\"line\">                semanticData.<span class=\"property\">appid</span> = data.<span class=\"property\">appID</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">request</span>(&#123;<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"attr\">url</span>: url,<span class=\"attr\">body</span>:semanticData, <span class=\"attr\">json</span>: <span class=\"literal\">true</span>&#125;, <span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.<span class=\"property\">statusCode</span> === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            <span class=\"title function_\">resolve</span>(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;semantic data fails&#x27;</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Wechat</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">reply</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;  <span class=\"comment\">//实现完整的回复逻辑，放回给客户端xml格式数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> content = <span class=\"variable language_\">this</span>.<span class=\"property\">body</span>   <span class=\"comment\">//此时的this.body是json数据格式</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"variable language_\">this</span>.<span class=\"property\">weixin</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> xml = util.<span class=\"title function_\">tpl</span>(content, message)  <span class=\"comment\">//将content与message中的内容提出整合，此时已经变成了xml格式</span></span><br><span class=\"line\">    <span class=\"comment\">//console.log(&#x27;xml:&#x27;+ xml)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">type</span> = <span class=\"string\">&#x27;application/xml&#x27;</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = xml</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title class_\">Wechat</span></span><br></pre></td></tr></table></figure></p>\n<p>wx/reply.js  处理客户端消息<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Wechat</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../wechat/wechat&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechatApi = <span class=\"keyword\">new</span> <span class=\"title class_\">Wechat</span>(config.<span class=\"property\">wechat</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> menu = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./menu&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*wechatApi.deleteMenu().then(function()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    return wechatApi.createMenu(menu)</span></span><br><span class=\"line\"><span class=\"comment\">&#125;).then(function(msg)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    console.log(msg)</span></span><br><span class=\"line\"><span class=\"comment\">&#125;)*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">reply</span> = <span class=\"keyword\">function</span> *(next)&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"variable language_\">this</span>.<span class=\"property\">weixin</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(message.<span class=\"property\">MsgType</span> === <span class=\"string\">&#x27;event&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;subscribe&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(message.<span class=\"property\">EventKey</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;扫二维码进来：&#x27;</span>+ message.<span class=\"property\">EventKey</span> +<span class=\"string\">&#x27; &#x27;</span>+ message.<span class=\"property\">ticket</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> =  <span class=\"string\">&#x27;么么哒&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;unsubscribe&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;无情取关！&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;LOCATION&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您上报的位置是：&#x27;</span> + message.<span class=\"property\">Latitude</span> + <span class=\"string\">&#x27;/&#x27;</span> + message.<span class=\"property\">Longitude</span> + <span class=\"string\">&#x27;-&#x27;</span> +message.<span class=\"property\">Precision</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;CLICK&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;SCAN&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;关注后扫二维码&#x27;</span>+ message.<span class=\"property\">EventKey</span> + <span class=\"string\">&#x27; &#x27;</span>+ message.<span class=\"property\">Ticket</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您扫了二维码哦&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;VIEW&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的连接：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;scancode_push&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanType</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanResult</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;scancode_waitmsg&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanType</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">ScanCodeInfo</span>.<span class=\"property\">ScanResult</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;pic_sysphoto&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">Count</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">PicList</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;pic_photo_or_album&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">Count</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">PicList</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;pic_weixin&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">Count</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendPicsInfo</span>.<span class=\"property\">PicList</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">Event</span> === <span class=\"string\">&#x27;location_select&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Location_X</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Location_Y</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Scale</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Label</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(message.<span class=\"property\">SendLocationInfo</span>.<span class=\"property\">Poiname</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = <span class=\"string\">&#x27;您点击了菜单中的：&#x27;</span>+ message.<span class=\"property\">EventKey</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.<span class=\"property\">MsgType</span> === <span class=\"string\">&#x27;text&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> content = message.<span class=\"property\">Content</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> reply = <span class=\"string\">&#x27;你说的“&#x27;</span> + message.<span class=\"property\">Content</span> + <span class=\"string\">&#x27;” 我们没有这样的服务&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;1&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;天下第一&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;2&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;天下第二&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;3&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;天下第三&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;4&#x27;</span>)&#123;</span><br><span class=\"line\">            reply = [&#123;</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;nodejs开发微信&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">picUrl</span>: <span class=\"string\">&#x27;http://www.aseoe.com/images/aseoe_nodejs_txal.jpg&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://nodejs.org&#x27;</span></span><br><span class=\"line\">            &#125;,&#123;</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;前端三大框架&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;vue.js React.js angular.js是目前前端最火的三大框架&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">picUrl</span>: <span class=\"string\">&#x27;http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://cn.vuejs.org/&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;5&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;image&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data.<span class=\"property\">media_id</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;6&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;video&#x27;</span>, __dirname + <span class=\"string\">&#x27;/6.mp4&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;video&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;跪着唱征服&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;试试这是个怎样的感觉&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;7&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;music&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;《李白》--李荣浩&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;轻松时刻&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">musicUrl</span>: <span class=\"string\">&#x27;http://link.hhtjim.com/163/27678655.mp3&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">hqMusicUrl</span>: <span class=\"string\">&#x27;http://link.hhtjim.com/163/27678655.mp3&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">thumbMediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;8&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>,&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;image&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;image&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;9&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;video&#x27;</span>, __dirname + <span class=\"string\">&#x27;/6.mp4&#x27;</span>,&#123;<span class=\"attr\">type</span>:<span class=\"string\">&#x27;video&#x27;</span>, <span class=\"attr\">description</span>:<span class=\"string\">&#x27;&#123;&quot;title&quot;:&quot;VIDEO_TITLE&quot;,&quot;introduction&quot;:&quot;INTRODUCTION&quot;&#125;&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                <span class=\"attr\">type</span>:<span class=\"string\">&#x27;video&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">title</span>: <span class=\"string\">&#x27;跪着唱征服&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">description</span>: <span class=\"string\">&#x27;试试这是个怎样的感觉&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">mediaId</span>: data.<span class=\"property\">media_id</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;10&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> picData  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;image&#x27;</span>, __dirname + <span class=\"string\">&#x27;/2.jpg&#x27;</span>,&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> media = &#123;</span><br><span class=\"line\">                <span class=\"attr\">articles</span>:[&#123;</span><br><span class=\"line\">                    <span class=\"attr\">title</span>:<span class=\"string\">&#x27;angularjs入门&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">thumb_media_id</span>:picData.<span class=\"property\">media_id</span>,</span><br><span class=\"line\">                    <span class=\"attr\">show_cover_pic</span>:<span class=\"number\">1</span>,</span><br><span class=\"line\">                    <span class=\"attr\">author</span>:<span class=\"string\">&#x27;Leo&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">digest</span>:<span class=\"string\">&#x27;关于angularjs摘要&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">content</span>:<span class=\"string\">&#x27;augular是目前前端最火框架之一&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">content_source_url</span>:<span class=\"string\">&#x27;https://docs.angularjs.org/&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span>  data = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">uploadMaterial</span>(<span class=\"string\">&#x27;news&#x27;</span>, media, &#123;&#125;)</span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;我要的mediaId：&#x27;</span>+ data.<span class=\"property\">media_id</span>)</span><br><span class=\"line\">           data = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchMaterial</span>(data.<span class=\"property\">media_id</span>, <span class=\"string\">&#x27;news&#x27;</span>, &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span> items = data.<span class=\"property\">news_item</span></span><br><span class=\"line\">           <span class=\"keyword\">var</span> news = []</span><br><span class=\"line\"></span><br><span class=\"line\">           items.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">item</span>)&#123;</span><br><span class=\"line\">               news.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">                   <span class=\"attr\">title</span>: item.<span class=\"property\">title</span>,</span><br><span class=\"line\">                   <span class=\"attr\">description</span>: item.<span class=\"property\">digest</span>,</span><br><span class=\"line\">                   <span class=\"attr\">picUrl</span>: picData.<span class=\"property\">url</span>,</span><br><span class=\"line\">                   <span class=\"attr\">url</span>: item.<span class=\"property\">url</span></span><br><span class=\"line\">               &#125;)</span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           reply = news</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;11&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> counts  = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">countMaterial</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(counts))</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> results = <span class=\"keyword\">yield</span> [</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;image&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;video&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;vioce&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">batchMaterial</span>(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;news&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">offset</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"attr\">count</span>: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            ]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(results))</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;ok&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;12&#x27;</span>)&#123;</span><br><span class=\"line\">           <span class=\"comment\">/* var group1 = yield wechatApi.createGroup(&#x27;wechat1&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;新分组wechat1:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group1)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;加了wechat1的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group2 = yield wechatApi.checkGroup(message.FromUserName)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看自己的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group2)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group3 = yield wechatApi.updateGroup(100, &#x27;wechat_update&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;把wechat1分组改为wechat_update&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group3)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看把wechat1分组改为wechat_update后的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;把我移动到2组&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group4)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看把我移动到2组后的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;批量移动 把我移动到0组&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(group5)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            var groups = yield wechatApi.fetchGroup()</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(&#x27;查看 批量移动 把我移动到0组后的分组:&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(groups)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>          </span><br><span class=\"line\">            <span class=\"keyword\">var</span> groups = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchGroup</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(groups)</span><br><span class=\"line\">            <span class=\"keyword\">var</span> group_delete = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">deleteGroup</span>(<span class=\"number\">101</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;删除101&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(group_delete)</span><br><span class=\"line\">            groups = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchGroup</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;删除101后的分组&#x27;</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;Groups done&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;13&#x27;</span>)&#123;</span><br><span class=\"line\">          <span class=\"comment\">/* var remark = yield wechatApi.remarkUser(message.FromUserName, &#x27;超级大帅哥&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(remark)</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> user = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">fetchUser</span>(message.<span class=\"property\">FromUserName</span>)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(user)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">/* var openIds = [&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                openid : message.FromUserName, </span></span><br><span class=\"line\"><span class=\"comment\">                lang:&#x27;zh_CN&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;]</span></span><br><span class=\"line\"><span class=\"comment\">            var users = yield wechatApi.fetchUser(openIds)</span></span><br><span class=\"line\"><span class=\"comment\">            console.log(users)</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\">            reply = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(user)</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;14&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> list = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">listUsers</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(list)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = list.<span class=\"property\">total</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;15&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">&#x27;fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> text = &#123;</span><br><span class=\"line\">                <span class=\"attr\">content</span>: <span class=\"string\">&#x27;天要下雨了&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">sendByGroup</span>(<span class=\"string\">&#x27;text&#x27;</span>, text, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;内容如下&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;16&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">&#x27;fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ&#x27;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">           <span class=\"comment\">/* var text = &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                content: &#x27;天一直在打雷还没下雨&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">previewMass</span>(<span class=\"string\">&#x27;mpnews&#x27;</span>, mpnews, <span class=\"string\">&#x27;okFRawx2UAkxdtKG1i9QNGzgXLA4&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">&#x27;内容如下&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;17&#x27;</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">checkMass</span>(<span class=\"string\">&#x27;1000000010&#x27;</span>)</span><br><span class=\"line\">             <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(msgData)</span><br><span class=\"line\">             reply = <span class=\"string\">&#x27;done&#x27;</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;18&#x27;</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">                wechatApi.<span class=\"title function_\">createMenu</span>(menu).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span>(<span class=\"params\">msg</span>)&#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;菜单生成状态：&#x27;</span>+ <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(msg))</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">             <span class=\"comment\">/*var createMenu = yield wechatApi.createMenu(menu)</span></span><br><span class=\"line\"><span class=\"comment\">             console.log(createMenu)</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">             reply = <span class=\"string\">&#x27;done&#x27;</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">&#x27;19&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> semanticData = &#123;</span><br><span class=\"line\">                <span class=\"attr\">query</span>:<span class=\"string\">&quot;查一下明天从北京到上海的南航机票&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">city</span>:<span class=\"string\">&quot;北京&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">category</span>: <span class=\"string\">&quot;flight,hotel&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">uid</span>: message.<span class=\"property\">FromUserName</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> _semantic = <span class=\"keyword\">yield</span> wechatApi.<span class=\"title function_\">semantic</span>(semanticData)</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(_semantic)</span><br><span class=\"line\">             reply = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(_semantic)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">body</span> = reply</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> next</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"在koa中使用ejs模板-与-heredoc模块\"><a href=\"#在koa中使用ejs模板-与-heredoc模块\" class=\"headerlink\" title=\"在koa中使用ejs模板 与 heredoc模块\"></a>在koa中使用ejs模板 与 heredoc模块</h3><p>heredoc模块是作用是封装模板<br>比如：<br><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"language-xml\">&#x27;use strict&#x27;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">var ejs = require(&#x27;ejs&#x27;)</span></span><br><span class=\"line\"><span class=\"language-xml\">var heredoc = require(&#x27;heredoc&#x27;)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">var tpl = heredoc(function()&#123;/*</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">xml</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ToUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> toUserName </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ToUserName</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">FromUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> fromUserName </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">FromUserName</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">CreateTime</span>&gt;</span> &lt;%=</span><span class=\"language-ruby\"> createTime </span><span class=\"language-xml\">%&gt; <span class=\"tag\">&lt;/<span class=\"name\">CreateTime</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">MsgType</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> msgType</span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MsgType</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> <span class=\"keyword\">if</span> (msgType === <span class=\"string\">&#x27;text&#x27;</span>) &#123;</span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Content</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content</span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Content</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;image&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.mediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Image</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">         &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;video&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">             <span class=\"tag\">&lt;<span class=\"name\">Video</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.mediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.title </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.description </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Video</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">         &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;voice&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">             <span class=\"tag\">&lt;<span class=\"name\">Voice</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.mediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Voice</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;music&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Music</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.title </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.description </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">MusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.musicUrl </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MusicUrl</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">HQMusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.hqMusicUrl</span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">HQMusicUrl</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">ThumbMediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> content.thumbMediaId </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ThumbMediaId</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Music</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">&#x27;news&#x27;</span>) &#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">ArticleCount</span>&gt;</span>&lt;%=</span><span class=\"language-ruby\"> content.length </span><span class=\"language-xml\">%&gt;<span class=\"tag\">&lt;/<span class=\"name\">ArticleCount</span>&gt;</span>           </span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">Articles</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            &lt;%</span><span class=\"language-ruby\"> content.forEach(function(item)&#123; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.title </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span> </span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.description </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">PicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.picUrl </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">PicUrl</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Url</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"language-ruby\"> item.url </span><span class=\"language-xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Url</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">                <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            &lt;%</span><span class=\"language-ruby\"> &#125;) </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Articles</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%</span><span class=\"language-ruby\"> &#125; </span><span class=\"language-xml\">%&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">xml</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">*/&#125;)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">var compiled = ejs.compile(tpl)</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">exports = module.exports = &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">    compiled : compiled</span></span><br><span class=\"line\"><span class=\"language-xml\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据<br>结合json数据<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> tpl = <span class=\"keyword\">require</span>(<span class=\"string\">&#x27;以上文件路径&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = &#123;</span><br><span class=\"line\">    msgType : <span class=\"string\">&#x27;text&#x27;</span>,</span><br><span class=\"line\">    content : <span class=\"string\">&#x27;hello world&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">xml</span> = tpl.compiled(<span class=\"built_in\">data</span>)</span><br></pre></td></tr></table></figure><br>或者可以使用render方法将模板和数据一并结合<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"keyword\">xml</span> <span class=\"title\">= ejs</span>.render(tpl, data)</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  </p>\n<p>其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  </p>\n<p>思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。</p>\n<p>这篇笔记就写到这吧，全部代码放在github上。</p>\n"}],"PostAsset":[{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_-AleO20bJE.png","slug":"image_-AleO20bJE.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_0FbXJEVpBZ.png","slug":"image_0FbXJEVpBZ.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_2gDEMoHZdN.png","slug":"image_2gDEMoHZdN.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_2vkN8DyEOU.png","slug":"image_2vkN8DyEOU.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_4Tro4aIdsT.png","slug":"image_4Tro4aIdsT.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_ckbsiwRhQu.png","slug":"image_ckbsiwRhQu.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_CVmGras3MP.png","slug":"image_CVmGras3MP.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_dd56kuGgSY.png","slug":"image_dd56kuGgSY.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_dlKUVIURur.png","slug":"image_dlKUVIURur.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_Lq8cKHXJpH.png","slug":"image_Lq8cKHXJpH.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_oZQEU2PqwI.png","slug":"image_oZQEU2PqwI.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_S5b-ACEJZV.png","slug":"image_S5b-ACEJZV.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_TKk-_imcnM.png","slug":"image_TKk-_imcnM.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_tl8asSvA18.png","slug":"image_tl8asSvA18.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/image_tWZrP03QQ1.png","slug":"image_tWZrP03QQ1.png","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/ParticleEffectForUGUI（UIParticle）/uiparticle_wQzXgIMX6n.gif","slug":"uiparticle_wQzXgIMX6n.gif","post":"clbwdlv40000omcq0bfr87dhj","modified":0,"renderable":0},{"_id":"source/_posts/RenderTexture特效系统实现原理/image.png","slug":"image.png","post":"clbwdlv41000tmcq06i8kgmgw","modified":0,"renderable":0},{"_id":"source/_posts/RenderTexture特效系统实现原理/image_1.png","slug":"image_1.png","post":"clbwdlv41000tmcq06i8kgmgw","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/EmojiSpriteAsset_m_7Wcnb4Es.cs","slug":"EmojiSpriteAsset_m_7Wcnb4Es.cs","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_0ifY5wkaqd.png","slug":"image_0ifY5wkaqd.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_7M009fCb6d.png","slug":"image_7M009fCb6d.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_hn-XI1mBjn.png","slug":"image_hn-XI1mBjn.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_n9LveM62tZ.png","slug":"image_n9LveM62tZ.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_OTeaUItO0F.png","slug":"image_OTeaUItO0F.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_rVuWhoO_3B.png","slug":"image_rVuWhoO_3B.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_TwT2GLPl7b.png","slug":"image_TwT2GLPl7b.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image_yhRARumho4.png","slug":"image_yhRARumho4.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/image__hVtRDjd_h.png","slug":"image__hVtRDjd_h.png","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/UIGraphicTextSpritesMgr_VeAnnPQruV.cs","slug":"UIGraphicTextSpritesMgr_VeAnnPQruV.cs","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/UIGraphicTextSprites_SJ0ts213El.cs","slug":"UIGraphicTextSprites_SJ0ts213El.cs","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——原理篇/UIGraphicText__lKh67xRzm.cs","slug":"UIGraphicText__lKh67xRzm.cs","post":"clbwdlv42000vmcq04e4j74u5","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/03742e0b64e62e87941c5ff8441ee88a.tmp","slug":"03742e0b64e62e87941c5ff8441ee88a.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/10e1096586b53ed9f944e9d5101c4241.tmp","slug":"10e1096586b53ed9f944e9d5101c4241.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/1b068870d1847acdd585381f49f9127c.tmp","slug":"1b068870d1847acdd585381f49f9127c.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/1b0894421887907ac78332cb31b81eca.tmp","slug":"1b0894421887907ac78332cb31b81eca.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/1ed8f3c55e63efc72047784eb2d715ec.tmp","slug":"1ed8f3c55e63efc72047784eb2d715ec.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/35ae882a0e5fee85b1b7a102ba20976f.tmp","slug":"35ae882a0e5fee85b1b7a102ba20976f.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/3dbde81dd90a3504f493adc0aeb348f5.tmp","slug":"3dbde81dd90a3504f493adc0aeb348f5.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/4c1118d6cb20ce80f3105b95502455c3.tmp","slug":"4c1118d6cb20ce80f3105b95502455c3.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/4e5d287689f65ab1fab2db8cc848f218.tmp","slug":"4e5d287689f65ab1fab2db8cc848f218.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/584310e308f30ee963734e6004db68f7.tmp","slug":"584310e308f30ee963734e6004db68f7.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/620aa9915773654e87c2ed8201b32736.png","slug":"620aa9915773654e87c2ed8201b32736.png","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/78a230605169741abf7b42ea9cf32942.tmp","slug":"78a230605169741abf7b42ea9cf32942.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/7975d77768f66dd5b45d9ef03f066e45.tmp","slug":"7975d77768f66dd5b45d9ef03f066e45.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/83146e7e3d81e80b54edf6131d3203e2.tmp","slug":"83146e7e3d81e80b54edf6131d3203e2.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/889d57042c9cc1a988458e23e9617d0d.tmp","slug":"889d57042c9cc1a988458e23e9617d0d.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/949ad5756a5f0697641e2267e54b6a2a.tmp","slug":"949ad5756a5f0697641e2267e54b6a2a.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/b1ea6bccc642c35685b0dd0f5671b303.tmp","slug":"b1ea6bccc642c35685b0dd0f5671b303.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/c9e62ff06615ff8ab9ab1b914721f146.tmp","slug":"c9e62ff06615ff8ab9ab1b914721f146.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","slug":"ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/dc44a3625ccf585467173a0f9a8e574f.tmp","slug":"dc44a3625ccf585467173a0f9a8e574f.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化/ebee4d8b9fab274fef93b95923e20796.tmp","slug":"ebee4d8b9fab274fef93b95923e20796.tmp","post":"clbwdlv43000zmcq0841w46oa","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/03742e0b64e62e87941c5ff8441ee88a.tmp","slug":"03742e0b64e62e87941c5ff8441ee88a.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/10e1096586b53ed9f944e9d5101c4241.tmp","slug":"10e1096586b53ed9f944e9d5101c4241.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/1b068870d1847acdd585381f49f9127c.tmp","slug":"1b068870d1847acdd585381f49f9127c.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/1b0894421887907ac78332cb31b81eca.tmp","slug":"1b0894421887907ac78332cb31b81eca.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/1ed8f3c55e63efc72047784eb2d715ec.tmp","slug":"1ed8f3c55e63efc72047784eb2d715ec.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/35ae882a0e5fee85b1b7a102ba20976f.tmp","slug":"35ae882a0e5fee85b1b7a102ba20976f.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/3dbde81dd90a3504f493adc0aeb348f5.tmp","slug":"3dbde81dd90a3504f493adc0aeb348f5.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/4c1118d6cb20ce80f3105b95502455c3.tmp","slug":"4c1118d6cb20ce80f3105b95502455c3.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/4e5d287689f65ab1fab2db8cc848f218.tmp","slug":"4e5d287689f65ab1fab2db8cc848f218.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/584310e308f30ee963734e6004db68f7.tmp","slug":"584310e308f30ee963734e6004db68f7.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/620aa9915773654e87c2ed8201b32736.png","slug":"620aa9915773654e87c2ed8201b32736.png","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/78a230605169741abf7b42ea9cf32942.tmp","slug":"78a230605169741abf7b42ea9cf32942.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/7975d77768f66dd5b45d9ef03f066e45.tmp","slug":"7975d77768f66dd5b45d9ef03f066e45.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/83146e7e3d81e80b54edf6131d3203e2.tmp","slug":"83146e7e3d81e80b54edf6131d3203e2.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/889d57042c9cc1a988458e23e9617d0d.tmp","slug":"889d57042c9cc1a988458e23e9617d0d.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/949ad5756a5f0697641e2267e54b6a2a.tmp","slug":"949ad5756a5f0697641e2267e54b6a2a.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/b1ea6bccc642c35685b0dd0f5671b303.tmp","slug":"b1ea6bccc642c35685b0dd0f5671b303.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/c9e62ff06615ff8ab9ab1b914721f146.tmp","slug":"c9e62ff06615ff8ab9ab1b914721f146.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","slug":"ceb2cc566e9ddb1db29fc8a826ecd3a1.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/dc44a3625ccf585467173a0f9a8e574f.tmp","slug":"dc44a3625ccf585467173a0f9a8e574f.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UGUIText组件实现图文混排——项目优化2/ebee4d8b9fab274fef93b95923e20796.tmp","slug":"ebee4d8b9fab274fef93b95923e20796.tmp","post":"clbwdlv430011mcq0aoyd7xxc","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/anim2_ocvF-p7l04.gif","slug":"anim2_ocvF-p7l04.gif","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/anim3__eYFZGZolQ.gif","slug":"anim3__eYFZGZolQ.gif","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/anim4_tx9hVKst4O.gif","slug":"anim4_tx9hVKst4O.gif","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/anim5_GKfO5IVVAN.gif","slug":"anim5_GKfO5IVVAN.gif","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/anim6_MAvMAv1XJM.gif","slug":"anim6_MAvMAv1XJM.gif","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/image_67GP1vl5zt.png","slug":"image_67GP1vl5zt.png","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/image_db_KmLvzYS.png","slug":"image_db_KmLvzYS.png","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/image_NcuDmPJzjI.png","slug":"image_NcuDmPJzjI.png","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/image_Uj6XZU2I6p.png","slug":"image_Uj6XZU2I6p.png","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/image_ywMcu33ZPf.png","slug":"image_ywMcu33ZPf.png","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UIParticle组件的使用问题/uiparticleCompare.gif","slug":"uiparticleCompare.gif","post":"clbwdlv450016mcq0b3es37ae","modified":0,"renderable":0},{"_id":"source/_posts/UnityAddressable/image.png","slug":"image.png","post":"clbwdlv450019mcq07tuh5nwy","modified":0,"renderable":0},{"_id":"source/_posts/UnityAddressable/image_1.png","slug":"image_1.png","post":"clbwdlv450019mcq07tuh5nwy","modified":0,"renderable":0},{"_id":"source/_posts/UnityAddressable/image_2.png","slug":"image_2.png","post":"clbwdlv450019mcq07tuh5nwy","modified":0,"renderable":0},{"_id":"source/_posts/UnityAddressable/image_3.png","slug":"image_3.png","post":"clbwdlv450019mcq07tuh5nwy","modified":0,"renderable":0},{"_id":"source/_posts/UnityAddressable/image_4.png","slug":"image_4.png","post":"clbwdlv450019mcq07tuh5nwy","modified":0,"renderable":0},{"_id":"source/_posts/UnityAddressable/image_5.png","slug":"image_5.png","post":"clbwdlv450019mcq07tuh5nwy","modified":0,"renderable":0},{"_id":"source/_posts/场景控制流程解读/image_3NDenmx_Of.png","slug":"image_3NDenmx_Of.png","post":"clbwdlv4j002rmcq05htz09wg","modified":0,"renderable":0},{"_id":"source/_posts/场景控制流程解读/image_SqQ7dNS1Cb.png","slug":"image_SqQ7dNS1Cb.png","post":"clbwdlv4j002rmcq05htz09wg","modified":0,"renderable":0},{"_id":"source/_posts/场景控制流程解读/image_xvaTyll7c-.png","slug":"image_xvaTyll7c-.png","post":"clbwdlv4j002rmcq05htz09wg","modified":0,"renderable":0},{"_id":"source/_posts/场景控制流程解读/image_YlLPrr-tq-.png","slug":"image_YlLPrr-tq-.png","post":"clbwdlv4j002rmcq05htz09wg","modified":0,"renderable":0},{"_id":"source/_posts/射箭小游戏/image_0xirtCNbHW.png","slug":"image_0xirtCNbHW.png","post":"clbwdlv4k002xmcq0epx02gck","modified":0,"renderable":0},{"_id":"source/_posts/射箭小游戏/image_9kEuPrkNrd.png","slug":"image_9kEuPrkNrd.png","post":"clbwdlv4k002xmcq0epx02gck","modified":0,"renderable":0},{"_id":"source/_posts/射箭小游戏/image_bPic0MSA86.png","slug":"image_bPic0MSA86.png","post":"clbwdlv4k002xmcq0epx02gck","modified":0,"renderable":0},{"_id":"source/_posts/射箭小游戏/image_eBJv4Og4HY.png","slug":"image_eBJv4Og4HY.png","post":"clbwdlv4k002xmcq0epx02gck","modified":0,"renderable":0},{"_id":"source/_posts/射箭小游戏/image_fNhLsjLAng.png","slug":"image_fNhLsjLAng.png","post":"clbwdlv4k002xmcq0epx02gck","modified":0,"renderable":0},{"_id":"source/_posts/射箭小游戏/image_jB99fdiEFy.png","slug":"image_jB99fdiEFy.png","post":"clbwdlv4k002xmcq0epx02gck","modified":0,"renderable":0},{"_id":"source/_posts/新手引导系统/image_BXoVzPQBan.png","slug":"image_BXoVzPQBan.png","post":"clbwdlv4l0031mcq0gahn2kfb","modified":0,"renderable":0},{"_id":"source/_posts/海外版本diff工具/diff_7U8prTz5se.sh","slug":"diff_7U8prTz5se.sh","post":"clbwdlv4m0036mcq05c7ahhqf","modified":0,"renderable":0},{"_id":"source/_posts/海外版本diff工具/image_lch2ake5uD.png","slug":"image_lch2ake5uD.png","post":"clbwdlv4m0036mcq05c7ahhqf","modified":0,"renderable":0},{"_id":"source/_posts/海外版本diff工具/image_y5ou7bMrqO.png","slug":"image_y5ou7bMrqO.png","post":"clbwdlv4m0036mcq05c7ahhqf","modified":0,"renderable":0},{"_id":"source/_posts/海外版本diff工具/LanguageDiffWindow_xSMzWdHsMs.cs","slug":"LanguageDiffWindow_xSMzWdHsMs.cs","post":"clbwdlv4m0036mcq05c7ahhqf","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/BreakpointTransferZip.cs","slug":"BreakpointTransferZip.cs","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/DownloadThread.cs","slug":"DownloadThread.cs","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image.png","slug":"image.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image_1.png","slug":"image_1.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image_2.png","slug":"image_2.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image_3.png","slug":"image_3.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image_4.png","slug":"image_4.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image_5.png","slug":"image_5.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image_6.png","slug":"image_6.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/游戏热更新/image_7.png","slug":"image_7.png","post":"clbwdlv4m0039mcq0cd2xgic0","modified":0,"renderable":0},{"_id":"source/_posts/网络层/image_Dxda6OJqZV.png","slug":"image_Dxda6OJqZV.png","post":"clbwdlv5f008tmcq03ioc0jsh","modified":0,"renderable":0},{"_id":"source/_posts/网络层/image_FgCmH2uIWr.png","slug":"image_FgCmH2uIWr.png","post":"clbwdlv5f008tmcq03ioc0jsh","modified":0,"renderable":0},{"_id":"source/_posts/网络层/image_skRP8CouhK.png","slug":"image_skRP8CouhK.png","post":"clbwdlv5f008tmcq03ioc0jsh","modified":0,"renderable":0},{"_id":"source/_posts/网络层/image_UuuQAgKiON.png","slug":"image_UuuQAgKiON.png","post":"clbwdlv5f008tmcq03ioc0jsh","modified":0,"renderable":0},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_DulaDCWifu.png","slug":"image_DulaDCWifu.png","post":"clbwdlv5f008umcq037dq4wun","modified":0,"renderable":0},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_gp3VMdO0Er.png","slug":"image_gp3VMdO0Er.png","post":"clbwdlv5f008umcq037dq4wun","modified":0,"renderable":0},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_iqXG1maoM7.png","slug":"image_iqXG1maoM7.png","post":"clbwdlv5f008umcq037dq4wun","modified":0,"renderable":0},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_SUK4XBL1kd.png","slug":"image_SUK4XBL1kd.png","post":"clbwdlv5f008umcq037dq4wun","modified":0,"renderable":0},{"_id":"source/_posts/SQLite替换lua配置表方案实现/image_S_dTSQElWB.png","slug":"image_S_dTSQElWB.png","post":"clbwdlv5f008umcq037dq4wun","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clbwdlv3t0007mcq0c1o30a71","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv41000rmcq00v0shmvp"},{"post_id":"clbwdlv3t0007mcq0c1o30a71","category_id":"clbwdlv3y000hmcq0dnpx3sak","_id":"clbwdlv42000umcq03vu7b0lc"},{"post_id":"clbwdlv3o0001mcq033jo57cx","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv42000wmcq0h9io5lzt"},{"post_id":"clbwdlv3o0001mcq033jo57cx","category_id":"clbwdlv3y000hmcq0dnpx3sak","_id":"clbwdlv430010mcq005gabcgd"},{"post_id":"clbwdlv3v000amcq0970d20ts","category_id":"clbwdlv41000qmcq041rz9hav","_id":"clbwdlv440013mcq04mhl68ar"},{"post_id":"clbwdlv3q0003mcq0hsx82824","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv450018mcq04zyzfrtj"},{"post_id":"clbwdlv3q0003mcq0hsx82824","category_id":"clbwdlv3y000hmcq0dnpx3sak","_id":"clbwdlv46001bmcq04bl54nhh"},{"post_id":"clbwdlv3s0006mcq0aegtdt00","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv46001emcq04yfoapgl"},{"post_id":"clbwdlv3s0006mcq0aegtdt00","category_id":"clbwdlv3y000hmcq0dnpx3sak","_id":"clbwdlv47001jmcq0f1zy7n64"},{"post_id":"clbwdlv40000mmcq09bto3ux9","category_id":"clbwdlv450017mcq0a9fmaxm5","_id":"clbwdlv49001mmcq0a7e407r5"},{"post_id":"clbwdlv4c001zmcq0c4oa449t","category_id":"clbwdlv41000qmcq041rz9hav","_id":"clbwdlv4e0026mcq0axufhysu"},{"post_id":"clbwdlv4d0022mcq06dg94lqt","category_id":"clbwdlv41000qmcq041rz9hav","_id":"clbwdlv4f002amcq0ajk8akcp"},{"post_id":"clbwdlv4f0029mcq072yhfbg8","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv4h002imcq0072t3bl7"},{"post_id":"clbwdlv4f002dmcq062n01u0w","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv4i002mmcq0cx671a9k"},{"post_id":"clbwdlv4h002lmcq0886ufq3k","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv4k002umcq0hyyr8hx9"},{"post_id":"clbwdlv4i002pmcq04z62fzj7","category_id":"clbwdlv3r0004mcq01fgwdxzp","_id":"clbwdlv4k002ymcq048fyahys"},{"post_id":"clbwdlv4a001rmcq040hr7ch4","category_id":"clbwdlv4l002zmcq0f7l64elk","_id":"clbwdlv4n003bmcq00vtw1b8e"},{"post_id":"clbwdlv4n003dmcq0eipo9s0g","category_id":"clbwdlv41000qmcq041rz9hav","_id":"clbwdlv4p003mmcq07jas8gcw"},{"post_id":"clbwdlv4g002fmcq0hauz8xgi","category_id":"clbwdlv4l002zmcq0f7l64elk","_id":"clbwdlv4r0040mcq02lgx4ume"},{"post_id":"clbwdlv4g002hmcq0ep5zbdqk","category_id":"clbwdlv4r003xmcq0hb0u5ubt","_id":"clbwdlv4s0046mcq04p3w80x8"},{"post_id":"clbwdlv4j002rmcq05htz09wg","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4t004emcq0fe4eazho"},{"post_id":"clbwdlv4j002rmcq05htz09wg","category_id":"clbwdlv4s0048mcq0exn19nwg","_id":"clbwdlv4t004hmcq04lht0sg3"},{"post_id":"clbwdlv40000omcq0bfr87dhj","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4u004kmcq01d6eewto"},{"post_id":"clbwdlv40000omcq0bfr87dhj","category_id":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv4u004mmcq0gmja6ie9"},{"post_id":"clbwdlv40000omcq0bfr87dhj","category_id":"clbwdlv4t004amcq04n7yfkrv","_id":"clbwdlv4u004qmcq0dvl1glqg"},{"post_id":"clbwdlv4l0031mcq0gahn2kfb","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4u004tmcq00dlj8x76"},{"post_id":"clbwdlv4l0031mcq0gahn2kfb","category_id":"clbwdlv4n003amcq09f6l9fu4","_id":"clbwdlv4v004vmcq0bfgmesvv"},{"post_id":"clbwdlv4m0036mcq05c7ahhqf","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4v004zmcq0hfps8h45"},{"post_id":"clbwdlv4m0036mcq05c7ahhqf","category_id":"clbwdlv4s0048mcq0exn19nwg","_id":"clbwdlv4v0050mcq06wc60p9v"},{"post_id":"clbwdlv41000tmcq06i8kgmgw","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4v0053mcq0743m4i8m"},{"post_id":"clbwdlv41000tmcq06i8kgmgw","category_id":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv4w0055mcq06lue562l"},{"post_id":"clbwdlv41000tmcq06i8kgmgw","category_id":"clbwdlv4t004amcq04n7yfkrv","_id":"clbwdlv4w0058mcq0efp57t4n"},{"post_id":"clbwdlv4m0039mcq0cd2xgic0","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4w005bmcq03wfx694i"},{"post_id":"clbwdlv4m0039mcq0cd2xgic0","category_id":"clbwdlv4s0048mcq0exn19nwg","_id":"clbwdlv4w005dmcq07ykff7nc"},{"post_id":"clbwdlv42000vmcq04e4j74u5","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4w005fmcq0ger159ch"},{"post_id":"clbwdlv42000vmcq04e4j74u5","category_id":"clbwdlv4n003amcq09f6l9fu4","_id":"clbwdlv4w005gmcq0461v0an1"},{"post_id":"clbwdlv42000vmcq04e4j74u5","category_id":"clbwdlv4v0052mcq0gd7lasxh","_id":"clbwdlv4x005kmcq0h51x4tz7"},{"post_id":"clbwdlv4o003imcq05u2l85h3","category_id":"clbwdlv4r003xmcq0hb0u5ubt","_id":"clbwdlv4x005mmcq0hmx821dn"},{"post_id":"clbwdlv43000zmcq0841w46oa","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4y005pmcq06q3a19jv"},{"post_id":"clbwdlv43000zmcq0841w46oa","category_id":"clbwdlv4n003amcq09f6l9fu4","_id":"clbwdlv4y005qmcq02b0n9qub"},{"post_id":"clbwdlv43000zmcq0841w46oa","category_id":"clbwdlv4v0052mcq0gd7lasxh","_id":"clbwdlv4y005tmcq06sx8efgb"},{"post_id":"clbwdlv4p003lmcq0fzwehmim","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4y005umcq02beje0mf"},{"post_id":"clbwdlv4p003lmcq0fzwehmim","category_id":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv4z005xmcq0fnz31tcm"},{"post_id":"clbwdlv4p003lmcq0fzwehmim","category_id":"clbwdlv4x005imcq02bw9c141","_id":"clbwdlv4z005zmcq0ev1dhx94"},{"post_id":"clbwdlv430011mcq0aoyd7xxc","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv4z0063mcq04nb0edpl"},{"post_id":"clbwdlv430011mcq0aoyd7xxc","category_id":"clbwdlv4n003amcq09f6l9fu4","_id":"clbwdlv4z0065mcq0huwrh7yz"},{"post_id":"clbwdlv430011mcq0aoyd7xxc","category_id":"clbwdlv4v0052mcq0gd7lasxh","_id":"clbwdlv500068mcq0flrfbhyr"},{"post_id":"clbwdlv440014mcq002h4cq2g","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv500069mcq0gcrs39p2"},{"post_id":"clbwdlv440014mcq002h4cq2g","category_id":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv50006bmcq0gu9fhm77"},{"post_id":"clbwdlv440014mcq002h4cq2g","category_id":"clbwdlv4t004amcq04n7yfkrv","_id":"clbwdlv50006dmcq04s0sapd9"},{"post_id":"clbwdlv450016mcq0b3es37ae","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv50006gmcq07r0e5g8m"},{"post_id":"clbwdlv450016mcq0b3es37ae","category_id":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv51006imcq01o40dbvf"},{"post_id":"clbwdlv450016mcq0b3es37ae","category_id":"clbwdlv4t004amcq04n7yfkrv","_id":"clbwdlv51006jmcq0hrrg86z3"},{"post_id":"clbwdlv450019mcq07tuh5nwy","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv51006mmcq0flf33om0"},{"post_id":"clbwdlv450019mcq07tuh5nwy","category_id":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv51006omcq03wqzefmw"},{"post_id":"clbwdlv450019mcq07tuh5nwy","category_id":"clbwdlv4x005imcq02bw9c141","_id":"clbwdlv51006qmcq07rlr0lv4"},{"post_id":"clbwdlv4k002xmcq0epx02gck","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv51006smcq085kngif5"},{"post_id":"clbwdlv4k002xmcq0epx02gck","category_id":"clbwdlv4n003amcq09f6l9fu4","_id":"clbwdlv52006vmcq0ajg61yrz"},{"post_id":"clbwdlv4k002xmcq0epx02gck","category_id":"clbwdlv500066mcq0djzd8b5y","_id":"clbwdlv52006xmcq06y3i4144"},{"post_id":"clbwdlv5e008pmcq0d4tx8xv1","category_id":"clbwdlv41000qmcq041rz9hav","_id":"clbwdlv5g008vmcq0dw6r8hz3"},{"post_id":"clbwdlv5f008tmcq03ioc0jsh","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv5h008ymcq09202hwqj"},{"post_id":"clbwdlv5f008tmcq03ioc0jsh","category_id":"clbwdlv4s0048mcq0exn19nwg","_id":"clbwdlv5h008zmcq0ddmdgotl"},{"post_id":"clbwdlv5f008umcq037dq4wun","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv5h0091mcq0dlvgg76j"},{"post_id":"clbwdlv5f008umcq037dq4wun","category_id":"clbwdlv4s0048mcq0exn19nwg","_id":"clbwdlv5h0092mcq05m7t884h"},{"post_id":"clbwdlv5j009kmcq0c5nee2bz","category_id":"clbwdlv46001fmcq01frac354","_id":"clbwdlv5k009mmcq03i9wcnef"},{"post_id":"clbwdlv5j009kmcq0c5nee2bz","category_id":"clbwdlv4j002smcq0gd51gkho","_id":"clbwdlv5k009nmcq0cq0eh1ek"},{"post_id":"clbwdlv5j009kmcq0c5nee2bz","category_id":"clbwdlv4t004amcq04n7yfkrv","_id":"clbwdlv5k009omcq095zwh49h"}],"PostTag":[{"post_id":"clbwdlv3t0008mcq02h7f6djt","tag_id":"clbwdlv3v000bmcq0fhl2cynu","_id":"clbwdlv40000nmcq06cc7f52y"},{"post_id":"clbwdlv3t0008mcq02h7f6djt","tag_id":"clbwdlv3y000gmcq0dbv04dsc","_id":"clbwdlv41000pmcq0hres52hp"},{"post_id":"clbwdlv3v000amcq0970d20ts","tag_id":"clbwdlv3z000kmcq0axf4gwub","_id":"clbwdlv46001dmcq0c9d05s4r"},{"post_id":"clbwdlv3v000amcq0970d20ts","tag_id":"clbwdlv41000smcq04hgf75d7","_id":"clbwdlv47001hmcq0aktd1onb"},{"post_id":"clbwdlv3v000amcq0970d20ts","tag_id":"clbwdlv43000ymcq06be1atkc","_id":"clbwdlv49001lmcq03wy41h1f"},{"post_id":"clbwdlv3v000amcq0970d20ts","tag_id":"clbwdlv440015mcq03z065gcd","_id":"clbwdlv49001omcq0gch1gs25"},{"post_id":"clbwdlv3w000cmcq0e3hadb5h","tag_id":"clbwdlv3v000bmcq0fhl2cynu","_id":"clbwdlv4b001smcq0ciweg3m3"},{"post_id":"clbwdlv3w000cmcq0e3hadb5h","tag_id":"clbwdlv3y000gmcq0dbv04dsc","_id":"clbwdlv4b001umcq0akkreq8p"},{"post_id":"clbwdlv3x000emcq0772xc37u","tag_id":"clbwdlv49001qmcq0g5867wdi","_id":"clbwdlv4c001ymcq0bjze6mbb"},{"post_id":"clbwdlv3x000fmcq0a18aejl1","tag_id":"clbwdlv4b001wmcq02me23knm","_id":"clbwdlv4e0028mcq00m4e4q6i"},{"post_id":"clbwdlv3x000fmcq0a18aejl1","tag_id":"clbwdlv4d0021mcq0b2ue6c0b","_id":"clbwdlv4f002cmcq08whd3mtt"},{"post_id":"clbwdlv3y000imcq008jxf2nr","tag_id":"clbwdlv4b001wmcq02me23knm","_id":"clbwdlv4h002kmcq07bfadurd"},{"post_id":"clbwdlv3y000imcq008jxf2nr","tag_id":"clbwdlv4d0021mcq0b2ue6c0b","_id":"clbwdlv4i002omcq0358g2gwf"},{"post_id":"clbwdlv3z000jmcq00dzj8ekp","tag_id":"clbwdlv4b001wmcq02me23knm","_id":"clbwdlv4k002wmcq09iq0539d"},{"post_id":"clbwdlv3z000jmcq00dzj8ekp","tag_id":"clbwdlv4d0021mcq0b2ue6c0b","_id":"clbwdlv4l0030mcq03bjcaour"},{"post_id":"clbwdlv40000mmcq09bto3ux9","tag_id":"clbwdlv4k002vmcq0gdawceu1","_id":"clbwdlv4m0034mcq06uevcfvp"},{"post_id":"clbwdlv4l0033mcq00e6devco","tag_id":"clbwdlv3v000bmcq0fhl2cynu","_id":"clbwdlv4m0038mcq07s3r8osj"},{"post_id":"clbwdlv4l0033mcq00e6devco","tag_id":"clbwdlv3y000gmcq0dbv04dsc","_id":"clbwdlv4n003cmcq03kujbi4n"},{"post_id":"clbwdlv40000omcq0bfr87dhj","tag_id":"clbwdlv4l0032mcq0ev7e831x","_id":"clbwdlv4o003gmcq0a0m84g4l"},{"post_id":"clbwdlv40000omcq0bfr87dhj","tag_id":"clbwdlv4m0037mcq069y82qcd","_id":"clbwdlv4p003jmcq0agwveouy"},{"post_id":"clbwdlv4n003dmcq0eipo9s0g","tag_id":"clbwdlv3z000kmcq0axf4gwub","_id":"clbwdlv4p003nmcq02ybjfyxt"},{"post_id":"clbwdlv4o003fmcq0cpq81x7w","tag_id":"clbwdlv3v000bmcq0fhl2cynu","_id":"clbwdlv4q003pmcq0ggo64dl4"},{"post_id":"clbwdlv41000tmcq06i8kgmgw","tag_id":"clbwdlv4m0037mcq069y82qcd","_id":"clbwdlv4q003umcq02pk22skf"},{"post_id":"clbwdlv41000tmcq06i8kgmgw","tag_id":"clbwdlv4p003kmcq0b3dkcxdh","_id":"clbwdlv4r003vmcq0cihb290y"},{"post_id":"clbwdlv41000tmcq06i8kgmgw","tag_id":"clbwdlv4q003qmcq02wgb9gcl","_id":"clbwdlv4r003ymcq0cqkn6lxa"},{"post_id":"clbwdlv42000vmcq04e4j74u5","tag_id":"clbwdlv4q003smcq0e75g0vwh","_id":"clbwdlv4r0042mcq0fby15bzu"},{"post_id":"clbwdlv42000vmcq04e4j74u5","tag_id":"clbwdlv4r003wmcq07che9h0i","_id":"clbwdlv4r0043mcq08af93wy4"},{"post_id":"clbwdlv43000zmcq0841w46oa","tag_id":"clbwdlv4r003zmcq0567ocj4w","_id":"clbwdlv4t004bmcq07t02cu2z"},{"post_id":"clbwdlv43000zmcq0841w46oa","tag_id":"clbwdlv4q003smcq0e75g0vwh","_id":"clbwdlv4t004cmcq0b33k6v44"},{"post_id":"clbwdlv43000zmcq0841w46oa","tag_id":"clbwdlv4r003wmcq07che9h0i","_id":"clbwdlv4t004gmcq0cydsb8u0"},{"post_id":"clbwdlv430011mcq0aoyd7xxc","tag_id":"clbwdlv4q003smcq0e75g0vwh","_id":"clbwdlv4u004lmcq0fz26bpqx"},{"post_id":"clbwdlv430011mcq0aoyd7xxc","tag_id":"clbwdlv4r003wmcq07che9h0i","_id":"clbwdlv4u004nmcq0ehalczfk"},{"post_id":"clbwdlv440014mcq002h4cq2g","tag_id":"clbwdlv4l0032mcq0ev7e831x","_id":"clbwdlv4u004umcq050tg8vjm"},{"post_id":"clbwdlv440014mcq002h4cq2g","tag_id":"clbwdlv4m0037mcq069y82qcd","_id":"clbwdlv4v004wmcq05gqkdkin"},{"post_id":"clbwdlv450016mcq0b3es37ae","tag_id":"clbwdlv4l0032mcq0ev7e831x","_id":"clbwdlv4v0054mcq0enl5d4vx"},{"post_id":"clbwdlv450016mcq0b3es37ae","tag_id":"clbwdlv4m0037mcq069y82qcd","_id":"clbwdlv4w0056mcq0aljddbqm"},{"post_id":"clbwdlv450019mcq07tuh5nwy","tag_id":"clbwdlv4v0051mcq03geeh0b1","_id":"clbwdlv4w005amcq08cca50n1"},{"post_id":"clbwdlv46001cmcq07mif71or","tag_id":"clbwdlv4w0057mcq07pzd4xf5","_id":"clbwdlv4x005jmcq0axa2gh68"},{"post_id":"clbwdlv46001cmcq07mif71or","tag_id":"clbwdlv4w005cmcq06rnd75bv","_id":"clbwdlv4x005lmcq02ntg14j8"},{"post_id":"clbwdlv47001gmcq0g87d6akb","tag_id":"clbwdlv49001qmcq0g5867wdi","_id":"clbwdlv4z005ymcq00p07ekwz"},{"post_id":"clbwdlv47001gmcq0g87d6akb","tag_id":"clbwdlv4x005nmcq0gj7d62l8","_id":"clbwdlv4z0060mcq0ckxc2niq"},{"post_id":"clbwdlv47001gmcq0g87d6akb","tag_id":"clbwdlv4y005rmcq07tghfgjt","_id":"clbwdlv4z0064mcq0cgft7ed8"},{"post_id":"clbwdlv47001kmcq0a0zn5v8p","tag_id":"clbwdlv4b001wmcq02me23knm","_id":"clbwdlv50006cmcq07z24fa10"},{"post_id":"clbwdlv47001kmcq0a0zn5v8p","tag_id":"clbwdlv4d0021mcq0b2ue6c0b","_id":"clbwdlv50006emcq0dwls71g0"},{"post_id":"clbwdlv47001kmcq0a0zn5v8p","tag_id":"clbwdlv500067mcq0cy8tad83","_id":"clbwdlv51006hmcq01m5p40i5"},{"post_id":"clbwdlv49001nmcq03a8131h8","tag_id":"clbwdlv4d0021mcq0b2ue6c0b","_id":"clbwdlv51006lmcq02lg9bx9q"},{"post_id":"clbwdlv49001nmcq03a8131h8","tag_id":"clbwdlv50006fmcq0atf2gr3g","_id":"clbwdlv51006nmcq00g0r5u0q"},{"post_id":"clbwdlv4a001rmcq040hr7ch4","tag_id":"clbwdlv49001qmcq0g5867wdi","_id":"clbwdlv51006rmcq085gohuo7"},{"post_id":"clbwdlv4a001rmcq040hr7ch4","tag_id":"clbwdlv51006kmcq056ui337n","_id":"clbwdlv51006tmcq0c9d378n7"},{"post_id":"clbwdlv4b001tmcq02n6eaobd","tag_id":"clbwdlv51006pmcq08fpy7v3j","_id":"clbwdlv52006wmcq03yxxa3k3"},{"post_id":"clbwdlv4c001xmcq022vbanhw","tag_id":"clbwdlv51006umcq08eot7j1c","_id":"clbwdlv530070mcq0474t9n7d"},{"post_id":"clbwdlv4c001xmcq022vbanhw","tag_id":"clbwdlv52006ymcq0gn4a8crt","_id":"clbwdlv530071mcq0bphr4g64"},{"post_id":"clbwdlv4c001zmcq0c4oa449t","tag_id":"clbwdlv52006zmcq0frxa6af7","_id":"clbwdlv530074mcq09gfre88s"},{"post_id":"clbwdlv4c001zmcq0c4oa449t","tag_id":"clbwdlv530072mcq01x5xdk3i","_id":"clbwdlv530075mcq08q579ck6"},{"post_id":"clbwdlv4d0022mcq06dg94lqt","tag_id":"clbwdlv52006zmcq0frxa6af7","_id":"clbwdlv530078mcq0dvhucggg"},{"post_id":"clbwdlv4d0022mcq06dg94lqt","tag_id":"clbwdlv530076mcq02mhm3fg0","_id":"clbwdlv530079mcq09shsalwb"},{"post_id":"clbwdlv4d0023mcq0cxezfjgg","tag_id":"clbwdlv530077mcq0a3y66edy","_id":"clbwdlv54007emcq0c6z0g6nw"},{"post_id":"clbwdlv4d0023mcq0cxezfjgg","tag_id":"clbwdlv53007amcq09u1l15zx","_id":"clbwdlv54007fmcq08xqw8lf5"},{"post_id":"clbwdlv4d0023mcq0cxezfjgg","tag_id":"clbwdlv54007bmcq00nwk8qnp","_id":"clbwdlv54007hmcq0f78h03ex"},{"post_id":"clbwdlv4d0023mcq0cxezfjgg","tag_id":"clbwdlv54007cmcq052ocdux3","_id":"clbwdlv54007imcq04qrp18bx"},{"post_id":"clbwdlv4f0029mcq072yhfbg8","tag_id":"clbwdlv54007dmcq06ly82ooa","_id":"clbwdlv55007kmcq019ombg42"},{"post_id":"clbwdlv4f002dmcq062n01u0w","tag_id":"clbwdlv54007dmcq06ly82ooa","_id":"clbwdlv55007lmcq07of98x08"},{"post_id":"clbwdlv4g002fmcq0hauz8xgi","tag_id":"clbwdlv49001qmcq0g5867wdi","_id":"clbwdlv55007nmcq03ourdztf"},{"post_id":"clbwdlv4g002fmcq0hauz8xgi","tag_id":"clbwdlv54007jmcq03eos6pg6","_id":"clbwdlv55007omcq005ia3pws"},{"post_id":"clbwdlv4g002hmcq0ep5zbdqk","tag_id":"clbwdlv55007mmcq00vh7h5kk","_id":"clbwdlv55007qmcq007m60184"},{"post_id":"clbwdlv4h002lmcq0886ufq3k","tag_id":"clbwdlv55007pmcq06bf09sqd","_id":"clbwdlv55007smcq005fs8n9a"},{"post_id":"clbwdlv4i002pmcq04z62fzj7","tag_id":"clbwdlv55007rmcq0a1oe0oc0","_id":"clbwdlv55007umcq09guyblse"},{"post_id":"clbwdlv4j002rmcq05htz09wg","tag_id":"clbwdlv55007tmcq0absqeux8","_id":"clbwdlv56007xmcq09bfy9u83"},{"post_id":"clbwdlv4j002rmcq05htz09wg","tag_id":"clbwdlv55007vmcq0bfgi6fxm","_id":"clbwdlv56007ymcq0csl45f2s"},{"post_id":"clbwdlv4k002tmcq06ynf7dxp","tag_id":"clbwdlv51006umcq08eot7j1c","_id":"clbwdlv570086mcq0fzibgdmx"},{"post_id":"clbwdlv4k002tmcq06ynf7dxp","tag_id":"clbwdlv56007zmcq05mk3aq9j","_id":"clbwdlv570087mcq0e5m35kbf"},{"post_id":"clbwdlv4k002tmcq06ynf7dxp","tag_id":"clbwdlv560080mcq09ts4hzvy","_id":"clbwdlv570089mcq06knp12k0"},{"post_id":"clbwdlv4k002tmcq06ynf7dxp","tag_id":"clbwdlv560081mcq0edowfh9x","_id":"clbwdlv57008amcq06lhq98os"},{"post_id":"clbwdlv4k002tmcq06ynf7dxp","tag_id":"clbwdlv560082mcq0651y2ptt","_id":"clbwdlv58008cmcq06qnldiiw"},{"post_id":"clbwdlv4k002tmcq06ynf7dxp","tag_id":"clbwdlv560083mcq06q7s7el6","_id":"clbwdlv58008dmcq0dyzcaji2"},{"post_id":"clbwdlv4k002tmcq06ynf7dxp","tag_id":"clbwdlv51006pmcq08fpy7v3j","_id":"clbwdlv58008fmcq0baxphvy9"},{"post_id":"clbwdlv4k002xmcq0epx02gck","tag_id":"clbwdlv560085mcq0e8501k50","_id":"clbwdlv58008gmcq05bgd18rr"},{"post_id":"clbwdlv4l0031mcq0gahn2kfb","tag_id":"clbwdlv570088mcq0hsxf10a1","_id":"clbwdlv58008hmcq06b1y70lu"},{"post_id":"clbwdlv4m0036mcq05c7ahhqf","tag_id":"clbwdlv57008bmcq04x3x1ik2","_id":"clbwdlv58008jmcq0hmmy1q3w"},{"post_id":"clbwdlv4m0036mcq05c7ahhqf","tag_id":"clbwdlv58008emcq00hmqhcg7","_id":"clbwdlv58008kmcq04jhc1sxa"},{"post_id":"clbwdlv4m0039mcq0cd2xgic0","tag_id":"clbwdlv58008imcq0hf28aeem","_id":"clbwdlv58008mmcq07kyj9knv"},{"post_id":"clbwdlv4p003lmcq0fzwehmim","tag_id":"clbwdlv58008lmcq0cfoz3iqe","_id":"clbwdlv59008nmcq06psdcnsl"},{"post_id":"clbwdlv5d008omcq0bxi28t8b","tag_id":"clbwdlv49001qmcq0g5867wdi","_id":"clbwdlv5e008qmcq02mvy7q9i"},{"post_id":"clbwdlv5e008pmcq0d4tx8xv1","tag_id":"clbwdlv5f008smcq0au9ccv84","_id":"clbwdlv5h008xmcq07m150qar"},{"post_id":"clbwdlv5f008rmcq036dwghd6","tag_id":"clbwdlv5g008wmcq01grjfvsr","_id":"clbwdlv5i0098mcq0htoefu9n"},{"post_id":"clbwdlv5f008rmcq036dwghd6","tag_id":"clbwdlv4y005rmcq07tghfgjt","_id":"clbwdlv5i0099mcq0990i62gz"},{"post_id":"clbwdlv5f008rmcq036dwghd6","tag_id":"clbwdlv5h0090mcq0c7ybfved","_id":"clbwdlv5i009bmcq0cru56ixl"},{"post_id":"clbwdlv5f008rmcq036dwghd6","tag_id":"clbwdlv5h0093mcq00i2iesx4","_id":"clbwdlv5i009cmcq0f3po7nyl"},{"post_id":"clbwdlv5f008rmcq036dwghd6","tag_id":"clbwdlv5h0094mcq0e5fbg286","_id":"clbwdlv5i009emcq0el2dfqdb"},{"post_id":"clbwdlv5f008rmcq036dwghd6","tag_id":"clbwdlv5h0095mcq078yp7gwu","_id":"clbwdlv5i009fmcq07xcuhljb"},{"post_id":"clbwdlv5f008rmcq036dwghd6","tag_id":"clbwdlv5i0096mcq02swx2t34","_id":"clbwdlv5i009gmcq04fwm7m75"},{"post_id":"clbwdlv5f008tmcq03ioc0jsh","tag_id":"clbwdlv5i0097mcq0gerx5vqj","_id":"clbwdlv5i009hmcq0duuq19d8"},{"post_id":"clbwdlv5f008umcq037dq4wun","tag_id":"clbwdlv5i009amcq0hxk3gj5z","_id":"clbwdlv5i009imcq021w47p40"},{"post_id":"clbwdlv5f008umcq037dq4wun","tag_id":"clbwdlv5i009dmcq0fkwtdl37","_id":"clbwdlv5i009jmcq0hywldzqb"},{"post_id":"clbwdlv5j009kmcq0c5nee2bz","tag_id":"clbwdlv4m0037mcq069y82qcd","_id":"clbwdlv5k009lmcq02ktaf7q7"},{"post_id":"clbwdlv5l009pmcq05f5r3h6m","tag_id":"clbwdlv51006umcq08eot7j1c","_id":"clbwdlv5n009rmcq0g1i5g0nr"},{"post_id":"clbwdlv5l009pmcq05f5r3h6m","tag_id":"clbwdlv5m009qmcq0ewimg64f","_id":"clbwdlv5n009smcq02cro4cvy"}],"Tag":[{"name":"html5","_id":"clbwdlv3v000bmcq0fhl2cynu"},{"name":"css3","_id":"clbwdlv3y000gmcq0dbv04dsc"},{"name":"git","_id":"clbwdlv3z000kmcq0axf4gwub"},{"name":"protobuf","_id":"clbwdlv41000smcq04hgf75d7"},{"name":"Protocol Buffer","_id":"clbwdlv43000ymcq06be1atkc"},{"name":"make","_id":"clbwdlv440015mcq03z065gcd"},{"name":"js","_id":"clbwdlv49001qmcq0g5867wdi"},{"name":"编程","_id":"clbwdlv4b001wmcq02me23knm"},{"name":"javacript","_id":"clbwdlv4d0021mcq0b2ue6c0b"},{"name":"MVVM","_id":"clbwdlv4k002vmcq0gdawceu1"},{"name":"UIParticle","_id":"clbwdlv4l0032mcq0ev7e831x"},{"name":"特效","_id":"clbwdlv4m0037mcq069y82qcd"},{"name":"RT","_id":"clbwdlv4p003kmcq0b3dkcxdh"},{"name":"RenderTexture","_id":"clbwdlv4q003qmcq02wgb9gcl"},{"name":"emoji","_id":"clbwdlv4q003smcq0e75g0vwh"},{"name":"图文混排","_id":"clbwdlv4r003wmcq07che9h0i"},{"name":"UGUI","_id":"clbwdlv4r003zmcq0567ocj4w"},{"name":"Addressable","_id":"clbwdlv4v0051mcq03geeh0b1"},{"name":"github","_id":"clbwdlv4w0057mcq07pzd4xf5"},{"name":"基础","_id":"clbwdlv4w005cmcq06rnd75bv"},{"name":"css","_id":"clbwdlv4x005nmcq0gj7d62l8"},{"name":"animation","_id":"clbwdlv4y005rmcq07tghfgjt"},{"name":"BOM","_id":"clbwdlv500067mcq0cy8tad83"},{"name":"DOM","_id":"clbwdlv50006fmcq0atf2gr3g"},{"name":"继承","_id":"clbwdlv51006kmcq056ui337n"},{"name":"mongoDB","_id":"clbwdlv51006pmcq08fpy7v3j"},{"name":"nodejs","_id":"clbwdlv51006umcq08eot7j1c"},{"name":"bug","_id":"clbwdlv52006ymcq0gn4a8crt"},{"name":"webpack","_id":"clbwdlv52006zmcq0frxa6af7"},{"name":"sourceMap","_id":"clbwdlv530072mcq01x5xdk3i"},{"name":"eslint","_id":"clbwdlv530076mcq02mhm3fg0"},{"name":"ApplicationCache","_id":"clbwdlv530077mcq0a3y66edy"},{"name":"localStorage","_id":"clbwdlv53007amcq09u1l15zx"},{"name":"webSQL","_id":"clbwdlv54007bmcq00nwk8qnp"},{"name":"闭包","_id":"clbwdlv54007cmcq052ocdux3"},{"name":"vue","_id":"clbwdlv54007dmcq06ly82ooa"},{"name":"算法","_id":"clbwdlv54007jmcq03eos6pg6"},{"name":"总结","_id":"clbwdlv55007mmcq00vh7h5kk"},{"name":"测试","_id":"clbwdlv55007pmcq06bf09sqd"},{"name":"规范","_id":"clbwdlv55007rmcq0a1oe0oc0"},{"name":"场景","_id":"clbwdlv55007tmcq0absqeux8"},{"name":"Scene","_id":"clbwdlv55007vmcq0bfgi6fxm"},{"name":"express","_id":"clbwdlv56007zmcq05mk3aq9j"},{"name":"grunt","_id":"clbwdlv560080mcq09ts4hzvy"},{"name":"router","_id":"clbwdlv560081mcq0edowfh9x"},{"name":"MVC","_id":"clbwdlv560082mcq0651y2ptt"},{"name":"jade","_id":"clbwdlv560083mcq06q7s7el6"},{"name":"小游戏","_id":"clbwdlv560085mcq0e8501k50"},{"name":"新手引导","_id":"clbwdlv570088mcq0hsxf10a1"},{"name":"多语言","_id":"clbwdlv57008bmcq04x3x1ik2"},{"name":"海外","_id":"clbwdlv58008emcq00hmqhcg7"},{"name":"热更新","_id":"clbwdlv58008imcq0hf28aeem"},{"name":"打包","_id":"clbwdlv58008lmcq0cfoz3iqe"},{"name":"fabric","_id":"clbwdlv5f008smcq0au9ccv84"},{"name":"layout","_id":"clbwdlv5g008wmcq01grjfvsr"},{"name":"clear","_id":"clbwdlv5h0090mcq0c7ybfved"},{"name":"audio","_id":"clbwdlv5h0093mcq00i2iesx4"},{"name":"进度条","_id":"clbwdlv5h0094mcq0e5fbg286"},{"name":"播放按钮","_id":"clbwdlv5h0095mcq078yp7gwu"},{"name":"QQ音乐API","_id":"clbwdlv5i0096mcq02swx2t34"},{"name":"network","_id":"clbwdlv5i0097mcq0gerx5vqj"},{"name":"SQLite","_id":"clbwdlv5i009amcq0hxk3gj5z"},{"name":"配置表","_id":"clbwdlv5i009dmcq0fkwtdl37"},{"name":"微信公众号","_id":"clbwdlv5m009qmcq0ewimg64f"}]}}