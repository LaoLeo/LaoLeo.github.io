{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/plug/canvas-nest.min.js","path":"js/src/plug/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1497361042626},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1497361042627},{"_id":"themes/next/.gitignore","hash":"80710b94ff2f6c013859ebffffe90f9295fc94ed","modified":1497361042628},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1497361042628},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1497361042629},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1497361042630},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1497361042647},{"_id":"themes/next/gulpfile.coffee","hash":"d21430c020ad4b2ae195d8750c3865897e605d33","modified":1497361042653},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1497361042650},{"_id":"themes/next/_config.yml","hash":"107840498b34a6f2d1892131fb79acdb7e9256ac","modified":1556641670623},{"_id":"themes/next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1497361042652},{"_id":"themes/next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1497361042773},{"_id":"source/_posts/CSS3实现3D轮播图.md","hash":"9a09b615217bbe76dc40b8544eb08919616b4f3a","modified":1497795979723},{"_id":"source/_posts/JS之cookie.md","hash":"d9c102f64fa92b80492c9e19712b4f2b2911de49","modified":1498058805371},{"_id":"source/_posts/CSS3饼状loading效果.md","hash":"8af760becd352cb793ebba17bdd65e7c1fa581b1","modified":1497795951171},{"_id":"source/_posts/JS之事件详情（1）.md","hash":"7fb5a9b764f201c79bd9e85578077474668ae722","modified":1476797499410},{"_id":"source/_posts/github使用心得.md","hash":"58dec56636c336f61fbb80165de79611032f94fc","modified":1476797499520},{"_id":"source/_posts/JS之事件详解（2）.md","hash":"e3d6fafc93c9b08d669516890f7113a3432a967c","modified":1476797499457},{"_id":"source/_posts/js系列之BOM基础.md","hash":"25ceacc266e41acc40c8c919f6c6bb920cc6cba8","modified":1476797499520},{"_id":"source/_posts/MVVM框架双向数据绑定的实现原理.md","hash":"108146f6e23717e0273a38b3921c042015fb52d5","modified":1524571091559},{"_id":"source/_posts/js系列之DOM基础.md","hash":"15b42db034af9b236c25920a57d6b0b64683ab6a","modified":1462887318356},{"_id":"source/_posts/JS之默认行为.md","hash":"7ccf3326a80b3013285ce424897881ef87402dda","modified":1476797499504},{"_id":"source/_posts/mongoDB常用知识整理.md","hash":"a6752bb0c165c2453c612a78a15a2f46f594fb54","modified":1503240601792},{"_id":"source/_posts/node开发公众号踩过的坑.md","hash":"c6c335526ee57b2ef46d6f8c0027db3a20ae7dcc","modified":1497367295040},{"_id":"source/_posts/js控制运动框架animation.md","hash":"9459e24e54bf0a679f5fcd2790583159f51272bf","modified":1497890462584},{"_id":"source/_posts/source map小知识.md","hash":"a98acee18fe186b618312efd87d3088ac4f459c4","modified":1524570988165},{"_id":"source/_posts/webpack引入eslint.md","hash":"33ae6dba936a0601f040ffedbc72e7c3078b79b6","modified":1524570073831},{"_id":"source/_posts/node开发微信公众号.md","hash":"2fd9a0d2cb8bc6098302f2047ca41552fffb8d4f","modified":1497367290838},{"_id":"source/_posts/【VueSSR系列一】构建流程源码解读.md","hash":"1e8a14c4d5649ee5a03c618692bfac7f53f0dbcc","modified":1567264949271},{"_id":"source/_posts/【VueSSR系列二】clientManifest与bundle的处理流程解读.md","hash":"22937945cb6d8fdf5f101906b96d21597673991b","modified":1567265013172},{"_id":"source/_posts/使用javascript实现常见的排序算法.md","hash":"49e64ccf48e3c6ee4d92629a6fbbb5ad7d9102c5","modified":1534660660793},{"_id":"source/_posts/关于高效找工作的几条建议.md","hash":"1ca0b305d11fbd38ae277b1e75cfe6f673de8efe","modified":1567265048974},{"_id":"source/_posts/前端单元测试.md","hash":"5d4701e3a22f028fe20d75c945bb1f2817ae375a","modified":1567264874957},{"_id":"source/_posts/前端编码规范.md","hash":"4b137fcb95c400527e39d88b81db86bbcfbcaf35","modified":1567265077955},{"_id":"source/_posts/基于Express4.0开发web.md","hash":"8db6458f6ea0318bf8049f002e14dc9034266e80","modified":1497367281917},{"_id":"source/_posts/有趣的鼠标悬浮效果.md","hash":"e2599a9ec9a73fc79dae3c637c5973e252d058e2","modified":1497795914743},{"_id":"source/_posts/js面向对象编程之继承.md","hash":"1ac1df32d25e8c2a256682606bdc6881ed83f149","modified":1524571076523},{"_id":"source/_posts/腾讯外包面试经历总结.md","hash":"11854a1d6ea46d939cf6e2908664a27009ff5d43","modified":1534660292175},{"_id":"source/_posts/聊聊git的分支和rebase命令.md","hash":"af96ac4d7764159ed79101466653541d95d76dcd","modified":1524569971483},{"_id":"source/_posts/《代码整洁之道》读书笔记.md","hash":"00eeb073da8a9e3a3c645c6fa2f2dd92d9b5cdeb","modified":1524570011941},{"_id":"source/_posts/踏平windows下安装fabric遇到的坑s.md","hash":"8324f3481972a615521330e5a8c2f24572914d30","modified":1524570095263},{"_id":"source/_posts/web离线应用.md","hash":"baa3bc6420759eb713e82caad910017d0673aef2","modified":1497367287046},{"_id":"source/archives/index.md","hash":"a450e87c50e4c6820ad8286903d0a003b381191a","modified":1497361042624},{"_id":"source/categories/index.md","hash":"dca246dc74a88bb9c889298228395f8fa417f60a","modified":1508047163716},{"_id":"source/tags/index.md","hash":"ea702dcb9922c271f8e2cddcc54c7bfb8bab59ba","modified":1497361042625},{"_id":"source/_posts/音乐播放器WebApp.md","hash":"28b737b67c7ae4ceca983d19d2993455cfafb5f1","modified":1498396301016},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1497361042655},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1497361042656},{"_id":"themes/next/languages/en.yml","hash":"e46e5250c98ffb2b3e961f9639a706f42245cb7d","modified":1497361042657},{"_id":"source/_posts/调用定时器的正确姿势.md","hash":"9323d1597575c243e0e1c72a7be57e0b85e99d20","modified":1498058758517},{"_id":"themes/next/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1497361042659},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1497361042658},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1497361042660},{"_id":"themes/next/languages/ko.yml","hash":"feed5fdb677f87fbb9ba2b6e4413e7011180708e","modified":1497361042661},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1497361042663},{"_id":"themes/next/languages/pt-BR.yml","hash":"81498b783372f11b2149bd2b1731e78432760a0e","modified":1497361042662},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1497361042678},{"_id":"themes/next/languages/zh-Hans.yml","hash":"c74cf512f300127bda30dcec1177e71cbaf8c9fb","modified":1497361042679},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1497361042680},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1497361042681},{"_id":"source/_posts/自定义的checkbox,radio样式.md","hash":"61d0ea810576a112639853fcaf2f042dcb2f47b9","modified":1497795735479},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1497361042768},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1497361042767},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1497361042769},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1497361042771},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1497361042772},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1497361042770},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1497361042775},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1497361043297},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1497361042766},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042965},{"_id":"themes/next/layout/_layout.swig","hash":"1f6adfced1db15b9cb5017a1a62ef85e7dde2463","modified":1508521350438},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1497361043309},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"1c0e1418aace8d309fde8d4b26dd4b08493f666f","modified":1497361042690},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1497361043315},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1497361042706},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1497361042720},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1497361042722},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"f7138e4986b485119db84564cdeacda80ede8ad5","modified":1497361042719},{"_id":"themes/next/layout/_partials/comments.swig","hash":"bbc1d3f492b663277ee9f7d24b2589277b66dfe2","modified":1498726618618},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e742b3d3ae147b9f4a9116c1597db4344747e484","modified":1508054186772},{"_id":"themes/next/layout/_macro/post.swig","hash":"352bcb82903bfdd24452fc96a83babc28a3b090e","modified":1508053812842},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1497361042728},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1497361042730},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1497361042739},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1497361042740},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1497361042740},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1497361042764},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1497361042776},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1497361042777},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1497361042791},{"_id":"themes/next/layout/_partials/header.swig","hash":"c0697644817f1570093de9f17ea096295da8c5f1","modified":1497361042727},{"_id":"themes/next/layout/_partials/comments - 副本.swig","hash":"734a2a64551df1ad672a8231c658365d838f0ca1","modified":1497369489661},{"_id":"themes/next/layout/_partials/head.swig","hash":"6448e1335922f255c846badff630b6d84a3aba21","modified":1497361042724},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1497361043006},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1497361042964},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1497361043020},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1497361042974},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1497361043023},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1497361043021},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1497361043026},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1497361043027},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1497361043025},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1497361043029},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1497361043028},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1497361042987},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042743},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042743},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042865},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042865},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042868},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042895},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1497361042963},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1497361043031},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1497361043018},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1497361042731},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1497361042732},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1497361042733},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1497361042734},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1497361042725},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1497361042742},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1497361042745},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"570c2ab8b0f79fdadfa2e96ae3aae2f262c44f0b","modified":1498726396208},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1497361042736},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1497361042758},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1497361042761},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"c14b6f75f5b9ea2ca0069776a6b2f80b972123dc","modified":1497361042759},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1497361042763},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1497361042744},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1497361042762},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1497361042864},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1497361042866},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1497361042867},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1497361042894},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"b8e3663996b39590509d843f674360872b0242ac","modified":1497361042896},{"_id":"themes/next/source/css/_variables/base.styl","hash":"4c4298a7011841d9ee2aec5bd192df5730b08517","modified":1497361042962},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1497361042737},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1497361042737},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1497361043032},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1497361043033},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1497361043035},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1497361043036},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1497361043044},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1497361043046},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1497361043037},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1497361043109},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1497361043041},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1497361043112},{"_id":"themes/next/source/js/src/utils.js","hash":"418d09eb4df5dcc5e8d13d7f6245b1888200b51c","modified":1497361043042},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1497361043122},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1497361043123},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1497361043124},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1497361043121},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1497361043125},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1497361043204},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1497361043214},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1497361043224},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1497361043236},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1497361043239},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1497361043110},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1497361043244},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1497361043248},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1497361043278},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1497361043111},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1497361043291},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1497361043280},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1497361043294},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1497361043295},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1497361043212},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"246984ccd3a1687ecb124c092e56d292f6da2478","modified":1498726321474},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e21f3fb1f6cc03c4a58b8f08e1c304f04f4c4724","modified":1497361042755},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"0a2f48971d86ea72e1a8fd1d8bbf2b7d423666b2","modified":1497361042756},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1497361042747},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1497361042748},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1497361042748},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1497361042749},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1497361042751},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1497361042752},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1497361042793},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1497361042794},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1497361042795},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1497361042796},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1497361042844},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1497361042823},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1497361042862},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1497361042861},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1497361042857},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1497361042869},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1497361042858},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1497361042871},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1497361042872},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1497361042863},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1497361042874},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1497361042859},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1497361042886},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1497361042870},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1497361042876},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"338e9475519ce72af29a1bc05610f9f486e0f1c2","modified":1497361042888},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1497361042887},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1497361042874},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1497361042890},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1497361042880},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1497361042893},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1497361042881},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1497361042882},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1497361042883},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1497361042884},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1497361042889},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"983c0723e8cfd84b67c2e66da0c26425a8db06e0","modified":1497361042891},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1497361043039},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1497361043047},{"_id":"themes/next/source/js/src/plug/canvas-nest.min.js","hash":"c5e691f0f260dcc9c64dc349a54fb44cc49209f7","modified":1499699066421},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1497361043067},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1497361043070},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1497361043068},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1497361043072},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1497361043107},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1497361043094},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1497361043118},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1497361043129},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1497361043085},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1497361043120},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1497361043142},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1497361043140},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1497361043274},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1497361043260},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1497361043074},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1497361043185},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1497361043160},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1497361042797},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1497361042798},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1497361042799},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1497361042800},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1497361042802},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1497361042804},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1497361042818},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1497361042819},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1497361042820},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1497361042820},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1497361042801},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"7894c355d323b25337f7ccc441be6cfe434fe523","modified":1497361042815},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1497361042826},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1497361042816},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1497361042828},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1497361042829},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1497361042830},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1497361042831},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1497361042822},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1497361042832},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1497361042833},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1497361042834},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1497361042825},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1497361042827},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1497361042837},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1497361042836},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1497361042838},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1497361042839},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1497361042840},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1497361042842},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1497361042832},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1497361042843},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1497361042850},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"681b7c8ce4dc47130a0ca67c1ec62be7c96e4c4f","modified":1497361042835},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1497361042851},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1497361042853},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1497361042841},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1497361042843},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1497361042856},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1497361042852},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1497361042847},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1497361042847},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1497361042848},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1497361042879},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1497361042877},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1497361043203},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1497361042885},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1497361042854},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1497361042846},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1497361043076},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1497361043078},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1497361043079},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1497361043082},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1497361043081},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1497361043084},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1497361043151},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1497361043182},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1497361043285},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1497361043177},{"_id":"public/atom.xml","hash":"294f8aa11ced44f1e78c8e4a707efffb979d8bfb","modified":1567265180248},{"_id":"public/search.xml","hash":"df98d033079b2273762db797271e8daa00b98574","modified":1567265180381},{"_id":"public/archives/index.html","hash":"1bd17d7804ef00f3642f2ab39da0488a91ad4702","modified":1567265181010},{"_id":"public/categories/index.html","hash":"cd554f1e491851bfa1388733091700795064ad39","modified":1567265181012},{"_id":"public/tags/index.html","hash":"4bbe2ea69112e050eb3b0018f1870ecafa9a18d9","modified":1567265181012},{"_id":"public/2019/08/15/前端单元测试/index.html","hash":"c36fcaf094431075d61f07c7a48f1128b8a1961d","modified":1567265181012},{"_id":"public/2019/07/20/【VueSSR系列二】clientManifest与bundle的处理流程解读/index.html","hash":"2974cda923d02843d6160ffd2f6df7a3fbc0570b","modified":1567265181013},{"_id":"public/2019/06/13/【VueSSR系列一】构建流程源码解读/index.html","hash":"c3d079b18767a4e1b64faeb747f4d13a44d6ed67","modified":1567265181013},{"_id":"public/2019/03/21/关于高效找工作的几条建议/index.html","hash":"b7e4935db024cba6776b239fc1549b379686b4cd","modified":1567265181013},{"_id":"public/2018/10/07/前端编码规范/index.html","hash":"22f298b61b6667a8df4a469fb02668d46c8b2ea7","modified":1567265181013},{"_id":"public/2018/08/19/腾讯外包面试经历总结/index.html","hash":"d85d5d57f3401895eac7431fda4068c73b3b9615","modified":1567265181014},{"_id":"public/2018/08/08/使用javascript实现常见的排序算法/index.html","hash":"789553e8b651b928a5e33afb7b95e6d1a158f521","modified":1567265181014},{"_id":"public/2018/04/20/《代码整洁之道》读书笔记/index.html","hash":"fff8d5756726f445f110044474c8a4ce664deb46","modified":1567265181015},{"_id":"public/2018/04/15/踏平windows下安装fabric遇到的坑s/index.html","hash":"18820788024092ba1b8e6e96c85001bdc291aa76","modified":1567265181015},{"_id":"public/2018/04/09/source map小知识/index.html","hash":"8188785fc655afd014c183c1938fb2adc739453c","modified":1567265181016},{"_id":"public/2018/04/08/webpack引入eslint/index.html","hash":"b755decee81bb5b3517684128ed8dc1fc41dd1cb","modified":1567265181016},{"_id":"public/2018/04/02/聊聊git的分支和rebase命令/index.html","hash":"345aa47c23789a2da0889ac6cd0b1a12e8d9ab3d","modified":1567265181017},{"_id":"public/2017/10/19/js面向对象编程之继承/index.html","hash":"985ccf960a7966994c6b372c4370934cd1b0b2c7","modified":1567265181018},{"_id":"public/2017/10/15/MVVM框架双向数据绑定的实现原理/index.html","hash":"da0784255096aa1e1b6ce86592ab1926c0dccc7c","modified":1567265181018},{"_id":"public/2017/08/20/mongoDB常用知识整理/index.html","hash":"1424cf8494ad9ba3835a33f819d8e8e04cf1e7d5","modified":1567265181020},{"_id":"public/2017/06/25/音乐播放器WebApp/index.html","hash":"de8bbbd000b5e371fe95c1f34a08475985da75a3","modified":1567265181021},{"_id":"public/2017/06/21/JS之cookie/index.html","hash":"b057a20bca957c3566fce574287e558410aee9e5","modified":1567265181022},{"_id":"public/2017/06/21/调用定时器的正确姿势/index.html","hash":"cf5d7ad093d273ea1d6685d1bd32d958df1f3f8a","modified":1567265181023},{"_id":"public/2017/06/20/js控制运动框架animation/index.html","hash":"feb4360ad8d3e9af7171aec9cf31b340c0e8b464","modified":1567265181023},{"_id":"public/2017/06/18/自定义的checkbox,radio样式/index.html","hash":"aac174dc409d85fb14ddd99637d5fe87aa8838c1","modified":1567265181024},{"_id":"public/2017/06/18/CSS3实现3D轮播图/index.html","hash":"adfb9c909cc21440af10faa119cbc741f7df5274","modified":1567265181025},{"_id":"public/2017/06/18/CSS3饼状loading效果/index.html","hash":"7a2c47a13d5435690f8c41a0e72b045f9939883e","modified":1567265181026},{"_id":"public/2017/06/18/有趣的鼠标悬浮效果/index.html","hash":"67f2c150e68a369b6f76c954ce1015176867cc79","modified":1567265181026},{"_id":"public/2017/06/13/基于Express4.0开发web/index.html","hash":"3b43f0d32f7c94a27722d39966594e6c4cfd3b6c","modified":1567265181027},{"_id":"public/2017/06/13/node开发公众号踩过的坑/index.html","hash":"269ca689ace6f69c6200beed6efd6aa54af43074","modified":1567265181028},{"_id":"public/2017/06/13/web离线应用/index.html","hash":"e369adfea36dfe0c9d24f43f0a291c08270e2be1","modified":1567265181029},{"_id":"public/2017/06/13/node开发微信公众号/index.html","hash":"dcbcbd7e4e8b3e50ef7eb7daad8df924c382be95","modified":1567265181029},{"_id":"public/2016/10/18/js系列之BOM基础/index.html","hash":"c5cb4d2cb8b7d0ffbdb22aed729b374bcd4aa3a2","modified":1567265181030},{"_id":"public/2016/05/19/JS之事件详情（1）/index.html","hash":"e1daddaa9cbf02579d3ac57bc91531c83275a725","modified":1567265181031},{"_id":"public/2016/05/19/JS之事件详解（2）/index.html","hash":"b2cb2a0ea90d992241c9f8c7bd411a5b10895ac4","modified":1567265181031},{"_id":"public/2016/05/19/JS之默认行为/index.html","hash":"457c7839a182e37b659f7e0469c7176d20c71682","modified":1567265181031},{"_id":"public/2016/05/10/github使用心得/index.html","hash":"75849b290c94938dbf9d6153b3a1ca536b97f01e","modified":1567265181032},{"_id":"public/2016/04/23/js系列之DOM基础/index.html","hash":"6403b94bb343ad3cc06f6426a300640f96085750","modified":1567265181034},{"_id":"public/archives/page/2/index.html","hash":"040816b1425eb988a439f8ac10e204e97ee19ac2","modified":1567265181036},{"_id":"public/archives/2016/index.html","hash":"dba147c89f24020e328f0d607ef9618dd2a96ba7","modified":1567265181037},{"_id":"public/archives/2016/04/index.html","hash":"ce961f8581f772c93b06b0d4692554403512985d","modified":1567265181038},{"_id":"public/archives/2016/05/index.html","hash":"49fbad8c8b2b8410fd54cc268af68e64db784f23","modified":1567265181038},{"_id":"public/archives/2016/10/index.html","hash":"7100596f95ccf37f4b0c8ab262d105bdbf46ee2c","modified":1567265181038},{"_id":"public/archives/2017/index.html","hash":"844540c6222489abeecf6932d8585c292b06e9fd","modified":1567265181039},{"_id":"public/archives/2017/06/index.html","hash":"1a71575d93c6f6d619af32d0a10f1d0fd99e3627","modified":1567265181039},{"_id":"public/archives/2017/08/index.html","hash":"d7c33cdd946c05fe1b90cf35d43a18360d225eff","modified":1567265181039},{"_id":"public/archives/2017/10/index.html","hash":"5bbb7c7f3771b30ab9c5cbd95a72303b56fc1716","modified":1567265181040},{"_id":"public/archives/2018/index.html","hash":"519251f610b01b543349edd08004fce5bb95d35c","modified":1567265181040},{"_id":"public/archives/2018/04/index.html","hash":"5fb4ae188d15c403c894c676a1d5be93a3bc0c91","modified":1567265181040},{"_id":"public/archives/2018/08/index.html","hash":"92b186166c645f61a62d92a5052f05154dcd3770","modified":1567265181040},{"_id":"public/archives/2018/10/index.html","hash":"0bb8b6e68966d7d5412d33638b07bd4107c72065","modified":1567265181041},{"_id":"public/archives/2019/index.html","hash":"40e24b20965022f3098d503f2d6a405e85c54060","modified":1567265181041},{"_id":"public/archives/2019/03/index.html","hash":"920dc1cd6d8e9bd61b2e7c7957936d4240629531","modified":1567265181041},{"_id":"public/archives/2019/06/index.html","hash":"c4118a274f5c7c6e85d7f98d688c2c8c93baece6","modified":1567265181042},{"_id":"public/archives/2019/07/index.html","hash":"9298023eb4e7d80952cc3ac64529a237c55874d0","modified":1567265181043},{"_id":"public/archives/2019/08/index.html","hash":"c7a0f0173995305c1059a9caaa36f892c7cc0388","modified":1567265181045},{"_id":"public/categories/工具/index.html","hash":"832f07fa52f939ffd402aaf593219316100cbfb9","modified":1567265181046},{"_id":"public/categories/前端/index.html","hash":"17ccaf6d38ad47347b5a38b27528df3733c8b4a1","modified":1567265181047},{"_id":"public/categories/总结/index.html","hash":"cad59718531c3de8139aaeb6a7fbde070e1d4918","modified":1567265181048},{"_id":"public/categories/js/index.html","hash":"297354161df21227da03e95f4d407c3d7f86966e","modified":1567265181051},{"_id":"public/categories/前端框架/index.html","hash":"158919c5a41650dae153de345fec73b0ae824974","modified":1567265181053},{"_id":"public/index.html","hash":"4ee8e0c66b3fe76352ce2a191696c5f989bd6031","modified":1567265181053},{"_id":"public/page/2/index.html","hash":"8d6b9efe4e8545f70651b65c9add87fdea568a51","modified":1567265181055},{"_id":"public/page/3/index.html","hash":"402d863a787ca23d4a7c678fbdad92ec3e265992","modified":1567265181057},{"_id":"public/page/4/index.html","hash":"b3ddcfc7c227c68a4adbdfbc7db10625a7eacbea","modified":1567265181058},{"_id":"public/page/5/index.html","hash":"53d47a3e7762d26da559fd60800080de4fbfdea5","modified":1567265181059},{"_id":"public/page/6/index.html","hash":"bad869eaeddc9e69a589338f55cea571c8f2dbac","modified":1567265181060},{"_id":"public/page/7/index.html","hash":"668f6309e0644fa3c0eb82aee42908035823efcb","modified":1567265181061},{"_id":"public/tags/html5/index.html","hash":"9261e52d5ef26fc78aba149821970b1ca7d93bfb","modified":1567265181063},{"_id":"public/tags/css3/index.html","hash":"92dc4a654a1b31fb98b0912ce823a856ea57dda0","modified":1567265181063},{"_id":"public/tags/js/index.html","hash":"667e5bca2685fada3d64ad0249b48c2e2a94f6dd","modified":1567265181064},{"_id":"public/tags/编程/index.html","hash":"cf1789046ece9c6cb7b4f02d2a654c6301bb26e8","modified":1567265181065},{"_id":"public/tags/javacript/index.html","hash":"25e2fa8f3fbdd6123f9de44e6f505f47f2623b4d","modified":1567265181065},{"_id":"public/tags/github/index.html","hash":"386ed5bd9e5810546612a8676302c6a692e2d26f","modified":1567265181065},{"_id":"public/tags/基础/index.html","hash":"42dab854d91678a7200fa606ba669d2afa76b1dd","modified":1567265181071},{"_id":"public/tags/BOM/index.html","hash":"b88244ce4a61b25c94524e9d3aa4f0783ad5b684","modified":1567265181073},{"_id":"public/tags/mongoDB/index.html","hash":"79e12e31cb55cccaa7c5cda679f690c8ce621aa1","modified":1567265181074},{"_id":"public/tags/nodejs/index.html","hash":"f4888d9cfbdd513707e68fb9d6b46a93f87df8f4","modified":1567265181075},{"_id":"public/tags/bug/index.html","hash":"cd3c1066fdfe6e1f88830e579f18fc0d372884ea","modified":1567265181075},{"_id":"public/tags/css/index.html","hash":"ac88f7c703e6e179fc578009a22ab3b00494df2b","modified":1567265181076},{"_id":"public/tags/animation/index.html","hash":"5829c4451cb3d1a4478468cf7e2b2fec9d8b93a0","modified":1567265181076},{"_id":"public/tags/webpack/index.html","hash":"7abcaa251f3d437d1dfb56034cc3428eb2d4a483","modified":1567265181077},{"_id":"public/tags/sourceMap/index.html","hash":"be9489958ba88e4028ba037406f59379c36867de","modified":1567265181077},{"_id":"public/tags/eslint/index.html","hash":"32bf144de757412476620680af854886a2c25f01","modified":1567265181078},{"_id":"public/tags/vue/index.html","hash":"7533ace08ee1a05b10e06e032089976534af7e7c","modified":1567265181079},{"_id":"public/tags/测试/index.html","hash":"267c2b6ec9b739468f6d9cb2c30429eaf91aec66","modified":1567265181079},{"_id":"public/tags/继承/index.html","hash":"756ad59a4a4ba687ec5607a66ba18ba28fae1df7","modified":1567265181079},{"_id":"public/tags/git/index.html","hash":"1965bb2627dbf65a68a0aa6270081b7a88debc6b","modified":1567265181080},{"_id":"public/tags/fabric/index.html","hash":"c925e908ff9ffd6e84695634b402676076201ea3","modified":1567265181081},{"_id":"public/tags/MVVM/index.html","hash":"1deef9f06a60ea2172f3aa4abb3fa5e556a026ed","modified":1567265181084},{"_id":"public/tags/DOM/index.html","hash":"b4c385ee6aa8121837d0bea680d79626a5d98a14","modified":1567265181085},{"_id":"public/tags/算法/index.html","hash":"a40a034de92c0be242b1440499e826eb6408baba","modified":1567265181089},{"_id":"public/tags/express/index.html","hash":"07138349c8646049e5fda49d1ae5e7e1c874300a","modified":1567265181091},{"_id":"public/tags/grunt/index.html","hash":"e3b032457576222c48745d2de8308008280e9baa","modified":1567265181093},{"_id":"public/tags/router/index.html","hash":"02dee0475479cf6cf301c2c4775ecf06b78c8a89","modified":1567265181093},{"_id":"public/tags/MVC/index.html","hash":"9c9c0ffdfa9d674b5996393641ca47217e03df52","modified":1567265181094},{"_id":"public/tags/jade/index.html","hash":"fc4a174ae268cf8267fc3200cfcfee31d4c64a53","modified":1567265181095},{"_id":"public/tags/ApplicationCache/index.html","hash":"8be08db4d54d2b831769e503564f96f45d779ba6","modified":1567265181095},{"_id":"public/tags/localStorage/index.html","hash":"e61eb266656c931c0afb2dd0697b5f20401e87eb","modified":1567265181096},{"_id":"public/tags/webSQL/index.html","hash":"398d90001e95f667ab4dfc5d96e0a934b3a95f58","modified":1567265181097},{"_id":"public/tags/闭包/index.html","hash":"6e9745d4a5cf16662a3d39bad59bc7b4c0340737","modified":1567265181097},{"_id":"public/tags/layout/index.html","hash":"2831732c654235ccc5776da117a785d80fda0447","modified":1567265181097},{"_id":"public/tags/clear/index.html","hash":"03794d3bc6fa6810d7b5099a584b71c0aafa60cd","modified":1567265181097},{"_id":"public/tags/audio/index.html","hash":"2b8da26bedf5fad4095bf5ac73d1f7869137f64a","modified":1567265181098},{"_id":"public/tags/进度条/index.html","hash":"cd66eb0f503436e324c99dd834a6a45c1f332241","modified":1567265181098},{"_id":"public/tags/播放按钮/index.html","hash":"e7f60e9fcbc0df71db9d56cff7ad681938494532","modified":1567265181099},{"_id":"public/tags/QQ音乐API/index.html","hash":"f96ceab37825a89fc5f4fc91758d6a07dc914ba1","modified":1567265181103},{"_id":"public/tags/微信公众号/index.html","hash":"3b2a5ff4e716e09dcaf5d2fed4a78e215cf91a5a","modified":1567265181105},{"_id":"public/tags/总结/index.html","hash":"c5047f48cb7756f8691f03749e650ddac6a2f869","modified":1567265181238},{"_id":"public/tags/规范/index.html","hash":"9b12acce5df1a0230edc7fc6e1dc0554010e3861","modified":1567265181238},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1567265181271},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1567265181271},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1567265181272},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1567265181272},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1567265181273},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1567265181273},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1567265181274},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1567265181274},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1567265181274},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1567265181275},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1567265181275},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1567265181275},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1567265181275},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1567265181276},{"_id":"public/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1567265181276},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1567265181276},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1567265181276},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1567265181276},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1567265181276},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1567265181277},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1567265181277},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1567265181277},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1567265181278},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1567265181278},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1567265186703},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1567265186711},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1567265186713},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1567265186988},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1567265186988},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1567265186990},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1567265186990},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1567265186990},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1567265186991},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1567265186991},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1567265186991},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1567265186991},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1567265186991},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1567265186992},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1567265186992},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1567265186992},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1567265186992},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1567265186994},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1567265186994},{"_id":"public/js/src/plug/canvas-nest.min.js","hash":"d2c20f2def44014d7ef13b7c08f6f6ea480cac8c","modified":1567265186995},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1567265186995},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1567265186996},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1567265186997},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1567265186997},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1567265186997},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1567265186998},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1567265186998},{"_id":"public/css/main.css","hash":"177719daacf3e92a7bccc3b30a39497462f8e752","modified":1567265187002},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1567265187003},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1567265187049},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1567265187050},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1567265187051},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1567265187052},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1567265187120},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1567265187133},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1567265187134},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1567265187205},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1567265187205},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1567265187205},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1567265187222},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1567265187236},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1567265187252},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1567265187266}],"Category":[{"name":"工具","_id":"cjzzp7fa5000pw8qzotsdhu24"},{"name":"前端","_id":"cjzzp7fbs0011w8qzct4thxnl"},{"name":"总结","_id":"cjzzp7fd5001ew8qzwrvfmzx7"},{"name":"js","_id":"cjzzp7ff7001zw8qzz7rty6dn"},{"name":"前端框架","_id":"cjzzp7fqr003gw8qztngumtsh"}],"Data":[],"Page":[{"title":"archives","date":"2017-06-13T09:01:56.000Z","type":"archives","comments":0,"_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2017-06-13 17:01:56\ntype: \"archives\"\ncomments: false\n---\n","updated":"2017-06-13T13:37:22.624Z","path":"archives/index.html","layout":"page","_id":"cjzzp7f6j0001w8qzwhuy8rio","content":"","excerpt":"","more":""},{"title":"categories","date":"2017-10-15T05:52:41.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-10-15 13:52:41\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-10-15T05:59:23.716Z","path":"categories/index.html","layout":"page","_id":"cjzzp7f6r0003w8qzp68p9hld","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-06-13T08:54:19.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-06-13 16:54:19\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-06-13T13:37:22.625Z","path":"tags/index.html","layout":"page","_id":"cjzzp7f7b0006w8qzo1zoar0z","content":"","excerpt":"","more":""}],"Post":[{"title":"CSS3实现3D轮播图","date":"2017-06-18T14:18:00.775Z","_content":"\n### CSS3 3D旋转图片轮播\n\n想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。\n\n#### 变形transform\n旋转：transform : rotateX()/rotateY()/rotateZ()\n这个项目很明显是用rotateY(angle)\n\n#### 关键的perspective属性\n这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：\n1.写在舞台元素上，也就是动画元素的父元素上\n```\n.stage{\n\t\tperspective: 800px;\n}\n```\n2.写在动画元素上，写在transform属性里\n```\n.stage .box{\n\t\ttransform:perspective(800px) rotate(60deg);\n}\n```\n视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。\n其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。\n\n#### 定义视角位置\n```\n.stage{\n\t\tperspective: 800px;\n\t\tperspective-origin:25% 250px;\n}\n```\n\n#### 拉开与中心的距离\n当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ\n```\n.stage .box{\n\t\ttransform: rotate(60deg) translateZ(500px); \n}\n```\n\n#### js控制transform属性\n```\naImg[i].style.webkitTransform = \"rotateY(\"+ ( - (count*60 - i*60) )+  \"deg) translateZ(\" + 483+\"px)\";\n```\n需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。\n\n[参考](http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\n\n","source":"_posts/CSS3实现3D轮播图.md","raw":"---\ntitle: CSS3实现3D轮播图\ndate: \ntags: [html5,css3]\n---\n\n### CSS3 3D旋转图片轮播\n\n想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。\n\n#### 变形transform\n旋转：transform : rotateX()/rotateY()/rotateZ()\n这个项目很明显是用rotateY(angle)\n\n#### 关键的perspective属性\n这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：\n1.写在舞台元素上，也就是动画元素的父元素上\n```\n.stage{\n\t\tperspective: 800px;\n}\n```\n2.写在动画元素上，写在transform属性里\n```\n.stage .box{\n\t\ttransform:perspective(800px) rotate(60deg);\n}\n```\n视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。\n其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。\n\n#### 定义视角位置\n```\n.stage{\n\t\tperspective: 800px;\n\t\tperspective-origin:25% 250px;\n}\n```\n\n#### 拉开与中心的距离\n当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ\n```\n.stage .box{\n\t\ttransform: rotate(60deg) translateZ(500px); \n}\n```\n\n#### js控制transform属性\n```\naImg[i].style.webkitTransform = \"rotateY(\"+ ( - (count*60 - i*60) )+  \"deg) translateZ(\" + 483+\"px)\";\n```\n需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。\n\n[参考](http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\n\n","slug":"CSS3实现3D轮播图","published":1,"updated":"2017-06-18T14:26:19.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f5h0000w8qzi8x2hwyw","content":"<h3 id=\"CSS3-3D旋转图片轮播\"><a href=\"#CSS3-3D旋转图片轮播\" class=\"headerlink\" title=\"CSS3 3D旋转图片轮播\"></a>CSS3 3D旋转图片轮播</h3><p>想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。</p>\n<h4 id=\"变形transform\"><a href=\"#变形transform\" class=\"headerlink\" title=\"变形transform\"></a>变形transform</h4><p>旋转：transform : rotateX()/rotateY()/rotateZ()<br>这个项目很明显是用rotateY(angle)</p>\n<h4 id=\"关键的perspective属性\"><a href=\"#关键的perspective属性\" class=\"headerlink\" title=\"关键的perspective属性\"></a>关键的perspective属性</h4><p>这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：<br>1.写在舞台元素上，也就是动画元素的父元素上<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.写在动画元素上，写在transform属性里<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>:<span class=\"built_in\">perspective</span>(800px) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。<br>其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。</p>\n<h4 id=\"定义视角位置\"><a href=\"#定义视角位置\" class=\"headerlink\" title=\"定义视角位置\"></a>定义视角位置</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective-origin</span>:<span class=\"number\">25%</span> <span class=\"number\">250px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉开与中心的距离\"><a href=\"#拉开与中心的距离\" class=\"headerlink\" title=\"拉开与中心的距离\"></a>拉开与中心的距离</h4><p>当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(60deg) <span class=\"built_in\">translateZ</span>(500px); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"js控制transform属性\"><a href=\"#js控制transform属性\" class=\"headerlink\" title=\"js控制transform属性\"></a>js控制transform属性</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aImg[i].style.webkitTransform = <span class=\"string\">\"rotateY(\"</span>+ ( - (<span class=\"built_in\">count</span>*<span class=\"number\">60</span> - i*<span class=\"number\">60</span>) )+  <span class=\"string\">\"deg) translateZ(\"</span> + <span class=\"number\">483</span>+<span class=\"string\">\"px)\"</span><span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。</p>\n<p>[参考](<a href=\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\" target=\"_blank\" rel=\"external\">http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）</a></p>\n","excerpt":"","more":"<h3 id=\"CSS3-3D旋转图片轮播\"><a href=\"#CSS3-3D旋转图片轮播\" class=\"headerlink\" title=\"CSS3 3D旋转图片轮播\"></a>CSS3 3D旋转图片轮播</h3><p>想学好3D变换，必须先理解表示空间方向的XYZ轴，这个其实很容易理解，毕竟高中做了辣么多的函数方程题，要注意的是Z轴，向着自己的方向就是Z的方向。</p>\n<h4 id=\"变形transform\"><a href=\"#变形transform\" class=\"headerlink\" title=\"变形transform\"></a>变形transform</h4><p>旋转：transform : rotateX()/rotateY()/rotateZ()<br>这个项目很明显是用rotateY(angle)</p>\n<h4 id=\"关键的perspective属性\"><a href=\"#关键的perspective属性\" class=\"headerlink\" title=\"关键的perspective属性\"></a>关键的perspective属性</h4><p>这个单词的意思是视角，故名思义，就是眼睛的位置，有两种写法：<br>1.写在舞台元素上，也就是动画元素的父元素上<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.写在动画元素上，写在transform属性里<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>:<span class=\"built_in\">perspective</span>(800px) <span class=\"built_in\">rotate</span>(60deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>视角的位置不一样，看到的景物也是有区别的，换个角度思考也是这个说法。<br>其实上面的两种写法是有区别的，前者视角在舞台的中心，后者则是在动画元素的中心。</p>\n<h4 id=\"定义视角位置\"><a href=\"#定义视角位置\" class=\"headerlink\" title=\"定义视角位置\"></a>定义视角位置</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">\t\t<span class=\"attribute\">perspective-origin</span>:<span class=\"number\">25%</span> <span class=\"number\">250px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉开与中心的距离\"><a href=\"#拉开与中心的距离\" class=\"headerlink\" title=\"拉开与中心的距离\"></a>拉开与中心的距离</h4><p>当所有图片都以同一个旋转中心旋转后，其实是没有立体感的，这时候就需要用到这个属性translateZ<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stage</span> <span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(60deg) <span class=\"built_in\">translateZ</span>(500px); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"js控制transform属性\"><a href=\"#js控制transform属性\" class=\"headerlink\" title=\"js控制transform属性\"></a>js控制transform属性</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aImg[i].style.webkitTransform = <span class=\"string\">\"rotateY(\"</span>+ ( - (<span class=\"built_in\">count</span>*<span class=\"number\">60</span> - i*<span class=\"number\">60</span>) )+  <span class=\"string\">\"deg) translateZ(\"</span> + <span class=\"number\">483</span>+<span class=\"string\">\"px)\"</span><span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p>需要注意的是，aImg[i].style.webkitTransform只能用来设置css的transform属性，并不能用alert打印出来。同offsetLeft也left一样。</p>\n<p>[参考](<a href=\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）\">http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/）</a></p>\n"},{"title":"JS之cookie.md","date":"2017-06-21T15:23:55.706Z","_content":"\n### cookie\n\n页面用来保存信息，比如保存用户名，自动登陆\n\n#### cookie的特性\n* 同个网站中所有页面公享一套cookie\n* 数量，大小有限\n* 过期时间，可用js来控制。给expries赋值设置时间\n* cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少\n\n#### js中使用cookie\n* document.cookie\n\n#### cookie的操作\n> 设置cookie\n  * 格式：名字 = 值\n  * 不会覆盖，等号是添加的意思\n  *过期事件：expries = 时间\n\n#### 练习代码\n* 设置cookie\n```javascript\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\n```\n* 读取cookie\n```javascript\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\n\n```\n*主要是将字符串分割split*  \n*注意： var arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素*\n* 删除cookie\n```javascript\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n```\n*将时间设置为过期时间* \n\n#### cookie的使用\n* 记录div的位置\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n}\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\nfunction removeCookie(name)\n{\tsetCookie(name,'1',-1);\n}\n\n\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\tvar x = getcookie('x');\n\t\t\tvar y = getcookie('y');\n\t\t\tif(x)\n\t\t\t{\n\t\t\t\toDiv.style.left =x+ 'px';\n\t\t\t\toDiv.style.top = y+ 'px';\t\n\t\t\t}\n\n\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY- oDiv.offsetTop;\n\n\t\t\t\tdocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\n\t\t\t\t\tsetCookie('x',oDiv.offsetLeft, 30);\n\t\t\t\t\tsetCookie('y',oDiv.offsetTop,30);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n*在onload下定好div位置，在ondown下记录*\n\n* 记录用户名\n```javascript \n<script>\n\tfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = new Array();\n\tvar arr = document.cookie.split(';');\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] ==name) {\n\t\t\treturn arr2[1];\n\t\t};\n\n\t}\n\treturn '';\n}\n\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n\nwindow.onload = function()\n{\n\tvar form = document.getElementById('form1');\n\tvar oUser = document.getElementsByName('user')[0];\n\tvar a = document.getElementsByTagName('a')[0];\n\n\tform.onsubmit = function()\n\t{\n\t\tsetCookie('user',oUser.value,2);\n\t}\n\n\ta.onclick = function ()\n\t{\n\t\tremoveCookie('user');\n\t\toUser.value = '';\n\t}\n}\n</script>\n</head>\n<body>\n\t<form id=\"form1\" action=\"www.baidu.com\">\n\t\t用户名：<input type=\"text\" name=\"user\">\n\t\t密码：<input type=\"password\">\n\t\t<input type=\"submit\" value=\"登陆\">\n\t\t<a href=\"javascript:;\">清除记录</a>\n\t</form>\n</body>\n\n\n```\n\n","source":"_posts/JS之cookie.md","raw":"---\ntitle: JS之cookie.md\ndate: \ntags: [js]\n---\n\n### cookie\n\n页面用来保存信息，比如保存用户名，自动登陆\n\n#### cookie的特性\n* 同个网站中所有页面公享一套cookie\n* 数量，大小有限\n* 过期时间，可用js来控制。给expries赋值设置时间\n* cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少\n\n#### js中使用cookie\n* document.cookie\n\n#### cookie的操作\n> 设置cookie\n  * 格式：名字 = 值\n  * 不会覆盖，等号是添加的意思\n  *过期事件：expries = 时间\n\n#### 练习代码\n* 设置cookie\n```javascript\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\n```\n* 读取cookie\n```javascript\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\n\n```\n*主要是将字符串分割split*  \n*注意： var arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素*\n* 删除cookie\n```javascript\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n```\n*将时间设置为过期时间* \n\n#### cookie的使用\n* 记录div的位置\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\nfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n}\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] == name) {\n\t\t\treturn arr2[1];\n\t\t}\n\t\n\t}\n\treturn '';\n}\nfunction removeCookie(name)\n{\tsetCookie(name,'1',-1);\n}\n\n\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\tvar x = getcookie('x');\n\t\t\tvar y = getcookie('y');\n\t\t\tif(x)\n\t\t\t{\n\t\t\t\toDiv.style.left =x+ 'px';\n\t\t\t\toDiv.style.top = y+ 'px';\t\n\t\t\t}\n\n\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY- oDiv.offsetTop;\n\n\t\t\t\tdocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\n\t\t\t\t\tsetCookie('x',oDiv.offsetLeft, 30);\n\t\t\t\t\tsetCookie('y',oDiv.offsetTop,30);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n*在onload下定好div位置，在ondown下记录*\n\n* 记录用户名\n```javascript \n<script>\n\tfunction setCookie(name ,value, iDay)\n{\n\tvar oDate = new Date();\n\toDate.setDate(oDate.getDate() + iDay);\n\n\tdocument.cookie = name +'='+value+';expires='+oDate;\n\n}\n\t/*document.cookie = \"user = Leo;expires=\" +oDate ;\n\tdocument.cookie = \"pass = 123\";*/\n\nfunction getcookie(name)\n{\n\t//username=laotuzhu; passwork=123456789; user=Leo;...\n\tvar arr = new Array();\n\tvar arr = document.cookie.split(';');\n\t//arr->['username=laotuzhu','passwork=123456789','user=Leo',..]\n\tvar i = 0;\n\n\tfor(i= 0; i<arr.length; i++)\n\t{\n\t\tvar arr2 = arr[i].split('=');\n\t\t// arr2->['username','laotuzhu', ...]\n\t\tif (arr2[0] ==name) {\n\t\t\treturn arr2[1];\n\t\t};\n\n\t}\n\treturn '';\n}\n\nfunction removeCookie(name)\n{\n\tsetCookie(name,'1',-1);\n}\n\nwindow.onload = function()\n{\n\tvar form = document.getElementById('form1');\n\tvar oUser = document.getElementsByName('user')[0];\n\tvar a = document.getElementsByTagName('a')[0];\n\n\tform.onsubmit = function()\n\t{\n\t\tsetCookie('user',oUser.value,2);\n\t}\n\n\ta.onclick = function ()\n\t{\n\t\tremoveCookie('user');\n\t\toUser.value = '';\n\t}\n}\n</script>\n</head>\n<body>\n\t<form id=\"form1\" action=\"www.baidu.com\">\n\t\t用户名：<input type=\"text\" name=\"user\">\n\t\t密码：<input type=\"password\">\n\t\t<input type=\"submit\" value=\"登陆\">\n\t\t<a href=\"javascript:;\">清除记录</a>\n\t</form>\n</body>\n\n\n```\n\n","slug":"JS之cookie","published":1,"updated":"2017-06-21T15:26:45.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f6n0002w8qzcfpll5hr","content":"<h3 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h3><p>页面用来保存信息，比如保存用户名，自动登陆</p>\n<h4 id=\"cookie的特性\"><a href=\"#cookie的特性\" class=\"headerlink\" title=\"cookie的特性\"></a>cookie的特性</h4><ul>\n<li>同个网站中所有页面公享一套cookie</li>\n<li>数量，大小有限</li>\n<li>过期时间，可用js来控制。给expries赋值设置时间</li>\n<li>cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少</li>\n</ul>\n<h4 id=\"js中使用cookie\"><a href=\"#js中使用cookie\" class=\"headerlink\" title=\"js中使用cookie\"></a>js中使用cookie</h4><ul>\n<li>document.cookie</li>\n</ul>\n<h4 id=\"cookie的操作\"><a href=\"#cookie的操作\" class=\"headerlink\" title=\"cookie的操作\"></a>cookie的操作</h4><blockquote>\n<p>设置cookie</p>\n<ul>\n<li>格式：名字 = 值</li>\n<li>不会覆盖，等号是添加的意思<br>*过期事件：expries = 时间</li>\n</ul>\n</blockquote>\n<h4 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h4><ul>\n<li><p>设置cookie</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">\toDate.setDate(oDate.getDate() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.cookie = name +<span class=\"string\">'='</span>+value+<span class=\"string\">';expires='</span>+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/*document.cookie = \"user = Leo;expires=\" +oDate ;</span><br><span class=\"line\">\tdocument.cookie = \"pass = 123\";*/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>读取cookie</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getcookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"built_in\">document</span>.cookie.split(<span class=\"string\">'; '</span>); <span class=\"comment\">//千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span></span><br><span class=\"line\">\t<span class=\"comment\">//arr-&gt;['username=laotuzhu','passwork=123456789','user=Leo',..]</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.length; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].split(<span class=\"string\">'='</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;['username','laotuzhu', ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] == name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><em>主要是将字符串分割split</em><br><em>注意： var arr = document.cookie.split(‘; ‘); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</em></p>\n<ul>\n<li>删除cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\tsetCookie(name,<span class=\"string\">'1'</span>,<span class=\"number\">-1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><em>将时间设置为过期时间</em> </p>\n<h4 id=\"cookie的使用\"><a href=\"#cookie的使用\" class=\"headerlink\" title=\"cookie的使用\"></a>cookie的使用</h4><ul>\n<li>记录div的位置<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: red;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">function setCookie(name ,value, iDay)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar oDate = new Date();</span><br><span class=\"line\"></span><br><span class=\"line\">\toDate.setDate(oDate.getDate() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdocument.cookie = name +'='+value+';expires='+oDate;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getcookie(name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//username=laotuzhu; passwork=123456789; user=Leo;...</span><br><span class=\"line\">\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span><br><span class=\"line\">\t//arr-&gt;['username=laotuzhu','passwork=123456789','user=Leo',..]</span><br><span class=\"line\">\tvar i = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor(i= 0; i&lt;arr.length; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tvar arr2 = arr[i].split('=');</span><br><span class=\"line\">\t\t// arr2-&gt;['username','laotuzhu', ...]</span><br><span class=\"line\">\t\tif (arr2[0] == name) &#123;</span><br><span class=\"line\">\t\t\treturn arr2[1];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn '';</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function removeCookie(name)</span><br><span class=\"line\">&#123;\tsetCookie(name,'1',-1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\twindow.onload =function()&#123;</span><br><span class=\"line\">\t\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\t\tvar disX =0;</span><br><span class=\"line\">\t\t\tvar disY =0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tvar x = getcookie('x');</span><br><span class=\"line\">\t\t\tvar y = getcookie('y');</span><br><span class=\"line\">\t\t\tif(x)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.left =x+ 'px';</span><br><span class=\"line\">\t\t\t\toDiv.style.top = y+ 'px';\t</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.onmousedown = function(ev)&#123;</span><br><span class=\"line\">\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;</span><br><span class=\"line\">\t\t\t\tdisY = oEvent.clientY- oDiv.offsetTop;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdocument.onmousemove=function(ev)&#123;</span><br><span class=\"line\">\t\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tvar l = oEvent.clientX-disX;</span><br><span class=\"line\">\t\t\t\t\tvar t = oEvent.clientY-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tif (l&lt;0) &#123;  //限制div移出可视区</span><br><span class=\"line\">\t\t\t\t\t\tl=0;</span><br><span class=\"line\">\t\t\t\t\t&#125;else if(l&gt;document.documentElement.clientWidth- oDiv.offsetWidth)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\tif (t&lt;0) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = 0;</span><br><span class=\"line\">\t\t\t\t\t&#125;else if(t&gt;document.documentElement.clientHeight- oDiv.offsetHeight)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = l+'px';</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = t+'px';</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdocument.onmouseup = function()&#123;</span><br><span class=\"line\">\t\t\t\t\tdocument.onmousemove = null;</span><br><span class=\"line\">\t\t\t\t\tdocument.onmouseup = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tsetCookie('x',oDiv.offsetLeft, 30);</span><br><span class=\"line\">\t\t\t\t\tsetCookie('y',oDiv.offsetTop,30);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><em>在onload下定好div位置，在ondown下记录</em></p>\n<ul>\n<li>记录用户名<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\tfunction setCookie(name ,value, iDay)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar oDate = new Date();</span><br><span class=\"line\">\toDate.setDate(oDate.getDate() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdocument.cookie = name +'='+value+';expires='+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t/*document.cookie = \"user = Leo;expires=\" +oDate ;</span><br><span class=\"line\">\tdocument.cookie = \"pass = 123\";*/</span><br><span class=\"line\"></span><br><span class=\"line\">function getcookie(name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//username=laotuzhu; passwork=123456789; user=Leo;...</span><br><span class=\"line\">\tvar arr = new Array();</span><br><span class=\"line\">\tvar arr = document.cookie.split(';');</span><br><span class=\"line\">\t//arr-&gt;['username=laotuzhu','passwork=123456789','user=Leo',..]</span><br><span class=\"line\">\tvar i = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor(i= 0; i&lt;arr.length; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tvar arr2 = arr[i].split('=');</span><br><span class=\"line\">\t\t// arr2-&gt;['username','laotuzhu', ...]</span><br><span class=\"line\">\t\tif (arr2[0] ==name) &#123;</span><br><span class=\"line\">\t\t\treturn arr2[1];</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn '';</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function removeCookie(name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tsetCookie(name,'1',-1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar form = document.getElementById('form1');</span><br><span class=\"line\">\tvar oUser = document.getElementsByName('user')[0];</span><br><span class=\"line\">\tvar a = document.getElementsByTagName('a')[0];</span><br><span class=\"line\"></span><br><span class=\"line\">\tform.onsubmit = function()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetCookie('user',oUser.value,2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ta.onclick = function ()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tremoveCookie('user');</span><br><span class=\"line\">\t\toUser.value = '';</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;form id=\"form1\" action=\"www.baidu.com\"&gt;</span><br><span class=\"line\">\t\t用户名：&lt;input type=\"text\" name=\"user\"&gt;</span><br><span class=\"line\">\t\t密码：&lt;input type=\"password\"&gt;</span><br><span class=\"line\">\t\t&lt;input type=\"submit\" value=\"登陆\"&gt;</span><br><span class=\"line\">\t\t&lt;a href=\"javascript:;\"&gt;清除记录&lt;/a&gt;</span><br><span class=\"line\">\t&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"cookie\"><a href=\"#cookie\" class=\"headerlink\" title=\"cookie\"></a>cookie</h3><p>页面用来保存信息，比如保存用户名，自动登陆</p>\n<h4 id=\"cookie的特性\"><a href=\"#cookie的特性\" class=\"headerlink\" title=\"cookie的特性\"></a>cookie的特性</h4><ul>\n<li>同个网站中所有页面公享一套cookie</li>\n<li>数量，大小有限</li>\n<li>过期时间，可用js来控制。给expries赋值设置时间</li>\n<li>cookie存在于客户端，据说只有在狐火上可以单独使用，或者说在火狐上运行的问题很少</li>\n</ul>\n<h4 id=\"js中使用cookie\"><a href=\"#js中使用cookie\" class=\"headerlink\" title=\"js中使用cookie\"></a>js中使用cookie</h4><ul>\n<li>document.cookie</li>\n</ul>\n<h4 id=\"cookie的操作\"><a href=\"#cookie的操作\" class=\"headerlink\" title=\"cookie的操作\"></a>cookie的操作</h4><blockquote>\n<p>设置cookie</p>\n<ul>\n<li>格式：名字 = 值</li>\n<li>不会覆盖，等号是添加的意思<br>*过期事件：expries = 时间</li>\n</ul>\n</blockquote>\n<h4 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h4><ul>\n<li><p>设置cookie</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setCookie</span>(<span class=\"params\">name ,value, iDay</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">\toDate.setDate(oDate.getDate() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.cookie = name +<span class=\"string\">'='</span>+value+<span class=\"string\">';expires='</span>+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"comment\">/*document.cookie = \"user = Leo;expires=\" +oDate ;</span><br><span class=\"line\">\tdocument.cookie = \"pass = 123\";*/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>读取cookie</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getcookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//username=laotuzhu; passwork=123456789; user=Leo;...</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> arr = <span class=\"built_in\">document</span>.cookie.split(<span class=\"string\">'; '</span>); <span class=\"comment\">//千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span></span><br><span class=\"line\">\t<span class=\"comment\">//arr-&gt;['username=laotuzhu','passwork=123456789','user=Leo',..]</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i= <span class=\"number\">0</span>; i&lt;arr.length; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> arr2 = arr[i].split(<span class=\"string\">'='</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// arr2-&gt;['username','laotuzhu', ...]</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr2[<span class=\"number\">0</span>] == name) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> arr2[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">''</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><em>主要是将字符串分割split</em><br><em>注意： var arr = document.cookie.split(‘; ‘); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</em></p>\n<ul>\n<li>删除cookie<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeCookie</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\tsetCookie(name,<span class=\"string\">'1'</span>,<span class=\"number\">-1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><em>将时间设置为过期时间</em> </p>\n<h4 id=\"cookie的使用\"><a href=\"#cookie的使用\" class=\"headerlink\" title=\"cookie的使用\"></a>cookie的使用</h4><ul>\n<li>记录div的位置<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: red;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">function setCookie(name ,value, iDay)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar oDate = new Date();</span><br><span class=\"line\"></span><br><span class=\"line\">\toDate.setDate(oDate.getDate() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdocument.cookie = name +'='+value+';expires='+oDate;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getcookie(name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//username=laotuzhu; passwork=123456789; user=Leo;...</span><br><span class=\"line\">\tvar arr = document.cookie.split('; '); //千万不能少空格，因为cookie中的元素是是以；和空格分开的，少了就只能get第一个元素</span><br><span class=\"line\">\t//arr-&gt;['username=laotuzhu','passwork=123456789','user=Leo',..]</span><br><span class=\"line\">\tvar i = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor(i= 0; i&lt;arr.length; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tvar arr2 = arr[i].split('=');</span><br><span class=\"line\">\t\t// arr2-&gt;['username','laotuzhu', ...]</span><br><span class=\"line\">\t\tif (arr2[0] == name) &#123;</span><br><span class=\"line\">\t\t\treturn arr2[1];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn '';</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">function removeCookie(name)</span><br><span class=\"line\">&#123;\tsetCookie(name,'1',-1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\twindow.onload =function()&#123;</span><br><span class=\"line\">\t\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\t\tvar disX =0;</span><br><span class=\"line\">\t\t\tvar disY =0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tvar x = getcookie('x');</span><br><span class=\"line\">\t\t\tvar y = getcookie('y');</span><br><span class=\"line\">\t\t\tif(x)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.left =x+ 'px';</span><br><span class=\"line\">\t\t\t\toDiv.style.top = y+ 'px';\t</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.onmousedown = function(ev)&#123;</span><br><span class=\"line\">\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;</span><br><span class=\"line\">\t\t\t\tdisY = oEvent.clientY- oDiv.offsetTop;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdocument.onmousemove=function(ev)&#123;</span><br><span class=\"line\">\t\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tvar l = oEvent.clientX-disX;</span><br><span class=\"line\">\t\t\t\t\tvar t = oEvent.clientY-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tif (l&lt;0) &#123;  //限制div移出可视区</span><br><span class=\"line\">\t\t\t\t\t\tl=0;</span><br><span class=\"line\">\t\t\t\t\t&#125;else if(l&gt;document.documentElement.clientWidth- oDiv.offsetWidth)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\tif (t&lt;0) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = 0;</span><br><span class=\"line\">\t\t\t\t\t&#125;else if(t&gt;document.documentElement.clientHeight- oDiv.offsetHeight)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = l+'px';</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = t+'px';</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdocument.onmouseup = function()&#123;</span><br><span class=\"line\">\t\t\t\t\tdocument.onmousemove = null;</span><br><span class=\"line\">\t\t\t\t\tdocument.onmouseup = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tsetCookie('x',oDiv.offsetLeft, 30);</span><br><span class=\"line\">\t\t\t\t\tsetCookie('y',oDiv.offsetTop,30);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><em>在onload下定好div位置，在ondown下记录</em></p>\n<ul>\n<li>记录用户名<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\tfunction setCookie(name ,value, iDay)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar oDate = new Date();</span><br><span class=\"line\">\toDate.setDate(oDate.getDate() + iDay);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdocument.cookie = name +'='+value+';expires='+oDate;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t/*document.cookie = \"user = Leo;expires=\" +oDate ;</span><br><span class=\"line\">\tdocument.cookie = \"pass = 123\";*/</span><br><span class=\"line\"></span><br><span class=\"line\">function getcookie(name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//username=laotuzhu; passwork=123456789; user=Leo;...</span><br><span class=\"line\">\tvar arr = new Array();</span><br><span class=\"line\">\tvar arr = document.cookie.split(';');</span><br><span class=\"line\">\t//arr-&gt;['username=laotuzhu','passwork=123456789','user=Leo',..]</span><br><span class=\"line\">\tvar i = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor(i= 0; i&lt;arr.length; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tvar arr2 = arr[i].split('=');</span><br><span class=\"line\">\t\t// arr2-&gt;['username','laotuzhu', ...]</span><br><span class=\"line\">\t\tif (arr2[0] ==name) &#123;</span><br><span class=\"line\">\t\t\treturn arr2[1];</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn '';</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function removeCookie(name)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tsetCookie(name,'1',-1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar form = document.getElementById('form1');</span><br><span class=\"line\">\tvar oUser = document.getElementsByName('user')[0];</span><br><span class=\"line\">\tvar a = document.getElementsByTagName('a')[0];</span><br><span class=\"line\"></span><br><span class=\"line\">\tform.onsubmit = function()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tsetCookie('user',oUser.value,2);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\ta.onclick = function ()</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tremoveCookie('user');</span><br><span class=\"line\">\t\toUser.value = '';</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;form id=\"form1\" action=\"www.baidu.com\"&gt;</span><br><span class=\"line\">\t\t用户名：&lt;input type=\"text\" name=\"user\"&gt;</span><br><span class=\"line\">\t\t密码：&lt;input type=\"password\"&gt;</span><br><span class=\"line\">\t\t&lt;input type=\"submit\" value=\"登陆\"&gt;</span><br><span class=\"line\">\t\t&lt;a href=\"javascript:;\"&gt;清除记录&lt;/a&gt;</span><br><span class=\"line\">\t&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"饼状loading效果","date":"2017-06-18T14:18:00.733Z","_content":"\n###   垂直和水平居中 \n\t\n水平居中是最简单的，在设置了大小的元素上加margin：0 auto\n关键是垂直居中\n使用定位position：absolution;  //脱离文档流\n\t    top: 50%;\t//这时顶部处于中央位置\n\t   margin-top: -(height/2) px;\n或者第三句可以使用位移：transfrom：translateY(-50%)\n\n另一种方法是使用flex布局\n在居中元素的父元素上：display：flex;\n\t\t\t       align-items:center; //垂直居中\n\t\t\t       justify: center;\t//水平居中\n可是flex布局存在兼容性问题  ，慎用！\n参考：http://www.cnblogs.com/yugege/p/5246652.html\n\n**让脱离了文档流的p标签垂直和水平居中**  \n```\n<nav class=\"mynav\">\n\t\t<div>\n\t\t\t<p><span></span><span></span><span></span></p>\n\t\t</div>\t\t\n\t</nav>\n\t\n<style>\n    .mynav{\n    \theight: 100px;\n    \twidth: 100%;\n    \tmargin-top: 70px;\t\n    }\n    .mynav div{\n    \theight: 100%;\n    \tposition: relative; //垂直\n    \ttext-align: center; //水平\n    }\n    .mynav p{\t\n    \twidth: 100%; //水平\n    \tposition: absolute; //垂直\n    \ttop: 50%;   //垂直\n    \tmargin-top: -12px;  //垂直\n    }\n    .mynav p span{\n    \tdisplay: inline-block;\n    \twidth: 24px;\n    \theight: 24px;\n    \tborder-radius: 50%;\n    \t-webkit-border-radius: 50%;\n    \tbackground-color: #000;\n    \tmargin-right: 20px;\n    \n    }\n</style>\n```\n\n### 思路\n\n[查看效果](https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif)\n\n这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。\n首先如何画圆呢？\n一般是在一个正方形的div上设置border-radius=圆的半径\n可是现在是用另外的方法，用border来画圆\n```\nwidth:0;\nheight:0;\nborder:50px solid #000;\nborder-radius:50px;\n```\n可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。\n中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent\n\n一个红色和粉红色的底圆：\n```\nwidth: 0;\nheight: 0;\nborder-radius: 50px;\nborder:50px solid;\nborder-top-color: rgb(251,139,189);\nborder-left-color: rgb(255,41,140);\nborder-right-color: rgb(251,139,189);\nborder-bottom-color: rgb(255,41,140);\n```\n\n一个红半圆：\n```\nwidth: 0;\n height: 0;\nborder-radius: 50px;\nborder: solid rgb(251,139,189) 50px  ;\nborder-right-color: transparent;\n border-bottom-color: transparent;\n```\n分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。\n我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。\n\n对比下面的两个动画框架：\n```\n@keyframes red-rotate{\n\t\t    0% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    }\t\t\n\t\t}\n\t\t@keyframes pink-rotate{\n\t\t\t0% {\n\t\t    \ttransform: rotate(-45deg);\t\t    \t\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75.001% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    } \n\t\t}\n```\n最后两个动画框架同时开始就大功告成了！\n","source":"_posts/CSS3饼状loading效果.md","raw":"---\ntitle: 饼状loading效果\ndate: \ntags: [html5,css3]\n---\n\n###   垂直和水平居中 \n\t\n水平居中是最简单的，在设置了大小的元素上加margin：0 auto\n关键是垂直居中\n使用定位position：absolution;  //脱离文档流\n\t    top: 50%;\t//这时顶部处于中央位置\n\t   margin-top: -(height/2) px;\n或者第三句可以使用位移：transfrom：translateY(-50%)\n\n另一种方法是使用flex布局\n在居中元素的父元素上：display：flex;\n\t\t\t       align-items:center; //垂直居中\n\t\t\t       justify: center;\t//水平居中\n可是flex布局存在兼容性问题  ，慎用！\n参考：http://www.cnblogs.com/yugege/p/5246652.html\n\n**让脱离了文档流的p标签垂直和水平居中**  \n```\n<nav class=\"mynav\">\n\t\t<div>\n\t\t\t<p><span></span><span></span><span></span></p>\n\t\t</div>\t\t\n\t</nav>\n\t\n<style>\n    .mynav{\n    \theight: 100px;\n    \twidth: 100%;\n    \tmargin-top: 70px;\t\n    }\n    .mynav div{\n    \theight: 100%;\n    \tposition: relative; //垂直\n    \ttext-align: center; //水平\n    }\n    .mynav p{\t\n    \twidth: 100%; //水平\n    \tposition: absolute; //垂直\n    \ttop: 50%;   //垂直\n    \tmargin-top: -12px;  //垂直\n    }\n    .mynav p span{\n    \tdisplay: inline-block;\n    \twidth: 24px;\n    \theight: 24px;\n    \tborder-radius: 50%;\n    \t-webkit-border-radius: 50%;\n    \tbackground-color: #000;\n    \tmargin-right: 20px;\n    \n    }\n</style>\n```\n\n### 思路\n\n[查看效果](https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif)\n\n这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。\n首先如何画圆呢？\n一般是在一个正方形的div上设置border-radius=圆的半径\n可是现在是用另外的方法，用border来画圆\n```\nwidth:0;\nheight:0;\nborder:50px solid #000;\nborder-radius:50px;\n```\n可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。\n中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent\n\n一个红色和粉红色的底圆：\n```\nwidth: 0;\nheight: 0;\nborder-radius: 50px;\nborder:50px solid;\nborder-top-color: rgb(251,139,189);\nborder-left-color: rgb(255,41,140);\nborder-right-color: rgb(251,139,189);\nborder-bottom-color: rgb(255,41,140);\n```\n\n一个红半圆：\n```\nwidth: 0;\n height: 0;\nborder-radius: 50px;\nborder: solid rgb(251,139,189) 50px  ;\nborder-right-color: transparent;\n border-bottom-color: transparent;\n```\n分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。\n我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。\n\n对比下面的两个动画框架：\n```\n@keyframes red-rotate{\n\t\t    0% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    }\t\t\n\t\t}\n\t\t@keyframes pink-rotate{\n\t\t\t0% {\n\t\t    \ttransform: rotate(-45deg);\t\t    \t\n\t\t    }\n\t\t    25% {\n\t\t    \ttransform: rotate(-45deg);\n\t\t    }\n\t\t    50% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 3;\n\t\t    }\n\t\t    75.001% {\n\t\t    \ttransform: rotate(-225deg);\n\t\t    \tz-index: 2;\n\t\t    }\n\t\t    100% {\n\t\t    \ttransform: rotate(-405deg);\n\t\t    } \n\t\t}\n```\n最后两个动画框架同时开始就大功告成了！\n","slug":"CSS3饼状loading效果","published":1,"updated":"2017-06-18T14:25:51.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f780005w8qz6jce6j73","content":"<h3 id=\"垂直和水平居中\"><a href=\"#垂直和水平居中\" class=\"headerlink\" title=\"垂直和水平居中\"></a>垂直和水平居中</h3><p>水平居中是最简单的，在设置了大小的元素上加margin：0 auto<br>关键是垂直居中<br>使用定位position：absolution;  //脱离文档流<br>        top: 50%;    //这时顶部处于中央位置<br>       margin-top: -(height/2) px;<br>或者第三句可以使用位移：transfrom：translateY(-50%)</p>\n<p>另一种方法是使用flex布局<br>在居中元素的父元素上：display：flex;<br>                   align-items:center; //垂直居中<br>                   justify: center;    //水平居中<br>可是flex布局存在兼容性问题  ，慎用！<br>参考：<a href=\"http://www.cnblogs.com/yugege/p/5246652.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/yugege/p/5246652.html</a></p>\n<p><strong>让脱离了文档流的p标签垂直和水平居中</strong><br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">nav</span> class=<span class=\"string\">\"mynav\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;</span><br><span class=\"line\">\t\t\t&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;\t\t</span><br><span class=\"line\">\t&lt;/nav&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    .mynav&#123;</span><br><span class=\"line\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">margin-top</span>: <span class=\"number\">70px</span>;\t</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.mynav</span> div&#123;</span><br><span class=\"line\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">position</span>: relative; <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    \t<span class=\"attribute\">text-align</span>: center; <span class=\"comment\">//水平</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.mynav</span> p&#123;\t</span><br><span class=\"line\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"comment\">//水平</span></span><br><span class=\"line\">    \t<span class=\"attribute\">position</span>: absolute; <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    \t<span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;   <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    \t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">12px</span>;  <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">p</span> span&#123;</span><br><span class=\"line\">    \t<span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    \t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p><a href=\"https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif\" target=\"_blank\" rel=\"external\">查看效果</a></p>\n<p>这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。<br>首先如何画圆呢？<br>一般是在一个正方形的div上设置border-radius=圆的半径<br>可是现在是用另外的方法，用border来画圆<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>:<span class=\"number\">50px</span>;</span><br></pre></td></tr></table></figure></p>\n<p>可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。<br>中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent</p>\n<p>一个红色和粉红色的底圆：<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid;</span><br><span class=\"line\"><span class=\"attribute\">border-top-color</span>: rgb(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-left-color</span>: rgb(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: rgb(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-bottom-color</span>: rgb(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br></pre></td></tr></table></figure></p>\n<p>一个红半圆：<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>: solid rgb(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>) <span class=\"number\">50px</span>  ;</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom-color</span>: transparent;</span><br></pre></td></tr></table></figure></p>\n<p>分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。<br>我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。</p>\n<p>对比下面的两个动画框架：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> red-rotate&#123;</span><br><span class=\"line\">\t\t    0% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    25% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    50% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    75% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-405deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    100% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-405deg);</span><br><span class=\"line\">\t\t    &#125;\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t@<span class=\"keyword\">keyframes</span> pink-rotate&#123;</span><br><span class=\"line\">\t\t\t0% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);\t\t    \t</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    25% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    50% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    75% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    75<span class=\"selector-class\">.001</span>% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    100% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-405deg);</span><br><span class=\"line\">\t\t    &#125; </span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最后两个动画框架同时开始就大功告成了！</p>\n","excerpt":"","more":"<h3 id=\"垂直和水平居中\"><a href=\"#垂直和水平居中\" class=\"headerlink\" title=\"垂直和水平居中\"></a>垂直和水平居中</h3><p>水平居中是最简单的，在设置了大小的元素上加margin：0 auto<br>关键是垂直居中<br>使用定位position：absolution;  //脱离文档流<br>        top: 50%;    //这时顶部处于中央位置<br>       margin-top: -(height/2) px;<br>或者第三句可以使用位移：transfrom：translateY(-50%)</p>\n<p>另一种方法是使用flex布局<br>在居中元素的父元素上：display：flex;<br>                   align-items:center; //垂直居中<br>                   justify: center;    //水平居中<br>可是flex布局存在兼容性问题  ，慎用！<br>参考：<a href=\"http://www.cnblogs.com/yugege/p/5246652.html\">http://www.cnblogs.com/yugege/p/5246652.html</a></p>\n<p><strong>让脱离了文档流的p标签垂直和水平居中</strong><br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">nav</span> class=<span class=\"string\">\"mynav\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;div&gt;</span><br><span class=\"line\">\t\t\t&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">\t\t&lt;/div&gt;\t\t</span><br><span class=\"line\">\t&lt;/nav&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    .mynav&#123;</span><br><span class=\"line\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">margin-top</span>: <span class=\"number\">70px</span>;\t</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.mynav</span> div&#123;</span><br><span class=\"line\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">position</span>: relative; <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    \t<span class=\"attribute\">text-align</span>: center; <span class=\"comment\">//水平</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.mynav</span> p&#123;\t</span><br><span class=\"line\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"comment\">//水平</span></span><br><span class=\"line\">    \t<span class=\"attribute\">position</span>: absolute; <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    \t<span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;   <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    \t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">12px</span>;  <span class=\"comment\">//垂直</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.mynav</span> <span class=\"selector-tag\">p</span> span&#123;</span><br><span class=\"line\">    \t<span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    \t<span class=\"attribute\">width</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    \t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">    \t<span class=\"attribute\">margin-right</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p><a href=\"https://ww2.sinaimg.cn/large/006tNbRwly1fcr4ycdb9cg30d80dm0tf.gif\">查看效果</a></p>\n<p>这个loading效果分两部份，第一部分是四分之三圆，第二部份是中间的圆饼。<br>首先如何画圆呢？<br>一般是在一个正方形的div上设置border-radius=圆的半径<br>可是现在是用另外的方法，用border来画圆<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>:<span class=\"number\">50px</span>;</span><br></pre></td></tr></table></figure></p>\n<p>可以用border-top-color来设置圆的颜色，这样一个圆就可以有四种颜色，那么四分之三圆就是一部分的颜色设为透明transparent。<br>中间的圆饼其实是一个红色和粉红色的底圆和一个红半圆，一个粉红半圆实现的，半圆其实就是两部分的border颜色设为transparent</p>\n<p>一个红色和粉红色的底圆：<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>:<span class=\"number\">50px</span> solid;</span><br><span class=\"line\"><span class=\"attribute\">border-top-color</span>: rgb(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-left-color</span>: rgb(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: rgb(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>);</span><br><span class=\"line\"><span class=\"attribute\">border-bottom-color</span>: rgb(<span class=\"number\">255</span>,<span class=\"number\">41</span>,<span class=\"number\">140</span>);</span><br></pre></td></tr></table></figure></p>\n<p>一个红半圆：<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\"><span class=\"attribute\">border</span>: solid rgb(<span class=\"number\">251</span>,<span class=\"number\">139</span>,<span class=\"number\">189</span>) <span class=\"number\">50px</span>  ;</span><br><span class=\"line\"><span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\"> <span class=\"attribute\">border-bottom-color</span>: transparent;</span><br></pre></td></tr></table></figure></p>\n<p>分析这个效果，其实是一开始是个红色的圆，然后粉色圆在慢慢出来，等整个圆是粉红色时，红圆慢慢出来。<br>我们可以这样两个半圆重叠，红色在其上，都放在底圆上，在动画框架的第一个过程上红圆转180deg，第二过程粉红圆转180deg，红圆继续保持位置，这个过程开始事时粉红圆的z - index大于红圆。第三个过程，红圆z-index还是小于粉红圆，红圆在转。第四个过程开始，红圆z-index大于粉红圆，粉红圆在转。</p>\n<p>对比下面的两个动画框架：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> red-rotate&#123;</span><br><span class=\"line\">\t\t    0% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    25% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    50% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    75% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-405deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    100% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-405deg);</span><br><span class=\"line\">\t\t    &#125;\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t@<span class=\"keyword\">keyframes</span> pink-rotate&#123;</span><br><span class=\"line\">\t\t\t0% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);\t\t    \t</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    25% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    50% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    75% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    75<span class=\"selector-class\">.001</span>% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-225deg);</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t    &#125;</span><br><span class=\"line\">\t\t    100% &#123;</span><br><span class=\"line\">\t\t    \t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-405deg);</span><br><span class=\"line\">\t\t    &#125; </span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最后两个动画框架同时开始就大功告成了！</p>\n"},{"title":"JS之事件详解（一）","date":"2016-05-19T09:10:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **event对象**\n \n> * Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。\nevent对象只在事件发生的过程中才有效。\nevent的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。\n\n> * 获取鼠标的位置：clientX，clientY\n\n> * 获取event对象的兼容性写法：var oEvent = ev || event；\n***\n> * 事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。\n一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;\n\n###  **练习代码**\n#### 1.弹出菜单\n    *取消事件冒泡*\n```javascript\n\t<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\n\t}\n\tul{\n\t\tbackground-color: #1457dd;\n\t\tpadding:5px 10px;\n\t\tdisplay:none ;\n\t\tlist-style: none;\n\t\twidth: 150px;\n\t}\n\tdiv{\n\t\tposition: absolute;\n\t\tleft:45%;\n\t\ttop:10%;\n\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\n\tvar oBtn = document.getElementById('btn1');\n\tvar oUl = document.getElementById('ul1');\n\n\n\toBtn.onclick =function (ev){\n\t\tvar oEvent = ev || event;\n\t\toUl.style.display = 'block';\n\n\t\toEvent.cancelBubble = 'true'\n\n\t}\n\tdocument.onclick = function(){\n\t\toUl.style.display = 'none';\n\t\t\n\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div>\n\t\t<button id=\"btn1\">显示</button>\n\t\t<ul id=\"ul1\">\n\t\t\t<li>收藏</li>\n\t\t\t<li>刷新</li>\n\t\t\t<li>注销</li>\n\t\t\t<li>登陆</li>\n\t\t\t<li>注册</li>\n\t\t</ul>\n\t</div>\n\t\n</body\n```\n#### 2.跟随鼠标移动的div\n    *注意：消除滚动条的影响*\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #120047;\n\t\t\tposition: absolute; //别忘记加这个属性，有了定位left和top才能设置\n\t\t}\n\t</style>\n\t<script>\n\tdocument.onmousemove = function(ev){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar oEvent = ev || event; //event在ie下才有定义\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n\t\toDiv.style.left = oEvent.clientX +scrollLeft+'px';\n\t\toDiv.style.top = oEvent.clientY + scrollTop+'px' ;\n\t\n\t\n\t}\n\t\t\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n#### 3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\n```javascript\n\t<style>\n\t\tdiv{\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tbackground-color: #124888;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\t\tvar aDiv = document.getElementsByTagName('div');\n\t\tvar i = 0;\n\n\t\tdocument.onmousemove =function (ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\tfor(i=aDiv.length-1; i>0; i--){\n\t\t\t\taDiv[i].style.left = aDiv[i-1].style.left;\n\t\t\t\taDiv[i].style.top = aDiv[i-1].style.top;\n\t\t\t}\n\n\t\t\taDiv[0].style.left = oEvent.clientX + 'px';\n\t\t\taDiv[0].style.top = oEvent.clientY + 'px';\n\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\tDiv*50\n</body>\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","source":"_posts/JS之事件详情（1）.md","raw":"---\ntitle: JS之事件详解（一）\ndate: 2016-05-19 17:10:00\ntags: [编程,javacript]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **event对象**\n \n> * Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。\nevent对象只在事件发生的过程中才有效。\nevent的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。\n\n> * 获取鼠标的位置：clientX，clientY\n\n> * 获取event对象的兼容性写法：var oEvent = ev || event；\n***\n> * 事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。\n一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;\n\n###  **练习代码**\n#### 1.弹出菜单\n    *取消事件冒泡*\n```javascript\n\t<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\n\t}\n\tul{\n\t\tbackground-color: #1457dd;\n\t\tpadding:5px 10px;\n\t\tdisplay:none ;\n\t\tlist-style: none;\n\t\twidth: 150px;\n\t}\n\tdiv{\n\t\tposition: absolute;\n\t\tleft:45%;\n\t\ttop:10%;\n\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\n\tvar oBtn = document.getElementById('btn1');\n\tvar oUl = document.getElementById('ul1');\n\n\n\toBtn.onclick =function (ev){\n\t\tvar oEvent = ev || event;\n\t\toUl.style.display = 'block';\n\n\t\toEvent.cancelBubble = 'true'\n\n\t}\n\tdocument.onclick = function(){\n\t\toUl.style.display = 'none';\n\t\t\n\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div>\n\t\t<button id=\"btn1\">显示</button>\n\t\t<ul id=\"ul1\">\n\t\t\t<li>收藏</li>\n\t\t\t<li>刷新</li>\n\t\t\t<li>注销</li>\n\t\t\t<li>登陆</li>\n\t\t\t<li>注册</li>\n\t\t</ul>\n\t</div>\n\t\n</body\n```\n#### 2.跟随鼠标移动的div\n    *注意：消除滚动条的影响*\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #120047;\n\t\t\tposition: absolute; //别忘记加这个属性，有了定位left和top才能设置\n\t\t}\n\t</style>\n\t<script>\n\tdocument.onmousemove = function(ev){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar oEvent = ev || event; //event在ie下才有定义\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n\n\t\toDiv.style.left = oEvent.clientX +scrollLeft+'px';\n\t\toDiv.style.top = oEvent.clientY + scrollTop+'px' ;\n\t\n\t\n\t}\n\t\t\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n#### 3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\n```javascript\n\t<style>\n\t\tdiv{\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tbackground-color: #124888;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\n\t<script>\n\twindow.onload = function(){\n\t\tvar aDiv = document.getElementsByTagName('div');\n\t\tvar i = 0;\n\n\t\tdocument.onmousemove =function (ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\tfor(i=aDiv.length-1; i>0; i--){\n\t\t\t\taDiv[i].style.left = aDiv[i-1].style.left;\n\t\t\t\taDiv[i].style.top = aDiv[i-1].style.top;\n\t\t\t}\n\n\t\t\taDiv[0].style.left = oEvent.clientX + 'px';\n\t\t\taDiv[0].style.top = oEvent.clientY + 'px';\n\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\tDiv*50\n</body>\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","slug":"JS之事件详情（1）","published":1,"updated":"2016-10-18T13:31:39.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f7d0007w8qzi7n8rnh9","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<a id=\"more\"></a>\n<h2 id=\"event对象\"><a href=\"#event对象\" class=\"headerlink\" title=\"event对象\"></a><strong>event对象</strong></h2><blockquote>\n<ul>\n<li><p>Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。<br>event对象只在事件发生的过程中才有效。<br>event的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。</p>\n</li>\n<li><p>获取鼠标的位置：clientX，clientY</p>\n</li>\n<li><p>获取event对象的兼容性写法：var oEvent = ev || event；</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。<br>一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;</li>\n</ul>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a><strong>练习代码</strong></h3><h4 id=\"1-弹出菜单\"><a href=\"#1-弹出菜单\" class=\"headerlink\" title=\"1.弹出菜单\"></a>1.弹出菜单</h4><pre><code>*取消事件冒泡*\n</code></pre><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\tmargin: 0;</span><br><span class=\"line\">\t\tpadding:0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tul&#123;</span><br><span class=\"line\">\t\tbackground-color: #1457dd;</span><br><span class=\"line\">\t\tpadding:5px 10px;</span><br><span class=\"line\">\t\tdisplay:none ;</span><br><span class=\"line\">\t\tlist-style: none;</span><br><span class=\"line\">\t\twidth: 150px;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdiv&#123;</span><br><span class=\"line\">\t\tposition: absolute;</span><br><span class=\"line\">\t\tleft:45%;</span><br><span class=\"line\">\t\ttop:10%;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar oBtn = document.getElementById('btn1');</span><br><span class=\"line\">\tvar oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\toBtn.onclick =function (ev)&#123;</span><br><span class=\"line\">\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\toUl.style.display = 'block';</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toEvent.cancelBubble = 'true'</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdocument.onclick = function()&#123;</span><br><span class=\"line\">\t\toUl.style.display = 'none';</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\t&lt;button id=\"btn1\"&gt;显示&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;收藏&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;注销&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;登陆&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;注册&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/body</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-跟随鼠标移动的div\"><a href=\"#2-跟随鼠标移动的div\" class=\"headerlink\" title=\"2.跟随鼠标移动的div\"></a>2.跟随鼠标移动的div</h4><pre><code>*注意：消除滚动条的影响*\n</code></pre><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: #120047;</span><br><span class=\"line\">\t\t\tposition: absolute; //别忘记加这个属性，有了定位left和top才能设置</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\tdocument.onmousemove = function(ev)&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\tvar oEvent = ev || event; //event在ie下才有定义</span><br><span class=\"line\">\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">\t\tvar scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.style.left = oEvent.clientX +scrollLeft+'px';</span><br><span class=\"line\">\t\toDiv.style.top = oEvent.clientY + scrollTop+'px' ;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"><a href=\"#3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\" class=\"headerlink\" title=\"3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"></a>3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t\tdiv&#123;</span><br><span class=\"line\">\t\t\twidth: 10px;</span><br><span class=\"line\">\t\t\theight: 10px;</span><br><span class=\"line\">\t\t\tbackground-color: #124888;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar aDiv = document.getElementsByTagName('div');</span><br><span class=\"line\">\t\tvar i = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onmousemove =function (ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tfor(i=aDiv.length-1; i&gt;0; i--)&#123;</span><br><span class=\"line\">\t\t\t\taDiv[i].style.left = aDiv[i-1].style.left;</span><br><span class=\"line\">\t\t\t\taDiv[i].style.top = aDiv[i-1].style.top;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\taDiv[0].style.left = oEvent.clientX + 'px';</span><br><span class=\"line\">\t\t\taDiv[0].style.top = oEvent.clientY + 'px';</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\tDiv*50</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/05/19/JS之事件详情（1）/\">  JS之事件详解（一）  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\" target=\"_blank\" rel=\"external\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\"><a rel=\"external\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<h2 id=\"event对象\"><a href=\"#event对象\" class=\"headerlink\" title=\"event对象\"></a><strong>event对象</strong></h2><blockquote>\n<ul>\n<li><p>Event代表事件状态，用来获取事件的详细信息，如事件发生的元素，键盘按键，鼠标位置和鼠标按钮状态。一旦事件发生,便会生成Event对象，如单击一个按钮，浏览器的内存中就产生相应的 event对象。<br>event对象只在事件发生的过程中才有效。<br>event的某些属性只对特定的事件有意义。比如，fromElement 和 toElement 属性只对 onmouseover 和 onmouseout 事件有意义。</p>\n</li>\n<li><p>获取鼠标的位置：clientX，clientY</p>\n</li>\n<li><p>获取event对象的兼容性写法：var oEvent = ev || event；</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>事件冒泡：一个对象触发了某类事件，该事件程序被执行了之后，这个事件还会向这个对象的父级元素传播，从而会触发父级的事件程序。<br>一般来说会造成困扰，解决方法：oEvent.cancelBubble = true;</li>\n</ul>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a><strong>练习代码</strong></h3><h4 id=\"1-弹出菜单\"><a href=\"#1-弹出菜单\" class=\"headerlink\" title=\"1.弹出菜单\"></a>1.弹出菜单</h4><pre><code>*取消事件冒泡*\n</code></pre><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\tmargin: 0;</span><br><span class=\"line\">\t\tpadding:0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tul&#123;</span><br><span class=\"line\">\t\tbackground-color: #1457dd;</span><br><span class=\"line\">\t\tpadding:5px 10px;</span><br><span class=\"line\">\t\tdisplay:none ;</span><br><span class=\"line\">\t\tlist-style: none;</span><br><span class=\"line\">\t\twidth: 150px;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdiv&#123;</span><br><span class=\"line\">\t\tposition: absolute;</span><br><span class=\"line\">\t\tleft:45%;</span><br><span class=\"line\">\t\ttop:10%;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvar oBtn = document.getElementById('btn1');</span><br><span class=\"line\">\tvar oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\toBtn.onclick =function (ev)&#123;</span><br><span class=\"line\">\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\toUl.style.display = 'block';</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toEvent.cancelBubble = 'true'</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdocument.onclick = function()&#123;</span><br><span class=\"line\">\t\toUl.style.display = 'none';</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div&gt;</span><br><span class=\"line\">\t\t&lt;button id=\"btn1\"&gt;显示&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;收藏&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;注销&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;登陆&lt;/li&gt;</span><br><span class=\"line\">\t\t\t&lt;li&gt;注册&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;/ul&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&lt;/body</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-跟随鼠标移动的div\"><a href=\"#2-跟随鼠标移动的div\" class=\"headerlink\" title=\"2.跟随鼠标移动的div\"></a>2.跟随鼠标移动的div</h4><pre><code>*注意：消除滚动条的影响*\n</code></pre><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: #120047;</span><br><span class=\"line\">\t\t\tposition: absolute; //别忘记加这个属性，有了定位left和top才能设置</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\tdocument.onmousemove = function(ev)&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\tvar oEvent = ev || event; //event在ie下才有定义</span><br><span class=\"line\">\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">\t\tvar scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.style.left = oEvent.clientX +scrollLeft+'px';</span><br><span class=\"line\">\t\toDiv.style.top = oEvent.clientY + scrollTop+'px' ;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"><a href=\"#3-获取鼠标在页面的绝对位置（一串跟随鼠标的div）\" class=\"headerlink\" title=\"3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）\"></a>3.获取鼠标在页面的绝对位置（一串跟随鼠标的div）</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;style&gt;</span><br><span class=\"line\">\t\tdiv&#123;</span><br><span class=\"line\">\t\t\twidth: 10px;</span><br><span class=\"line\">\t\t\theight: 10px;</span><br><span class=\"line\">\t\t\tbackground-color: #124888;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar aDiv = document.getElementsByTagName('div');</span><br><span class=\"line\">\t\tvar i = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onmousemove =function (ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tfor(i=aDiv.length-1; i&gt;0; i--)&#123;</span><br><span class=\"line\">\t\t\t\taDiv[i].style.left = aDiv[i-1].style.left;</span><br><span class=\"line\">\t\t\t\taDiv[i].style.top = aDiv[i-1].style.top;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\taDiv[0].style.left = oEvent.clientX + 'px';</span><br><span class=\"line\">\t\t\taDiv[0].style.top = oEvent.clientY + 'px';</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\tDiv*50</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/05/19/JS之事件详情（1）/\">  JS之事件详解（一）  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"github使用心得","date":"2016-05-10T15:46:00.000Z","_content":"\n> 仅以此文提醒下次不会再犯之错\n<!--more-->\n\n* 在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）\n***\n* hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。\n第二种可行方法：checkout到master分支上，merge hexi分支后，\n再push到远程库的hexi分支（git push origin master:hexi） 括号里master是\n本地master分支，hexi是远程的hexi分支\n\n* hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去\n***\n* git remote add （自取的主机名） （地址）\n目录下有了该本机，才能pull和push\n\n* 更新fork的远程库\nadd主机 》》 pull到本地库 》》push到远程库\n命令如下：\ngit remote add itxiehui https://itxiehui/itxiehui.github.io\ngit pull itxiehui develop\ngit remote add IT https://github.com/LaoLeo/itxiehui.github.io.git\ngit push IT develop\n解析：\nIT表示push到自己的远程仓库，该目录下要有该主机\nitxiehui是指owner的主机，IT是member即我fork到我仓库的主机\n\n\n\n","source":"_posts/github使用心得.md","raw":"\n---\ntitle: github使用心得\ndate: 2016-05-10 23:46:00\ntags: [github,基础]\n---\n\n> 仅以此文提醒下次不会再犯之错\n<!--more-->\n\n* 在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）\n***\n* hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。\n第二种可行方法：checkout到master分支上，merge hexi分支后，\n再push到远程库的hexi分支（git push origin master:hexi） 括号里master是\n本地master分支，hexi是远程的hexi分支\n\n* hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去\n***\n* git remote add （自取的主机名） （地址）\n目录下有了该本机，才能pull和push\n\n* 更新fork的远程库\nadd主机 》》 pull到本地库 》》push到远程库\n命令如下：\ngit remote add itxiehui https://itxiehui/itxiehui.github.io\ngit pull itxiehui develop\ngit remote add IT https://github.com/LaoLeo/itxiehui.github.io.git\ngit push IT develop\n解析：\nIT表示push到自己的远程仓库，该目录下要有该主机\nitxiehui是指owner的主机，IT是member即我fork到我仓库的主机\n\n\n\n","slug":"github使用心得","published":1,"updated":"2016-10-18T13:31:39.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f8f0009w8qzdb4i3adu","content":"<blockquote>\n<p>仅以此文提醒下次不会再犯之错<br><a id=\"more\"></a></p>\n</blockquote>\n<ul>\n<li>在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）</li>\n</ul>\n<hr>\n<ul>\n<li><p>hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。<br>第二种可行方法：checkout到master分支上，merge hexi分支后，<br>再push到远程库的hexi分支（git push origin master:hexi） 括号里master是<br>本地master分支，hexi是远程的hexi分支</p>\n</li>\n<li><p>hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>git remote add （自取的主机名） （地址）<br>目录下有了该本机，才能pull和push</p>\n</li>\n<li><p>更新fork的远程库<br>add主机 》》 pull到本地库 》》push到远程库<br>命令如下：<br>git remote add itxiehui <a href=\"https://itxiehui/itxiehui.github.io\" target=\"_blank\" rel=\"external\">https://itxiehui/itxiehui.github.io</a><br>git pull itxiehui develop<br>git remote add IT <a href=\"https://github.com/LaoLeo/itxiehui.github.io.git\" target=\"_blank\" rel=\"external\">https://github.com/LaoLeo/itxiehui.github.io.git</a><br>git push IT develop<br>解析：<br>IT表示push到自己的远程仓库，该目录下要有该主机<br>itxiehui是指owner的主机，IT是member即我fork到我仓库的主机</p>\n</li>\n</ul>\n","excerpt":"<blockquote>\n<p>仅以此文提醒下次不会再犯之错<br>","more":"</p>\n</blockquote>\n<ul>\n<li>在notepad上编辑md文件，首先要改编码（UTF-8 without BOM）</li>\n</ul>\n<hr>\n<ul>\n<li><p>hexi上commit后的内容，直接个git push origin hexi，再hexo d -g 就可以发布出去了。<br>第二种可行方法：checkout到master分支上，merge hexi分支后，<br>再push到远程库的hexi分支（git push origin master:hexi） 括号里master是<br>本地master分支，hexi是远程的hexi分支</p>\n</li>\n<li><p>hexo d -g 要在hexi分支下才能起作用，让远程库的内容发布出去</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>git remote add （自取的主机名） （地址）<br>目录下有了该本机，才能pull和push</p>\n</li>\n<li><p>更新fork的远程库<br>add主机 》》 pull到本地库 》》push到远程库<br>命令如下：<br>git remote add itxiehui <a href=\"https://itxiehui/itxiehui.github.io\">https://itxiehui/itxiehui.github.io</a><br>git pull itxiehui develop<br>git remote add IT <a href=\"https://github.com/LaoLeo/itxiehui.github.io.git\">https://github.com/LaoLeo/itxiehui.github.io.git</a><br>git push IT develop<br>解析：<br>IT表示push到自己的远程仓库，该目录下要有该主机<br>itxiehui是指owner的主机，IT是member即我fork到我仓库的主机</p>\n</li>\n</ul>"},{"title":"JS之事件详解（二）","date":"2016-05-19T09:10:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **键盘事件**\n***\n### keyCode\n> 键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用\n其他属性还有：ctrlKey，shiftKey，altKey\n\n### 练习代码\n#### 1.获取用户按下键盘哪个键\n```javascript\n<script>\n\twindow.onload = function(){\n\t\tdocument.onkeydown= function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\talert(oEvent.keyCode);\n\t\t\t//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13\n\t\t}\n\t}\n\t</script>\n```\n#### 2.键盘控制div移动\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:oDiv.style.left = oDiv.offsetLeft-10+'px';break;\n\t\t\t\tcase 39:oDiv.style.left = oDiv.offsetLeft+10+'px';break;\n\t\t\t\tcase 38:oDiv.style.top = oDiv.offsetTop-10+'px';break;\n\t\t\t\tcase 40:oDiv.style.top = oDiv.offsetTop+10+'px';break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n * -解决卡顿问题\n>  要点：1.开定时器 2.加判断\n\t\t\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar timer = null;\n\t\tvar left = false;\n\t\tvar top = false;\n\t\tvar bottom = false;\n\t\tvar right = false;\n\n\t\tsetInterval(function(){\n\t\t\tif (left) {\n\t\t\t\toDiv.style.left = oDiv.offsetLeft-10+'px';\n\t\t\t}else if(right){\n\t\t\t\toDiv.style.left = oDiv.offsetLeft+10+'px';\n\t\t\t}else if(top){\n\t\t\t\toDiv.style.top = oDiv.offsetTop-10+'px';\n\t\t\t}else if(bottom){\n\t\t\t\toDiv.style.top = oDiv.offsetTop+10+'px';\n\t\t\t}\n\t\t},50)\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = true;break;\n\t\t\t\tcase 39:right = true;break;\n\t\t\t\tcase 38:top = true;break;\n\t\t\t\tcase 40:bottom = true;break;\n\t\t\t}\n\t\t}\n\t\tdocument.onkeyup = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = false;break;\n\t\t\t\tcase 39:right = false;break;\n\t\t\t\tcase 38:top = false;break;\n\t\t\t\tcase 40:bottom = false;break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n#### 3.提交留言\n* 回车提交\n```javascript\n<script>\n\twindow.onload =function(){\n\t\tvar oTxt1 = document.getElementById('txt1');\n\t\tvar oTxt2 = document.getElementById('txt2');\n\t\tvar oBtn = document.getElementById('btn');\n\n\t\tvar commit = btn.onclick = function(){\n\t\t\toTxt1.value += oTxt2.value + '\\n';\n\t\t\toTxt2.value = '';\n\t\t}\n\t\tdocument.onkeydown=function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tcommit();\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\" ></textarea><br>\n\t<input type=\"text\" id=\"txt2\"><button id=\"btn\">提交</button>\n</body>\n```\n* ctrl+回车 提交\n> 在上面的基础上，更改if条件\n```javascript\nif (oEvent.ctrlKey == true && oEvent.keyCode == 13) {\n\t\t\t\tcommit();\n\t\t\t};\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","source":"_posts/JS之事件详解（2）.md","raw":"---\ntitle: JS之事件详解（二）\ndate: 2016-05-19 17:10:00\ntags: [编程,javacript]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **键盘事件**\n***\n### keyCode\n> 键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用\n其他属性还有：ctrlKey，shiftKey，altKey\n\n### 练习代码\n#### 1.获取用户按下键盘哪个键\n```javascript\n<script>\n\twindow.onload = function(){\n\t\tdocument.onkeydown= function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\talert(oEvent.keyCode);\n\t\t\t//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13\n\t\t}\n\t}\n\t</script>\n```\n#### 2.键盘控制div移动\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:oDiv.style.left = oDiv.offsetLeft-10+'px';break;\n\t\t\t\tcase 39:oDiv.style.left = oDiv.offsetLeft+10+'px';break;\n\t\t\t\tcase 38:oDiv.style.top = oDiv.offsetTop-10+'px';break;\n\t\t\t\tcase 40:oDiv.style.top = oDiv.offsetTop+10+'px';break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n * -解决卡顿问题\n>  要点：1.开定时器 2.加判断\n\t\t\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: #311245;\n\t\t\tposition: absolute;\n\t\t}\n\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar timer = null;\n\t\tvar left = false;\n\t\tvar top = false;\n\t\tvar bottom = false;\n\t\tvar right = false;\n\n\t\tsetInterval(function(){\n\t\t\tif (left) {\n\t\t\t\toDiv.style.left = oDiv.offsetLeft-10+'px';\n\t\t\t}else if(right){\n\t\t\t\toDiv.style.left = oDiv.offsetLeft+10+'px';\n\t\t\t}else if(top){\n\t\t\t\toDiv.style.top = oDiv.offsetTop-10+'px';\n\t\t\t}else if(bottom){\n\t\t\t\toDiv.style.top = oDiv.offsetTop+10+'px';\n\t\t\t}\n\t\t},50)\n\n\t\tdocument.onkeydown = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = true;break;\n\t\t\t\tcase 39:right = true;break;\n\t\t\t\tcase 38:top = true;break;\n\t\t\t\tcase 40:bottom = true;break;\n\t\t\t}\n\t\t}\n\t\tdocument.onkeyup = function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tvar keyCode = oEvent.keyCode;\n\n\t\t\tswitch(keyCode){\n\t\t\t\tcase 37:left = false;break;\n\t\t\t\tcase 39:right = false;break;\n\t\t\t\tcase 38:top = false;break;\n\t\t\t\tcase 40:bottom = false;break;\n\t\t\t}\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n#### 3.提交留言\n* 回车提交\n```javascript\n<script>\n\twindow.onload =function(){\n\t\tvar oTxt1 = document.getElementById('txt1');\n\t\tvar oTxt2 = document.getElementById('txt2');\n\t\tvar oBtn = document.getElementById('btn');\n\n\t\tvar commit = btn.onclick = function(){\n\t\t\toTxt1.value += oTxt2.value + '\\n';\n\t\t\toTxt2.value = '';\n\t\t}\n\t\tdocument.onkeydown=function(ev){\n\t\t\tvar oEvent = ev || event;\n\t\t\tcommit();\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\" ></textarea><br>\n\t<input type=\"text\" id=\"txt2\"><button id=\"btn\">提交</button>\n</body>\n```\n* ctrl+回车 提交\n> 在上面的基础上，更改if条件\n```javascript\nif (oEvent.ctrlKey == true && oEvent.keyCode == 13) {\n\t\t\t\tcommit();\n\t\t\t};\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","slug":"JS之事件详解（2）","published":1,"updated":"2016-10-18T13:31:39.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f8m000aw8qzel1hw5g6","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<a id=\"more\"></a>\n<h2 id=\"键盘事件\"><a href=\"#键盘事件\" class=\"headerlink\" title=\"键盘事件\"></a><strong>键盘事件</strong></h2><hr>\n<h3 id=\"keyCode\"><a href=\"#keyCode\" class=\"headerlink\" title=\"keyCode\"></a>keyCode</h3><blockquote>\n<p>键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用<br>其他属性还有：ctrlKey，shiftKey，altKey</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-获取用户按下键盘哪个键\"><a href=\"#1-获取用户按下键盘哪个键\" class=\"headerlink\" title=\"1.获取用户按下键盘哪个键\"></a>1.获取用户按下键盘哪个键</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">document</span>.onkeydown= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\">\t\t\talert(oEvent.keyCode);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-键盘控制div移动\"><a href=\"#2-键盘控制div移动\" class=\"headerlink\" title=\"2.键盘控制div移动\"></a>2.键盘控制div移动</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: #311245;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onkeydown = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tvar keyCode = oEvent.keyCode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tswitch(keyCode)&#123;</span><br><span class=\"line\">\t\t\t\tcase 37:oDiv.style.left = oDiv.offsetLeft-10+'px';break;</span><br><span class=\"line\">\t\t\t\tcase 39:oDiv.style.left = oDiv.offsetLeft+10+'px';break;</span><br><span class=\"line\">\t\t\t\tcase 38:oDiv.style.top = oDiv.offsetTop-10+'px';break;</span><br><span class=\"line\">\t\t\t\tcase 40:oDiv.style.top = oDiv.offsetTop+10+'px';break;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-解决卡顿问题<blockquote>\n<p> 要点：1.开定时器 2.加判断</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: #311245;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\tvar timer = null;</span><br><span class=\"line\">\t\tvar left = false;</span><br><span class=\"line\">\t\tvar top = false;</span><br><span class=\"line\">\t\tvar bottom = false;</span><br><span class=\"line\">\t\tvar right = false;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tsetInterval(function()&#123;</span><br><span class=\"line\">\t\t\tif (left) &#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.left = oDiv.offsetLeft-10+'px';</span><br><span class=\"line\">\t\t\t&#125;else if(right)&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.left = oDiv.offsetLeft+10+'px';</span><br><span class=\"line\">\t\t\t&#125;else if(top)&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.top = oDiv.offsetTop-10+'px';</span><br><span class=\"line\">\t\t\t&#125;else if(bottom)&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.top = oDiv.offsetTop+10+'px';</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,50)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onkeydown = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tvar keyCode = oEvent.keyCode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tswitch(keyCode)&#123;</span><br><span class=\"line\">\t\t\t\tcase 37:left = true;break;</span><br><span class=\"line\">\t\t\t\tcase 39:right = true;break;</span><br><span class=\"line\">\t\t\t\tcase 38:top = true;break;</span><br><span class=\"line\">\t\t\t\tcase 40:bottom = true;break;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdocument.onkeyup = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tvar keyCode = oEvent.keyCode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tswitch(keyCode)&#123;</span><br><span class=\"line\">\t\t\t\tcase 37:left = false;break;</span><br><span class=\"line\">\t\t\t\tcase 39:right = false;break;</span><br><span class=\"line\">\t\t\t\tcase 38:top = false;break;</span><br><span class=\"line\">\t\t\t\tcase 40:bottom = false;break;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-提交留言\"><a href=\"#3-提交留言\" class=\"headerlink\" title=\"3.提交留言\"></a>3.提交留言</h4><ul>\n<li><p>回车提交</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload =function()&#123;</span><br><span class=\"line\">\t\tvar oTxt1 = document.getElementById('txt1');</span><br><span class=\"line\">\t\tvar oTxt2 = document.getElementById('txt2');</span><br><span class=\"line\">\t\tvar oBtn = document.getElementById('btn');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tvar commit = btn.onclick = function()&#123;</span><br><span class=\"line\">\t\t\toTxt1.value += oTxt2.value + '\\n';</span><br><span class=\"line\">\t\t\toTxt2.value = '';</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdocument.onkeydown=function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tcommit();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\" &gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class=\"line\">\t&lt;input type=\"text\" id=\"txt2\"&gt;&lt;button id=\"btn\"&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ctrl+回车 提交</p>\n<blockquote>\n<p>在上面的基础上，更改if条件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (oEvent.ctrlKey == <span class=\"literal\">true</span> &amp;&amp; oEvent.keyCode == <span class=\"number\">13</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcommit();</span><br><span class=\"line\">\t\t\t&#125;;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/05/19/JS之事件详解（2）/\">  JS之事件详解（二）  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\" target=\"_blank\" rel=\"external\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\"><a rel=\"external\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<h2 id=\"键盘事件\"><a href=\"#键盘事件\" class=\"headerlink\" title=\"键盘事件\"></a><strong>键盘事件</strong></h2><hr>\n<h3 id=\"keyCode\"><a href=\"#keyCode\" class=\"headerlink\" title=\"keyCode\"></a>keyCode</h3><blockquote>\n<p>键盘和鼠标的键都有一个相应的键码对应，利用onkeydown函数可以调用<br>其他属性还有：ctrlKey，shiftKey，altKey</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-获取用户按下键盘哪个键\"><a href=\"#1-获取用户按下键盘哪个键\" class=\"headerlink\" title=\"1.获取用户按下键盘哪个键\"></a>1.获取用户按下键盘哪个键</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">document</span>.onkeydown= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\">\t\t\talert(oEvent.keyCode);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//左键 37 ；上 38 ；右 39 ；下 40 ；enter 13</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-键盘控制div移动\"><a href=\"#2-键盘控制div移动\" class=\"headerlink\" title=\"2.键盘控制div移动\"></a>2.键盘控制div移动</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: #311245;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onkeydown = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tvar keyCode = oEvent.keyCode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tswitch(keyCode)&#123;</span><br><span class=\"line\">\t\t\t\tcase 37:oDiv.style.left = oDiv.offsetLeft-10+'px';break;</span><br><span class=\"line\">\t\t\t\tcase 39:oDiv.style.left = oDiv.offsetLeft+10+'px';break;</span><br><span class=\"line\">\t\t\t\tcase 38:oDiv.style.top = oDiv.offsetTop-10+'px';break;</span><br><span class=\"line\">\t\t\t\tcase 40:oDiv.style.top = oDiv.offsetTop+10+'px';break;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-解决卡顿问题<blockquote>\n<p> 要点：1.开定时器 2.加判断</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: #311245;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\tvar timer = null;</span><br><span class=\"line\">\t\tvar left = false;</span><br><span class=\"line\">\t\tvar top = false;</span><br><span class=\"line\">\t\tvar bottom = false;</span><br><span class=\"line\">\t\tvar right = false;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tsetInterval(function()&#123;</span><br><span class=\"line\">\t\t\tif (left) &#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.left = oDiv.offsetLeft-10+'px';</span><br><span class=\"line\">\t\t\t&#125;else if(right)&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.left = oDiv.offsetLeft+10+'px';</span><br><span class=\"line\">\t\t\t&#125;else if(top)&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.top = oDiv.offsetTop-10+'px';</span><br><span class=\"line\">\t\t\t&#125;else if(bottom)&#123;</span><br><span class=\"line\">\t\t\t\toDiv.style.top = oDiv.offsetTop+10+'px';</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;,50)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onkeydown = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tvar keyCode = oEvent.keyCode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tswitch(keyCode)&#123;</span><br><span class=\"line\">\t\t\t\tcase 37:left = true;break;</span><br><span class=\"line\">\t\t\t\tcase 39:right = true;break;</span><br><span class=\"line\">\t\t\t\tcase 38:top = true;break;</span><br><span class=\"line\">\t\t\t\tcase 40:bottom = true;break;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdocument.onkeyup = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tvar keyCode = oEvent.keyCode;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tswitch(keyCode)&#123;</span><br><span class=\"line\">\t\t\t\tcase 37:left = false;break;</span><br><span class=\"line\">\t\t\t\tcase 39:right = false;break;</span><br><span class=\"line\">\t\t\t\tcase 38:top = false;break;</span><br><span class=\"line\">\t\t\t\tcase 40:bottom = false;break;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-提交留言\"><a href=\"#3-提交留言\" class=\"headerlink\" title=\"3.提交留言\"></a>3.提交留言</h4><ul>\n<li><p>回车提交</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload =function()&#123;</span><br><span class=\"line\">\t\tvar oTxt1 = document.getElementById('txt1');</span><br><span class=\"line\">\t\tvar oTxt2 = document.getElementById('txt2');</span><br><span class=\"line\">\t\tvar oBtn = document.getElementById('btn');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tvar commit = btn.onclick = function()&#123;</span><br><span class=\"line\">\t\t\toTxt1.value += oTxt2.value + '\\n';</span><br><span class=\"line\">\t\t\toTxt2.value = '';</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tdocument.onkeydown=function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\">\t\t\tcommit();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\" &gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class=\"line\">\t&lt;input type=\"text\" id=\"txt2\"&gt;&lt;button id=\"btn\"&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ctrl+回车 提交</p>\n<blockquote>\n<p>在上面的基础上，更改if条件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (oEvent.ctrlKey == <span class=\"literal\">true</span> &amp;&amp; oEvent.keyCode == <span class=\"number\">13</span>) &#123;</span><br><span class=\"line\">\t\t\t\tcommit();</span><br><span class=\"line\">\t\t\t&#125;;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/05/19/JS之事件详解（2）/\">  JS之事件详解（二）  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"js系列之BOM基础","date":"2016-10-18T13:31:39.520Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n***\n## open\n\n> window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身\n\n* 在文本窗口写代码，新窗口打开执行\n ```javascript\n <script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn1');\n\t\tvar oTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oNewWin = window.open('about:blank');\n\t\t\toNewWin.document.write(oTxt.value);\n\t\t}\n\t}\n</script>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\"></textarea>\n\t<br>\n\t<button id=\"btn1\" value=\"运行\">运行</button>\n</body>\n```\n\n## close\n\n> close的页面需要是有js打开的页面\n比如：\n在open.html上 关键js代码：window.open(‘close.html’,’_blank’);\n在close.html上 关键js代码：window.close();\nclose.html是js代码打开的页面\n\n## userAgent\n\n> 查看浏览器版本\nalert（window.navigator.userAgent）;\n\n```javascript\n<script>\n\talert(window.navigator.userAgent)//查看浏览器的版本\n</script>\n```\n\n## location\n\n> window.location   当前页面的地址\nwindow.location ='http://www.github.com';   打开一个新地址\n\n\n## 系统对话框：\n> 警告框：alert（） ,没有返回值\n选择框：confirm（“提问的内容”），返回boolen\n输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。\n\n \n## 窗口尺寸，工作区尺寸\n> 可视区尺寸\ndocument.documentElement.clientWidth\ndocument.documentElement.clientHeight\n滚动距离\ndocument.body.scrollTop\ndocument.documentElement.scrollTop\t*这两句是为了更好的兼容性，chrome和firefox只认识前者*\n\n* 侧边栏\n ```javascript\n <style>\n\t#div1{\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tposition: absolute;\n\t\tright: 0;\n\t\tbackground: pink;\n\t}\n</style>\n<script>\nwindow.onresize = window.onload = window.onscroll  = function (){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar t = (document.documentElement.clientHeight-oDiv.offsetHeight)/2;\n\n\t\toDiv.style.top = scrollTop + t +'px';\n\t}\n</script>\n<body style=\"height:1000px;\">\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 回到顶部\n ```javascript\n<style>\n\t#btn{\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tright: 0;\n\t}\n</style>\n<script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn');\n\t\tvar timer =null;\n\t\tvar bSys = null;\n\n\t\t//如何检测到用户操作了滚动条\n\t\twindow.onscroll = function(){\n\t\t\tif (!bSys) {\n\t\t\t\tclearInterval(timer);\n\t\t\t};\n\t\t\tbSys = false;\n\t\t}\n\t\toBtn.onclick = function(){\n\n\t\t\ttimer =setInterval(function(){\n\t\t\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tvar iSpeed = Math.floor(-scrollTop/8);\n\t\t\t\tif (scrollTop == 0) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t};\n\t\t\t\tdocument.documentElement.scrollTop = scrollTop +iSpeed;\n\t\t\t\tbSys = true;\n\t\t\t},30)\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<button id=\"btn\">回到顶部</button>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t...\n</body>\n ```\n \n> **小结**\n>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n \n","source":"_posts/js系列之BOM基础.md","raw":"---\ntitle: js系列之BOM基础\ndate: \ntags: [编程,javacript,BOM]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n***\n## open\n\n> window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身\n\n* 在文本窗口写代码，新窗口打开执行\n ```javascript\n <script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn1');\n\t\tvar oTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oNewWin = window.open('about:blank');\n\t\t\toNewWin.document.write(oTxt.value);\n\t\t}\n\t}\n</script>\n<body>\n\t<textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\"></textarea>\n\t<br>\n\t<button id=\"btn1\" value=\"运行\">运行</button>\n</body>\n```\n\n## close\n\n> close的页面需要是有js打开的页面\n比如：\n在open.html上 关键js代码：window.open(‘close.html’,’_blank’);\n在close.html上 关键js代码：window.close();\nclose.html是js代码打开的页面\n\n## userAgent\n\n> 查看浏览器版本\nalert（window.navigator.userAgent）;\n\n```javascript\n<script>\n\talert(window.navigator.userAgent)//查看浏览器的版本\n</script>\n```\n\n## location\n\n> window.location   当前页面的地址\nwindow.location ='http://www.github.com';   打开一个新地址\n\n\n## 系统对话框：\n> 警告框：alert（） ,没有返回值\n选择框：confirm（“提问的内容”），返回boolen\n输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。\n\n \n## 窗口尺寸，工作区尺寸\n> 可视区尺寸\ndocument.documentElement.clientWidth\ndocument.documentElement.clientHeight\n滚动距离\ndocument.body.scrollTop\ndocument.documentElement.scrollTop\t*这两句是为了更好的兼容性，chrome和firefox只认识前者*\n\n* 侧边栏\n ```javascript\n <style>\n\t#div1{\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tposition: absolute;\n\t\tright: 0;\n\t\tbackground: pink;\n\t}\n</style>\n<script>\nwindow.onresize = window.onload = window.onscroll  = function (){\n\t\tvar oDiv = document.getElementById('div1');\n\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\tvar t = (document.documentElement.clientHeight-oDiv.offsetHeight)/2;\n\n\t\toDiv.style.top = scrollTop + t +'px';\n\t}\n</script>\n<body style=\"height:1000px;\">\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 回到顶部\n ```javascript\n<style>\n\t#btn{\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tright: 0;\n\t}\n</style>\n<script>\n\twindow.onload = function(){\n\t\tvar oBtn = document.getElementById('btn');\n\t\tvar timer =null;\n\t\tvar bSys = null;\n\n\t\t//如何检测到用户操作了滚动条\n\t\twindow.onscroll = function(){\n\t\t\tif (!bSys) {\n\t\t\t\tclearInterval(timer);\n\t\t\t};\n\t\t\tbSys = false;\n\t\t}\n\t\toBtn.onclick = function(){\n\n\t\t\ttimer =setInterval(function(){\n\t\t\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tvar iSpeed = Math.floor(-scrollTop/8);\n\t\t\t\tif (scrollTop == 0) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t};\n\t\t\t\tdocument.documentElement.scrollTop = scrollTop +iSpeed;\n\t\t\t\tbSys = true;\n\t\t\t},30)\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<button id=\"btn\">回到顶部</button>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t<p>**</p>\n\t...\n</body>\n ```\n \n> **小结**\n>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n \n","slug":"js系列之BOM基础","published":1,"updated":"2016-10-18T13:31:39.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f8s000bw8qzyuomgl3q","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<a id=\"more\"></a>\n<hr>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><blockquote>\n<p>window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身</p>\n</blockquote>\n<ul>\n<li>在文本窗口写代码，新窗口打开执行<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oBtn = document.getElementById('btn1');</span><br><span class=\"line\">\t\tvar oTxt = document.getElementById('txt1');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.onclick = function()&#123;</span><br><span class=\"line\">\t\t\tvar oNewWin = window.open('about:blank');</span><br><span class=\"line\">\t\t\toNewWin.document.write(oTxt.value);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\"&gt;&lt;/textarea&gt;</span><br><span class=\"line\">\t&lt;br&gt;</span><br><span class=\"line\">\t&lt;button id=\"btn1\" value=\"运行\"&gt;运行&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"close\"><a href=\"#close\" class=\"headerlink\" title=\"close\"></a>close</h2><blockquote>\n<p>close的页面需要是有js打开的页面<br>比如：<br>在open.html上 关键js代码：window.open(‘close.html’,’_blank’);<br>在close.html上 关键js代码：window.close();<br>close.html是js代码打开的页面</p>\n</blockquote>\n<h2 id=\"userAgent\"><a href=\"#userAgent\" class=\"headerlink\" title=\"userAgent\"></a>userAgent</h2><blockquote>\n<p>查看浏览器版本<br>alert（window.navigator.userAgent）;</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\talert(<span class=\"built_in\">window</span>.navigator.userAgent)<span class=\"comment\">//查看浏览器的版本</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h2><blockquote>\n<p>window.location   当前页面的地址<br>window.location =’<a href=\"http://www.github.com\" target=\"_blank\" rel=\"external\">http://www.github.com</a>‘;   打开一个新地址</p>\n</blockquote>\n<h2 id=\"系统对话框：\"><a href=\"#系统对话框：\" class=\"headerlink\" title=\"系统对话框：\"></a>系统对话框：</h2><blockquote>\n<p>警告框：alert（） ,没有返回值<br>选择框：confirm（“提问的内容”），返回boolen<br>输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。</p>\n</blockquote>\n<h2 id=\"窗口尺寸，工作区尺寸\"><a href=\"#窗口尺寸，工作区尺寸\" class=\"headerlink\" title=\"窗口尺寸，工作区尺寸\"></a>窗口尺寸，工作区尺寸</h2><blockquote>\n<p>可视区尺寸<br>document.documentElement.clientWidth<br>document.documentElement.clientHeight<br>滚动距离<br>document.body.scrollTop<br>document.documentElement.scrollTop    <em>这两句是为了更好的兼容性，chrome和firefox只认识前者</em></p>\n</blockquote>\n<ul>\n<li><p>侧边栏</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;style&gt;</span><br><span class=\"line\">\t#div1&#123;</span><br><span class=\"line\">\t\twidth: 100px;</span><br><span class=\"line\">\t\theight: 100px;</span><br><span class=\"line\">\t\tposition: absolute;</span><br><span class=\"line\">\t\tright: 0;</span><br><span class=\"line\">\t\tbackground: pink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">window.onresize = window.onload = window.onscroll  = function ()&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">\t\tvar t = (document.documentElement.clientHeight-oDiv.offsetHeight)/2;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.style.top = scrollTop + t +'px';</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body style=\"height:1000px;\"&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>回到顶部</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t#btn&#123;</span><br><span class=\"line\">\t\tposition: fixed;</span><br><span class=\"line\">\t\tbottom: 0;</span><br><span class=\"line\">\t\tright: 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oBtn = document.getElementById('btn');</span><br><span class=\"line\">\t\tvar timer =null;</span><br><span class=\"line\">\t\tvar bSys = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t//如何检测到用户操作了滚动条</span><br><span class=\"line\">\t\twindow.onscroll = function()&#123;</span><br><span class=\"line\">\t\t\tif (!bSys) &#123;</span><br><span class=\"line\">\t\t\t\tclearInterval(timer);</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\tbSys = false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\toBtn.onclick = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttimer =setInterval(function()&#123;</span><br><span class=\"line\">\t\t\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">\t\t\t\tvar iSpeed = Math.floor(-scrollTop/8);</span><br><span class=\"line\">\t\t\t\tif (scrollTop == 0) &#123;</span><br><span class=\"line\">\t\t\t\t\tclearInterval(timer);</span><br><span class=\"line\">\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\tdocument.documentElement.scrollTop = scrollTop +iSpeed;</span><br><span class=\"line\">\t\t\t\tbSys = true;</span><br><span class=\"line\">\t\t\t&#125;,30)</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;button id=\"btn\"&gt;回到顶部&lt;/button&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><strong>小结</strong><br>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码</p>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/10/18/js系列之BOM基础/\">  { {title} }  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\" target=\"_blank\" rel=\"external\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\"><a rel=\"external\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<hr>\n<h2 id=\"open\"><a href=\"#open\" class=\"headerlink\" title=\"open\"></a>open</h2><blockquote>\n<p>window.open(href,target); target参数为可选参数，可以填‘_blank’(在新窗口打开)，‘_self’(在当前窗口打开)；有返回值，返回窗口本身</p>\n</blockquote>\n<ul>\n<li>在文本窗口写代码，新窗口打开执行<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oBtn = document.getElementById('btn1');</span><br><span class=\"line\">\t\tvar oTxt = document.getElementById('txt1');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.onclick = function()&#123;</span><br><span class=\"line\">\t\t\tvar oNewWin = window.open('about:blank');</span><br><span class=\"line\">\t\t\toNewWin.document.write(oTxt.value);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;textarea name=\"\" id=\"txt1\" cols=\"30\" rows=\"10\"&gt;&lt;/textarea&gt;</span><br><span class=\"line\">\t&lt;br&gt;</span><br><span class=\"line\">\t&lt;button id=\"btn1\" value=\"运行\"&gt;运行&lt;/button&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"close\"><a href=\"#close\" class=\"headerlink\" title=\"close\"></a>close</h2><blockquote>\n<p>close的页面需要是有js打开的页面<br>比如：<br>在open.html上 关键js代码：window.open(‘close.html’,’_blank’);<br>在close.html上 关键js代码：window.close();<br>close.html是js代码打开的页面</p>\n</blockquote>\n<h2 id=\"userAgent\"><a href=\"#userAgent\" class=\"headerlink\" title=\"userAgent\"></a>userAgent</h2><blockquote>\n<p>查看浏览器版本<br>alert（window.navigator.userAgent）;</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\talert(<span class=\"built_in\">window</span>.navigator.userAgent)<span class=\"comment\">//查看浏览器的版本</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"location\"><a href=\"#location\" class=\"headerlink\" title=\"location\"></a>location</h2><blockquote>\n<p>window.location   当前页面的地址<br>window.location =’<a href=\"http://www.github.com\">http://www.github.com</a>‘;   打开一个新地址</p>\n</blockquote>\n<h2 id=\"系统对话框：\"><a href=\"#系统对话框：\" class=\"headerlink\" title=\"系统对话框：\"></a>系统对话框：</h2><blockquote>\n<p>警告框：alert（） ,没有返回值<br>选择框：confirm（“提问的内容”），返回boolen<br>输入框：prompt（“问题”，“默认值”）。返回输入的字符串或null。</p>\n</blockquote>\n<h2 id=\"窗口尺寸，工作区尺寸\"><a href=\"#窗口尺寸，工作区尺寸\" class=\"headerlink\" title=\"窗口尺寸，工作区尺寸\"></a>窗口尺寸，工作区尺寸</h2><blockquote>\n<p>可视区尺寸<br>document.documentElement.clientWidth<br>document.documentElement.clientHeight<br>滚动距离<br>document.body.scrollTop<br>document.documentElement.scrollTop    <em>这两句是为了更好的兼容性，chrome和firefox只认识前者</em></p>\n</blockquote>\n<ul>\n<li><p>侧边栏</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;style&gt;</span><br><span class=\"line\">\t#div1&#123;</span><br><span class=\"line\">\t\twidth: 100px;</span><br><span class=\"line\">\t\theight: 100px;</span><br><span class=\"line\">\t\tposition: absolute;</span><br><span class=\"line\">\t\tright: 0;</span><br><span class=\"line\">\t\tbackground: pink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">window.onresize = window.onload = window.onscroll  = function ()&#123;</span><br><span class=\"line\">\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">\t\tvar t = (document.documentElement.clientHeight-oDiv.offsetHeight)/2;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toDiv.style.top = scrollTop + t +'px';</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body style=\"height:1000px;\"&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>回到顶部</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t#btn&#123;</span><br><span class=\"line\">\t\tposition: fixed;</span><br><span class=\"line\">\t\tbottom: 0;</span><br><span class=\"line\">\t\tright: 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oBtn = document.getElementById('btn');</span><br><span class=\"line\">\t\tvar timer =null;</span><br><span class=\"line\">\t\tvar bSys = null;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t//如何检测到用户操作了滚动条</span><br><span class=\"line\">\t\twindow.onscroll = function()&#123;</span><br><span class=\"line\">\t\t\tif (!bSys) &#123;</span><br><span class=\"line\">\t\t\t\tclearInterval(timer);</span><br><span class=\"line\">\t\t\t&#125;;</span><br><span class=\"line\">\t\t\tbSys = false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\toBtn.onclick = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\ttimer =setInterval(function()&#123;</span><br><span class=\"line\">\t\t\t\tvar scrollTop = document.documentElement.scrollTop || document.body.scrollTop;</span><br><span class=\"line\">\t\t\t\tvar iSpeed = Math.floor(-scrollTop/8);</span><br><span class=\"line\">\t\t\t\tif (scrollTop == 0) &#123;</span><br><span class=\"line\">\t\t\t\t\tclearInterval(timer);</span><br><span class=\"line\">\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\tdocument.documentElement.scrollTop = scrollTop +iSpeed;</span><br><span class=\"line\">\t\t\t\tbSys = true;</span><br><span class=\"line\">\t\t\t&#125;,30)</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;button id=\"btn\"&gt;回到顶部&lt;/button&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t&lt;p&gt;**&lt;/p&gt;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><strong>小结</strong><br>以上是JavaScript中BOM（Browsert object model）的一些常用的基础，以及帮助理解的练习代码</p>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/10/18/js系列之BOM基础/\">  { {title} }  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"JS之默认行为","date":"2016-05-19T09:10:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **默认行为**\n***\n\n> 浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交\nreturn false;取消默认行为\n\n### 练习代码\n#### 1.屏蔽右键菜单\n> --弹出自定义的右键菜单\n```javascipt\n<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\t}\n\t\t#ul1{\n\t\t\twidth: 130px;\n\t\t\theight: 205px;\n\t\t\tbackground-color: #ccc;\n\t\t\tlist-style: none;\n\t\t\tposition: absolute;\n\t\t\ttext-indent: 10px;\n\t\t\tdisplay: none;\n\t\t}\n\t\t#ul1 li{\n\t\t\tpadding-bottom: 10px;\n\t\t\tborder-bottom: 1px solid #000;\n\t\t\theight: 30px;\n\t\t\tline-height: 30px;\n\n\t\t}\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\n\t\tdocument.oncontextmenu = function(ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\toUl.style.display = 'block';\n\t\t\toUl.style.left = oEvent.clientX +'px';\n\t\t\toUl.style.top = oEvent.clientY+'px';\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tdocument.onclick =function(){\n\t\t\tvar oUl = document.getElementById('ul1');\n\t\t\toUl.style.display = 'none';\n\t\t\t\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>返回</li>\n\t\t<li>刷新</li>\n\t\t<li>开发者模式</li>\n\t\t<li>查看源代码</li>\n\t\t<li>属性</li>\n\t</ul>\n</body>\n```\n#### 2.拖拽div（简易版）\n> 原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\n\t\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY - oDiv.offsetTop;\n\n\t\t\t\toDiv.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\toDiv.onmouseup = function(){\n\t\t\t\t\toDiv.onmousemove = null;\n\t\t\t\t\toDiv.onmouseup = null;\n\t\t\t\t}\n\t\t\treturn false； //解决旧版火狐的bug\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 解决div拖动时，鼠标移出问题\n\t> 原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\t\t\t\t}\n```\t\n* 解决div拖出可视区\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","source":"_posts/JS之默认行为.md","raw":"---\ntitle: JS之默认行为\ndate: 2016-05-19 17:10:00\ntags: [编程,javacript]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n\n<!--more-->\n\n## **默认行为**\n***\n\n> 浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交\nreturn false;取消默认行为\n\n### 练习代码\n#### 1.屏蔽右键菜单\n> --弹出自定义的右键菜单\n```javascipt\n<style>\n\t*{\n\t\tmargin: 0;\n\t\tpadding:0;\n\t}\n\t\t#ul1{\n\t\t\twidth: 130px;\n\t\t\theight: 205px;\n\t\t\tbackground-color: #ccc;\n\t\t\tlist-style: none;\n\t\t\tposition: absolute;\n\t\t\ttext-indent: 10px;\n\t\t\tdisplay: none;\n\t\t}\n\t\t#ul1 li{\n\t\t\tpadding-bottom: 10px;\n\t\t\tborder-bottom: 1px solid #000;\n\t\t\theight: 30px;\n\t\t\tline-height: 30px;\n\n\t\t}\n\t</style>\n\t<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\n\t\tdocument.oncontextmenu = function(ev){\n\t\t\tvar oEvent = ev || event;\n\n\t\t\toUl.style.display = 'block';\n\t\t\toUl.style.left = oEvent.clientX +'px';\n\t\t\toUl.style.top = oEvent.clientY+'px';\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tdocument.onclick =function(){\n\t\t\tvar oUl = document.getElementById('ul1');\n\t\t\toUl.style.display = 'none';\n\t\t\t\n\t\t}\n\t}\n\t</script>\n</head>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>返回</li>\n\t\t<li>刷新</li>\n\t\t<li>开发者模式</li>\n\t\t<li>查看源代码</li>\n\t\t<li>属性</li>\n\t</ul>\n</body>\n```\n#### 2.拖拽div（简易版）\n> 原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面\n```javascript\n<style>\n\t\t#div1{\n\t\t\twidth: 100px;\n\t\t\theight: 100px;\n\t\t\tbackground-color: red;\n\t\t\tposition: absolute;\n\t\t}\n\t</style>\n\t<script>\n\t\twindow.onload =function(){\n\t\t\tvar oDiv = document.getElementById('div1');\n\t\t\tvar disX =0;\n\t\t\tvar disY =0;\n\n\t\t\toDiv.onmousedown = function(ev){\n\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;\n\t\t\t\tdisY = oEvent.clientY - oDiv.offsetTop;\n\n\t\t\t\toDiv.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\toDiv.onmouseup = function(){\n\t\t\t\t\toDiv.onmousemove = null;\n\t\t\t\t\toDiv.onmouseup = null;\n\t\t\t\t}\n\t\t\treturn false； //解决旧版火狐的bug\n\t\t\t}\n\t\t}\n\t</script>\n</head>\n<body>\n\t<div id=\"div1\"></div>\n</body>\n```\n\n* 解决div拖动时，鼠标移出问题\n\t> 原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';\n\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';\n\t\t\t\t}\n\n\t\t\t\tdocument.onmouseup = function(){\n\t\t\t\t\tdocument.onmousemove = null;\n\t\t\t\t\tdocument.onmouseup = null;\n\t\t\t\t}\n```\t\n* 解决div拖出可视区\n```javascript\ndocument.onmousemove=function(ev){\n\t\t\t\t\tvar oEvent = ev || event;\n\n\t\t\t\t\tvar l = oEvent.clientX-disX;\n\t\t\t\t\tvar t = oEvent.clientY-disY;\n\n\t\t\t\t\tif (l<0) {  //限制div移出可视区\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t}else if(l>document.documentElement.clientWidth- oDiv.offsetWidth){\n\t\t\t\t\t\tl = document.documentElement.clientWidth- oDiv.offsetWidth;\n\t\t\t\t\t};\n\t\t\t\t\tif (t<0) {\n\t\t\t\t\t\tt = 0;\n\t\t\t\t\t}else if(t>document.documentElement.clientHeight- oDiv.offsetHeight){\n\t\t\t\t\t\tt =document.documentElement.clientHeight- oDiv.offsetHeight;\n\t\t\t\t\t}\n\n\t\t\t\t\toDiv.style.left = l+'px';\n\t\t\t\t\toDiv.style.top = t+'px';\n\t\t\t\t}\n\n```\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  {{title}}  </a>\n>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>\n ","slug":"JS之默认行为","published":1,"updated":"2016-10-18T13:31:39.504Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f8z000ew8qzh6h65liv","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>\n<a id=\"more\"></a>\n<h2 id=\"默认行为\"><a href=\"#默认行为\" class=\"headerlink\" title=\"默认行为\"></a><strong>默认行为</strong></h2><hr>\n<blockquote>\n<p>浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交<br>return false;取消默认行为</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-屏蔽右键菜单\"><a href=\"#1-屏蔽右键菜单\" class=\"headerlink\" title=\"1.屏蔽右键菜单\"></a>1.屏蔽右键菜单</h4><blockquote>\n<p>–弹出自定义的右键菜单<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\tmargin: 0;</span><br><span class=\"line\">\t\tpadding:0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t#ul1&#123;</span><br><span class=\"line\">\t\t\twidth: 130px;</span><br><span class=\"line\">\t\t\theight: 205px;</span><br><span class=\"line\">\t\t\tbackground-color: #ccc;</span><br><span class=\"line\">\t\t\tlist-style: none;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t\ttext-indent: 10px;</span><br><span class=\"line\">\t\t\tdisplay: none;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t#ul1 li&#123;</span><br><span class=\"line\">\t\t\tpadding-bottom: 10px;</span><br><span class=\"line\">\t\t\tborder-bottom: 1px solid #000;</span><br><span class=\"line\">\t\t\theight: 30px;</span><br><span class=\"line\">\t\t\tline-height: 30px;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oUl = document.getElementById(&apos;ul1&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.oncontextmenu = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toUl.style.display = &apos;block&apos;;</span><br><span class=\"line\">\t\t\toUl.style.left = oEvent.clientX +&apos;px&apos;;</span><br><span class=\"line\">\t\t\toUl.style.top = oEvent.clientY+&apos;px&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onclick =function()&#123;</span><br><span class=\"line\">\t\t\tvar oUl = document.getElementById(&apos;ul1&apos;);</span><br><span class=\"line\">\t\t\toUl.style.display = &apos;none&apos;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;返回&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;开发者模式&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;查看源代码&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;属性&lt;/li&gt;</span><br><span class=\"line\">\t&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"2-拖拽div（简易版）\"><a href=\"#2-拖拽div（简易版）\" class=\"headerlink\" title=\"2.拖拽div（简易版）\"></a>2.拖拽div（简易版）</h4><blockquote>\n<p>原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: red;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\t\twindow.onload =function()&#123;</span><br><span class=\"line\">\t\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\t\tvar disX =0;</span><br><span class=\"line\">\t\t\tvar disY =0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toDiv.onmousedown = function(ev)&#123;</span><br><span class=\"line\">\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;</span><br><span class=\"line\">\t\t\t\tdisY = oEvent.clientY - oDiv.offsetTop;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\toDiv.onmousemove=function(ev)&#123;</span><br><span class=\"line\">\t\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\toDiv.onmouseup = function()&#123;</span><br><span class=\"line\">\t\t\t\t\toDiv.onmousemove = null;</span><br><span class=\"line\">\t\t\t\t\toDiv.onmouseup = null;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\treturn false； //解决旧版火狐的bug</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>解决div拖动时，鼠标移出问题<blockquote>\n<p>原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.onmousemove=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">document</span>.onmouseup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">document</span>.onmousemove = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">document</span>.onmouseup = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`\t</span><br><span class=\"line\">* 解决div拖出可视区</span><br><span class=\"line\">`</span><span class=\"string\">``</span>javascript</span><br><span class=\"line\"><span class=\"built_in\">document</span>.onmousemove=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> l = oEvent.clientX-disX;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> t = oEvent.clientY-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (l&lt;<span class=\"number\">0</span>) &#123;  <span class=\"comment\">//限制div移出可视区</span></span><br><span class=\"line\">\t\t\t\t\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"built_in\">document</span>.documentElement.clientWidth- oDiv.offsetWidth)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = <span class=\"built_in\">document</span>.documentElement.clientWidth- oDiv.offsetWidth;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (t&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"built_in\">document</span>.documentElement.clientHeight- oDiv.offsetHeight)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =<span class=\"built_in\">document</span>.documentElement.clientHeight- oDiv.offsetHeight;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = l+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = t+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/05/19/JS之默认行为/\">  JS之默认行为  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\" target=\"_blank\" rel=\"external\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\"><a rel=\"external\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。</p>","more":"<h2 id=\"默认行为\"><a href=\"#默认行为\" class=\"headerlink\" title=\"默认行为\"></a><strong>默认行为</strong></h2><hr>\n<blockquote>\n<p>浏览器自带的事件，比如：右键菜单，a链接跳转，表单提交<br>return false;取消默认行为</p>\n</blockquote>\n<h3 id=\"练习代码\"><a href=\"#练习代码\" class=\"headerlink\" title=\"练习代码\"></a>练习代码</h3><h4 id=\"1-屏蔽右键菜单\"><a href=\"#1-屏蔽右键菜单\" class=\"headerlink\" title=\"1.屏蔽右键菜单\"></a>1.屏蔽右键菜单</h4><blockquote>\n<p>–弹出自定义的右键菜单<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t*&#123;</span><br><span class=\"line\">\t\tmargin: 0;</span><br><span class=\"line\">\t\tpadding:0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t\t#ul1&#123;</span><br><span class=\"line\">\t\t\twidth: 130px;</span><br><span class=\"line\">\t\t\theight: 205px;</span><br><span class=\"line\">\t\t\tbackground-color: #ccc;</span><br><span class=\"line\">\t\t\tlist-style: none;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t\ttext-indent: 10px;</span><br><span class=\"line\">\t\t\tdisplay: none;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t#ul1 li&#123;</span><br><span class=\"line\">\t\t\tpadding-bottom: 10px;</span><br><span class=\"line\">\t\t\tborder-bottom: 1px solid #000;</span><br><span class=\"line\">\t\t\theight: 30px;</span><br><span class=\"line\">\t\t\tline-height: 30px;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oUl = document.getElementById(&apos;ul1&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.oncontextmenu = function(ev)&#123;</span><br><span class=\"line\">\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toUl.style.display = &apos;block&apos;;</span><br><span class=\"line\">\t\t\toUl.style.left = oEvent.clientX +&apos;px&apos;;</span><br><span class=\"line\">\t\t\toUl.style.top = oEvent.clientY+&apos;px&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\treturn false;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tdocument.onclick =function()&#123;</span><br><span class=\"line\">\t\t\tvar oUl = document.getElementById(&apos;ul1&apos;);</span><br><span class=\"line\">\t\t\toUl.style.display = &apos;none&apos;;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;ul id=&quot;ul1&quot;&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;返回&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;刷新&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;开发者模式&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;查看源代码&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;属性&lt;/li&gt;</span><br><span class=\"line\">\t&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"2-拖拽div（简易版）\"><a href=\"#2-拖拽div（简易版）\" class=\"headerlink\" title=\"2.拖拽div（简易版）\"></a>2.拖拽div（简易版）</h4><blockquote>\n<p>原理：鼠标和div左上角顶点距离不变；三个函数，onmousedown（存储距离），onmousemove（计算鼠标移动后的位置），onmouseup（取消函数），后二者在前者里面<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">\t\t#div1&#123;</span><br><span class=\"line\">\t\t\twidth: 100px;</span><br><span class=\"line\">\t\t\theight: 100px;</span><br><span class=\"line\">\t\t\tbackground-color: red;</span><br><span class=\"line\">\t\t\tposition: absolute;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/style&gt;</span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\">\t\twindow.onload =function()&#123;</span><br><span class=\"line\">\t\t\tvar oDiv = document.getElementById('div1');</span><br><span class=\"line\">\t\t\tvar disX =0;</span><br><span class=\"line\">\t\t\tvar disY =0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toDiv.onmousedown = function(ev)&#123;</span><br><span class=\"line\">\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\tdisX = oEvent.clientX- oDiv.offsetLeft;</span><br><span class=\"line\">\t\t\t\tdisY = oEvent.clientY - oDiv.offsetTop;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\toDiv.onmousemove=function(ev)&#123;</span><br><span class=\"line\">\t\t\t\t\tvar oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+'px';</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+'px';</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\toDiv.onmouseup = function()&#123;</span><br><span class=\"line\">\t\t\t\t\toDiv.onmousemove = null;</span><br><span class=\"line\">\t\t\t\t\toDiv.onmouseup = null;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\treturn false； //解决旧版火狐的bug</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div id=\"div1\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<ul>\n<li>解决div拖动时，鼠标移出问题<blockquote>\n<p>原因：鼠标拖得太快，脱离div事件停止调用，想办法扩大事件范围，把div的onmousemove和onmouseup事件改为document的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.onmousemove=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = oEvent.clientX-disX+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = oEvent.clientY-disY+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">document</span>.onmouseup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">document</span>.onmousemove = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">document</span>.onmouseup = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`\t</span><br><span class=\"line\">* 解决div拖出可视区</span><br><span class=\"line\">`</span><span class=\"string\">``</span>javascript</span><br><span class=\"line\"><span class=\"built_in\">document</span>.onmousemove=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> oEvent = ev || event;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> l = oEvent.clientX-disX;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> t = oEvent.clientY-disY;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (l&lt;<span class=\"number\">0</span>) &#123;  <span class=\"comment\">//限制div移出可视区</span></span><br><span class=\"line\">\t\t\t\t\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"built_in\">document</span>.documentElement.clientWidth- oDiv.offsetWidth)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tl = <span class=\"built_in\">document</span>.documentElement.clientWidth- oDiv.offsetWidth;</span><br><span class=\"line\">\t\t\t\t\t&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (t&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"built_in\">document</span>.documentElement.clientHeight- oDiv.offsetHeight)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tt =<span class=\"built_in\">document</span>.documentElement.clientHeight- oDiv.offsetHeight;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\toDiv.style.left = l+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t\toDiv.style.top = t+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/05/19/JS之默认行为/\">  JS之默认行为  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"mongoDB常用知识整理","date":"2017-08-20T14:45:58.963Z","_content":"\n\n# mongoDB常用知识整理\n\n## 数据库恢复\n\n     cd bin \n进去bin目录，在该目录下有工具`mongorestore`，`mongoimport`，`mongodump`,`mongoexport`\n恢复数据库主要用`mongorestore`\n\n使用命令：`mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname`\n`--noIndexRestore`  是忽略数据库版本不同引起的索引问题\n`-d`后接数据库名\n`C://pathname`是数据库目录\n\n\n>注入此类请参考：[mongoDB数据库导入、导出、备份][1]\n\n## mongoDB基础命令\n\n    show dbs\n    use dbname\n    show collections\n    db.collectionName.insert({x :  1})\n    for(i = 3; i< 100; i++)db.collectionName.insert({ x ： 1})\n    db.collectionName.find()\n    db.collectionName.find({ x : 1 })\n    db.collectionName.find().count()\n    \n    \n    db.collectionsName.find().skip(3).limit(2).sort({ x : 1 })\n    db.collectionName.drop()\n    db.collectionName.update({ x : 1}, { x : 999 })    第二个json对象替换掉原有的对象\n    db.collectionName.update({ z : 100}, { $set : { y : 99} })   只是更新了y值\n    db.collectionName.update({ y : 100}, { y : 999 }, true)    假如更新的数据不存在就插入新数据\n    db.collectionName.update({ x : 1}, { $set : { x : 999} }, false, true)   将第四个参数设为true，更新多条x为1的数据\n    db.collectionName.remove( { x : 2 } )   删除x为2的数据\n    \n    db.collectionName.getIndexes()    获取索引\n    db.collectioname.ensureIndex( { x ： 1 } )     创建索引   \n    db,collectionName.ensureIndex( { x : 1  }, { exprieAfterSeconds : 30} )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n    \n    \n    db.collectionName.ensureIndex( { \"article\"  : \"text\"} )  创建全文索引\n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"}})  全文查询，默认是或查询\n    db.collectionName.find( $text : { $search : { \" aa  bb  -cc \"}}   包含aa或bb，但不包含cc\n    db.collectionName.find( $text : { $search : { \"  \\\"aa\\\"  \\\" bb\\\"   \\\"cc\\\" \" } } )  反斜杠是转义符， 既包含   \n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"} }, { score :{$meta : \"textScore\"}}  ).sort({ score :{$meta : \"textScore\"})   相识度查询，文档里 会增加一个相识度的值，sort排序\n    \n    地理位置查询\n    db.collectionName.ensureIndex({ \"w\"  : \"2d\"})\n    db.collectionName.insert( { w : [ 12, 12]})   经纬度  -180--180  -90--90\n    db.collectionName.find( { w :{$near : [1,1]}})    返回一百个距离这个点最近的地点\n    db.collectionName.find( { w :{$ geowithin : { $box : [ [0,0], [3,3] ]} } })    矩形内的点\n    db.collectionName.find( { w :{$ geowithin : { $center : [ [0,0], 5 ]} } })   圆型\n    db.collectionName.find( { w :{$ geowithin : { $ ploygon : [ [0,0], [3,3], [5,5] ]} } })  多边形\n    db.runCommand({ geoNear : \"collectionName\", near : [1,3], maxDistance : 10, num: 10})\n\n\n  [1]: http://www.cnblogs.com/yangxia-test/p/3983271.html","source":"_posts/mongoDB常用知识整理.md","raw":"---\ntitle: mongoDB常用知识整理\ndate: \ntags: [mongoDB]\n---\n\n\n# mongoDB常用知识整理\n\n## 数据库恢复\n\n     cd bin \n进去bin目录，在该目录下有工具`mongorestore`，`mongoimport`，`mongodump`,`mongoexport`\n恢复数据库主要用`mongorestore`\n\n使用命令：`mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname`\n`--noIndexRestore`  是忽略数据库版本不同引起的索引问题\n`-d`后接数据库名\n`C://pathname`是数据库目录\n\n\n>注入此类请参考：[mongoDB数据库导入、导出、备份][1]\n\n## mongoDB基础命令\n\n    show dbs\n    use dbname\n    show collections\n    db.collectionName.insert({x :  1})\n    for(i = 3; i< 100; i++)db.collectionName.insert({ x ： 1})\n    db.collectionName.find()\n    db.collectionName.find({ x : 1 })\n    db.collectionName.find().count()\n    \n    \n    db.collectionsName.find().skip(3).limit(2).sort({ x : 1 })\n    db.collectionName.drop()\n    db.collectionName.update({ x : 1}, { x : 999 })    第二个json对象替换掉原有的对象\n    db.collectionName.update({ z : 100}, { $set : { y : 99} })   只是更新了y值\n    db.collectionName.update({ y : 100}, { y : 999 }, true)    假如更新的数据不存在就插入新数据\n    db.collectionName.update({ x : 1}, { $set : { x : 999} }, false, true)   将第四个参数设为true，更新多条x为1的数据\n    db.collectionName.remove( { x : 2 } )   删除x为2的数据\n    \n    db.collectionName.getIndexes()    获取索引\n    db.collectioname.ensureIndex( { x ： 1 } )     创建索引   \n    db,collectionName.ensureIndex( { x : 1  }, { exprieAfterSeconds : 30} )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n    \n    \n    db.collectionName.ensureIndex( { \"article\"  : \"text\"} )  创建全文索引\n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"}})  全文查询，默认是或查询\n    db.collectionName.find( $text : { $search : { \" aa  bb  -cc \"}}   包含aa或bb，但不包含cc\n    db.collectionName.find( $text : { $search : { \"  \\\"aa\\\"  \\\" bb\\\"   \\\"cc\\\" \" } } )  反斜杠是转义符， 既包含   \n    db.collectionName.find( $text : { $search : { \" aa  bb  cc \"} }, { score :{$meta : \"textScore\"}}  ).sort({ score :{$meta : \"textScore\"})   相识度查询，文档里 会增加一个相识度的值，sort排序\n    \n    地理位置查询\n    db.collectionName.ensureIndex({ \"w\"  : \"2d\"})\n    db.collectionName.insert( { w : [ 12, 12]})   经纬度  -180--180  -90--90\n    db.collectionName.find( { w :{$near : [1,1]}})    返回一百个距离这个点最近的地点\n    db.collectionName.find( { w :{$ geowithin : { $box : [ [0,0], [3,3] ]} } })    矩形内的点\n    db.collectionName.find( { w :{$ geowithin : { $center : [ [0,0], 5 ]} } })   圆型\n    db.collectionName.find( { w :{$ geowithin : { $ ploygon : [ [0,0], [3,3], [5,5] ]} } })  多边形\n    db.runCommand({ geoNear : \"collectionName\", near : [1,3], maxDistance : 10, num: 10})\n\n\n  [1]: http://www.cnblogs.com/yangxia-test/p/3983271.html","slug":"mongoDB常用知识整理","published":1,"updated":"2017-08-20T14:50:01.792Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f93000gw8qztuofls8j","content":"<h1 id=\"mongoDB常用知识整理\"><a href=\"#mongoDB常用知识整理\" class=\"headerlink\" title=\"mongoDB常用知识整理\"></a>mongoDB常用知识整理</h1><h2 id=\"数据库恢复\"><a href=\"#数据库恢复\" class=\"headerlink\" title=\"数据库恢复\"></a>数据库恢复</h2><pre><code>cd bin \n</code></pre><p>进去bin目录，在该目录下有工具<code>mongorestore</code>，<code>mongoimport</code>，<code>mongodump</code>,<code>mongoexport</code><br>恢复数据库主要用<code>mongorestore</code></p>\n<p>使用命令：<code>mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname</code><br><code>--noIndexRestore</code>  是忽略数据库版本不同引起的索引问题<br><code>-d</code>后接数据库名<br><code>C://pathname</code>是数据库目录</p>\n<blockquote>\n<p>注入此类请参考：<a href=\"http://www.cnblogs.com/yangxia-test/p/3983271.html\" target=\"_blank\" rel=\"external\">mongoDB数据库导入、导出、备份</a></p>\n</blockquote>\n<h2 id=\"mongoDB基础命令\"><a href=\"#mongoDB基础命令\" class=\"headerlink\" title=\"mongoDB基础命令\"></a>mongoDB基础命令</h2><pre><code>show dbs\nuse dbname\nshow collections\ndb.collectionName.insert({x :  1})\nfor(i = 3; i&lt; 100; i++)db.collectionName.insert({ x ： 1})\ndb.collectionName.find()\ndb.collectionName.find({ x : 1 })\ndb.collectionName.find().count()\n\n\ndb.collectionsName.find().skip(3).limit(2).sort({ x : 1 })\ndb.collectionName.drop()\ndb.collectionName.update({ x : 1}, { x : 999 })    第二个json对象替换掉原有的对象\ndb.collectionName.update({ z : 100}, { $set : { y : 99} })   只是更新了y值\ndb.collectionName.update({ y : 100}, { y : 999 }, true)    假如更新的数据不存在就插入新数据\ndb.collectionName.update({ x : 1}, { $set : { x : 999} }, false, true)   将第四个参数设为true，更新多条x为1的数据\ndb.collectionName.remove( { x : 2 } )   删除x为2的数据\n\ndb.collectionName.getIndexes()    获取索引\ndb.collectioname.ensureIndex( { x ： 1 } )     创建索引   \ndb,collectionName.ensureIndex( { x : 1  }, { exprieAfterSeconds : 30} )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n\n\ndb.collectionName.ensureIndex( { &quot;article&quot;  : &quot;text&quot;} )  创建全文索引\ndb.collectionName.find( $text : { $search : { &quot; aa  bb  cc &quot;}})  全文查询，默认是或查询\ndb.collectionName.find( $text : { $search : { &quot; aa  bb  -cc &quot;}}   包含aa或bb，但不包含cc\ndb.collectionName.find( $text : { $search : { &quot;  \\&quot;aa\\&quot;  \\&quot; bb\\&quot;   \\&quot;cc\\&quot; &quot; } } )  反斜杠是转义符， 既包含   \ndb.collectionName.find( $text : { $search : { &quot; aa  bb  cc &quot;} }, { score :{$meta : &quot;textScore&quot;}}  ).sort({ score :{$meta : &quot;textScore&quot;})   相识度查询，文档里 会增加一个相识度的值，sort排序\n\n地理位置查询\ndb.collectionName.ensureIndex({ &quot;w&quot;  : &quot;2d&quot;})\ndb.collectionName.insert( { w : [ 12, 12]})   经纬度  -180--180  -90--90\ndb.collectionName.find( { w :{$near : [1,1]}})    返回一百个距离这个点最近的地点\ndb.collectionName.find( { w :{$ geowithin : { $box : [ [0,0], [3,3] ]} } })    矩形内的点\ndb.collectionName.find( { w :{$ geowithin : { $center : [ [0,0], 5 ]} } })   圆型\ndb.collectionName.find( { w :{$ geowithin : { $ ploygon : [ [0,0], [3,3], [5,5] ]} } })  多边形\ndb.runCommand({ geoNear : &quot;collectionName&quot;, near : [1,3], maxDistance : 10, num: 10})\n</code></pre>","excerpt":"","more":"<h1 id=\"mongoDB常用知识整理\"><a href=\"#mongoDB常用知识整理\" class=\"headerlink\" title=\"mongoDB常用知识整理\"></a>mongoDB常用知识整理</h1><h2 id=\"数据库恢复\"><a href=\"#数据库恢复\" class=\"headerlink\" title=\"数据库恢复\"></a>数据库恢复</h2><pre><code>cd bin \n</code></pre><p>进去bin目录，在该目录下有工具<code>mongorestore</code>，<code>mongoimport</code>，<code>mongodump</code>,<code>mongoexport</code><br>恢复数据库主要用<code>mongorestore</code></p>\n<p>使用命令：<code>mongorestore -d  baifuCommune_db  --noIndexRestore   C://pathname</code><br><code>--noIndexRestore</code>  是忽略数据库版本不同引起的索引问题<br><code>-d</code>后接数据库名<br><code>C://pathname</code>是数据库目录</p>\n<blockquote>\n<p>注入此类请参考：<a href=\"http://www.cnblogs.com/yangxia-test/p/3983271.html\">mongoDB数据库导入、导出、备份</a></p>\n</blockquote>\n<h2 id=\"mongoDB基础命令\"><a href=\"#mongoDB基础命令\" class=\"headerlink\" title=\"mongoDB基础命令\"></a>mongoDB基础命令</h2><pre><code>show dbs\nuse dbname\nshow collections\ndb.collectionName.insert({x :  1})\nfor(i = 3; i&lt; 100; i++)db.collectionName.insert({ x ： 1})\ndb.collectionName.find()\ndb.collectionName.find({ x : 1 })\ndb.collectionName.find().count()\n\n\ndb.collectionsName.find().skip(3).limit(2).sort({ x : 1 })\ndb.collectionName.drop()\ndb.collectionName.update({ x : 1}, { x : 999 })    第二个json对象替换掉原有的对象\ndb.collectionName.update({ z : 100}, { $set : { y : 99} })   只是更新了y值\ndb.collectionName.update({ y : 100}, { y : 999 }, true)    假如更新的数据不存在就插入新数据\ndb.collectionName.update({ x : 1}, { $set : { x : 999} }, false, true)   将第四个参数设为true，更新多条x为1的数据\ndb.collectionName.remove( { x : 2 } )   删除x为2的数据\n\ndb.collectionName.getIndexes()    获取索引\ndb.collectioname.ensureIndex( { x ： 1 } )     创建索引   \ndb,collectionName.ensureIndex( { x : 1  }, { exprieAfterSeconds : 30} )  x为key，1表示升序，相反-1表示降序，exprieAfterSeconds 值为秒数，表示索引失效被删除的时间，到了时间不一定准时被删除\n\n\ndb.collectionName.ensureIndex( { &quot;article&quot;  : &quot;text&quot;} )  创建全文索引\ndb.collectionName.find( $text : { $search : { &quot; aa  bb  cc &quot;}})  全文查询，默认是或查询\ndb.collectionName.find( $text : { $search : { &quot; aa  bb  -cc &quot;}}   包含aa或bb，但不包含cc\ndb.collectionName.find( $text : { $search : { &quot;  \\&quot;aa\\&quot;  \\&quot; bb\\&quot;   \\&quot;cc\\&quot; &quot; } } )  反斜杠是转义符， 既包含   \ndb.collectionName.find( $text : { $search : { &quot; aa  bb  cc &quot;} }, { score :{$meta : &quot;textScore&quot;}}  ).sort({ score :{$meta : &quot;textScore&quot;})   相识度查询，文档里 会增加一个相识度的值，sort排序\n\n地理位置查询\ndb.collectionName.ensureIndex({ &quot;w&quot;  : &quot;2d&quot;})\ndb.collectionName.insert( { w : [ 12, 12]})   经纬度  -180--180  -90--90\ndb.collectionName.find( { w :{$near : [1,1]}})    返回一百个距离这个点最近的地点\ndb.collectionName.find( { w :{$ geowithin : { $box : [ [0,0], [3,3] ]} } })    矩形内的点\ndb.collectionName.find( { w :{$ geowithin : { $center : [ [0,0], 5 ]} } })   圆型\ndb.collectionName.find( { w :{$ geowithin : { $ ploygon : [ [0,0], [3,3], [5,5] ]} } })  多边形\ndb.runCommand({ geoNear : &quot;collectionName&quot;, near : [1,3], maxDistance : 10, num: 10})\n</code></pre>"},{"title":"node开发公众号踩过的坑","date":"2017-06-12T16:00:00.000Z","_content":"\n\n> 1\n\n**错误**：\n```js\nrequest = Promise.promisify( require( ‘request’ ) )\n```\n调用\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true} ).then (function ( response ) {\n          \n                var data = response[1];\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n         \n        })\n  \n   })\n```\n\n\t\n\t**报错**：属性expires undefined\n\t\n\t本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n\t分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n\t分析报错信息，一步步追根溯源，才能找出问题所在。\n\n**解决**：\nRequest的使用改为：\n\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                console.log(data);\n            } else {\n                reject()\n            }\n        });     \n   })\n```\n\n没有使用promise化的then函数\n\n\n> 2\n\n**问题**：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“\n为什么会这样呢？\n第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题\n进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。\n反复的检查：发现发送过去的小xml格式如下：\n<xml>\n<ToUserName><![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]></ToUserName>\n <FromUserName><![CDATA[  gh_4a832c2991ae ]]></FromUserName>\n</xml>\n\n![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？\n二话不说，直接测试一下….\n丫的，还果真如此！哈哈，xml格式还真TM的严格\n以后一定要注意![CDATA][ ]里首字母不能有空格！\n\n\n\n> 3\n\n**错误**：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”\n**解决**：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了\n","source":"_posts/node开发公众号踩过的坑.md","raw":"---\ntitle: node开发公众号踩过的坑 \ndate: 2017-06-13\ntags: [nodejs,bug]\n---\n\n\n> 1\n\n**错误**：\n```js\nrequest = Promise.promisify( require( ‘request’ ) )\n```\n调用\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true} ).then (function ( response ) {\n          \n                var data = response[1];\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n         \n        })\n  \n   })\n```\n\n\t\n\t**报错**：属性expires undefined\n\t\n\t本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n\t分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n\t分析报错信息，一步步追根溯源，才能找出问题所在。\n\n**解决**：\nRequest的使用改为：\n\n```js\nreturn new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                console.log(data);\n            } else {\n                reject()\n            }\n        });     \n   })\n```\n\n没有使用promise化的then函数\n\n\n> 2\n\n**问题**：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“\n为什么会这样呢？\n第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题\n进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。\n反复的检查：发现发送过去的小xml格式如下：\n<xml>\n<ToUserName><![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]></ToUserName>\n <FromUserName><![CDATA[  gh_4a832c2991ae ]]></FromUserName>\n</xml>\n\n![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？\n二话不说，直接测试一下….\n丫的，还果真如此！哈哈，xml格式还真TM的严格\n以后一定要注意![CDATA][ ]里首字母不能有空格！\n\n\n\n> 3\n\n**错误**：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”\n**解决**：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了\n","slug":"node开发公众号踩过的坑","published":1,"updated":"2017-06-13T15:21:35.040Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f9c000iw8qzlzadv5lc","content":"<blockquote>\n<p>1</p>\n</blockquote>\n<p><strong>错误</strong>：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request = <span class=\"built_in\">Promise</span>.promisify( <span class=\"built_in\">require</span>( ‘request’ ) )</span><br></pre></td></tr></table></figure></p>\n<p>调用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125; ).then (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"> response </span>) </span>&#123;</span><br><span class=\"line\">          </span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = response[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">         </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n<pre><code>**报错**：属性expires undefined\n\n本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n分析报错信息，一步步追根溯源，才能找出问题所在。\n</code></pre><p><strong>解决</strong>：<br>Request的使用改为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure>\n<p>没有使用promise化的then函数</p>\n<blockquote>\n<p>2</p>\n</blockquote>\n<p><strong>问题</strong>：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“<br>为什么会这样呢？<br>第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题<br>进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。<br>反复的检查：发现发送过去的小xml格式如下：</p>\n<xml><br><tousername>&lt;![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]&gt;</tousername><br> <fromusername>&lt;![CDATA[  gh_4a832c2991ae ]]&gt;</fromusername><br></xml>\n\n<p>![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？<br>二话不说，直接测试一下….<br>丫的，还果真如此！哈哈，xml格式还真TM的严格<br>以后一定要注意![CDATA][ ]里首字母不能有空格！</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<p><strong>错误</strong>：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”<br><strong>解决</strong>：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了</p>\n","excerpt":"","more":"<blockquote>\n<p>1</p>\n</blockquote>\n<p><strong>错误</strong>：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request = <span class=\"built_in\">Promise</span>.promisify( <span class=\"built_in\">require</span>( ‘request’ ) )</span><br></pre></td></tr></table></figure></p>\n<p>调用<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125; ).then (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"> response </span>) </span>&#123;</span><br><span class=\"line\">          </span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = response[<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">         </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure></p>\n<pre><code>**报错**：属性expires undefined\n\n本来以为request promise化后可以用then函数，所以一开始没有怀疑then的使用\n\n分析：expires没有定义，那么就跟data有关，data与response有关，假如没有获取的话，就会出错。那么，response是由request发请求后相应回来的数据，有理由怀疑是request使用的问题。\n分析报错信息，一步步追根溯源，才能找出问题所在。\n</code></pre><p><strong>解决</strong>：<br>Request的使用改为：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br></pre></td></tr></table></figure>\n<p>没有使用promise化的then函数</p>\n<blockquote>\n<p>2</p>\n</blockquote>\n<p><strong>问题</strong>：客户端收不到微信服务器发来的消息，并显示”该公众号暂时无法提供服务“<br>为什么会这样呢？<br>第一步推断：假如微信服务器没有在5秒内接收到服务器发来的消息，会自动断开连接，重发请求，重复三次。所以可能是服务器或者代码程序的问题<br>进一步推断： 可是程序没有报错，昨天微信服务器是可以接受到第三方服务器的消息的。<br>反复的检查：发现发送过去的小xml格式如下：</p>\n<xml><br><ToUserName>&lt;![CDATA[  o1PAWszjPU3zudiu7yxmNg7hLp00 ]]&gt;</ToUserName><br> <FromUserName>&lt;![CDATA[  gh_4a832c2991ae ]]&gt;</FromUserName><br></xml>\n\n<p>![CDATA][ ]里的内容是无法被服务器解析的，可是有一点很显眼，【】里面userId号的前面多了个空格，难道它连空格也不去除直接导致userId不正确，找不到用户吗？？<br>二话不说，直接测试一下….<br>丫的，还果真如此！哈哈，xml格式还真TM的严格<br>以后一定要注意![CDATA][ ]里首字母不能有空格！</p>\n<blockquote>\n<p>3</p>\n</blockquote>\n<p><strong>错误</strong>：上传永久素材时，回复客户端是出错，“改公众号无法提供服务”<br><strong>解决</strong>：不一定是代码的问题，这是由于微信服务器在这一块不稳定，再试多一次就好了</p>\n"},{"title":"js控制运动框架animation","date":"2017-06-19T16:33:31.620Z","_content":"\n## js控制运动框架animation\n\n目标：做一个通过按钮控制旋转的动画，下面的是效果图：\n![image](http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&shareKey=fb6cd7994e20ce6c6ea7f94a1609b490)\n\n想想都很简单，就写个css框架，然后用js给img节点添加animation样式。\n所以一开始是这样的的：\n```css\n/*旋转动画*/\n@keyframes rotation{\n\tfrom{\n\t\ttransform: rotate(0deg);\n\t\t-webkit-transform: rotate(0deg);\n\t\t-moz-transform: rotate(0deg);\n\t\t-o-transform: rotate(0deg);\n\t}\n\tto{\n\t\ttransform: rotate(360deg);\n\t\t-webkit-transform: rotate(360deg);\n\t\t-moz-transform: rotate(360deg);\n\t\t-o-transform: rotate(360deg);\n\t}\n}\n```\n```js\n$positer.css('animation', 'rotation 30s linear infinite'); //开始旋转动画\n\n$positer.css('animation', ''); //停止旋转动画\n```\n\n然而，问题就来了。停止的时候图片直接回归原始状态。  \n这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？\n好说干就干\n```js\nvar deg = 0;  //记录旋转角度\nvar rotateTimer;\n\nfunction startRotation($obj, speed) {\n\tclearInterval(rotateTimer);\n\trotateTimer = setInterval(function(){\n\t\tdeg++;\n\t\tif(deg >= 360){\n\t\t\tdeg = 0\n\t\t}\n\t\t\n\t\t$obj.css('-webkit-transform', 'rotate('+ deg +'deg)');\n\t}, speed)\n\n}\nfunction stopRotation() {\n\tclearInterval(rotateTimer);\n}\n\n//调用\nvar $positer = $('#playerPage .positer img');\n\nstartRotation($positer, 80); //转\nstopRotation() //停\n```\n哈哈，就是这么简单。  \n。。。  \n阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。\n\n一百度，果真有！\n```css\nanimation-play-state: paused || running;\n```\n\n代码：\n```css\n#playerPage .positer img{\n    animation: rotation 30s linear infinite;\n    -webkit-animation: rotation 30s linear infinite;\n    -moz-animation: rotation 30s linear infinite;\n    animation-play-state: paused;\n    -webkit-animation-play-state: paused;\n    -moz-animation-play-state: paused;\n}\n```\n```js\n$positer.css('animation-play-state', 'running'); //开始旋转动画\n\n$positer.css('animation-play-state', 'paused'); //停止旋转\n```","source":"_posts/js控制运动框架animation.md","raw":"---\ntitle: js控制运动框架animation\ndate: \ntags: [js,css,animation]\n---\n\n## js控制运动框架animation\n\n目标：做一个通过按钮控制旋转的动画，下面的是效果图：\n![image](http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&shareKey=fb6cd7994e20ce6c6ea7f94a1609b490)\n\n想想都很简单，就写个css框架，然后用js给img节点添加animation样式。\n所以一开始是这样的的：\n```css\n/*旋转动画*/\n@keyframes rotation{\n\tfrom{\n\t\ttransform: rotate(0deg);\n\t\t-webkit-transform: rotate(0deg);\n\t\t-moz-transform: rotate(0deg);\n\t\t-o-transform: rotate(0deg);\n\t}\n\tto{\n\t\ttransform: rotate(360deg);\n\t\t-webkit-transform: rotate(360deg);\n\t\t-moz-transform: rotate(360deg);\n\t\t-o-transform: rotate(360deg);\n\t}\n}\n```\n```js\n$positer.css('animation', 'rotation 30s linear infinite'); //开始旋转动画\n\n$positer.css('animation', ''); //停止旋转动画\n```\n\n然而，问题就来了。停止的时候图片直接回归原始状态。  \n这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？\n好说干就干\n```js\nvar deg = 0;  //记录旋转角度\nvar rotateTimer;\n\nfunction startRotation($obj, speed) {\n\tclearInterval(rotateTimer);\n\trotateTimer = setInterval(function(){\n\t\tdeg++;\n\t\tif(deg >= 360){\n\t\t\tdeg = 0\n\t\t}\n\t\t\n\t\t$obj.css('-webkit-transform', 'rotate('+ deg +'deg)');\n\t}, speed)\n\n}\nfunction stopRotation() {\n\tclearInterval(rotateTimer);\n}\n\n//调用\nvar $positer = $('#playerPage .positer img');\n\nstartRotation($positer, 80); //转\nstopRotation() //停\n```\n哈哈，就是这么简单。  \n。。。  \n阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。\n\n一百度，果真有！\n```css\nanimation-play-state: paused || running;\n```\n\n代码：\n```css\n#playerPage .positer img{\n    animation: rotation 30s linear infinite;\n    -webkit-animation: rotation 30s linear infinite;\n    -moz-animation: rotation 30s linear infinite;\n    animation-play-state: paused;\n    -webkit-animation-play-state: paused;\n    -moz-animation-play-state: paused;\n}\n```\n```js\n$positer.css('animation-play-state', 'running'); //开始旋转动画\n\n$positer.css('animation-play-state', 'paused'); //停止旋转\n```","slug":"js控制运动框架animation","published":1,"updated":"2017-06-19T16:41:02.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f9m000kw8qzvq0cqofm","content":"<h2 id=\"js控制运动框架animation\"><a href=\"#js控制运动框架animation\" class=\"headerlink\" title=\"js控制运动框架animation\"></a>js控制运动框架animation</h2><p>目标：做一个通过按钮控制旋转的动画，下面的是效果图：<br><img src=\"http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&amp;shareKey=fb6cd7994e20ce6c6ea7f94a1609b490\" alt=\"image\"></p>\n<p>想想都很简单，就写个css框架，然后用js给img节点添加animation样式。<br>所以一开始是这样的的：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*旋转动画*/</span></span><br><span class=\"line\">@<span class=\"keyword\">keyframes</span> rotation&#123;</span><br><span class=\"line\">\t<span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.css(<span class=\"string\">'animation'</span>, <span class=\"string\">'rotation 30s linear infinite'</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.css(<span class=\"string\">'animation'</span>, <span class=\"string\">''</span>); <span class=\"comment\">//停止旋转动画</span></span><br></pre></td></tr></table></figure>\n<p>然而，问题就来了。停止的时候图片直接回归原始状态。<br>这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？<br>好说干就干<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deg = <span class=\"number\">0</span>;  <span class=\"comment\">//记录旋转角度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rotateTimer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startRotation</span>(<span class=\"params\">$obj, speed</span>) </span>&#123;</span><br><span class=\"line\">\tclearInterval(rotateTimer);</span><br><span class=\"line\">\trotateTimer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\tdeg++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(deg &gt;= <span class=\"number\">360</span>)&#123;</span><br><span class=\"line\">\t\t\tdeg = <span class=\"number\">0</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t$obj.css(<span class=\"string\">'-webkit-transform'</span>, <span class=\"string\">'rotate('</span>+ deg +<span class=\"string\">'deg)'</span>);</span><br><span class=\"line\">\t&#125;, speed)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stopRotation</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tclearInterval(rotateTimer);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $positer = $(<span class=\"string\">'#playerPage .positer img'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">startRotation($positer, <span class=\"number\">80</span>); <span class=\"comment\">//转</span></span><br><span class=\"line\">stopRotation() <span class=\"comment\">//停</span></span><br></pre></td></tr></table></figure></p>\n<p>哈哈，就是这么简单。<br>。。。<br>阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。</p>\n<p>一百度，果真有！<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-play-state: paused || running;</span><br></pre></td></tr></table></figure></p>\n<p>代码：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#playerPage</span> <span class=\"selector-class\">.positer</span> <span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">-moz-animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-animation-play-state</span>: paused;</span><br><span class=\"line\">    <span class=\"attribute\">-moz-animation-play-state</span>: paused;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.css(<span class=\"string\">'animation-play-state'</span>, <span class=\"string\">'running'</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.css(<span class=\"string\">'animation-play-state'</span>, <span class=\"string\">'paused'</span>); <span class=\"comment\">//停止旋转</span></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"js控制运动框架animation\"><a href=\"#js控制运动框架animation\" class=\"headerlink\" title=\"js控制运动框架animation\"></a>js控制运动框架animation</h2><p>目标：做一个通过按钮控制旋转的动画，下面的是效果图：<br><img src=\"http://note.youdao.com/yws/api/personal/file/221639B83D0B4AD3A49229F58A468023?method=download&amp;shareKey=fb6cd7994e20ce6c6ea7f94a1609b490\" alt=\"image\"></p>\n<p>想想都很简单，就写个css框架，然后用js给img节点添加animation样式。<br>所以一开始是这样的的：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*旋转动画*/</span></span><br><span class=\"line\">@<span class=\"keyword\">keyframes</span> rotation&#123;</span><br><span class=\"line\">\t<span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">rotate</span>(0deg);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"selector-tag\">to</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t\t<span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">rotate</span>(360deg);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.css(<span class=\"string\">'animation'</span>, <span class=\"string\">'rotation 30s linear infinite'</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.css(<span class=\"string\">'animation'</span>, <span class=\"string\">''</span>); <span class=\"comment\">//停止旋转动画</span></span><br></pre></td></tr></table></figure>\n<p>然而，问题就来了。停止的时候图片直接回归原始状态。<br>这得咋办呢？难道要写一个动画框架，用定时器去使transform的rotate去转动吗？<br>好说干就干<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> deg = <span class=\"number\">0</span>;  <span class=\"comment\">//记录旋转角度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> rotateTimer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startRotation</span>(<span class=\"params\">$obj, speed</span>) </span>&#123;</span><br><span class=\"line\">\tclearInterval(rotateTimer);</span><br><span class=\"line\">\trotateTimer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\tdeg++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(deg &gt;= <span class=\"number\">360</span>)&#123;</span><br><span class=\"line\">\t\t\tdeg = <span class=\"number\">0</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t$obj.css(<span class=\"string\">'-webkit-transform'</span>, <span class=\"string\">'rotate('</span>+ deg +<span class=\"string\">'deg)'</span>);</span><br><span class=\"line\">\t&#125;, speed)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stopRotation</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\tclearInterval(rotateTimer);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $positer = $(<span class=\"string\">'#playerPage .positer img'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">startRotation($positer, <span class=\"number\">80</span>); <span class=\"comment\">//转</span></span><br><span class=\"line\">stopRotation() <span class=\"comment\">//停</span></span><br></pre></td></tr></table></figure></p>\n<p>哈哈，就是这么简单。<br>。。。<br>阿西吧，旧的问题解决了，只是新的问题来的开始而已。这时，播放的动画没有想animation那么流畅，一卡一卡的。天啊，这怎么解决，假如有个属性控制animation的播放不就好了嘛，那用搞这么多事情。</p>\n<p>一百度，果真有！<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-play-state: paused || running;</span><br></pre></td></tr></table></figure></p>\n<p>代码：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#playerPage</span> <span class=\"selector-class\">.positer</span> <span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">-moz-animation</span>: rotation <span class=\"number\">30s</span> linear infinite;</span><br><span class=\"line\">    <span class=\"attribute\">animation-play-state</span>: paused;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-animation-play-state</span>: paused;</span><br><span class=\"line\">    <span class=\"attribute\">-moz-animation-play-state</span>: paused;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$positer.css(<span class=\"string\">'animation-play-state'</span>, <span class=\"string\">'running'</span>); <span class=\"comment\">//开始旋转动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">$positer.css(<span class=\"string\">'animation-play-state'</span>, <span class=\"string\">'paused'</span>); <span class=\"comment\">//停止旋转</span></span><br></pre></td></tr></table></figure>"},{"title":"source map小知识","date":"2018-04-09T11:36:00.000Z","_content":"\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1524580962476&di=2bb2f9b1075674dbb2b22354e010b724&imgtype=0&src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg)\n\n\n## 前言\n前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：\n> 1. 合并能减少http请求数\n> 2. 压缩可以减少http请求量\n> 3. 经过编译后的得到的js，如es6，ts\n\n<!--more-->\n\n## source map文件\nsource map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件\n\n大概长这个样子\n```\n{\n    \"version\": 3,\n    \"sources\": [\"hello.js\"],\n    \"names\": [\"sayHello\", \"greeting\", \"Name\", \"console\", \"log\"],\n    \"mappings\": \"AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD\",\n    \"file\": \"hello.min.js\",\n    \"sourceRoot\": \"\",\n    \"sourcesContent\": [\"function sayHello()\\n{\\n    var name = \\\"Fundebug\\\";\\n    var greeting = \\\"Hello, \\\" + Name;\\n    console.log(greeting);\\n}\\n\\nsayHello();\\n\"]\n}\n```\n> version：Source Map的版本号。  \nsources：转换前的文件列表。  \nnames：转换前的所有变量名和属性名。  \nmappings：记录位置信息的字符串，经过编码。 \nfile：(可选)转换后的文件名。  \nsourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。 \nsourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。\n\nsource map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联\n```\nfunction o(){var o=\"Hello, \"+Name;console.log(o)}o();\n//# sourceMappingURL=hello.min.js.map\n```\n\n## webpack配置\nwebpack会把代码编译压缩，所以debug异常也需要source map文件的支持\n```\ndevtool: '#cheap-module-source-map'\n```\n\n要注意的是devtool配置source-map，常用的有一下几种模式：\n\n\n模式 | 作用\n---|---\neval | 每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.\nsource-map | 生成一个 SourceMap 文件\nhidden-source-map | 和 source-map 一样，但不会在 bundle 末尾追加注释\ninline-source-map | 生成一个 DataUrl 形式的 SourceMap 文件\neval-source-map | 每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap \ncheap-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）\ncheap-module-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。\n\n> 其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map\n\n* 在开发模式下  \n选择：cheap-module-source-map\n> 这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。\n\n* 生产模式下\n* 选择：cheap-module-source-map\n\n原因如下：\n\n1. 使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。\n2. 使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。\n3. 使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。\n4. 使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。","source":"_posts/source map小知识.md","raw":"---\ntitle: source map小知识\ndate: 2018-04-09 19:36:00\ntags: [webpack, sourceMap]\ncategories: [工具]\n---\n\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1524580962476&di=2bb2f9b1075674dbb2b22354e010b724&imgtype=0&src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg)\n\n\n## 前言\n前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：\n> 1. 合并能减少http请求数\n> 2. 压缩可以减少http请求量\n> 3. 经过编译后的得到的js，如es6，ts\n\n<!--more-->\n\n## source map文件\nsource map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件\n\n大概长这个样子\n```\n{\n    \"version\": 3,\n    \"sources\": [\"hello.js\"],\n    \"names\": [\"sayHello\", \"greeting\", \"Name\", \"console\", \"log\"],\n    \"mappings\": \"AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD\",\n    \"file\": \"hello.min.js\",\n    \"sourceRoot\": \"\",\n    \"sourcesContent\": [\"function sayHello()\\n{\\n    var name = \\\"Fundebug\\\";\\n    var greeting = \\\"Hello, \\\" + Name;\\n    console.log(greeting);\\n}\\n\\nsayHello();\\n\"]\n}\n```\n> version：Source Map的版本号。  \nsources：转换前的文件列表。  \nnames：转换前的所有变量名和属性名。  \nmappings：记录位置信息的字符串，经过编码。 \nfile：(可选)转换后的文件名。  \nsourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。 \nsourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。\n\nsource map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联\n```\nfunction o(){var o=\"Hello, \"+Name;console.log(o)}o();\n//# sourceMappingURL=hello.min.js.map\n```\n\n## webpack配置\nwebpack会把代码编译压缩，所以debug异常也需要source map文件的支持\n```\ndevtool: '#cheap-module-source-map'\n```\n\n要注意的是devtool配置source-map，常用的有一下几种模式：\n\n\n模式 | 作用\n---|---\neval | 每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.\nsource-map | 生成一个 SourceMap 文件\nhidden-source-map | 和 source-map 一样，但不会在 bundle 末尾追加注释\ninline-source-map | 生成一个 DataUrl 形式的 SourceMap 文件\neval-source-map | 每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap \ncheap-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）\ncheap-module-source-map | 生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。\n\n> 其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map\n\n* 在开发模式下  \n选择：cheap-module-source-map\n> 这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。\n\n* 生产模式下\n* 选择：cheap-module-source-map\n\n原因如下：\n\n1. 使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。\n2. 使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。\n3. 使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。\n4. 使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。","slug":"source map小知识","published":1,"updated":"2018-04-24T11:56:28.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f9r000mw8qzyoi1fuxe","content":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1524580962476&amp;di=2bb2f9b1075674dbb2b22354e010b724&amp;imgtype=0&amp;src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：</p>\n<blockquote>\n<ol>\n<li>合并能减少http请求数</li>\n<li>压缩可以减少http请求量</li>\n<li>经过编译后的得到的js，如es6，ts</li>\n</ol>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"source-map文件\"><a href=\"#source-map文件\" class=\"headerlink\" title=\"source map文件\"></a>source map文件</h2><p>source map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件</p>\n<p>大概长这个样子<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sources\"</span>: [<span class=\"string\">\"hello.js\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"names\"</span>: [<span class=\"string\">\"sayHello\"</span>, <span class=\"string\">\"greeting\"</span>, <span class=\"string\">\"Name\"</span>, <span class=\"string\">\"console\"</span>, <span class=\"string\">\"log\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"mappings\"</span>: <span class=\"string\">\"AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"file\"</span>: <span class=\"string\">\"hello.min.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sourceRoot\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sourcesContent\"</span>: [<span class=\"string\">\"function sayHello()\\n&#123;\\n    var name = \\\"Fundebug\\\";\\n    var greeting = \\\"Hello, \\\" + Name;\\n    console.log(greeting);\\n&#125;\\n\\nsayHello();\\n\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>version：Source Map的版本号。<br>sources：转换前的文件列表。<br>names：转换前的所有变量名和属性名。<br>mappings：记录位置信息的字符串，经过编码。<br>file：(可选)转换后的文件名。<br>sourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。<br>sourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。</p>\n</blockquote>\n<p>source map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">o</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> o=<span class=\"string\">\"Hello, \"</span>+Name;<span class=\"built_in\">console</span>.log(o)&#125;o();</span><br><span class=\"line\"><span class=\"comment\">//# sourceMappingURL=hello.min.js.map</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"webpack配置\"><a href=\"#webpack配置\" class=\"headerlink\" title=\"webpack配置\"></a>webpack配置</h2><p>webpack会把代码编译压缩，所以debug异常也需要source map文件的支持<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">devtool:</span> <span class=\"string\">'#cheap-module-source-map'</span></span><br></pre></td></tr></table></figure></p>\n<p>要注意的是devtool配置source-map，常用的有一下几种模式：</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>eval</td>\n<td>每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.</td>\n</tr>\n<tr>\n<td>source-map</td>\n<td>生成一个 SourceMap 文件</td>\n</tr>\n<tr>\n<td>hidden-source-map</td>\n<td>和 source-map 一样，但不会在 bundle 末尾追加注释</td>\n</tr>\n<tr>\n<td>inline-source-map</td>\n<td>生成一个 DataUrl 形式的 SourceMap 文件</td>\n</tr>\n<tr>\n<td>eval-source-map</td>\n<td>每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap </td>\n</tr>\n<tr>\n<td>cheap-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）</td>\n</tr>\n<tr>\n<td>cheap-module-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map</p>\n</blockquote>\n<ul>\n<li><p>在开发模式下<br>选择：cheap-module-source-map</p>\n<blockquote>\n<p>这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。</p>\n</blockquote>\n</li>\n<li><p>生产模式下</p>\n</li>\n<li>选择：cheap-module-source-map</li>\n</ul>\n<p>原因如下：</p>\n<ol>\n<li>使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。</li>\n<li>使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。</li>\n<li>使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。</li>\n<li>使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。</li>\n</ol>\n","excerpt":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1524580962476&amp;di=2bb2f9b1075674dbb2b22354e010b724&amp;imgtype=0&amp;src=http%3A%2F%2Fwww.d1net.com%2Fuploadfile%2F2014%2F1215%2F20141215110355156.jpeg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前端项目的上线部署前，都需要经过合并压缩后，才能上线。这样会导致的一个问题就是，经过变换的代码，debug没办法定位到代码出错的准确位置。关于代码要压缩变换的原因：</p>\n<blockquote>\n<ol>\n<li>合并能减少http请求数</li>\n<li>压缩可以减少http请求量</li>\n<li>经过编译后的得到的js，如es6，ts</li>\n</ol>\n</blockquote>","more":"<h2 id=\"source-map文件\"><a href=\"#source-map文件\" class=\"headerlink\" title=\"source map文件\"></a>source map文件</h2><p>source map文件就是用来定位代码的位置的，实质就是个记录代码位置信息的文件</p>\n<p>大概长这个样子<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sources\"</span>: [<span class=\"string\">\"hello.js\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"names\"</span>: [<span class=\"string\">\"sayHello\"</span>, <span class=\"string\">\"greeting\"</span>, <span class=\"string\">\"Name\"</span>, <span class=\"string\">\"console\"</span>, <span class=\"string\">\"log\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"mappings\"</span>: <span class=\"string\">\"AAAA,QAASA,KAEL,GACIC,GAAW,UAAYC,IAC3BC,SAAQC,IAAIH,GAGhBD\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"file\"</span>: <span class=\"string\">\"hello.min.js\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sourceRoot\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"sourcesContent\"</span>: [<span class=\"string\">\"function sayHello()\\n&#123;\\n    var name = \\\"Fundebug\\\";\\n    var greeting = \\\"Hello, \\\" + Name;\\n    console.log(greeting);\\n&#125;\\n\\nsayHello();\\n\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>version：Source Map的版本号。<br>sources：转换前的文件列表。<br>names：转换前的所有变量名和属性名。<br>mappings：记录位置信息的字符串，经过编码。<br>file：(可选)转换后的文件名。<br>sourceRoot：(可选)转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。<br>sourcesContent:(可选)转换前的文件内容列表，与sources列表依次对应。</p>\n</blockquote>\n<p>source map文件会在压缩代码里面以url或者dataURK的形式与压缩文件产生关联<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">o</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> o=<span class=\"string\">\"Hello, \"</span>+Name;<span class=\"built_in\">console</span>.log(o)&#125;o();</span><br><span class=\"line\"><span class=\"comment\">//# sourceMappingURL=hello.min.js.map</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"webpack配置\"><a href=\"#webpack配置\" class=\"headerlink\" title=\"webpack配置\"></a>webpack配置</h2><p>webpack会把代码编译压缩，所以debug异常也需要source map文件的支持<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">devtool:</span> <span class=\"string\">'#cheap-module-source-map'</span></span><br></pre></td></tr></table></figure></p>\n<p>要注意的是devtool配置source-map，常用的有一下几种模式：</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>eval</td>\n<td>每个 module 会封装到 eval 里包裹起来执行，并且会在末尾追加注释 //@ sourceURL.</td>\n</tr>\n<tr>\n<td>source-map</td>\n<td>生成一个 SourceMap 文件</td>\n</tr>\n<tr>\n<td>hidden-source-map</td>\n<td>和 source-map 一样，但不会在 bundle 末尾追加注释</td>\n</tr>\n<tr>\n<td>inline-source-map</td>\n<td>生成一个 DataUrl 形式的 SourceMap 文件</td>\n</tr>\n<tr>\n<td>eval-source-map</td>\n<td>每个 module 会通过 eval() 来执行，并且生成一个 DataUrl 形式的 SourceMap </td>\n</tr>\n<tr>\n<td>cheap-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，不包含 loader 的 sourcemap（譬如 babel 的 sourcemap）</td>\n</tr>\n<tr>\n<td>cheap-module-source-map</td>\n<td>生成一个没有列信息（column-mappings）的 SourceMaps 文件，同时 loader 的 sourcemap 也被简化为只包含对应行的。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>其中eval、inline、hidden这些关键字可以随意组合，如cheap-module-eval-source-map</p>\n</blockquote>\n<ul>\n<li><p>在开发模式下<br>选择：cheap-module-source-map</p>\n<blockquote>\n<p>这里需要主要的是，官方是建议使用cheap-module-eval-source-map,但是这个模式在chrome下没办法定位到源码，不符合开发要求，所以还是选择cheap-module-source-map，实在不行就应用source-map，肯定能定位到源码，对于调试有很大的作用。</p>\n</blockquote>\n</li>\n<li><p>生产模式下</p>\n</li>\n<li>选择：cheap-module-source-map</li>\n</ul>\n<p>原因如下：</p>\n<ol>\n<li>使用 cheap 模式可以大幅提高 souremap 生成的效率。大部分情况我们调试并不关心列信息，而且就算 sourcemap 没有列，有些浏览器引擎（例如 v8） 也会给出列信息。</li>\n<li>使用 eval 方式可大幅提高持续构建效率。参考官方文档提供的速度对比表格可以看到 eval 模式的编译速度很快。</li>\n<li>使用 module 可支持 babel 这种预编译工具（在 webpack 里做为 loader 使用）。</li>\n<li>使用 inline-source-map 模式可以减少网络请求。这种模式开启 DataUrl 本身包含完整 sourcemap 信息，并不需要像 sourceURL 那样，浏览器需要发送一个完整请求去获取 sourcemap 文件，这会略微提高点效率。而生产环境中则不宜用 eval，这样会让文件变得极大。</li>\n</ol>"},{"title":"webpack引入eslint","date":"2018-04-08T13:50:50.000Z","_content":"\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525174897&di=c0a06449ab438e83c3a8f2a245203535&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg)\n\n# 前言\neslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范\n\n<!--more-->\n\n在webpack搭建的项目中引入eslint语法检测，分以下两步  \n\n**首先node_modules下有以下包**  \neslint   \neslint-friendly-formatter : 格式化检测输出内容  \neslint-loader : webpack的支持eslint检测的加载器\neslint-config-standard ：标准语法规则  \n// 以下都是为eslint提供环境或者语法支持的包  \neslint-plugin-html  \neslint-plugin-import  \neslint-plugin-node  \neslint-plugin-promise  \neslint-plugin-standard\n\n\n1. 根目录下新建.eslintrc.js\n\n```\nnpm i -g eslint\neslint --init\n选择standard标准\n```\n.eslintrc.js配置\n```\n    // 设置为true，eslint就不会再往父级目录找配置文件了\n    root: true,\n    // 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点\n    parser: 'babel-eslint',\n    // 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过\n    env: {\n        browser: true,\n        node: true,\n        es6: true\n    },\n    // 标准规则模式\n    extends: \"standard\",\n    // eslint-plugin-html插件，在.html和.vue下提供eslint检测\n    plugins: [\n        'html'\n    ],\n    /*\n        'off'/0 关闭\n        'warn'/1 警告级别\n        'error'/2 错误级别\n    */\n    rules: {\n        'indent': ['error', 4, {\n            'SwitchCase': 1,\n            'VariableDeclarator': { 'var': 1, 'let': 1, 'const': 1 }\n        }],\n        'no-trailing-spaces': 'error',\n        'space-before-function-paren': ['error', 'never'],\n        'key-spacing': ['error', { \n            'beforeColon': false,\n            'afterColon': true\n        }],\n        'object-curly-newline': ['error', { \n            'ObjectExpression': 'always',\n            'ObjectPattern': 'never'\n        }],\n        'quotes': ['error', 'single'],\n        'curly': 'error',\n        'object-property-newline': 'error',\n        'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',\n        'no-cond-assign': ['error', 'always'],\n        'no-constant-condition': ['error', { 'checkLoops': false }],\n        'no-empty':['error'],\n        'no-var': ['error'],\n        'line-comment-position': ['error', { 'position': 'above' }]\n    }\n```\n可以查看一些常用的配置：[https://www.jianshu.com/p/a4966ddf9b0c](https://www.jianshu.com/p/a4966ddf9b0c)\n\n2. 在webpack中配置\n```\nmodule: {\n    rules: [\n        {\n            test: /\\.(js|vue)$/,\n            loader: 'eslint-loader',\n            // 强制在编译前检测\n            enforce: 'pre',\n            // 不包括的文件，所以可以不用.eslintignore文件\n            exclude: [path.resolve(__dirname, '../node_modules')],\n            options: {\n                formatter: require('eslint-friendly-formatter'),\n                // 有错自动修复，注意webpack解决不了会陷入死循环\n                fix: true,\n                // 有语法错误编译照样通过\n                emitWarning: true\n            }\n        }\n    ]\n}\n```","source":"_posts/webpack引入eslint.md","raw":"---\ntitle: webpack引入eslint\ndate: 2018-04-08 21:50:50\ntags: [webpack, eslint]\ncategories: [工具]\n---\n\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525174897&di=c0a06449ab438e83c3a8f2a245203535&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg)\n\n# 前言\neslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范\n\n<!--more-->\n\n在webpack搭建的项目中引入eslint语法检测，分以下两步  \n\n**首先node_modules下有以下包**  \neslint   \neslint-friendly-formatter : 格式化检测输出内容  \neslint-loader : webpack的支持eslint检测的加载器\neslint-config-standard ：标准语法规则  \n// 以下都是为eslint提供环境或者语法支持的包  \neslint-plugin-html  \neslint-plugin-import  \neslint-plugin-node  \neslint-plugin-promise  \neslint-plugin-standard\n\n\n1. 根目录下新建.eslintrc.js\n\n```\nnpm i -g eslint\neslint --init\n选择standard标准\n```\n.eslintrc.js配置\n```\n    // 设置为true，eslint就不会再往父级目录找配置文件了\n    root: true,\n    // 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点\n    parser: 'babel-eslint',\n    // 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过\n    env: {\n        browser: true,\n        node: true,\n        es6: true\n    },\n    // 标准规则模式\n    extends: \"standard\",\n    // eslint-plugin-html插件，在.html和.vue下提供eslint检测\n    plugins: [\n        'html'\n    ],\n    /*\n        'off'/0 关闭\n        'warn'/1 警告级别\n        'error'/2 错误级别\n    */\n    rules: {\n        'indent': ['error', 4, {\n            'SwitchCase': 1,\n            'VariableDeclarator': { 'var': 1, 'let': 1, 'const': 1 }\n        }],\n        'no-trailing-spaces': 'error',\n        'space-before-function-paren': ['error', 'never'],\n        'key-spacing': ['error', { \n            'beforeColon': false,\n            'afterColon': true\n        }],\n        'object-curly-newline': ['error', { \n            'ObjectExpression': 'always',\n            'ObjectPattern': 'never'\n        }],\n        'quotes': ['error', 'single'],\n        'curly': 'error',\n        'object-property-newline': 'error',\n        'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',\n        'no-cond-assign': ['error', 'always'],\n        'no-constant-condition': ['error', { 'checkLoops': false }],\n        'no-empty':['error'],\n        'no-var': ['error'],\n        'line-comment-position': ['error', { 'position': 'above' }]\n    }\n```\n可以查看一些常用的配置：[https://www.jianshu.com/p/a4966ddf9b0c](https://www.jianshu.com/p/a4966ddf9b0c)\n\n2. 在webpack中配置\n```\nmodule: {\n    rules: [\n        {\n            test: /\\.(js|vue)$/,\n            loader: 'eslint-loader',\n            // 强制在编译前检测\n            enforce: 'pre',\n            // 不包括的文件，所以可以不用.eslintignore文件\n            exclude: [path.resolve(__dirname, '../node_modules')],\n            options: {\n                formatter: require('eslint-friendly-formatter'),\n                // 有错自动修复，注意webpack解决不了会陷入死循环\n                fix: true,\n                // 有语法错误编译照样通过\n                emitWarning: true\n            }\n        }\n    ]\n}\n```","slug":"webpack引入eslint","published":1,"updated":"2018-04-24T11:41:13.831Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7f9y000nw8qz5aydsnp0","content":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525174897&amp;di=c0a06449ab438e83c3a8f2a245203535&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>eslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范</p>\n<a id=\"more\"></a>\n<p>在webpack搭建的项目中引入eslint语法检测，分以下两步  </p>\n<p><strong>首先node_modules下有以下包</strong><br>eslint<br>eslint-friendly-formatter : 格式化检测输出内容<br>eslint-loader : webpack的支持eslint检测的加载器<br>eslint-config-standard ：标准语法规则<br>// 以下都是为eslint提供环境或者语法支持的包<br>eslint-plugin-html<br>eslint-plugin-import<br>eslint-plugin-node<br>eslint-plugin-promise<br>eslint-plugin-standard</p>\n<ol>\n<li>根目录下新建.eslintrc.js</li>\n</ol>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> -g eslint</span><br><span class=\"line\">eslint --init</span><br><span class=\"line\">选择standard标准</span><br></pre></td></tr></table></figure>\n<p>.eslintrc.js配置<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置为true，eslint就不会再往父级目录找配置文件了</span></span><br><span class=\"line\"><span class=\"string\">root:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点</span></span><br><span class=\"line\"><span class=\"string\">parser:</span> <span class=\"string\">'babel-eslint'</span>,</span><br><span class=\"line\"><span class=\"comment\">// 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过</span></span><br><span class=\"line\"><span class=\"string\">env:</span> &#123;</span><br><span class=\"line\"><span class=\"symbol\">    browser:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    node:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    es6:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 标准规则模式</span></span><br><span class=\"line\"><span class=\"string\">extends:</span> <span class=\"string\">\"standard\"</span>,</span><br><span class=\"line\"><span class=\"comment\">// eslint-plugin-html插件，在.html和.vue下提供eslint检测</span></span><br><span class=\"line\"><span class=\"string\">plugins:</span> [</span><br><span class=\"line\">    <span class=\"string\">'html'</span></span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">    'off'/0 关闭</span><br><span class=\"line\">    'warn'/1 警告级别</span><br><span class=\"line\">    'error'/2 错误级别</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"string\">rules:</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">'indent'</span>: [<span class=\"string\">'error'</span>, <span class=\"number\">4</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">'SwitchCase'</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">'VariableDeclarator'</span>: &#123; <span class=\"string\">'var'</span>: <span class=\"number\">1</span>, <span class=\"string\">'let'</span>: <span class=\"number\">1</span>, <span class=\"string\">'const'</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'no-trailing-spaces'</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">    <span class=\"string\">'space-before-function-paren'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'never'</span>],</span><br><span class=\"line\">    <span class=\"string\">'key-spacing'</span>: [<span class=\"string\">'error'</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">'beforeColon'</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"string\">'afterColon'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'object-curly-newline'</span>: [<span class=\"string\">'error'</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">'ObjectExpression'</span>: <span class=\"string\">'always'</span>,</span><br><span class=\"line\">        <span class=\"string\">'ObjectPattern'</span>: <span class=\"string\">'never'</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'quotes'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'single'</span>],</span><br><span class=\"line\">    <span class=\"string\">'curly'</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">    <span class=\"string\">'object-property-newline'</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-console'</span>: process.env.NODE_ENV === <span class=\"string\">'production'</span> ? 'error' : <span class=\"string\">'off'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-cond-assign'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'always'</span>],</span><br><span class=\"line\">    <span class=\"string\">'no-constant-condition'</span>: [<span class=\"string\">'error'</span>, &#123; <span class=\"string\">'checkLoops'</span>: <span class=\"literal\">false</span> &#125;],</span><br><span class=\"line\">    <span class=\"string\">'no-empty'</span>:[<span class=\"string\">'error'</span>],</span><br><span class=\"line\">    <span class=\"string\">'no-var'</span>: [<span class=\"string\">'error'</span>],</span><br><span class=\"line\">    <span class=\"string\">'line-comment-position'</span>: [<span class=\"string\">'error'</span>, &#123; <span class=\"string\">'position'</span>: <span class=\"string\">'above'</span> &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以查看一些常用的配置：<a href=\"https://www.jianshu.com/p/a4966ddf9b0c\" target=\"_blank\" rel=\"external\">https://www.jianshu.com/p/a4966ddf9b0c</a></p>\n<ol>\n<li>在webpack中配置<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attribute\">rules</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: /\\.(js|vue)$/,</span><br><span class=\"line\">            loader: <span class=\"string\">'eslint-loader'</span>,</span><br><span class=\"line\">            // 强制在编译前检测</span><br><span class=\"line\">            enforce: <span class=\"string\">'pre'</span>,</span><br><span class=\"line\">            // 不包括的文件，所以可以不用.eslintignore文件</span><br><span class=\"line\">            exclude: [path.<span class=\"built_in\">resolve</span>(__dirname, <span class=\"string\">'../node_modules'</span>)],</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                formatter: <span class=\"built_in\">require</span>(<span class=\"string\">'eslint-friendly-formatter'</span>),</span><br><span class=\"line\">                // 有错自动修复，注意webpack解决不了会陷入死循环</span><br><span class=\"line\">                fix: true,</span><br><span class=\"line\">                // 有语法错误编译照样通过</span><br><span class=\"line\">                emitWarning: true</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525174897&amp;di=c0a06449ab438e83c3a8f2a245203535&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.ibeifeng.com%2Fimages%2Fupload%2FImage%2Fc5bbf603918fa0ec91b3bd73259759ee3c6ddbc0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>eslint是前端编码规范的检测工具，本文记录如何在webpack配置eslint和定义前端的编码规范</p>","more":"<p>在webpack搭建的项目中引入eslint语法检测，分以下两步  </p>\n<p><strong>首先node_modules下有以下包</strong><br>eslint<br>eslint-friendly-formatter : 格式化检测输出内容<br>eslint-loader : webpack的支持eslint检测的加载器<br>eslint-config-standard ：标准语法规则<br>// 以下都是为eslint提供环境或者语法支持的包<br>eslint-plugin-html<br>eslint-plugin-import<br>eslint-plugin-node<br>eslint-plugin-promise<br>eslint-plugin-standard</p>\n<ol>\n<li>根目录下新建.eslintrc.js</li>\n</ol>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> -g eslint</span><br><span class=\"line\">eslint --init</span><br><span class=\"line\">选择standard标准</span><br></pre></td></tr></table></figure>\n<p>.eslintrc.js配置<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置为true，eslint就不会再往父级目录找配置文件了</span></span><br><span class=\"line\"><span class=\"string\">root:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 分析器，eslint有默认的分析，babel-eslint算是一个扩展，有些语法只有babel支持而eslint不支持，babel-eslint弥补了这一缺点</span></span><br><span class=\"line\"><span class=\"string\">parser:</span> <span class=\"string\">'babel-eslint'</span>,</span><br><span class=\"line\"><span class=\"comment\">// 预定义的一些全局变量，应该在src下可以给eslint用来判断，类似process.env.NODE_ENV，但暂时没用过</span></span><br><span class=\"line\"><span class=\"string\">env:</span> &#123;</span><br><span class=\"line\"><span class=\"symbol\">    browser:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    node:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    es6:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"comment\">// 标准规则模式</span></span><br><span class=\"line\"><span class=\"string\">extends:</span> <span class=\"string\">\"standard\"</span>,</span><br><span class=\"line\"><span class=\"comment\">// eslint-plugin-html插件，在.html和.vue下提供eslint检测</span></span><br><span class=\"line\"><span class=\"string\">plugins:</span> [</span><br><span class=\"line\">    <span class=\"string\">'html'</span></span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\">    'off'/0 关闭</span><br><span class=\"line\">    'warn'/1 警告级别</span><br><span class=\"line\">    'error'/2 错误级别</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"string\">rules:</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">'indent'</span>: [<span class=\"string\">'error'</span>, <span class=\"number\">4</span>, &#123;</span><br><span class=\"line\">        <span class=\"string\">'SwitchCase'</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"string\">'VariableDeclarator'</span>: &#123; <span class=\"string\">'var'</span>: <span class=\"number\">1</span>, <span class=\"string\">'let'</span>: <span class=\"number\">1</span>, <span class=\"string\">'const'</span>: <span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'no-trailing-spaces'</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">    <span class=\"string\">'space-before-function-paren'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'never'</span>],</span><br><span class=\"line\">    <span class=\"string\">'key-spacing'</span>: [<span class=\"string\">'error'</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">'beforeColon'</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"string\">'afterColon'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'object-curly-newline'</span>: [<span class=\"string\">'error'</span>, &#123; </span><br><span class=\"line\">        <span class=\"string\">'ObjectExpression'</span>: <span class=\"string\">'always'</span>,</span><br><span class=\"line\">        <span class=\"string\">'ObjectPattern'</span>: <span class=\"string\">'never'</span></span><br><span class=\"line\">    &#125;],</span><br><span class=\"line\">    <span class=\"string\">'quotes'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'single'</span>],</span><br><span class=\"line\">    <span class=\"string\">'curly'</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">    <span class=\"string\">'object-property-newline'</span>: <span class=\"string\">'error'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-console'</span>: process.env.NODE_ENV === <span class=\"string\">'production'</span> ? 'error' : <span class=\"string\">'off'</span>,</span><br><span class=\"line\">    <span class=\"string\">'no-cond-assign'</span>: [<span class=\"string\">'error'</span>, <span class=\"string\">'always'</span>],</span><br><span class=\"line\">    <span class=\"string\">'no-constant-condition'</span>: [<span class=\"string\">'error'</span>, &#123; <span class=\"string\">'checkLoops'</span>: <span class=\"literal\">false</span> &#125;],</span><br><span class=\"line\">    <span class=\"string\">'no-empty'</span>:[<span class=\"string\">'error'</span>],</span><br><span class=\"line\">    <span class=\"string\">'no-var'</span>: [<span class=\"string\">'error'</span>],</span><br><span class=\"line\">    <span class=\"string\">'line-comment-position'</span>: [<span class=\"string\">'error'</span>, &#123; <span class=\"string\">'position'</span>: <span class=\"string\">'above'</span> &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以查看一些常用的配置：<a href=\"https://www.jianshu.com/p/a4966ddf9b0c\">https://www.jianshu.com/p/a4966ddf9b0c</a></p>\n<ol>\n<li>在webpack中配置<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attribute\">rules</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            test: /\\.(js|vue)$/,</span><br><span class=\"line\">            loader: <span class=\"string\">'eslint-loader'</span>,</span><br><span class=\"line\">            // 强制在编译前检测</span><br><span class=\"line\">            enforce: <span class=\"string\">'pre'</span>,</span><br><span class=\"line\">            // 不包括的文件，所以可以不用.eslintignore文件</span><br><span class=\"line\">            exclude: [path.<span class=\"built_in\">resolve</span>(__dirname, <span class=\"string\">'../node_modules'</span>)],</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                formatter: <span class=\"built_in\">require</span>(<span class=\"string\">'eslint-friendly-formatter'</span>),</span><br><span class=\"line\">                // 有错自动修复，注意webpack解决不了会陷入死循环</span><br><span class=\"line\">                fix: true,</span><br><span class=\"line\">                // 有语法错误编译照样通过</span><br><span class=\"line\">                emitWarning: true</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"【VueSSR系列一】构建流程源码解读","date":"2019-06-13T13:20:01.000Z","_content":"\n![首图](https://pixabay.com/photos/home-office-workstation-office-336373/)\n\n<!-- more -->\n\n# 【VueSSR系列一】构建流程源码解读\n\n最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包`vue-server-renderer@2.6.10`进行讲解，内容包括：\n- VueSSR构建流程\n- VueSSRClientPlugin\n- VueSSRServerPlugin\n<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n\n希望本文对你有帮助。\n\n## VueSSR构建流程\n`vue-server-renderer`是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。\n\n简单用图表述了VueSSR的构建流程，如下图展示：\n\n![VueSSR构建流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&bo=jgTAAY4EwAEDByI!&rf=viewer_4)\n\n如图构建过程中有两个入口文件，通过`vue-server-renderer`提供的webpack插件`VueSSRClientPlugin`和`VueSSRServerPlugin`，分别构建打包出供客户端和服务端使用的json文件。\n\n## VueSSRClientPlugin\n`vue-ssr-client-manifest.json`就是通过`VueSSRClientPlugin`生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：\n```json\n{\n    \"publicPath\": \"/dist/\",\n    \"all\": [\"static/img/d_icon.522f4d11.png\"...],\n    \"initial\": [\"manifest.0338f6f2cf8625ed7117.js\"...],\n    \"async\": [\"0.51ec59b64fde13191f79.js\"...],\n    \"modules\": {...}\n}\n```\n它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n\n深入它的源码，我们看看这个插件是怎样生成这些数据的。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar VueSSRClientPlugin = function VueSSRClientPlugin (options) {\n  if ( options === void 0 ) options = {};\n\n  this.options = Object.assign({\n    filename: 'vue-ssr-client-manifest.json' // 默认文件名\n  }, options);\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    ...\n};\n\nmodule.exports = VueSSRClientPlugin;\n```\n从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar onEmit = function (compiler, name, hook) {\n  if (compiler.hooks) {\n    // Webpack >= 4.0.0\n    compiler.hooks.emit.tapAsync(name, hook);\n  } else {\n    // Webpack < 4.0.0\n    compiler.plugin('emit', hook);\n  }\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    var this$1 = this;\n\n    onEmit(compiler, 'vue-client-plugin', function (compilation, cb) {\n      ...\n    })\n};\n```\n在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：\n\n![clientManifest处理流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&bo=PgT2Az4E9gMRBzA!&rf=viewer_4)\n\n简单解析下上面的流程：\n1. 获取编译对象中的包含编译信息的stats对象\n2. 从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）\n3. 从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles\n4. allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles\n5. 分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。\n6. 最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。\n\n## VueSSRServerPlugin\nvue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：\n```javascript\nvar bundle = {\n  entry: entry,\n  files: {},\n  maps: {}\n};\n\nstats.assets.forEach(function (asset) {\n  if (isJS(asset.name)) {\n    bundle.files[asset.name] = compilation.assets[asset.name].source();\n  } else if (asset.name.match(/\\.js\\.map$/)) {\n    bundle.maps[asset.name.replace(/\\.map$/, '')] = JSON.parse(compilation.assets[asset.name].source());\n  }\n  // do not emit anything else for server\n  // 删除编译信息中的源代码的文件信息\n  // 保证只输出一个文件vue-ssr-server-bundle.json\n  delete compilation.assets[asset.name];\n});\n```\n从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。\n\n在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除`compilation.assets`上所有的文件信息。保证最后只输出一个json文件。\n\n\n值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。\n```javascript\nif (entryAssets.length > 1) {\n  throw new Error(\n    \"Server-side bundle should have one single entry file. \" +\n    \"Avoid using CommonsChunkPlugin in the server config.\"\n  )\n}\n```\n\n## 总结\n构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。\n\n他们的作用分别是：\n- clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n- bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。\n\n> 高手都是从表面看到本质的人\n\n这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击[这里](https://webpack.docschina.org/api/compilation/)拓展下知识面。\n\n另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！","source":"_posts/【VueSSR系列一】构建流程源码解读.md","raw":"---\ntitle: 【VueSSR系列一】构建流程源码解读\ndate: 2019-06-13 21:20:01\ntags: [vue]\ncategories: [前端]\n---\n\n![首图](https://pixabay.com/photos/home-office-workstation-office-336373/)\n\n<!-- more -->\n\n# 【VueSSR系列一】构建流程源码解读\n\n最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包`vue-server-renderer@2.6.10`进行讲解，内容包括：\n- VueSSR构建流程\n- VueSSRClientPlugin\n- VueSSRServerPlugin\n<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n\n希望本文对你有帮助。\n\n## VueSSR构建流程\n`vue-server-renderer`是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。\n\n简单用图表述了VueSSR的构建流程，如下图展示：\n\n![VueSSR构建流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&bo=jgTAAY4EwAEDByI!&rf=viewer_4)\n\n如图构建过程中有两个入口文件，通过`vue-server-renderer`提供的webpack插件`VueSSRClientPlugin`和`VueSSRServerPlugin`，分别构建打包出供客户端和服务端使用的json文件。\n\n## VueSSRClientPlugin\n`vue-ssr-client-manifest.json`就是通过`VueSSRClientPlugin`生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：\n```json\n{\n    \"publicPath\": \"/dist/\",\n    \"all\": [\"static/img/d_icon.522f4d11.png\"...],\n    \"initial\": [\"manifest.0338f6f2cf8625ed7117.js\"...],\n    \"async\": [\"0.51ec59b64fde13191f79.js\"...],\n    \"modules\": {...}\n}\n```\n它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n\n深入它的源码，我们看看这个插件是怎样生成这些数据的。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar VueSSRClientPlugin = function VueSSRClientPlugin (options) {\n  if ( options === void 0 ) options = {};\n\n  this.options = Object.assign({\n    filename: 'vue-ssr-client-manifest.json' // 默认文件名\n  }, options);\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    ...\n};\n\nmodule.exports = VueSSRClientPlugin;\n```\n从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。\n```javascript\n// vue-server-renderer/client-plugin.js\n\nvar onEmit = function (compiler, name, hook) {\n  if (compiler.hooks) {\n    // Webpack >= 4.0.0\n    compiler.hooks.emit.tapAsync(name, hook);\n  } else {\n    // Webpack < 4.0.0\n    compiler.plugin('emit', hook);\n  }\n};\n\nVueSSRClientPlugin.prototype.apply = function apply (compiler) {\n    var this$1 = this;\n\n    onEmit(compiler, 'vue-client-plugin', function (compilation, cb) {\n      ...\n    })\n};\n```\n在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：\n\n![clientManifest处理流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&bo=PgT2Az4E9gMRBzA!&rf=viewer_4)\n\n简单解析下上面的流程：\n1. 获取编译对象中的包含编译信息的stats对象\n2. 从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）\n3. 从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles\n4. allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles\n5. 分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。\n6. 最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。\n\n## VueSSRServerPlugin\nvue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：\n```javascript\nvar bundle = {\n  entry: entry,\n  files: {},\n  maps: {}\n};\n\nstats.assets.forEach(function (asset) {\n  if (isJS(asset.name)) {\n    bundle.files[asset.name] = compilation.assets[asset.name].source();\n  } else if (asset.name.match(/\\.js\\.map$/)) {\n    bundle.maps[asset.name.replace(/\\.map$/, '')] = JSON.parse(compilation.assets[asset.name].source());\n  }\n  // do not emit anything else for server\n  // 删除编译信息中的源代码的文件信息\n  // 保证只输出一个文件vue-ssr-server-bundle.json\n  delete compilation.assets[asset.name];\n});\n```\n从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。\n\n在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除`compilation.assets`上所有的文件信息。保证最后只输出一个json文件。\n\n\n值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。\n```javascript\nif (entryAssets.length > 1) {\n  throw new Error(\n    \"Server-side bundle should have one single entry file. \" +\n    \"Avoid using CommonsChunkPlugin in the server config.\"\n  )\n}\n```\n\n## 总结\n构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。\n\n他们的作用分别是：\n- clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。\n- bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。\n\n> 高手都是从表面看到本质的人\n\n这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击[这里](https://webpack.docschina.org/api/compilation/)拓展下知识面。\n\n另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！","slug":"【VueSSR系列一】构建流程源码解读","published":1,"updated":"2019-08-31T15:22:29.271Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fa8000qw8qzersfvtay","content":"<p><img src=\"https://pixabay.com/photos/home-office-workstation-office-336373/\" alt=\"首图\"></p>\n<a id=\"more\"></a>\n<h1 id=\"【VueSSR系列一】构建流程源码解读\"><a href=\"#【VueSSR系列一】构建流程源码解读\" class=\"headerlink\" title=\"【VueSSR系列一】构建流程源码解读\"></a>【VueSSR系列一】构建流程源码解读</h1><p>最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包<code>vue-server-renderer@2.6.10</code>进行讲解，内容包括：</p>\n<ul>\n<li>VueSSR构建流程</li>\n<li>VueSSRClientPlugin</li>\n<li>VueSSRServerPlugin<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n</li>\n</ul>\n<p>希望本文对你有帮助。</p>\n<h2 id=\"VueSSR构建流程\"><a href=\"#VueSSR构建流程\" class=\"headerlink\" title=\"VueSSR构建流程\"></a>VueSSR构建流程</h2><p><code>vue-server-renderer</code>是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。</p>\n<p>简单用图表述了VueSSR的构建流程，如下图展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&amp;bo=jgTAAY4EwAEDByI!&amp;rf=viewer_4\" alt=\"VueSSR构建流程图\"></p>\n<p>如图构建过程中有两个入口文件，通过<code>vue-server-renderer</code>提供的webpack插件<code>VueSSRClientPlugin</code>和<code>VueSSRServerPlugin</code>，分别构建打包出供客户端和服务端使用的json文件。</p>\n<h2 id=\"VueSSRClientPlugin\"><a href=\"#VueSSRClientPlugin\" class=\"headerlink\" title=\"VueSSRClientPlugin\"></a>VueSSRClientPlugin</h2><p><code>vue-ssr-client-manifest.json</code>就是通过<code>VueSSRClientPlugin</code>生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    \"publicPath\": \"/dist/\",</span><br><span class=\"line\">    \"all\": [\"static/img/d_icon.522f4d11.png\"...],</span><br><span class=\"line\">    \"initial\": [\"manifest.0338f6f2cf8625ed7117.js\"...],</span><br><span class=\"line\">    \"async\": [\"0.51ec59b64fde13191f79.js\"...],</span><br><span class=\"line\">    \"modules\": &#123;...&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</p>\n<p>深入它的源码，我们看看这个插件是怎样生成这些数据的。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> VueSSRClientPlugin = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">VueSSRClientPlugin</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( options === <span class=\"keyword\">void</span> <span class=\"number\">0</span> ) options = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.options = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'vue-ssr-client-manifest.json'</span> <span class=\"comment\">// 默认文件名</span></span><br><span class=\"line\">  &#125;, options);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">VueSSRClientPlugin.prototype.apply = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">apply</span> (<span class=\"params\">compiler</span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = VueSSRClientPlugin;</span><br></pre></td></tr></table></figure></p>\n<p>从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> onEmit = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">compiler, name, hook</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiler.hooks) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &gt;= 4.0.0</span></span><br><span class=\"line\">    compiler.hooks.emit.tapAsync(name, hook);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &lt; 4.0.0</span></span><br><span class=\"line\">    compiler.plugin(<span class=\"string\">'emit'</span>, hook);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">VueSSRClientPlugin.prototype.apply = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">apply</span> (<span class=\"params\">compiler</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"keyword\">this</span>$<span class=\"number\">1</span> = <span class=\"keyword\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    onEmit(compiler, <span class=\"string\">'vue-client-plugin'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">compilation, cb</span>) </span>&#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&amp;bo=PgT2Az4E9gMRBzA!&amp;rf=viewer_4\" alt=\"clientManifest处理流程图\"></p>\n<p>简单解析下上面的流程：</p>\n<ol>\n<li>获取编译对象中的包含编译信息的stats对象</li>\n<li>从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）</li>\n<li>从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles</li>\n<li>allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles</li>\n<li>分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。</li>\n<li>最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。</li>\n</ol>\n<h2 id=\"VueSSRServerPlugin\"><a href=\"#VueSSRServerPlugin\" class=\"headerlink\" title=\"VueSSRServerPlugin\"></a>VueSSRServerPlugin</h2><p>vue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bundle = &#123;</span><br><span class=\"line\">  entry: entry,</span><br><span class=\"line\">  files: &#123;&#125;,</span><br><span class=\"line\">  maps: &#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">stats.assets.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">asset</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isJS(asset.name)) &#123;</span><br><span class=\"line\">    bundle.files[asset.name] = compilation.assets[asset.name].source();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (asset.name.match(<span class=\"regexp\">/\\.js\\.map$/</span>)) &#123;</span><br><span class=\"line\">    bundle.maps[asset.name.replace(<span class=\"regexp\">/\\.map$/</span>, <span class=\"string\">''</span>)] = <span class=\"built_in\">JSON</span>.parse(compilation.assets[asset.name].source());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// do not emit anything else for server</span></span><br><span class=\"line\">  <span class=\"comment\">// 删除编译信息中的源代码的文件信息</span></span><br><span class=\"line\">  <span class=\"comment\">// 保证只输出一个文件vue-ssr-server-bundle.json</span></span><br><span class=\"line\">  <span class=\"keyword\">delete</span> compilation.assets[asset.name];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。</p>\n<p>在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除<code>compilation.assets</code>上所有的文件信息。保证最后只输出一个json文件。</p>\n<p>值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (entryAssets.length &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(</span><br><span class=\"line\">    <span class=\"string\">\"Server-side bundle should have one single entry file. \"</span> +</span><br><span class=\"line\">    <span class=\"string\">\"Avoid using CommonsChunkPlugin in the server config.\"</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。</p>\n<p>他们的作用分别是：</p>\n<ul>\n<li>clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</li>\n<li>bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。</li>\n</ul>\n<blockquote>\n<p>高手都是从表面看到本质的人</p>\n</blockquote>\n<p>这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击<a href=\"https://webpack.docschina.org/api/compilation/\" target=\"_blank\" rel=\"external\">这里</a>拓展下知识面。</p>\n<p>另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！</p>\n","excerpt":"<p><img src=\"https://pixabay.com/photos/home-office-workstation-office-336373/\" alt=\"首图\"></p>","more":"<h1 id=\"【VueSSR系列一】构建流程源码解读\"><a href=\"#【VueSSR系列一】构建流程源码解读\" class=\"headerlink\" title=\"【VueSSR系列一】构建流程源码解读\"></a>【VueSSR系列一】构建流程源码解读</h1><p>最近接手维护一个使用VueSSR搭建的项目，于是乎对VueSSR做了一系列的学习和研究。本文以VueSSR所依赖的第三方包<code>vue-server-renderer@2.6.10</code>进行讲解，内容包括：</p>\n<ul>\n<li>VueSSR构建流程</li>\n<li>VueSSRClientPlugin</li>\n<li>VueSSRServerPlugin<!--- 服务端渲染的大体原理-->\n<!--- 输出html正文过程-->\n<!--- 预加载与预取资源-->\n<!--2. 数据流-->\n<!--    - 服务端处理请求-->\n<!--    - 客户端激活-->\n</li>\n</ul>\n<p>希望本文对你有帮助。</p>\n<h2 id=\"VueSSR构建流程\"><a href=\"#VueSSR构建流程\" class=\"headerlink\" title=\"VueSSR构建流程\"></a>VueSSR构建流程</h2><p><code>vue-server-renderer</code>是VueSSR的核心内容，主要作用是在服务端将vue应用程序渲染输出html，同时也支持更高级的特性，例如：结合模板文件，构建clientManifest和server bundle来做到更细粒度的把控，自动注入（资源预加载、关键css）、嵌入vuex状态等特性。为了使用这些高级特性，我们先看一下如何构建出clientManifest和server bundle文件。</p>\n<p>简单用图表述了VueSSR的构建流程，如下图展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/Kc*lvVVyE6.jGWuENdHZ1NoSFgly4xSG*7r3a3s0VDY!/b/dAgBAAAAAAAA&amp;bo=jgTAAY4EwAEDByI!&amp;rf=viewer_4\" alt=\"VueSSR构建流程图\"></p>\n<p>如图构建过程中有两个入口文件，通过<code>vue-server-renderer</code>提供的webpack插件<code>VueSSRClientPlugin</code>和<code>VueSSRServerPlugin</code>，分别构建打包出供客户端和服务端使用的json文件。</p>\n<h2 id=\"VueSSRClientPlugin\"><a href=\"#VueSSRClientPlugin\" class=\"headerlink\" title=\"VueSSRClientPlugin\"></a>VueSSRClientPlugin</h2><p><code>vue-ssr-client-manifest.json</code>就是通过<code>VueSSRClientPlugin</code>生成的clientManifest文件，称为客户端构建清单。咱们来看看它的内容：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    \"publicPath\": \"/dist/\",</span><br><span class=\"line\">    \"all\": [\"static/img/d_icon.522f4d11.png\"...],</span><br><span class=\"line\">    \"initial\": [\"manifest.0338f6f2cf8625ed7117.js\"...],</span><br><span class=\"line\">    \"async\": [\"0.51ec59b64fde13191f79.js\"...],</span><br><span class=\"line\">    \"modules\": &#123;...&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>它将输入到renderer中，为模板的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</p>\n<p>深入它的源码，我们看看这个插件是怎样生成这些数据的。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> VueSSRClientPlugin = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">VueSSRClientPlugin</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( options === <span class=\"keyword\">void</span> <span class=\"number\">0</span> ) options = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.options = <span class=\"built_in\">Object</span>.assign(&#123;</span><br><span class=\"line\">    filename: <span class=\"string\">'vue-ssr-client-manifest.json'</span> <span class=\"comment\">// 默认文件名</span></span><br><span class=\"line\">  &#125;, options);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">VueSSRClientPlugin.prototype.apply = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">apply</span> (<span class=\"params\">compiler</span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = VueSSRClientPlugin;</span><br></pre></td></tr></table></figure></p>\n<p>从结构来看，作为webpack插件，VueSSRClientPlugin只不过是一个原型上挂载apply方法的构造函数，核心逻辑就在apply方法中。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue-server-renderer/client-plugin.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> onEmit = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">compiler, name, hook</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (compiler.hooks) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &gt;= 4.0.0</span></span><br><span class=\"line\">    compiler.hooks.emit.tapAsync(name, hook);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Webpack &lt; 4.0.0</span></span><br><span class=\"line\">    compiler.plugin(<span class=\"string\">'emit'</span>, hook);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">VueSSRClientPlugin.prototype.apply = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">apply</span> (<span class=\"params\">compiler</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"keyword\">this</span>$<span class=\"number\">1</span> = <span class=\"keyword\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    onEmit(compiler, <span class=\"string\">'vue-client-plugin'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">compilation, cb</span>) </span>&#123;</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>在apply方法中，有这样一段我觉得挺有意思的，就是将兼容逻辑的判断语句都封装到onEmit函数中，这样代码的层次感比较清晰，值得我们去学习，将代码根据功能来分层。我们重点关注下onEmit的回调函数，是如何获取和处理数据输出json文件的。下图我用了伪代码来展示该逻辑的处理流程：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/3kRBJQYHa.05qmZ9VEJ0u9G3s9Q3CcrRuqo48ZsG2qk!/b/dL4AAAAAAAAA&amp;bo=PgT2Az4E9gMRBzA!&amp;rf=viewer_4\" alt=\"clientManifest处理流程图\"></p>\n<p>简单解析下上面的流程：</p>\n<ol>\n<li>获取编译对象中的包含编译信息的stats对象</li>\n<li>从stats.assets得到应用用到所有资源数组allFiles（元素是文件名）</li>\n<li>从入口文件对象中找出初次渲染加载的js和css文件数组initialFiles</li>\n<li>allFiles与initialFiles的差集，过滤出js和css，作为可异步加载资源asyncFiles</li>\n<li>分别从stats.modules找出每个模块对应的chuck代码文件，在将chunk依赖文件转换为allFiles中的indexArray，然后moduleId做key，indexArray作为value组成map对象。</li>\n<li>最后组装成json对象，序列化后挂上compilation.assets对象上，最为json文件输出。</li>\n</ol>\n<h2 id=\"VueSSRServerPlugin\"><a href=\"#VueSSRServerPlugin\" class=\"headerlink\" title=\"VueSSRServerPlugin\"></a>VueSSRServerPlugin</h2><p>vue服务端构建插件做的事情跟客户端构建插件一样，都是输出一个json文件，源码中的逻辑几乎也一样，不一样的地方在于输出的文件内容：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bundle = &#123;</span><br><span class=\"line\">  entry: entry,</span><br><span class=\"line\">  files: &#123;&#125;,</span><br><span class=\"line\">  maps: &#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">stats.assets.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">asset</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isJS(asset.name)) &#123;</span><br><span class=\"line\">    bundle.files[asset.name] = compilation.assets[asset.name].source();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (asset.name.match(<span class=\"regexp\">/\\.js\\.map$/</span>)) &#123;</span><br><span class=\"line\">    bundle.maps[asset.name.replace(<span class=\"regexp\">/\\.map$/</span>, <span class=\"string\">''</span>)] = <span class=\"built_in\">JSON</span>.parse(compilation.assets[asset.name].source());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// do not emit anything else for server</span></span><br><span class=\"line\">  <span class=\"comment\">// 删除编译信息中的源代码的文件信息</span></span><br><span class=\"line\">  <span class=\"comment\">// 保证只输出一个文件vue-ssr-server-bundle.json</span></span><br><span class=\"line\">  <span class=\"keyword\">delete</span> compilation.assets[asset.name];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>从json文件的内容来看，files属性包含了源代码编译后的所有内容，这些内容将用于服务端渲染输出html的正文。maps字段记录sourceMap文件信息，用于提供sourceMap支持。</p>\n<p>在构建流程中我们知道源代码会经过两次编译，在客户端构建完的时候已经输入打包后的文件了，假如服务端侯建再输出就会重复，造成浪费，所以需要删除<code>compilation.assets</code>上所有的文件信息。保证最后只输出一个json文件。</p>\n<p>值得注意的是这个插件只允许一个入口js文件，为了避免使用了CommonsChunkPlugin分包导致文件内容分散。因为server bundle文件的作用主要是为了记录编译后的源代码内容，以便后续能在服务端渲染中运行。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (entryAssets.length &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(</span><br><span class=\"line\">    <span class=\"string\">\"Server-side bundle should have one single entry file. \"</span> +</span><br><span class=\"line\">    <span class=\"string\">\"Avoid using CommonsChunkPlugin in the server config.\"</span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>构建出clientManifest和server bundle两个json文件主要是为了让vue-server-renderer支持一些高级特性，比如自动注入（预加载和预取，inlineStyle关键css）、state等，已达到对输出html更细粒度的控制能力。</p>\n<p>他们的作用分别是：</p>\n<ul>\n<li>clientManifest会为文档的资源加载提供信息，推断和注入资源预加载和数据预取指令和首次渲染需要加载script标签。</li>\n<li>bundle包含了源代码编译后的所有内容，将用于服务端渲染输出html的正文，已经提供sourceMap支持。</li>\n</ul>\n<blockquote>\n<p>高手都是从表面看到本质的人</p>\n</blockquote>\n<p>这里面涉及到的知识点主要是webpack插件和compilation对象，可以点击<a href=\"https://webpack.docschina.org/api/compilation/\">这里</a>拓展下知识面。</p>\n<p>另外本文用到的流程图可能在表达和像素上都不是很清晰，大家有比较好的画图工具和画图方法，希望推荐一下，感谢！</p>"},{"title":"【VueSSR系列二】clientManifest与bundle的处理流程解读","date":"2019-07-20T11:02:01.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg)\n\n<!-- more -->\n\n上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：\n- 使用BundleRenderer的原因\n- 服务端渲染的大体原理\n- 输出html正文过程\n- 预加载与预取资源\n\n阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：\n\n![image](http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&bo=yAXeAsgF3gIDByI!&rf=viewer_4)\n\n\n## 使用BundleRenderer的原因\n`vue-server-renderer`提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：\n- 支持source map\n- 热重载 \n- 关键css注入\n- 资源注入\n使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。\n\n## 服务端渲染的大体原理\n源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：\n```javascript\n// templateRenderer.render方法内\nif (this.inject) {\n    return (\n        template.head(context) +\n        (context.head || '') +\n        this.renderResourceHints(context) +\n        this.renderStyles(context) +\n        template.neck(context) +\n        content +\n        this.renderState(context) +\n        this.renderScripts(context) +\n        template.tail(context)\n    )\n} else {\n    return (\n        template.head(context) +\n        template.neck(context) +\n        content +\n        template.tail(context)\n    )\n}\n\n```\n转换成图来展示：\n\n![html分段图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&bo=mwNlApsDZQIDFzI!&rf=viewer_4)\n\n原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。\n\n前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。\n\n## 输出html正文过程\n那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：\n![vueSSR处理bundle生成正文流程](http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&bo=9AJTA*QCUwMRBzA!&rf=viewer_4)\n\n当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。\n```JavaScript\nexport default context => {\n  return new Promise((resolve, reject) => {\n    const { app, router, store } = createApp(context.url)\n    ...\n    resolve(app)\n    ...\n  })\n}\n```\n\napp就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。\n\nrender函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。\n\n## 预加载与预取资源\nbundle Renderer如何推断出预加载和预取资源的呢？\n\n我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句`this.renderResourceHints(context)`，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：\n![vueSSR预加载和预取片段生成生成流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&bo=sgM7A7IDOwMDByI!&rf=viewer_4)\n\n从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。\n\n![资源加载文件](http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&bo=5AMJAeQDCQEDByI!&rf=viewer_4)\n\nusedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n## 小结\n- 服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。\n- 生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。\n- clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n\n\n","source":"_posts/【VueSSR系列二】clientManifest与bundle的处理流程解读.md","raw":"---\ntitle: 【VueSSR系列二】clientManifest与bundle的处理流程解读\ndate: 2019-07-20 19:02:01\ntags: [vue]\ncategories: [前端]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg)\n\n<!-- more -->\n\n上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：\n- 使用BundleRenderer的原因\n- 服务端渲染的大体原理\n- 输出html正文过程\n- 预加载与预取资源\n\n阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：\n\n![image](http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&bo=yAXeAsgF3gIDByI!&rf=viewer_4)\n\n\n## 使用BundleRenderer的原因\n`vue-server-renderer`提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：\n- 支持source map\n- 热重载 \n- 关键css注入\n- 资源注入\n使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。\n\n## 服务端渲染的大体原理\n源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：\n```javascript\n// templateRenderer.render方法内\nif (this.inject) {\n    return (\n        template.head(context) +\n        (context.head || '') +\n        this.renderResourceHints(context) +\n        this.renderStyles(context) +\n        template.neck(context) +\n        content +\n        this.renderState(context) +\n        this.renderScripts(context) +\n        template.tail(context)\n    )\n} else {\n    return (\n        template.head(context) +\n        template.neck(context) +\n        content +\n        template.tail(context)\n    )\n}\n\n```\n转换成图来展示：\n\n![html分段图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&bo=mwNlApsDZQIDFzI!&rf=viewer_4)\n\n原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。\n\n前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。\n\n## 输出html正文过程\n那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：\n![vueSSR处理bundle生成正文流程](http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&bo=9AJTA*QCUwMRBzA!&rf=viewer_4)\n\n当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。\n```JavaScript\nexport default context => {\n  return new Promise((resolve, reject) => {\n    const { app, router, store } = createApp(context.url)\n    ...\n    resolve(app)\n    ...\n  })\n}\n```\n\napp就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。\n\nrender函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。\n\n## 预加载与预取资源\nbundle Renderer如何推断出预加载和预取资源的呢？\n\n我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句`this.renderResourceHints(context)`，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：\n![vueSSR预加载和预取片段生成生成流程图](http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&bo=sgM7A7IDOwMDByI!&rf=viewer_4)\n\n从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。\n\n![资源加载文件](http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&bo=5AMJAeQDCQEDByI!&rf=viewer_4)\n\nusedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n## 小结\n- 服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。\n- 生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。\n- clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。\n\n\n\n","slug":"【VueSSR系列二】clientManifest与bundle的处理流程解读","published":1,"updated":"2019-08-31T15:23:33.172Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fas000sw8qzzb7hl2kw","content":"<p><img src=\"https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg\" alt=\"我是图片\"></p>\n<a id=\"more\"></a>\n<p>上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：</p>\n<ul>\n<li>使用BundleRenderer的原因</li>\n<li>服务端渲染的大体原理</li>\n<li>输出html正文过程</li>\n<li>预加载与预取资源</li>\n</ul>\n<p>阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&amp;bo=yAXeAsgF3gIDByI!&amp;rf=viewer_4\" alt=\"image\"></p>\n<h2 id=\"使用BundleRenderer的原因\"><a href=\"#使用BundleRenderer的原因\" class=\"headerlink\" title=\"使用BundleRenderer的原因\"></a>使用BundleRenderer的原因</h2><p><code>vue-server-renderer</code>提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：</p>\n<ul>\n<li>支持source map</li>\n<li>热重载 </li>\n<li>关键css注入</li>\n<li>资源注入<br>使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。</li>\n</ul>\n<h2 id=\"服务端渲染的大体原理\"><a href=\"#服务端渲染的大体原理\" class=\"headerlink\" title=\"服务端渲染的大体原理\"></a>服务端渲染的大体原理</h2><p>源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// templateRenderer.render方法内</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.inject) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.head(context) +</span><br><span class=\"line\">        (context.head || <span class=\"string\">''</span>) +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderResourceHints(context) +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderStyles(context) +</span><br><span class=\"line\">        template.neck(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderState(context) +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderScripts(context) +</span><br><span class=\"line\">        template.tail(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.head(context) +</span><br><span class=\"line\">        template.neck(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        template.tail(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>转换成图来展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&amp;bo=mwNlApsDZQIDFzI!&amp;rf=viewer_4\" alt=\"html分段图\"></p>\n<p>原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。</p>\n<p>前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。</p>\n<h2 id=\"输出html正文过程\"><a href=\"#输出html正文过程\" class=\"headerlink\" title=\"输出html正文过程\"></a>输出html正文过程</h2><p>那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&amp;bo=9AJTA*QCUwMRBzA!&amp;rf=viewer_4\" alt=\"vueSSR处理bundle生成正文流程\"></p>\n<p>当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> context =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; app, router, store &#125; = createApp(context.url)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    resolve(app)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>app就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。</p>\n<p>render函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。</p>\n<h2 id=\"预加载与预取资源\"><a href=\"#预加载与预取资源\" class=\"headerlink\" title=\"预加载与预取资源\"></a>预加载与预取资源</h2><p>bundle Renderer如何推断出预加载和预取资源的呢？</p>\n<p>我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句<code>this.renderResourceHints(context)</code>，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&amp;bo=sgM7A7IDOwMDByI!&amp;rf=viewer_4\" alt=\"vueSSR预加载和预取片段生成生成流程图\"></p>\n<p>从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&amp;bo=5AMJAeQDCQEDByI!&amp;rf=viewer_4\" alt=\"资源加载文件\"></p>\n<p>usedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ul>\n<li>服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。</li>\n<li>生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。</li>\n<li>clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</li>\n</ul>\n","excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2016/03/26/13/09/cup-of-coffee-1280537__340.jpg\" alt=\"我是图片\"></p>","more":"<p>上一节讨论了VueSSR的构建流程，构建出来的clientManifest和serverBundle最终会被转换成html，这一节我们深入vue-server-renderer的核心内容，看看它们都经过了哪些的处理。这一节的内容包括：</p>\n<ul>\n<li>使用BundleRenderer的原因</li>\n<li>服务端渲染的大体原理</li>\n<li>输出html正文过程</li>\n<li>预加载与预取资源</li>\n</ul>\n<p>阅读源码先整体查看写下代码文件结构和入口文件暴露的接口，然后运行一段demo断点来跟踪代码处理数据的细节，下面将以这段demo作为阅读代码的入口：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/SucTp5cC08NnxOrUu6IyCLb8OcB0vE7YqLIWyDYTheY!/b/dLYAAAAAAAAA&amp;bo=yAXeAsgF3gIDByI!&amp;rf=viewer_4\" alt=\"image\"></p>\n<h2 id=\"使用BundleRenderer的原因\"><a href=\"#使用BundleRenderer的原因\" class=\"headerlink\" title=\"使用BundleRenderer的原因\"></a>使用BundleRenderer的原因</h2><p><code>vue-server-renderer</code>提供了两个API，createRenderer和createBundleRender。它们的用法一样，如果你阅读了源码你会知道createBundleRenderer其实是在createRenderer上做了扩展，以提供官网上所说的下面几种特性：</p>\n<ul>\n<li>支持source map</li>\n<li>热重载 </li>\n<li>关键css注入</li>\n<li>资源注入<br>使用基本SSR（createRenderer）有一个问题，当源代码更新后需要重启服务器以获取最新代码，所以需要引入热重载。官方的做法就是通过webpack自定义插件将server bundle生成可传入renderer处理的特殊JSON文件，createBundleRender需要具备处理JSON文件能力以便支持热重载。当这一章不打算阐述SSr如何支持热重载，我们先来看看SSR最终是怎样输出html的。</li>\n</ul>\n<h2 id=\"服务端渲染的大体原理\"><a href=\"#服务端渲染的大体原理\" class=\"headerlink\" title=\"服务端渲染的大体原理\"></a>服务端渲染的大体原理</h2><p>源码看到最后，我发现了一段可以可以大致的理解它的脉络的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// templateRenderer.render方法内</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.inject) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.head(context) +</span><br><span class=\"line\">        (context.head || <span class=\"string\">''</span>) +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderResourceHints(context) +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderStyles(context) +</span><br><span class=\"line\">        template.neck(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderState(context) +</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.renderScripts(context) +</span><br><span class=\"line\">        template.tail(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        template.head(context) +</span><br><span class=\"line\">        template.neck(context) +</span><br><span class=\"line\">        content +</span><br><span class=\"line\">        template.tail(context)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>转换成图来展示：</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/yVo.O8FVlWuISuWAm2H4v27hL5ASz9zXsgZoXNZs5hg!/b/dIQAAAAAAAAA&amp;bo=mwNlApsDZQIDFzI!&amp;rf=viewer_4\" alt=\"html分段图\"></p>\n<p>原来bundleRenderer以字符串拼接的方式将html的片段组合成整个html文档，整个html文档会划分为几个部分，这里只列出主要的部分，分别是头部、资源预加载和预取资源、inlineStyle、正文、state、script。这几个主要字符片段跟辅助的片段结合就结合成了输出的服务端渲染的html内容。</p>\n<p>前面我们已经知道clientManifest的作用是记录文档资源文件的信息，bundleRenderer利用clientManifest的信息，推理出需要预加载和预取的资源和首屏加载的js资源文件，然后拼接成资源预加载和预取片段和script片段。而server bundle中记录中编译后的源代码，这正是html文档中正文的内容来源。</p>\n<h2 id=\"输出html正文过程\"><a href=\"#输出html正文过程\" class=\"headerlink\" title=\"输出html正文过程\"></a>输出html正文过程</h2><p>那么server bundle是如何被处理成正文的呢？我将bundle的处理过程中的关键步骤画成了流程图，如下：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/whA77ZoC2nwXNlTLdFS5Oo.6f*wotTd.oAOU.Kvsntg!/b/dL8AAAAAAAAA&amp;bo=9AJTA*QCUwMRBzA!&amp;rf=viewer_4\" alt=\"vueSSR处理bundle生成正文流程\"></p>\n<p>当执行createBundleRunner()时，在内部会执行compileModule()，生成一个处理编译后源码的函数evaluate。evaluate函数会将编译后文件源码包装成module对象，然后返回module.exports.defualt，它就是封装了文件源码的函数，执行这个函数就就相当于执行文件源码。当这个文件是入口文件时，返回的就是entry入口文件源码的封装函数，也就是runner，那么执行runner(context)相当于执行entry-server.js导出的函数，如下。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> context =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; app, router, store &#125; = createApp(context.url)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    resolve(app)</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>app就是执行该函数后，Promise状态为fulfilled时往下传递的单页应用的vue根实例。之后app会传入renderToString方法，该方法内会调用render函数，递归根实例中的每个子组件对象，渲染每个子组件的template然后组装template，最终生成html中的正文片段content。</p>\n<p>render函数内其实是执行了vue内部的render函数，执行组件的生命钩子函数，生成虚拟dom节点，只不过最后转化成了template字符串返回。最后templateRenderer.render方法将正文和其他文档片段组件成整个html文档返回。</p>\n<h2 id=\"预加载与预取资源\"><a href=\"#预加载与预取资源\" class=\"headerlink\" title=\"预加载与预取资源\"></a>预加载与预取资源</h2><p>bundle Renderer如何推断出预加载和预取资源的呢？</p>\n<p>我们现在已经知道html是在templateRenderer.render方法中组合的，在它里面有这么一句<code>this.renderResourceHints(context)</code>，预加载和预取片段就是由它来生成的。以下是renderResourceHints方法的流程图：<br><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/2Xwnp89zmoTY0t9VTszfYE8SFOtSogJ8e80RwTm6*EA!/b/dLgAAAAAAAAA&amp;bo=sgM7A7IDOwMDByI!&amp;rf=viewer_4\" alt=\"vueSSR预加载和预取片段生成生成流程图\"></p>\n<p>从图中我们很清晰得知道renderPreloadLinks方法和renderPrefetchLinks方法都调用了getUsedAsyncFiles方法，来拿到组件实例中所依赖到的代码chunk文件列表usedAsyncFiles，它是通过context._registeredComponents得到组件实例依赖的moduleIds，再根据clientManifest中的modules对象（记录modules之间的依赖关系）和all对象（记录着所有编译后的文件），找出moduleIds所对应的文件，这些文件就是初始渲染组件所依赖到的代码 chunk文件，也就是usedAsyncFiles。</p>\n<p><img src=\"http://m.qpic.cn/psb?/V12x89qA2LlAEO/zC5fWQVzuwuJjvm3lOThbmfEod0T0.0GIm3LJYchj5E!/b/dL8AAAAAAAAA&amp;bo=5AMJAeQDCQEDByI!&amp;rf=viewer_4\" alt=\"资源加载文件\"></p>\n<p>usedAsyncFiles与preloadFiles（clientManifest中的initial文件数组）合并就是需要预加载的资源列表，usedAsyncFiles与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ul>\n<li>服务端渲染思路：将html划分片段，头部、资源预加载和预取资源、inlineStyle、正文、state、script和其他辅助衔接片段，推断生成这些片段然后组装成整一个html文档。</li>\n<li>生成正文：将bundle中的编译后代码字符串包装成一个可执行的模块，运行模块得到应用实例app（vue根实例），递归渲染app中的子组件，将data与template组合，最后组装成正文部分。</li>\n<li>clientManifest中记录着资源加载信息，通过运行app得到context对象中_registedComponents拿到moduleIds，然后得到usedAsyncFiles（组件依赖的文件）。其与preloadFiles（clientManifest中的initial文件数组）的并集就是初始渲染的预加载的资源列表，与prefetchFiles（clientManifest中的async文件数组）的差集就是预取的资源列表。</li>\n</ul>"},{"title":"关于高效找工作的几条建议","date":"2019-03-21T14:01:54.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg)\n\n## 前言\n大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？\n\n<!--more-->\n\n## 正文\n\n带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是`dendoink`，有需要可以关注和加他微信。\n\n说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。\n\n先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。\n\n我的原话是:\n> Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。\n\n对于Dendi哥给出的建议，总结如下：\n\n#### 1. 校招还是社招\n清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。\n\n大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。\n\n#### 2. JD\n我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。\n\n#### 3. 跟hr沟通\n跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。\n\nhr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。\n\n#### 4. 考核项目能力\n面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。\n\n比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。\n\n描述可以从**模块**、**功能**、**技术实现**到开发过程**遇到的问题**、以及**原理**这几个方面来着手。\n\n#### 5. 关于基础\n关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。\n\n#### 6. 了解团队\n当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。\n\n1. 你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。\n2. 问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。\n3. 团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。\n4. 开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）\n5. 虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。\n\n#### 7. 评估直属上司\n在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。\n\n#### 8. 心态\n心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。\n\n#### 9. 其他\n多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？\n\n要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。\n\n## 结语\n我也还在学习成长的路上，共勉~\n\n\n","source":"_posts/关于高效找工作的几条建议.md","raw":"---\ntitle: 关于高效找工作的几条建议\ndate: 2019-03-21 22:01:54\ntags: [总结]\ncategories: [总结]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg)\n\n## 前言\n大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？\n\n<!--more-->\n\n## 正文\n\n带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是`dendoink`，有需要可以关注和加他微信。\n\n说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。\n\n先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。\n\n我的原话是:\n> Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。\n\n对于Dendi哥给出的建议，总结如下：\n\n#### 1. 校招还是社招\n清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。\n\n大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。\n\n#### 2. JD\n我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。\n\n#### 3. 跟hr沟通\n跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。\n\nhr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。\n\n#### 4. 考核项目能力\n面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。\n\n比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。\n\n描述可以从**模块**、**功能**、**技术实现**到开发过程**遇到的问题**、以及**原理**这几个方面来着手。\n\n#### 5. 关于基础\n关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。\n\n#### 6. 了解团队\n当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。\n\n1. 你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。\n2. 问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。\n3. 团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。\n4. 开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）\n5. 虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。\n\n#### 7. 评估直属上司\n在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。\n\n#### 8. 心态\n心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。\n\n#### 9. 其他\n多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？\n\n要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。\n\n## 结语\n我也还在学习成长的路上，共勉~\n\n\n","slug":"关于高效找工作的几条建议","published":1,"updated":"2019-08-31T15:24:08.974Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7faz000vw8qziyfjtibt","content":"<p><img src=\"https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？</p>\n<a id=\"more\"></a>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是<code>dendoink</code>，有需要可以关注和加他微信。</p>\n<p>说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。</p>\n<p>先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。</p>\n<p>我的原话是:</p>\n<blockquote>\n<p>Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。</p>\n</blockquote>\n<p>对于Dendi哥给出的建议，总结如下：</p>\n<h4 id=\"1-校招还是社招\"><a href=\"#1-校招还是社招\" class=\"headerlink\" title=\"1. 校招还是社招\"></a>1. 校招还是社招</h4><p>清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。</p>\n<p>大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。</p>\n<h4 id=\"2-JD\"><a href=\"#2-JD\" class=\"headerlink\" title=\"2. JD\"></a>2. JD</h4><p>我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。</p>\n<h4 id=\"3-跟hr沟通\"><a href=\"#3-跟hr沟通\" class=\"headerlink\" title=\"3. 跟hr沟通\"></a>3. 跟hr沟通</h4><p>跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。</p>\n<p>hr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。</p>\n<h4 id=\"4-考核项目能力\"><a href=\"#4-考核项目能力\" class=\"headerlink\" title=\"4. 考核项目能力\"></a>4. 考核项目能力</h4><p>面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。</p>\n<p>比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。</p>\n<p>描述可以从<strong>模块</strong>、<strong>功能</strong>、<strong>技术实现</strong>到开发过程<strong>遇到的问题</strong>、以及<strong>原理</strong>这几个方面来着手。</p>\n<h4 id=\"5-关于基础\"><a href=\"#5-关于基础\" class=\"headerlink\" title=\"5. 关于基础\"></a>5. 关于基础</h4><p>关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。</p>\n<h4 id=\"6-了解团队\"><a href=\"#6-了解团队\" class=\"headerlink\" title=\"6. 了解团队\"></a>6. 了解团队</h4><p>当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。</p>\n<ol>\n<li>你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。</li>\n<li>问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。</li>\n<li>团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。</li>\n<li>开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）</li>\n<li>虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。</li>\n</ol>\n<h4 id=\"7-评估直属上司\"><a href=\"#7-评估直属上司\" class=\"headerlink\" title=\"7. 评估直属上司\"></a>7. 评估直属上司</h4><p>在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。</p>\n<h4 id=\"8-心态\"><a href=\"#8-心态\" class=\"headerlink\" title=\"8. 心态\"></a>8. 心态</h4><p>心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。</p>\n<h4 id=\"9-其他\"><a href=\"#9-其他\" class=\"headerlink\" title=\"9. 其他\"></a>9. 其他</h4><p>多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？</p>\n<p>要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>我也还在学习成长的路上，共勉~</p>\n","excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2018/02/16/10/52/beverage-3157395__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>大多数人的一生中难免要去找工作，经历面试，去被面试官考核被公司筛选。尤其是做IT行业的程序员，跳槽换公司是耳熟能闻的事情。那问题就来了，如何才能高效的找到一个合适自己的好岗位、好团队、好公司呢？</p>","more":"<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>带着这个问题，我请教了最近从掘金认识的Dendi哥。Dendi哥喜欢与人讨论问题和分享心得，掘金号是<code>dendoink</code>，有需要可以关注和加他微信。</p>\n<p>说一句心里话，感谢Dendi哥的悉心指导，给出了宝贵的经验和建议，让我更加看清楚了自己的职业发展和成长的方向。</p>\n<p>先声明，以下内容更多的是提供方法论和思路，没有涉及技术点论述，毕竟找工作也不是完全是看技术的，非技术的经验有时比技术更加的有用。</p>\n<p>我的原话是:</p>\n<blockquote>\n<p>Dendi哥，想请教个问题，我最近在找工作，假如你是面试官的话，你看重候选人的哪一点，或者说考核的侧重点和范围。</p>\n</blockquote>\n<p>对于Dendi哥给出的建议，总结如下：</p>\n<h4 id=\"1-校招还是社招\"><a href=\"#1-校招还是社招\" class=\"headerlink\" title=\"1. 校招还是社招\"></a>1. 校招还是社招</h4><p>清楚自己是应聘社招还是校招，假如是校招，侧重基础；社招则侧重项目经验。校招的话多注意专业课的学习，基础扎实有潜力总会找到好工作。</p>\n<p>大多数公司的社招都是急着招人进来做项目，所以考虑的主要是你的项目经验，看是不是能够快速上手项目，技术栈吻不吻合，团队协作能力，和工具使用情况，看看你日常开发中用到的东西是否都会并且熟悉。</p>\n<h4 id=\"2-JD\"><a href=\"#2-JD\" class=\"headerlink\" title=\"2. JD\"></a>2. JD</h4><p>我们最开始获取信息的来源应该是JD（岗位要求），这就是面试过程中重点考核的内容，所以要侧重复习。但要注意的是有些JD是hr大概写的，所以第一步要弄清楚JD上的要求，梳理出设计到技术点。</p>\n<h4 id=\"3-跟hr沟通\"><a href=\"#3-跟hr沟通\" class=\"headerlink\" title=\"3. 跟hr沟通\"></a>3. 跟hr沟通</h4><p>跟hr的第一通电话沟通很关键。要尽可能的在面试前多了解信息。比如团队规模、工作时间、薪资待遇、团队人员的背景，技术方面的话要了解技术栈、进去后接手什么项目。</p>\n<p>hr不懂技术项目就叫他去问技术负责人，要尽量的把主动权掌握在自己手上，不要先急着跑过去面试，怕万一不是自己理想的那样，就会浪费了彼此时间，对公司和个人都不好。所以第一次跟hr的沟通很重要，要尽量的去获取这些信息，在决定去不去面试。</p>\n<h4 id=\"4-考核项目能力\"><a href=\"#4-考核项目能力\" class=\"headerlink\" title=\"4. 考核项目能力\"></a>4. 考核项目能力</h4><p>面试官考核你的项目能力会对照你简历上写的项目经验问，一般他会问得很细很细去考究你的项目能力，弄懂这项目是不是你做的，负责那些模块，做到了什么程度。</p>\n<p>比如H5页面开发过程中遇到什么问题啊，有没有优化过啊，小程序写过吗、vue用到了什么程度，webpack配置优化会不会等等。你需要做的就是尽量细节的描述简历上的项目，小到webpack配置和开发过程遇到的bug。</p>\n<p>描述可以从<strong>模块</strong>、<strong>功能</strong>、<strong>技术实现</strong>到开发过程<strong>遇到的问题</strong>、以及<strong>原理</strong>这几个方面来着手。</p>\n<h4 id=\"5-关于基础\"><a href=\"#5-关于基础\" class=\"headerlink\" title=\"5. 关于基础\"></a>5. 关于基础</h4><p>关于基础，这是肯定会考核的，面试官主要看你知识面广不广，了不了解最新标准，关不关注技术动态。运用的代码框架懂不懂其原理，你是一个技术的好学者还是人云亦云的代码搬运工。</p>\n<h4 id=\"6-了解团队\"><a href=\"#6-了解团队\" class=\"headerlink\" title=\"6. 了解团队\"></a>6. 了解团队</h4><p>当面试官对你的考核结束了之后，一般都会轮到你来问他问题。这当然是个很好的学习机会，但是更重要的是这是一个获取团队岗位信息最直接的机会。</p>\n<ol>\n<li>你可以问清楚公司对技术重不重视，如果技术部门在公司没有话语权，在这家公司做技术会很累，会有一群不懂代码的人来教你写出像shi一样的代码。</li>\n<li>问清楚团队人员的配置，比如有几个前端，一般6到10个前端的团队都比较可以了。</li>\n<li>团队人员的技术背景，有没有大牛，大到什么程度，主导出了怎样牛逼的系统，有没有对于团队建设的规划。</li>\n<li>开发流程完不完备，有没有统一规范的流程，项目有没有从构建，开发，测试到上线自动化部署流程。实际经验告诉我，没有形成规范的团队，并不是高效的团队，人员在开发过程中有一部分时间是在填坑，比如代码风格不一致导致合并后代码diff不出主要更改，测试不流程化就会可能导致半夜起床修bug的情况，上线不自动化就可能下班后留下来等上完线在自测一遍等等。。。（泪目，想起了自己的经历）</li>\n<li>虽然不抗拒加班但是问清楚技术部门会不会经常加班，不要把青春时间浪费在加班上，自己的身体也会吃不消，自己的时间比加班得到的那些钱要值钱得多，要用自己的时间沉淀出有价值的东西。</li>\n</ol>\n<h4 id=\"7-评估直属上司\"><a href=\"#7-评估直属上司\" class=\"headerlink\" title=\"7. 评估直属上司\"></a>7. 评估直属上司</h4><p>在接触面试官的过程中，可能会有几个面试官，要知道哪一个才是你的直属上司，这个人很重要。要在心里评估他的性格、做事风格、说话方式、价值观、技术视野。毕竟这份工作好不好做跟你的直属上司有很大的关系，假如他喜欢甩锅、不好相处的话那就没好日子过了。</p>\n<h4 id=\"8-心态\"><a href=\"#8-心态\" class=\"headerlink\" title=\"8. 心态\"></a>8. 心态</h4><p>心态上不要急，多锻炼身体，毕竟有个好心态加上健康的身体，总会找到理想的工作。</p>\n<h4 id=\"9-其他\"><a href=\"#9-其他\" class=\"headerlink\" title=\"9. 其他\"></a>9. 其他</h4><p>多给自己充电。多看书，多交朋友，多分享。注意我这里不完全是说技术，可以是其他方面的学习和交流。搞技术的不能完全搞技术，技术是为了解决人的问题，要让技术真正变成有价值的东西。如何才能做到这一点呢？</p>\n<p>要跳出技术视野看问题，多了解行业内动态，多请求大神，多跟人交流分享，毕竟互联网内挣最多钱的人都不是技术最牛的人。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>我也还在学习成长的路上，共勉~</p>"},{"title":"前端单元测试","date":"2019-08-15T07:20:01.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg)\n\n<!-- more -->\n\n测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。\n1. 定义\n2. 为什么要写单元测试\n3. 什么项目写单元测试\n4. 测试要写多细\n5. 什么时候写\n6. 如何写单元测试\n\n## 定义\n单元测试在维基百科上的定义为\n> 单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。\n\n在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。\n\n## 为什么要写单元测试\n项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。\n\n这就是单元测试存在的意义：\n1. 减少发开新特性产生的bug\n2. 促进重构\n3. 作为项目文档的补充以便理解和熟悉代码\n4. 减少手动测试的成本\n\n## 什么项目写单元测试\n不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：\n1. 项目的愿景清晰。规模大，模块多，交互多。\n2. 项目服务的用户量多\n3. 开发新功能引发其他模块bug的情况层出不穷\n4. 测试妹子测不过了\n\n## 测试要写多细\n极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：\n> 老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，\n当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误\n做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。\n\n鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：\n1. 逻辑复杂，容易出错的代码\n2. 核心的业务代码\n3. 公共的代码\n4. 不易理解，回头会忘的代码\n\n## 什么时候写\n\n类型 | 介绍 | 好处 | 坏处\n---|---|---|--- \n开发前写好测试用例 | 属于TTD模式，测试驱动开发 | TTD是被证明能有效提高代码质量的测试手段 | 不适用需求多变的前端模块，测试用例也要跟着变\n开发中写测试用例 | 先写好一部分功能代码，紧跟着写测试用例 | 测试随着业务代码同步 | 相对于开发前要好一点\n开发后写测试用例 | 当完成功能后再补上测试用例 | 这时有些业务和模块已经稳定下来 | 假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”\n\n对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。\n\n## 如何写单元测试\n首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。\n\n至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。\n- 前端常见的单元测试库：[Mocha](https://mochajs.org/)、[Karma](https://karma-runner.github.io/latest/index.html)、[Jest](https://jestjs.io/zh-Hans/)\n- Vue官方推荐的： [Vue Test Utils](https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5)\n- 阮一峰老师的[测试框架 Mocha 实例教程](http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html)\n\n对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。\n\n项目 | 测试框架 | 单元 |  测试用例\n---|---|---|---\nElement | Karma | 组件 | 构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期\nAnt-design-vue | jest | 组件 | 属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理\nAxios | Mocha、Karma | 类和函数模块 | 模块的功能点是否正常\nVue应用项目 | Vue Test Utils（官方推荐） | 组件、Util函数模块、Store模块、API模块 | 渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等\n\nUI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。\n\n## 小结\n以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。\n\n\n参考文档：\n- [单元测试系列一-为什么要写单元测试，何时写，写多细](https://blog.csdn.net/flysqrlboy/article/details/79301241)\n- [Vue Cookbok 为什么要测试](https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F)\n- [测试你的前端代码 - part2（单元测试）](https://juejin.im/post/58d514102f301e007e74fee5)","source":"_posts/前端单元测试.md","raw":"---\ntitle: 前端单元测试\ndate: 2019-08-15 15:20:01\ntags: [测试]\ncategories: [前端]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg)\n\n<!-- more -->\n\n测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。\n1. 定义\n2. 为什么要写单元测试\n3. 什么项目写单元测试\n4. 测试要写多细\n5. 什么时候写\n6. 如何写单元测试\n\n## 定义\n单元测试在维基百科上的定义为\n> 单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。\n\n在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。\n\n## 为什么要写单元测试\n项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。\n\n这就是单元测试存在的意义：\n1. 减少发开新特性产生的bug\n2. 促进重构\n3. 作为项目文档的补充以便理解和熟悉代码\n4. 减少手动测试的成本\n\n## 什么项目写单元测试\n不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：\n1. 项目的愿景清晰。规模大，模块多，交互多。\n2. 项目服务的用户量多\n3. 开发新功能引发其他模块bug的情况层出不穷\n4. 测试妹子测不过了\n\n## 测试要写多细\n极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：\n> 老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，\n当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误\n做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。\n\n鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：\n1. 逻辑复杂，容易出错的代码\n2. 核心的业务代码\n3. 公共的代码\n4. 不易理解，回头会忘的代码\n\n## 什么时候写\n\n类型 | 介绍 | 好处 | 坏处\n---|---|---|--- \n开发前写好测试用例 | 属于TTD模式，测试驱动开发 | TTD是被证明能有效提高代码质量的测试手段 | 不适用需求多变的前端模块，测试用例也要跟着变\n开发中写测试用例 | 先写好一部分功能代码，紧跟着写测试用例 | 测试随着业务代码同步 | 相对于开发前要好一点\n开发后写测试用例 | 当完成功能后再补上测试用例 | 这时有些业务和模块已经稳定下来 | 假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”\n\n对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。\n\n## 如何写单元测试\n首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。\n\n至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。\n- 前端常见的单元测试库：[Mocha](https://mochajs.org/)、[Karma](https://karma-runner.github.io/latest/index.html)、[Jest](https://jestjs.io/zh-Hans/)\n- Vue官方推荐的： [Vue Test Utils](https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5)\n- 阮一峰老师的[测试框架 Mocha 实例教程](http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html)\n\n对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。\n\n项目 | 测试框架 | 单元 |  测试用例\n---|---|---|---\nElement | Karma | 组件 | 构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期\nAnt-design-vue | jest | 组件 | 属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理\nAxios | Mocha、Karma | 类和函数模块 | 模块的功能点是否正常\nVue应用项目 | Vue Test Utils（官方推荐） | 组件、Util函数模块、Store模块、API模块 | 渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等\n\nUI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。\n\n## 小结\n以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。\n\n\n参考文档：\n- [单元测试系列一-为什么要写单元测试，何时写，写多细](https://blog.csdn.net/flysqrlboy/article/details/79301241)\n- [Vue Cookbok 为什么要测试](https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F)\n- [测试你的前端代码 - part2（单元测试）](https://juejin.im/post/58d514102f301e007e74fee5)","slug":"前端单元测试","published":1,"updated":"2019-08-31T15:21:14.957Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fb8000xw8qzgjh8i69w","content":"<p><img src=\"https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg\" alt=\"我是图片\"></p>\n<a id=\"more\"></a>\n<p>测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。</p>\n<ol>\n<li>定义</li>\n<li>为什么要写单元测试</li>\n<li>什么项目写单元测试</li>\n<li>测试要写多细</li>\n<li>什么时候写</li>\n<li>如何写单元测试</li>\n</ol>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>单元测试在维基百科上的定义为</p>\n<blockquote>\n<p>单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。</p>\n</blockquote>\n<p>在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。</p>\n<h2 id=\"为什么要写单元测试\"><a href=\"#为什么要写单元测试\" class=\"headerlink\" title=\"为什么要写单元测试\"></a>为什么要写单元测试</h2><p>项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。</p>\n<p>这就是单元测试存在的意义：</p>\n<ol>\n<li>减少发开新特性产生的bug</li>\n<li>促进重构</li>\n<li>作为项目文档的补充以便理解和熟悉代码</li>\n<li>减少手动测试的成本</li>\n</ol>\n<h2 id=\"什么项目写单元测试\"><a href=\"#什么项目写单元测试\" class=\"headerlink\" title=\"什么项目写单元测试\"></a>什么项目写单元测试</h2><p>不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：</p>\n<ol>\n<li>项目的愿景清晰。规模大，模块多，交互多。</li>\n<li>项目服务的用户量多</li>\n<li>开发新功能引发其他模块bug的情况层出不穷</li>\n<li>测试妹子测不过了</li>\n</ol>\n<h2 id=\"测试要写多细\"><a href=\"#测试要写多细\" class=\"headerlink\" title=\"测试要写多细\"></a>测试要写多细</h2><p>极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：</p>\n<blockquote>\n<p>老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，<br>当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误<br>做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。</p>\n</blockquote>\n<p>鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：</p>\n<ol>\n<li>逻辑复杂，容易出错的代码</li>\n<li>核心的业务代码</li>\n<li>公共的代码</li>\n<li>不易理解，回头会忘的代码</li>\n</ol>\n<h2 id=\"什么时候写\"><a href=\"#什么时候写\" class=\"headerlink\" title=\"什么时候写\"></a>什么时候写</h2><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>介绍</th>\n<th>好处</th>\n<th>坏处</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>开发前写好测试用例</td>\n<td>属于TTD模式，测试驱动开发</td>\n<td>TTD是被证明能有效提高代码质量的测试手段</td>\n<td>不适用需求多变的前端模块，测试用例也要跟着变</td>\n</tr>\n<tr>\n<td>开发中写测试用例</td>\n<td>先写好一部分功能代码，紧跟着写测试用例</td>\n<td>测试随着业务代码同步</td>\n<td>相对于开发前要好一点</td>\n</tr>\n<tr>\n<td>开发后写测试用例</td>\n<td>当完成功能后再补上测试用例</td>\n<td>这时有些业务和模块已经稳定下来</td>\n<td>假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”</td>\n</tr>\n</tbody>\n</table>\n<p>对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。</p>\n<h2 id=\"如何写单元测试\"><a href=\"#如何写单元测试\" class=\"headerlink\" title=\"如何写单元测试\"></a>如何写单元测试</h2><p>首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。</p>\n<p>至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。</p>\n<ul>\n<li>前端常见的单元测试库：<a href=\"https://mochajs.org/\" target=\"_blank\" rel=\"external\">Mocha</a>、<a href=\"https://karma-runner.github.io/latest/index.html\" target=\"_blank\" rel=\"external\">Karma</a>、<a href=\"https://jestjs.io/zh-Hans/\" target=\"_blank\" rel=\"external\">Jest</a></li>\n<li>Vue官方推荐的： <a href=\"https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5\" target=\"_blank\" rel=\"external\">Vue Test Utils</a></li>\n<li>阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html\" target=\"_blank\" rel=\"external\">测试框架 Mocha 实例教程</a></li>\n</ul>\n<p>对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th>项目</th>\n<th>测试框架</th>\n<th>单元</th>\n<th>测试用例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Element</td>\n<td>Karma</td>\n<td>组件</td>\n<td>构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期</td>\n</tr>\n<tr>\n<td>Ant-design-vue</td>\n<td>jest</td>\n<td>组件</td>\n<td>属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理</td>\n</tr>\n<tr>\n<td>Axios</td>\n<td>Mocha、Karma</td>\n<td>类和函数模块</td>\n<td>模块的功能点是否正常</td>\n</tr>\n<tr>\n<td>Vue应用项目</td>\n<td>Vue Test Utils（官方推荐）</td>\n<td>组件、Util函数模块、Store模块、API模块</td>\n<td>渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等</td>\n</tr>\n</tbody>\n</table>\n<p>UI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。</p>\n<p>参考文档：</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/flysqrlboy/article/details/79301241\" target=\"_blank\" rel=\"external\">单元测试系列一-为什么要写单元测试，何时写，写多细</a></li>\n<li><a href=\"https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F\" target=\"_blank\" rel=\"external\">Vue Cookbok 为什么要测试</a></li>\n<li><a href=\"https://juejin.im/post/58d514102f301e007e74fee5\" target=\"_blank\" rel=\"external\">测试你的前端代码 - part2（单元测试）</a></li>\n</ul>\n","excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336378__340.jpg\" alt=\"我是图片\"></p>","more":"<p>测试是个永恒的主题，我们一起探寻一下前端单元测试的来龙去脉。</p>\n<ol>\n<li>定义</li>\n<li>为什么要写单元测试</li>\n<li>什么项目写单元测试</li>\n<li>测试要写多细</li>\n<li>什么时候写</li>\n<li>如何写单元测试</li>\n</ol>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>单元测试在维基百科上的定义为</p>\n<blockquote>\n<p>单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。</p>\n</blockquote>\n<p>在前端中，模块可以指功能模块和组件模块，也就是一个函数，一个类或者是一个组件。</p>\n<h2 id=\"为什么要写单元测试\"><a href=\"#为什么要写单元测试\" class=\"headerlink\" title=\"为什么要写单元测试\"></a>为什么要写单元测试</h2><p>项目的发展越来越大，模块与模块之间的联系和逻辑越来越复杂，错误信息定位也越来越难排查，在这样的项目下开发新功能和重构，付出的时间成本，管理成本大。</p>\n<p>这就是单元测试存在的意义：</p>\n<ol>\n<li>减少发开新特性产生的bug</li>\n<li>促进重构</li>\n<li>作为项目文档的补充以便理解和熟悉代码</li>\n<li>减少手动测试的成本</li>\n</ol>\n<h2 id=\"什么项目写单元测试\"><a href=\"#什么项目写单元测试\" class=\"headerlink\" title=\"什么项目写单元测试\"></a>什么项目写单元测试</h2><p>不是任何项目都要写单元测试，毕竟写测试用例会增加开发的工作量。写单元测试的项目需要满足一下几个条件（但不限于）：</p>\n<ol>\n<li>项目的愿景清晰。规模大，模块多，交互多。</li>\n<li>项目服务的用户量多</li>\n<li>开发新功能引发其他模块bug的情况层出不穷</li>\n<li>测试妹子测不过了</li>\n</ol>\n<h2 id=\"测试要写多细\"><a href=\"#测试要写多细\" class=\"headerlink\" title=\"测试要写多细\"></a>测试要写多细</h2><p>极限编程、测试驱动开发和单元测试以及JUnit的创造者Kent Beck在StackOverflow上，对于单元测试应该写到什么程度的问题作出的回答是：</p>\n<blockquote>\n<p>老板为我的代码付报酬，而不是测试，所以，我对此的价值观是——测试越少越好，少到你对你的代码质量达到了某种自信（我觉得这种的自信标准应该要高于业内的标准，<br>当然，这种自信也可能是种自大）。如果我的编码生涯中不会犯这种典型的错误（如：在构造函数中设了个错误的值），那我就不会测试它。我倾向于去对那些有意义的错误<br>做测试，所以，我对一些比较复杂的条件逻辑会异常地小心。当在一个团队中，我会非常小心的测试那些会让团队容易出错的代码。</p>\n</blockquote>\n<p>鉴于前辈的观点，得出测试用例并不是写越全就越好，而应该将测试用例重点覆盖在关键代码上，尽量让测试有意义。这样的代码类型有：</p>\n<ol>\n<li>逻辑复杂，容易出错的代码</li>\n<li>核心的业务代码</li>\n<li>公共的代码</li>\n<li>不易理解，回头会忘的代码</li>\n</ol>\n<h2 id=\"什么时候写\"><a href=\"#什么时候写\" class=\"headerlink\" title=\"什么时候写\"></a>什么时候写</h2><table>\n<thead>\n<tr>\n<th>类型</th>\n<th>介绍</th>\n<th>好处</th>\n<th>坏处</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>开发前写好测试用例</td>\n<td>属于TTD模式，测试驱动开发</td>\n<td>TTD是被证明能有效提高代码质量的测试手段</td>\n<td>不适用需求多变的前端模块，测试用例也要跟着变</td>\n</tr>\n<tr>\n<td>开发中写测试用例</td>\n<td>先写好一部分功能代码，紧跟着写测试用例</td>\n<td>测试随着业务代码同步</td>\n<td>相对于开发前要好一点</td>\n</tr>\n<tr>\n<td>开发后写测试用例</td>\n<td>当完成功能后再补上测试用例</td>\n<td>这时有些业务和模块已经稳定下来</td>\n<td>假如单元的逻辑比较复杂，测试的点会多，为了较快的写好用例，用例的粒度会变“粗”</td>\n</tr>\n</tbody>\n</table>\n<p>对比过后，一般比较推荐在开发需求中，功能代码与测试用例同步进行。</p>\n<h2 id=\"如何写单元测试\"><a href=\"#如何写单元测试\" class=\"headerlink\" title=\"如何写单元测试\"></a>如何写单元测试</h2><p>首先要注意，单元测试难的不在于如何写，而在于代码设计，模块与模块之间要相互独立，将代码划分为单元可测的代码，单元可测的代码不应该依赖其他模块，不涉及IO操作，这里的IO操作不仅是指读写文件，操作数据库，还包括AJAX请求，本地存储，DOM操作等与浏览器API相关的操作。合理划分模块，模块间解耦，尽量不要相互引用，这也是书写代码的良好习惯，所以好的单元测试有利于促进系统模块的合理划分。</p>\n<p>至于使用什么测试框架和如何使用的问题，网上有很多资料都有介绍。</p>\n<ul>\n<li>前端常见的单元测试库：<a href=\"https://mochajs.org/\">Mocha</a>、<a href=\"https://karma-runner.github.io/latest/index.html\">Karma</a>、<a href=\"https://jestjs.io/zh-Hans/\">Jest</a></li>\n<li>Vue官方推荐的： <a href=\"https://vue-test-utils.vuejs.org/zh/guides/#%E8%B5%B7%E6%AD%A5\">Vue Test Utils</a></li>\n<li>阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html\">测试框架 Mocha 实例教程</a></li>\n</ul>\n<p>对比了前端一些热门的库的测试用例，既有UI库也有功能库，它们的测试用例的类型如下表所示。</p>\n<table>\n<thead>\n<tr>\n<th>项目</th>\n<th>测试框架</th>\n<th>单元</th>\n<th>测试用例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Element</td>\n<td>Karma</td>\n<td>组件</td>\n<td>构建是否成功、属性的UI表现是否一致、触发的事件运行是否预期</td>\n</tr>\n<tr>\n<td>Ant-design-vue</td>\n<td>jest</td>\n<td>组件</td>\n<td>属性的UI表现是否一致、交互事件触发是否预期、边界情况是否被处理</td>\n</tr>\n<tr>\n<td>Axios</td>\n<td>Mocha、Karma</td>\n<td>类和函数模块</td>\n<td>模块的功能点是否正常</td>\n</tr>\n<tr>\n<td>Vue应用项目</td>\n<td>Vue Test Utils（官方推荐）</td>\n<td>组件、Util函数模块、Store模块、API模块</td>\n<td>渲染dom后检验页面显示的数据、检验调用API（不访问网络，需要mock数据）、Vuex的store、commit或dispatch的检查和检测用户交互等</td>\n</tr>\n</tbody>\n</table>\n<p>UI库以组件为单元，功能库以类或函数模块为单元。而在业务项目中，划分的模块往往包括组件、Util函数模块、Store模块、API模块等等。单元测试不可能把这么多模块的功能点都一一覆盖，像上面所说的我们需要挑拣出重要的、复杂的和易出错进行单元用例覆盖，至于那些多变的不重要的功能点可以先不用针对写测试用例。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>以上内容包括了对单元测试概念性和适用性的讲解，只希望能起到前端单元测试指引性的作用，大概意识到才能样的项目需要引入单元测试，单元测试用例需要覆盖的点，以及知道如何上手应用框架，至于具体怎样引入到项目里面，网上教程比我写的都要好，而且我也还没在真正在项目中引入（哈哈，纸上谈兵扯理论）。。。</p>\n<p>参考文档：</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/flysqrlboy/article/details/79301241\">单元测试系列一-为什么要写单元测试，何时写，写多细</a></li>\n<li><a href=\"https://cn.vuejs.org/v2/cookbook/unit-testing-vue-components.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%B5%8B%E8%AF%95%EF%BC%9F\">Vue Cookbok 为什么要测试</a></li>\n<li><a href=\"https://juejin.im/post/58d514102f301e007e74fee5\">测试你的前端代码 - part2（单元测试）</a></li>\n</ul>"},{"title":"前端编码规范","date":"2018-10-07T08:22:48.000Z","_content":"\n![我是图片](https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg)\n\n## 前言\n学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。\n\n<!-- more -->\n\n## html\nhtml标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：\n1. id,ref,class等属于标签的标识排前\n2. v-if,v-for等操作类的属性\n3. v-model和带绑定的属性\n4. 无绑定的属性\n5. 事件绑定\n\n另外属性个数大于三个要换行显示\n```\n<Tag \n    ref=\"tag\"\n    v-for=\"(item,index) in tabsInfo\"\n    :title=\"item.title\"\n    :link=\"item.router\"\n    :active=\"item.active\"\n    :key=\"index\"\n    palcehold=\"请输入\"\n    @click=\"handleClick\"\n><Tag>\n```\n\n## css\n业界比较推荐的一种规范是[BEM（块级元素修饰符）](http://getbem.com/)，它可以让你的css模块化，变得易维护。\n\n* [http://getbem.com/naming/](http://getbem.com/naming/)\n* [https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl](https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl)\n\n## js\n### 命名\n> 计算机科学只存在两个难题：缓存失效和命名。 --Phil KarIton\n\n命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到**让人阅读代码就像是阅读一本书，用代码述说故事。**\n\n在命名是我比较喜欢参照一下几点原则：\n* 命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语\n* 命名常量使用大写字母加下划线\n* 命名函数使用小驼峰，使用动词或动词短语，表示动作\n* 命名类使用就大驼峰\n\n### 函数\n> 函数的第一规则是短小，第二规则是还要更短小。 --《代码整洁之道》\n\n写函数我一般遵循以下几点原则：\n* 短小。假如函数过长，你就要做拆分，最好不要超过20行。\n* if else语句不要嵌套太深，最多两层。\n* 好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。\n* 参数不要过多，最好三个之内，三个以上要有足够的理由。\n* 减少副作用。\n* 错误提前返回\n```\nfunction observe(obj) {\n    if (obj && typeof obj === 'object') {\n        Object.keys(obj).forEach(key => {\n            defineReactive(obj, key, obj[key])\n        })    \n    }\n}\n改为：\nfunction observe(obj) {\n    if (!obj || typeof obj !==     'object') return\n\n    Object.keys(obj).forEach(key => {\n        defineReactive(obj, key, obj[key])\n    })\n}\n```\n* 自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。\n```\nfunction A() {\n    B()\n    C()\n}\n// 以下都是A的细节\nfunction B() {\n    D()\n}\n--// D属于B的细节，放在B下面\nfunction D() {}\n\nfunction C() {\n    E()\n}\n--// E属于C的细节，放在C下面\nfunction E() {}\n```\n* 公共API函数要写注释。以下摘自tj大神co库里的一段\n```\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n```\n\n如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。\n\n### 注释\n> \"别给糟糕的代码添加注释，重新写吧。\" --《代码整洁之道》\n\n《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：\n1. 好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。\n2. 注释是人写的，会有不准确性，有误人子弟的可能。\n3. 写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。\n\n但是所有的注释都不应该写吗？肯定不是。\n\n注释也分类型，**没必要写**的类型有：\n1. 喃喃自语类的注释，表意不明的信息。\n2. 多余的说明。这种注释像是翻译一遍函数名。\n3. 误导性的注释，就是不准确的描述了函数的意图。\n4. 评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。\n5. 骂人的注释。。\n\n**有必要**写注释的类型有：\n1. 法律信息和开源信息类，或者是一个库开头的说明信息。\n```\n/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n```\n2. 说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。\n```\n\n// 当B网站的api data更新时会通过storage通知这里\n// 监听storage，实时更新api data\nwindow.addEventListener(\"storage\", (event) => {\nconsole.warn('event', event);\nconst { key, newValue } = event;\nconst api_storage_key = `api_list_${this.tpl_config.app_name}`;\nif (key === api_storage_key) {\n  console.log(\"storage change,key \", key)\n  this.$store.commit(\"initApi\", {\n    data: JSON.parse(newValue).content || []\n  })\n  if (this.select_node.label === \"Form\") {\n    const api_name = this.props_temp.model.api\n    if (!api_name) return\n\n    const api = this.apilist.find(api => api.name === api_name);\n    // 需要更新当前Form面板关联api的参数配置\n    this.createFormContentWithApiConf(api)\n  }\n}\n})\n```\n以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。\n3. 对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。\n```\nrenameComponent(name) {\n    switch (name) {\n      // Switch不能作为组件名注册\n      case 'SwitchRadio':\n        name = 'Switch'\n        break\n    }\n    return name\n},\n```\n4. 对于特殊常量的说明。\n```\nconst TYPE_FORM = 0; // 上搜下标类模板\n```\n5. TODO注释\n```\nTODO: 太慢，待优化！\n```\n6. 公共API的注释\n7. 注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。\n```\nfor (let key in defaultData) {\n    this.props_temp[prop].relatedData[key] = {\n        label: key,\n        prop: key,\n        // 暂时去掉默认值\n        // value: defaultData[key],\n        inputType: \"Input\"\n    };\n }\n```","source":"_posts/前端编码规范.md","raw":"---\ntitle: 前端编码规范\ndate: 2018-10-07 16:22:48\ntags: [规范]\ncategories: [前端]\n---\n\n![我是图片](https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg)\n\n## 前言\n学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。\n\n<!-- more -->\n\n## html\nhtml标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：\n1. id,ref,class等属于标签的标识排前\n2. v-if,v-for等操作类的属性\n3. v-model和带绑定的属性\n4. 无绑定的属性\n5. 事件绑定\n\n另外属性个数大于三个要换行显示\n```\n<Tag \n    ref=\"tag\"\n    v-for=\"(item,index) in tabsInfo\"\n    :title=\"item.title\"\n    :link=\"item.router\"\n    :active=\"item.active\"\n    :key=\"index\"\n    palcehold=\"请输入\"\n    @click=\"handleClick\"\n><Tag>\n```\n\n## css\n业界比较推荐的一种规范是[BEM（块级元素修饰符）](http://getbem.com/)，它可以让你的css模块化，变得易维护。\n\n* [http://getbem.com/naming/](http://getbem.com/naming/)\n* [https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl](https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl)\n\n## js\n### 命名\n> 计算机科学只存在两个难题：缓存失效和命名。 --Phil KarIton\n\n命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到**让人阅读代码就像是阅读一本书，用代码述说故事。**\n\n在命名是我比较喜欢参照一下几点原则：\n* 命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语\n* 命名常量使用大写字母加下划线\n* 命名函数使用小驼峰，使用动词或动词短语，表示动作\n* 命名类使用就大驼峰\n\n### 函数\n> 函数的第一规则是短小，第二规则是还要更短小。 --《代码整洁之道》\n\n写函数我一般遵循以下几点原则：\n* 短小。假如函数过长，你就要做拆分，最好不要超过20行。\n* if else语句不要嵌套太深，最多两层。\n* 好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。\n* 参数不要过多，最好三个之内，三个以上要有足够的理由。\n* 减少副作用。\n* 错误提前返回\n```\nfunction observe(obj) {\n    if (obj && typeof obj === 'object') {\n        Object.keys(obj).forEach(key => {\n            defineReactive(obj, key, obj[key])\n        })    \n    }\n}\n改为：\nfunction observe(obj) {\n    if (!obj || typeof obj !==     'object') return\n\n    Object.keys(obj).forEach(key => {\n        defineReactive(obj, key, obj[key])\n    })\n}\n```\n* 自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。\n```\nfunction A() {\n    B()\n    C()\n}\n// 以下都是A的细节\nfunction B() {\n    D()\n}\n--// D属于B的细节，放在B下面\nfunction D() {}\n\nfunction C() {\n    E()\n}\n--// E属于C的细节，放在C下面\nfunction E() {}\n```\n* 公共API函数要写注释。以下摘自tj大神co库里的一段\n```\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n```\n\n如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。\n\n### 注释\n> \"别给糟糕的代码添加注释，重新写吧。\" --《代码整洁之道》\n\n《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：\n1. 好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。\n2. 注释是人写的，会有不准确性，有误人子弟的可能。\n3. 写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。\n\n但是所有的注释都不应该写吗？肯定不是。\n\n注释也分类型，**没必要写**的类型有：\n1. 喃喃自语类的注释，表意不明的信息。\n2. 多余的说明。这种注释像是翻译一遍函数名。\n3. 误导性的注释，就是不准确的描述了函数的意图。\n4. 评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。\n5. 骂人的注释。。\n\n**有必要**写注释的类型有：\n1. 法律信息和开源信息类，或者是一个库开头的说明信息。\n```\n/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n```\n2. 说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。\n```\n\n// 当B网站的api data更新时会通过storage通知这里\n// 监听storage，实时更新api data\nwindow.addEventListener(\"storage\", (event) => {\nconsole.warn('event', event);\nconst { key, newValue } = event;\nconst api_storage_key = `api_list_${this.tpl_config.app_name}`;\nif (key === api_storage_key) {\n  console.log(\"storage change,key \", key)\n  this.$store.commit(\"initApi\", {\n    data: JSON.parse(newValue).content || []\n  })\n  if (this.select_node.label === \"Form\") {\n    const api_name = this.props_temp.model.api\n    if (!api_name) return\n\n    const api = this.apilist.find(api => api.name === api_name);\n    // 需要更新当前Form面板关联api的参数配置\n    this.createFormContentWithApiConf(api)\n  }\n}\n})\n```\n以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。\n3. 对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。\n```\nrenameComponent(name) {\n    switch (name) {\n      // Switch不能作为组件名注册\n      case 'SwitchRadio':\n        name = 'Switch'\n        break\n    }\n    return name\n},\n```\n4. 对于特殊常量的说明。\n```\nconst TYPE_FORM = 0; // 上搜下标类模板\n```\n5. TODO注释\n```\nTODO: 太慢，待优化！\n```\n6. 公共API的注释\n7. 注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。\n```\nfor (let key in defaultData) {\n    this.props_temp[prop].relatedData[key] = {\n        label: key,\n        prop: key,\n        // 暂时去掉默认值\n        // value: defaultData[key],\n        inputType: \"Input\"\n    };\n }\n```","slug":"前端编码规范","published":1,"updated":"2019-08-31T15:24:37.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fbn0010w8qzfesqt4ww","content":"<p><img src=\"https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。</p>\n<a id=\"more\"></a>\n<h2 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h2><p>html标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：</p>\n<ol>\n<li>id,ref,class等属于标签的标识排前</li>\n<li>v-if,v-for等操作类的属性</li>\n<li>v-model和带绑定的属性</li>\n<li>无绑定的属性</li>\n<li>事件绑定</li>\n</ol>\n<p>另外属性个数大于三个要换行显示<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Tag </span><br><span class=\"line\">    ref=<span class=\"string\">\"tag\"</span></span><br><span class=\"line\">    v-<span class=\"keyword\">for</span>=<span class=\"string\">\"(item,index) in tabsInfo\"</span></span><br><span class=\"line\">    <span class=\"symbol\">:title=<span class=\"string\">\"item.title\"</span></span></span><br><span class=\"line\">    <span class=\"symbol\">:link=<span class=\"string\">\"item.router\"</span></span></span><br><span class=\"line\">    <span class=\"symbol\">:active=<span class=\"string\">\"item.active\"</span></span></span><br><span class=\"line\">    <span class=\"symbol\">:key=<span class=\"string\">\"index\"</span></span></span><br><span class=\"line\">    palcehold=<span class=\"string\">\"请输入\"</span></span><br><span class=\"line\">    <span class=\"variable\">@click</span>=<span class=\"string\">\"handleClick\"</span></span><br><span class=\"line\">&gt;&lt;Tag&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><p>业界比较推荐的一种规范是<a href=\"http://getbem.com/\" target=\"_blank\" rel=\"external\">BEM（块级元素修饰符）</a>，它可以让你的css模块化，变得易维护。</p>\n<ul>\n<li><a href=\"http://getbem.com/naming/\" target=\"_blank\" rel=\"external\">http://getbem.com/naming/</a></li>\n<li><a href=\"https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl\" target=\"_blank\" rel=\"external\">https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl</a></li>\n</ul>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><blockquote>\n<p>计算机科学只存在两个难题：缓存失效和命名。 –Phil KarIton</p>\n</blockquote>\n<p>命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到<strong>让人阅读代码就像是阅读一本书，用代码述说故事。</strong></p>\n<p>在命名是我比较喜欢参照一下几点原则：</p>\n<ul>\n<li>命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语</li>\n<li>命名常量使用大写字母加下划线</li>\n<li>命名函数使用小驼峰，使用动词或动词短语，表示动作</li>\n<li>命名类使用就大驼峰</li>\n</ul>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><blockquote>\n<p>函数的第一规则是短小，第二规则是还要更短小。 –《代码整洁之道》</p>\n</blockquote>\n<p>写函数我一般遵循以下几点原则：</p>\n<ul>\n<li>短小。假如函数过长，你就要做拆分，最好不要超过20行。</li>\n<li>if else语句不要嵌套太深，最多两层。</li>\n<li>好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。</li>\n<li>参数不要过多，最好三个之内，三个以上要有足够的理由。</li>\n<li>减少副作用。</li>\n<li><p>错误提前返回</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">function</span> <span class=\"selector-tag\">observe</span>(obj) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">if</span> (obj &amp;&amp; typeof obj === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">Object</span><span class=\"selector-class\">.keys</span>(obj)<span class=\"selector-class\">.forEach</span>(key =&gt; &#123;</span><br><span class=\"line\">            <span class=\"selector-tag\">defineReactive</span>(obj, key, obj[key])</span><br><span class=\"line\">        &#125;)    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">改为：</span><br><span class=\"line\"><span class=\"selector-tag\">function</span> <span class=\"selector-tag\">observe</span>(obj) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">if</span> (!obj || typeof obj !==     <span class=\"string\">'object'</span>) <span class=\"selector-tag\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">Object</span><span class=\"selector-class\">.keys</span>(obj)<span class=\"selector-class\">.forEach</span>(key =&gt; &#123;</span><br><span class=\"line\">        defineReactive(obj, key, obj<span class=\"selector-attr\">[key]</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    B()</span><br><span class=\"line\">    C()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 以下都是A的细节</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    D()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// D属于B的细节，放在B下面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">D</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    E()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// E属于C的细节，放在C下面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">E</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>公共API函数要写注释。以下摘自tj大神co库里的一段</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Wrap the given generator `fn` into a</span><br><span class=\"line\"> * function that returns a promise.</span><br><span class=\"line\"> * This is a separate function so that</span><br><span class=\"line\"> * every `co()` call doesn't create a new,</span><br><span class=\"line\"> * unnecessary closure.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;GeneratorFunction&#125; fn</span><br><span class=\"line\"> * @return &#123;Function&#125;</span><br><span class=\"line\"> * @api public</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">co.wrap = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">fn</span>) </span>&#123;</span><br><span class=\"line\">  createPromise.__generatorFunction__ = fn;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> createPromise;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPromise</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> co.call(<span class=\"keyword\">this</span>, fn.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。</p>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><blockquote>\n<p>“别给糟糕的代码添加注释，重新写吧。” –《代码整洁之道》</p>\n</blockquote>\n<p>《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：</p>\n<ol>\n<li>好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。</li>\n<li>注释是人写的，会有不准确性，有误人子弟的可能。</li>\n<li>写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。</li>\n</ol>\n<p>但是所有的注释都不应该写吗？肯定不是。</p>\n<p>注释也分类型，<strong>没必要写</strong>的类型有：</p>\n<ol>\n<li>喃喃自语类的注释，表意不明的信息。</li>\n<li>多余的说明。这种注释像是翻译一遍函数名。</li>\n<li>误导性的注释，就是不准确的描述了函数的意图。</li>\n<li>评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。</li>\n<li>骂人的注释。。</li>\n</ol>\n<p><strong>有必要</strong>写注释的类型有：</p>\n<ol>\n<li><p>法律信息和开源信息类，或者是一个库开头的说明信息。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*!</span><br><span class=\"line\"> * Vue.js v2.6.10</span><br><span class=\"line\"> * (c) 2014-2019 Evan You</span><br><span class=\"line\"> * Released under the MIT License.</span><br><span class=\"line\"> */</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 当B网站的api data更新时会通过storage通知这里</span></span><br><span class=\"line\"><span class=\"comment\">// 监听storage，实时更新api data</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">\"storage\"</span>, (event) =&gt; &#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.warn(<span class=\"string\">'event'</span>, event);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; key, newValue &#125; = event;</span><br><span class=\"line\"><span class=\"keyword\">const</span> api_storage_key = <span class=\"string\">`api_list_<span class=\"subst\">$&#123;this.tpl_config.app_name&#125;</span>`</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (key === api_storage_key) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"storage change,key \"</span>, key)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">\"initApi\"</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"built_in\">JSON</span>.parse(newValue).content || []</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.select_node.label === <span class=\"string\">\"Form\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> api_name = <span class=\"keyword\">this</span>.props_temp.model.api</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!api_name) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> api = <span class=\"keyword\">this</span>.apilist.find(api =&gt; api.name === api_name);</span><br><span class=\"line\">    <span class=\"comment\">// 需要更新当前Form面板关联api的参数配置</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.createFormContentWithApiConf(api)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。</p>\n<ol>\n<li><p>对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">renameComponent(name) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (name) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Switch不能作为组件名注册</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">'SwitchRadio'</span>:</span><br><span class=\"line\">        name = <span class=\"string\">'Switch'</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对于特殊常量的说明。</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> TYPE_FORM = <span class=\"number\">0</span>; <span class=\"comment\">// 上搜下标类模板</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>TODO注释</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">TODO:</span> 太慢，待优化！</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>公共API的注释</p>\n</li>\n<li>注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> <span class=\"built_in\">key</span> <span class=\"keyword\">in</span> defaultData) &#123;</span><br><span class=\"line\">    this.props_temp[prop].relatedData[<span class=\"built_in\">key</span>] = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">label</span>: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        prop: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        // 暂时去掉默认值</span><br><span class=\"line\">        // value: defaultData[<span class=\"built_in\">key</span>],</span><br><span class=\"line\">        inputType: <span class=\"string\">\"Input\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"<p><img src=\"https://cdn.pixabay.com/photo/2015/06/24/15/45/ipad-820272__340.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>学习了业界一些对于编码风格的理论，结合一些业界比较推荐的规范风格，反观自身的编码习惯，总结出这么一份自己比较喜欢的规范风格。</p>","more":"<h2 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h2><p>html标签中有很多属性，这些属性假如没有一定的排列规则，会现得很乱，不整洁。以vue tempalte的html为例，我推荐一下属性排列优先级：</p>\n<ol>\n<li>id,ref,class等属于标签的标识排前</li>\n<li>v-if,v-for等操作类的属性</li>\n<li>v-model和带绑定的属性</li>\n<li>无绑定的属性</li>\n<li>事件绑定</li>\n</ol>\n<p>另外属性个数大于三个要换行显示<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Tag </span><br><span class=\"line\">    ref=<span class=\"string\">\"tag\"</span></span><br><span class=\"line\">    v-<span class=\"keyword\">for</span>=<span class=\"string\">\"(item,index) in tabsInfo\"</span></span><br><span class=\"line\">    <span class=\"symbol\">:title=<span class=\"string\">\"item.title\"</span></span></span><br><span class=\"line\">    <span class=\"symbol\">:link=<span class=\"string\">\"item.router\"</span></span></span><br><span class=\"line\">    <span class=\"symbol\">:active=<span class=\"string\">\"item.active\"</span></span></span><br><span class=\"line\">    <span class=\"symbol\">:key=<span class=\"string\">\"index\"</span></span></span><br><span class=\"line\">    palcehold=<span class=\"string\">\"请输入\"</span></span><br><span class=\"line\">    <span class=\"variable\">@click</span>=<span class=\"string\">\"handleClick\"</span></span><br><span class=\"line\">&gt;&lt;Tag&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><p>业界比较推荐的一种规范是<a href=\"http://getbem.com/\">BEM（块级元素修饰符）</a>，它可以让你的css模块化，变得易维护。</p>\n<ul>\n<li><a href=\"http://getbem.com/naming/\">http://getbem.com/naming/</a></li>\n<li><a href=\"https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl\">https://github.com/getbem/getbem.com/blob/master/src/styles/pages/home.styl</a></li>\n</ul>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><blockquote>\n<p>计算机科学只存在两个难题：缓存失效和命名。 –Phil KarIton</p>\n</blockquote>\n<p>命名一直是计算机科学里的一大难题，在名变量时我只要做到准确、名副其实就可以了，记住一点就是要做到<strong>让人阅读代码就像是阅读一本书，用代码述说故事。</strong></p>\n<p>在命名是我比较喜欢参照一下几点原则：</p>\n<ul>\n<li>命名变量使用小写字母加下划线，这样是为了跟函数的小驼峰命名做区分，好让我一样就知道这是变量，而且使用名词或名词短语</li>\n<li>命名常量使用大写字母加下划线</li>\n<li>命名函数使用小驼峰，使用动词或动词短语，表示动作</li>\n<li>命名类使用就大驼峰</li>\n</ul>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><blockquote>\n<p>函数的第一规则是短小，第二规则是还要更短小。 –《代码整洁之道》</p>\n</blockquote>\n<p>写函数我一般遵循以下几点原则：</p>\n<ul>\n<li>短小。假如函数过长，你就要做拆分，最好不要超过20行。</li>\n<li>if else语句不要嵌套太深，最多两层。</li>\n<li>好的函数只做一件事情，也就是单一功能原则，并且能用函数名表达函数的主要功能。这里有个技巧，就是函数越短小，功能越集中，就越能取个准确的命名。</li>\n<li>参数不要过多，最好三个之内，三个以上要有足够的理由。</li>\n<li>减少副作用。</li>\n<li><p>错误提前返回</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">function</span> <span class=\"selector-tag\">observe</span>(obj) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">if</span> (obj &amp;&amp; typeof obj === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">Object</span><span class=\"selector-class\">.keys</span>(obj)<span class=\"selector-class\">.forEach</span>(key =&gt; &#123;</span><br><span class=\"line\">            <span class=\"selector-tag\">defineReactive</span>(obj, key, obj[key])</span><br><span class=\"line\">        &#125;)    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">改为：</span><br><span class=\"line\"><span class=\"selector-tag\">function</span> <span class=\"selector-tag\">observe</span>(obj) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">if</span> (!obj || typeof obj !==     <span class=\"string\">'object'</span>) <span class=\"selector-tag\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">Object</span><span class=\"selector-class\">.keys</span>(obj)<span class=\"selector-class\">.forEach</span>(key =&gt; &#123;</span><br><span class=\"line\">        defineReactive(obj, key, obj<span class=\"selector-attr\">[key]</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>自上而下排版函数。类似读报纸一样，细节总上在一个段落的下面。函数内的函数就类比细节，把内函数声明的位置放在外函数下面，依次排列。</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    B()</span><br><span class=\"line\">    C()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 以下都是A的细节</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    D()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// D属于B的细节，放在B下面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">D</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    E()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">--<span class=\"comment\">// E属于C的细节，放在C下面</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">E</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>公共API函数要写注释。以下摘自tj大神co库里的一段</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Wrap the given generator `fn` into a</span><br><span class=\"line\"> * function that returns a promise.</span><br><span class=\"line\"> * This is a separate function so that</span><br><span class=\"line\"> * every `co()` call doesn't create a new,</span><br><span class=\"line\"> * unnecessary closure.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;GeneratorFunction&#125; fn</span><br><span class=\"line\"> * @return &#123;Function&#125;</span><br><span class=\"line\"> * @api public</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">co.wrap = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">fn</span>) </span>&#123;</span><br><span class=\"line\">  createPromise.__generatorFunction__ = fn;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> createPromise;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPromise</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> co.call(<span class=\"keyword\">this</span>, fn.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如何能写出好函数呢？首先要记住好代码是改出来，好函数也一样，所以先把函数的主体逻辑写好，再参照规则改造就好了。</p>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><blockquote>\n<p>“别给糟糕的代码添加注释，重新写吧。” –《代码整洁之道》</p>\n</blockquote>\n<p>《代码整洁之道》这本书不建议我们给表意不明的代码添加注释。总结的理由如下：</p>\n<ol>\n<li>好代码可以从函数名就知道意思，假如函数名表达不了代码意图，就需要改造代码。</li>\n<li>注释是人写的，会有不准确性，有误人子弟的可能。</li>\n<li>写注释的原因可能是代码难读，一遇到难读的代码就写注释会导致跟多难读的代码。</li>\n</ol>\n<p>但是所有的注释都不应该写吗？肯定不是。</p>\n<p>注释也分类型，<strong>没必要写</strong>的类型有：</p>\n<ol>\n<li>喃喃自语类的注释，表意不明的信息。</li>\n<li>多余的说明。这种注释像是翻译一遍函数名。</li>\n<li>误导性的注释，就是不准确的描述了函数的意图。</li>\n<li>评论类的注释。对代码的评论可以使用github的评论工具，没必要写在代码里。</li>\n<li>骂人的注释。。</li>\n</ol>\n<p><strong>有必要</strong>写注释的类型有：</p>\n<ol>\n<li><p>法律信息和开源信息类，或者是一个库开头的说明信息。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*!</span><br><span class=\"line\"> * Vue.js v2.6.10</span><br><span class=\"line\"> * (c) 2014-2019 Evan You</span><br><span class=\"line\"> * Released under the MIT License.</span><br><span class=\"line\"> */</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>说明在某种场景，某种情况的注释，这种注释就是为了说明因为某种特殊的原因才有以下代码。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 当B网站的api data更新时会通过storage通知这里</span></span><br><span class=\"line\"><span class=\"comment\">// 监听storage，实时更新api data</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">\"storage\"</span>, (event) =&gt; &#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.warn(<span class=\"string\">'event'</span>, event);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; key, newValue &#125; = event;</span><br><span class=\"line\"><span class=\"keyword\">const</span> api_storage_key = <span class=\"string\">`api_list_<span class=\"subst\">$&#123;this.tpl_config.app_name&#125;</span>`</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (key === api_storage_key) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"storage change,key \"</span>, key)</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$store.commit(<span class=\"string\">\"initApi\"</span>, &#123;</span><br><span class=\"line\">    data: <span class=\"built_in\">JSON</span>.parse(newValue).content || []</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.select_node.label === <span class=\"string\">\"Form\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> api_name = <span class=\"keyword\">this</span>.props_temp.model.api</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!api_name) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> api = <span class=\"keyword\">this</span>.apilist.find(api =&gt; api.name === api_name);</span><br><span class=\"line\">    <span class=\"comment\">// 需要更新当前Form面板关联api的参数配置</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.createFormContentWithApiConf(api)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>以上代码说明了场景当B站点更新api data时，会以storage的方式通知，这就监听storage代码出现的原因。</p>\n<ol>\n<li><p>对意图的解析。比如函数内部的某一段为什么这么写，是什么原因造成这样写的决定。</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">renameComponent(name) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (name) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Switch不能作为组件名注册</span></span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">'SwitchRadio'</span>:</span><br><span class=\"line\">        name = <span class=\"string\">'Switch'</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>对于特殊常量的说明。</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> TYPE_FORM = <span class=\"number\">0</span>; <span class=\"comment\">// 上搜下标类模板</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>TODO注释</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">TODO:</span> 太慢，待优化！</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>公共API的注释</p>\n</li>\n<li>注释掉代码，有必要写明注释掉的原因，好让人知道改删掉还是不改删掉。<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> <span class=\"built_in\">key</span> <span class=\"keyword\">in</span> defaultData) &#123;</span><br><span class=\"line\">    this.props_temp[prop].relatedData[<span class=\"built_in\">key</span>] = &#123;</span><br><span class=\"line\">        <span class=\"built_in\">label</span>: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        prop: <span class=\"built_in\">key</span>,</span><br><span class=\"line\">        // 暂时去掉默认值</span><br><span class=\"line\">        // value: defaultData[<span class=\"built_in\">key</span>],</span><br><span class=\"line\">        inputType: <span class=\"string\">\"Input\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"有趣的鼠标悬浮效果","date":"2017-06-18T14:17:59.861Z","_content":"\n**1.文字的流光效果**\n  \n\t\n关键代码：`background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);   `\n这句代码设置背景色的线性渐变\n`-webkit-background-clip: text; `\n以文字的形状裁剪背景色，这时候文字颜色还在背景色之上\n`-webkit-text-fill-color: transparent;`\n将文字颜色设置为透明\n` background-size: 200% 100%; `\n设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应\n```\n@keyframes streamer {\n    0%  {\n        background-position: 0 0;\n    }\n    100% {\n        background-position: -100% 0;\n    }\n}\n```\n`animation: streamer 3s infinite linear;`\n最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）\n\n**学习到的知识点**\nlinear-gradient(起点，开始颜色，结束颜色);\n可参考[http://www.fx114.net/qa-264-77177.aspx](http://)\n```\nbackground-clip\nbackground-clip: border-box|padding-box|content-box|text(要加-webkit)\n```\n\n| border-box | 背景被裁剪到边框盒 | \n| -------- | -------- | \n| padding-box    | 背景被裁剪到内边距框  |\n| content-box    |   背景被裁剪到内容框 |\n| text | 背景被裁剪到文字区域（此时文字颜色会盖住背景色） |\n\nanimation\n`animation: name duration timing-function delay iteration-count direction;`\n\n|animation-name  | 规定需要绑定到选择器的 keyframe 名称|\n| -------- | -------- | \n|animation-duration | 规定完成动画所花费的时间，以秒或毫秒计|\n|animation-timing-function  | 规定动画的速度曲线 |\n|animation-delay |  规定在动画开始之前的延迟|\n|animation-iteration-count  | 规定动画应该播放的次数|\n|animation-direction  |规定是否应该轮流反向播放动画|\n\ntransition\n`transition: property duration timing-function delay;`\n默认值：all 0 easy 0\n|transition-property | 规定设置过渡效果的 CSS 属性的名称|\n| -------- | -------- | \n|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|\n|transition-delay  | 定义过渡效果何时开始|\n  \n\t\n**2.背景图片模糊化**\n  \n\t\n 主要是用到-webkit-filter： blur（）\n-webkit-filter的方法十种：\n1.\tgrayscale灰度\n2.\tsepia褐色\n3.\tsaturate饱和度\n4.\thue-rotate色相旋转\n5.\tinvert反色\n6.\topacity透明度\n7.\tbrightness亮度\n8.\tcontrast对比度\n9.\tblur模糊\n10.\tdrop-shadow阴影\n参考：[http://www.w3cplus.com/css3/ten-effects-with-css3-filter](http://)\n  \n\t\n**3.按钮边框的从中间到两边扩展开**\n  \n\t\n主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。\n","source":"_posts/有趣的鼠标悬浮效果.md","raw":"---\ntitle: 有趣的鼠标悬浮效果\ndate: \ntags: [html5,css3]\n---\n\n**1.文字的流光效果**\n  \n\t\n关键代码：`background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);   `\n这句代码设置背景色的线性渐变\n`-webkit-background-clip: text; `\n以文字的形状裁剪背景色，这时候文字颜色还在背景色之上\n`-webkit-text-fill-color: transparent;`\n将文字颜色设置为透明\n` background-size: 200% 100%; `\n设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应\n```\n@keyframes streamer {\n    0%  {\n        background-position: 0 0;\n    }\n    100% {\n        background-position: -100% 0;\n    }\n}\n```\n`animation: streamer 3s infinite linear;`\n最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）\n\n**学习到的知识点**\nlinear-gradient(起点，开始颜色，结束颜色);\n可参考[http://www.fx114.net/qa-264-77177.aspx](http://)\n```\nbackground-clip\nbackground-clip: border-box|padding-box|content-box|text(要加-webkit)\n```\n\n| border-box | 背景被裁剪到边框盒 | \n| -------- | -------- | \n| padding-box    | 背景被裁剪到内边距框  |\n| content-box    |   背景被裁剪到内容框 |\n| text | 背景被裁剪到文字区域（此时文字颜色会盖住背景色） |\n\nanimation\n`animation: name duration timing-function delay iteration-count direction;`\n\n|animation-name  | 规定需要绑定到选择器的 keyframe 名称|\n| -------- | -------- | \n|animation-duration | 规定完成动画所花费的时间，以秒或毫秒计|\n|animation-timing-function  | 规定动画的速度曲线 |\n|animation-delay |  规定在动画开始之前的延迟|\n|animation-iteration-count  | 规定动画应该播放的次数|\n|animation-direction  |规定是否应该轮流反向播放动画|\n\ntransition\n`transition: property duration timing-function delay;`\n默认值：all 0 easy 0\n|transition-property | 规定设置过渡效果的 CSS 属性的名称|\n| -------- | -------- | \n|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|\n|transition-delay  | 定义过渡效果何时开始|\n  \n\t\n**2.背景图片模糊化**\n  \n\t\n 主要是用到-webkit-filter： blur（）\n-webkit-filter的方法十种：\n1.\tgrayscale灰度\n2.\tsepia褐色\n3.\tsaturate饱和度\n4.\thue-rotate色相旋转\n5.\tinvert反色\n6.\topacity透明度\n7.\tbrightness亮度\n8.\tcontrast对比度\n9.\tblur模糊\n10.\tdrop-shadow阴影\n参考：[http://www.w3cplus.com/css3/ten-effects-with-css3-filter](http://)\n  \n\t\n**3.按钮边框的从中间到两边扩展开**\n  \n\t\n主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。\n","slug":"有趣的鼠标悬浮效果","published":1,"updated":"2017-06-18T14:25:14.743Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fc00013w8qzow8qrd9n","content":"<p><strong>1.文字的流光效果</strong></p>\n<p>关键代码：<code>background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);</code><br>这句代码设置背景色的线性渐变<br><code>-webkit-background-clip: text;</code><br>以文字的形状裁剪背景色，这时候文字颜色还在背景色之上<br><code>-webkit-text-fill-color: transparent;</code><br>将文字颜色设置为透明<br><code>background-size: 200% 100%;</code><br>设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> streamer &#123;</span><br><span class=\"line\">    0%  &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: -<span class=\"number\">100%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>animation: streamer 3s infinite linear;</code><br>最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）</p>\n<p><strong>学习到的知识点</strong><br>linear-gradient(起点，开始颜色，结束颜色);<br>可参考<a href=\"http://\">http://www.fx114.net/qa-264-77177.aspx</a><br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">background</span>-clip</span><br><span class=\"line\"><span class=\"built_in\">background</span>-clip: <span class=\"built_in\">border</span>-<span class=\"built_in\">box</span>|padding-<span class=\"built_in\">box</span>|<span class=\"built_in\">content</span>-<span class=\"built_in\">box</span>|text(要加-webkit)</span><br></pre></td></tr></table></figure></p>\n<table>\n<thead>\n<tr>\n<th>border-box</th>\n<th>背景被裁剪到边框盒</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>padding-box</td>\n<td>背景被裁剪到内边距框</td>\n</tr>\n<tr>\n<td>content-box</td>\n<td>背景被裁剪到内容框</td>\n</tr>\n<tr>\n<td>text</td>\n<td>背景被裁剪到文字区域（此时文字颜色会盖住背景色）</td>\n</tr>\n</tbody>\n</table>\n<p>animation<br><code>animation: name duration timing-function delay iteration-count direction;</code></p>\n<table>\n<thead>\n<tr>\n<th>animation-name</th>\n<th>规定需要绑定到选择器的 keyframe 名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>animation-duration</td>\n<td>规定完成动画所花费的时间，以秒或毫秒计</td>\n</tr>\n<tr>\n<td>animation-timing-function</td>\n<td>规定动画的速度曲线</td>\n</tr>\n<tr>\n<td>animation-delay</td>\n<td>规定在动画开始之前的延迟</td>\n</tr>\n<tr>\n<td>animation-iteration-count</td>\n<td>规定动画应该播放的次数</td>\n</tr>\n<tr>\n<td>animation-direction</td>\n<td>规定是否应该轮流反向播放动画</td>\n</tr>\n</tbody>\n</table>\n<p>transition<br><code>transition: property duration timing-function delay;</code><br>默认值：all 0 easy 0<br>|transition-property | 规定设置过渡效果的 CSS 属性的名称|<br>| ——– | ——– |<br>|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|<br>|transition-delay  | 定义过渡效果何时开始|</p>\n<p><strong>2.背景图片模糊化</strong></p>\n<p> 主要是用到-webkit-filter： blur（）<br>-webkit-filter的方法十种：</p>\n<ol>\n<li>grayscale灰度</li>\n<li>sepia褐色</li>\n<li>saturate饱和度</li>\n<li>hue-rotate色相旋转</li>\n<li>invert反色</li>\n<li>opacity透明度</li>\n<li>brightness亮度</li>\n<li>contrast对比度</li>\n<li>blur模糊</li>\n<li>drop-shadow阴影<br>参考：<a href=\"http://\">http://www.w3cplus.com/css3/ten-effects-with-css3-filter</a></li>\n</ol>\n<p><strong>3.按钮边框的从中间到两边扩展开</strong></p>\n<p>主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。</p>\n","excerpt":"","more":"<p><strong>1.文字的流光效果</strong></p>\n<p>关键代码：<code>background-image: -webkit-linear-gradient(left, blue, red 25%, blue 50%, red 75%, blue 100%);</code><br>这句代码设置背景色的线性渐变<br><code>-webkit-background-clip: text;</code><br>以文字的形状裁剪背景色，这时候文字颜色还在背景色之上<br><code>-webkit-text-fill-color: transparent;</code><br>将文字颜色设置为透明<br><code>background-size: 200% 100%;</code><br>设置一下背景色的大小，之所以设置宽为原来的两倍，是与前面设好的蓝红蓝相对应<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">keyframes</span> streamer &#123;</span><br><span class=\"line\">    0%  &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: -<span class=\"number\">100%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>animation: streamer 3s infinite linear;</code><br>最后让背景的位置移动就实现了流光效果，infinite（循环播放），linear（线性移动）</p>\n<p><strong>学习到的知识点</strong><br>linear-gradient(起点，开始颜色，结束颜色);<br>可参考<a href=\"http://\">http://www.fx114.net/qa-264-77177.aspx</a><br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">background</span>-clip</span><br><span class=\"line\"><span class=\"built_in\">background</span>-clip: <span class=\"built_in\">border</span>-<span class=\"built_in\">box</span>|padding-<span class=\"built_in\">box</span>|<span class=\"built_in\">content</span>-<span class=\"built_in\">box</span>|text(要加-webkit)</span><br></pre></td></tr></table></figure></p>\n<table>\n<thead>\n<tr>\n<th>border-box</th>\n<th>背景被裁剪到边框盒</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>padding-box</td>\n<td>背景被裁剪到内边距框</td>\n</tr>\n<tr>\n<td>content-box</td>\n<td>背景被裁剪到内容框</td>\n</tr>\n<tr>\n<td>text</td>\n<td>背景被裁剪到文字区域（此时文字颜色会盖住背景色）</td>\n</tr>\n</tbody>\n</table>\n<p>animation<br><code>animation: name duration timing-function delay iteration-count direction;</code></p>\n<table>\n<thead>\n<tr>\n<th>animation-name</th>\n<th>规定需要绑定到选择器的 keyframe 名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>animation-duration</td>\n<td>规定完成动画所花费的时间，以秒或毫秒计</td>\n</tr>\n<tr>\n<td>animation-timing-function</td>\n<td>规定动画的速度曲线</td>\n</tr>\n<tr>\n<td>animation-delay</td>\n<td>规定在动画开始之前的延迟</td>\n</tr>\n<tr>\n<td>animation-iteration-count</td>\n<td>规定动画应该播放的次数</td>\n</tr>\n<tr>\n<td>animation-direction</td>\n<td>规定是否应该轮流反向播放动画</td>\n</tr>\n</tbody>\n</table>\n<p>transition<br><code>transition: property duration timing-function delay;</code><br>默认值：all 0 easy 0<br>|transition-property | 规定设置过渡效果的 CSS 属性的名称|<br>| ——– | ——– |<br>|transition-duration  | 规定完成过渡效果需要多少秒或毫秒|<br>|transition-delay  | 定义过渡效果何时开始|</p>\n<p><strong>2.背景图片模糊化</strong></p>\n<p> 主要是用到-webkit-filter： blur（）<br>-webkit-filter的方法十种：</p>\n<ol>\n<li>grayscale灰度</li>\n<li>sepia褐色</li>\n<li>saturate饱和度</li>\n<li>hue-rotate色相旋转</li>\n<li>invert反色</li>\n<li>opacity透明度</li>\n<li>brightness亮度</li>\n<li>contrast对比度</li>\n<li>blur模糊</li>\n<li>drop-shadow阴影<br>参考：<a href=\"http://\">http://www.w3cplus.com/css3/ten-effects-with-css3-filter</a></li>\n</ol>\n<p><strong>3.按钮边框的从中间到两边扩展开</strong></p>\n<p>主要是用到css伪类before和after，配合transform-origin:center,通过在before伪类里设置border-left和border-right，另外加上这句关键代码transform: scale3d(1, 0, 1)，意思就是y轴伸缩为0倍，也就是消失，同理after上写border-top，border-bottom，transform: scale3d(0, 1, 1)，最后在hover伪类上写transform: scale3d(1, 1, 1)  和transform 0.75s ease-in-out 0.75s。</p>\n"},{"title":"js面向对象编程之继承","date":"2017-10-19T07:03:13.359Z","_content":"\n![我是图片](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&fm=27&gp=0.jpg)\n\n# 前言\n> javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？\n\n<!--more-->\n\n# 什么是继承？\n\n继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。\n\n我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。\n\n而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。\n\n# 继承的方式\n\n## 构造函数伪装继承属性\n\n我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。\n\n```js\nfunction Drag(id)\n{\n\tvar _this=this;\n\t\n\tthis.disX=0;\n\tthis.disY=0;\n\tthis.oDiv=document.getElementById(id);\n\t\n\tthis.oDiv.onmousedown=function (ev)\n\t{\n\t\t_this.fnDown(ev);\n\t\t\n\t\treturn false;\n\t};\n}\n\nDrag.prototype.fnDown=function (ev)\n{\n\tvar _this=this;\n\tvar oEvent=ev||event;\n\tthis.disX=oEvent.clientX-this.oDiv.offsetLeft;\n\tthis.disY=oEvent.clientY-this.oDiv.offsetTop;\n\t\n\tdocument.onmousemove=function (ev)\n\t{\n\t\t_this.fnMove(ev);\n\t};\n\t\n\tdocument.onmouseup=function ()\n\t{\n\t\t_this.fnUp();\n\t};\n};\n\nDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\t\n\tthis.oDiv.style.left=oEvent.clientX-this.disX+'px';\n\tthis.oDiv.style.top=oEvent.clientY-this.disY+'px';\n};\n\nDrag.prototype.fnUp=function ()\n{\n\tdocument.onmousemove=null;\n\tdocument.onmouseup=null;\n};\n```\n\n现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。\n```js\nfunction LimitDrag(id)\n{\n\tDrag.call(this, id); //(1)\n}\n```\n\n要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。\n\n## 原型对象实现方法继承\n\n我们先用这种方式实现方法的继承\n\n```js\nLimitDrag.prototype=Drag.prototype;\n```\n\n然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。\n\n解决这个问题有两种思路：\n* 把原型对象上的方法拷贝一份\n* 将子类的原型对象的__proto__属性指向父类原型对象\n\n```js\n//方法一\nfor(var i in Drag.prototype)\n{\n\tLimitDrag.prototype[i]=Drag.prototype[i];\n}\n```\n\n```js\nLimitDrag.prototype.__proto__ = Drag.prototype\nLimitDrag.prototype.constructor = LimitDrag;\n```\n\n其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。\n\n在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的__proto__属性的指向到另一个构造器的原型对象上，来实现继承的效果。\n\n所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了\n\n```js\nLimitDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\tvar l=oEvent.clientX-this.disX;\n\tvar t=oEvent.clientY-this.disY;\n\t\n\tif(l<0)\n\t{\n\t\tl=0;\n\t}\n\telse if(l>document.documentElement.clientWidth-this.oDiv.offsetWidth)\n\t{\n\t\tl=document.documentElement.clientWidth-this.oDiv.offsetWidth;\n\t}\n\t\n\tif(t<0)\n\t{\n\t\tt=0;\n\t}\n\telse if(t>document.documentElement.clientHeight-this.oDiv.offsetHeight)\n\t{\n\t\tt=document.documentElement.clientHeight-this.oDiv.offsetHeight;\n\t}\n\t\n\tthis.oDiv.style.left=l+'px';\n\tthis.oDiv.style.top=t+'px';\n};\n```\n\n# 结语\n\njs是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。\n\n继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。","source":"_posts/js面向对象编程之继承.md","raw":"---\ntitle: js面向对象编程之继承\ndate: \ntags: [js, 继承]\ncategories: [js]\n---\n\n![我是图片](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&fm=27&gp=0.jpg)\n\n# 前言\n> javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？\n\n<!--more-->\n\n# 什么是继承？\n\n继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。\n\n我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。\n\n而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。\n\n# 继承的方式\n\n## 构造函数伪装继承属性\n\n我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。\n\n```js\nfunction Drag(id)\n{\n\tvar _this=this;\n\t\n\tthis.disX=0;\n\tthis.disY=0;\n\tthis.oDiv=document.getElementById(id);\n\t\n\tthis.oDiv.onmousedown=function (ev)\n\t{\n\t\t_this.fnDown(ev);\n\t\t\n\t\treturn false;\n\t};\n}\n\nDrag.prototype.fnDown=function (ev)\n{\n\tvar _this=this;\n\tvar oEvent=ev||event;\n\tthis.disX=oEvent.clientX-this.oDiv.offsetLeft;\n\tthis.disY=oEvent.clientY-this.oDiv.offsetTop;\n\t\n\tdocument.onmousemove=function (ev)\n\t{\n\t\t_this.fnMove(ev);\n\t};\n\t\n\tdocument.onmouseup=function ()\n\t{\n\t\t_this.fnUp();\n\t};\n};\n\nDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\t\n\tthis.oDiv.style.left=oEvent.clientX-this.disX+'px';\n\tthis.oDiv.style.top=oEvent.clientY-this.disY+'px';\n};\n\nDrag.prototype.fnUp=function ()\n{\n\tdocument.onmousemove=null;\n\tdocument.onmouseup=null;\n};\n```\n\n现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。\n```js\nfunction LimitDrag(id)\n{\n\tDrag.call(this, id); //(1)\n}\n```\n\n要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。\n\n## 原型对象实现方法继承\n\n我们先用这种方式实现方法的继承\n\n```js\nLimitDrag.prototype=Drag.prototype;\n```\n\n然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。\n\n解决这个问题有两种思路：\n* 把原型对象上的方法拷贝一份\n* 将子类的原型对象的__proto__属性指向父类原型对象\n\n```js\n//方法一\nfor(var i in Drag.prototype)\n{\n\tLimitDrag.prototype[i]=Drag.prototype[i];\n}\n```\n\n```js\nLimitDrag.prototype.__proto__ = Drag.prototype\nLimitDrag.prototype.constructor = LimitDrag;\n```\n\n其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。\n\n在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的__proto__属性的指向到另一个构造器的原型对象上，来实现继承的效果。\n\n所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了\n\n```js\nLimitDrag.prototype.fnMove=function (ev)\n{\n\tvar oEvent=ev||event;\n\tvar l=oEvent.clientX-this.disX;\n\tvar t=oEvent.clientY-this.disY;\n\t\n\tif(l<0)\n\t{\n\t\tl=0;\n\t}\n\telse if(l>document.documentElement.clientWidth-this.oDiv.offsetWidth)\n\t{\n\t\tl=document.documentElement.clientWidth-this.oDiv.offsetWidth;\n\t}\n\t\n\tif(t<0)\n\t{\n\t\tt=0;\n\t}\n\telse if(t>document.documentElement.clientHeight-this.oDiv.offsetHeight)\n\t{\n\t\tt=document.documentElement.clientHeight-this.oDiv.offsetHeight;\n\t}\n\t\n\tthis.oDiv.style.left=l+'px';\n\tthis.oDiv.style.top=t+'px';\n};\n```\n\n# 结语\n\njs是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。\n\n继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。","slug":"js面向对象编程之继承","published":1,"updated":"2018-04-24T11:57:56.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fc60016w8qzlmt2bwt6","content":"<p><img src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"什么是继承？\"><a href=\"#什么是继承？\" class=\"headerlink\" title=\"什么是继承？\"></a>什么是继承？</h1><p>继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。</p>\n<p>我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。</p>\n<p>而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。</p>\n<h1 id=\"继承的方式\"><a href=\"#继承的方式\" class=\"headerlink\" title=\"继承的方式\"></a>继承的方式</h1><h2 id=\"构造函数伪装继承属性\"><a href=\"#构造函数伪装继承属性\" class=\"headerlink\" title=\"构造函数伪装继承属性\"></a>构造函数伪装继承属性</h2><p>我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Drag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disX=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disY=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv=<span class=\"built_in\">document</span>.getElementById(id);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.onmousedown=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t_this.fnDown(ev);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Drag.prototype.fnDown=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disX=oEvent.clientX-<span class=\"keyword\">this</span>.oDiv.offsetLeft;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disY=oEvent.clientY-<span class=\"keyword\">this</span>.oDiv.offsetTop;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmousemove=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t_this.fnMove(ev);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmouseup=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t_this.fnUp();</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Drag.prototype.fnMove=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.left=oEvent.clientX-<span class=\"keyword\">this</span>.disX+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.top=oEvent.clientY-<span class=\"keyword\">this</span>.disY+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Drag.prototype.fnUp=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmousemove=<span class=\"literal\">null</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmouseup=<span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">LimitDrag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\tDrag.call(<span class=\"keyword\">this</span>, id); <span class=\"comment\">//(1)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。</p>\n<h2 id=\"原型对象实现方法继承\"><a href=\"#原型对象实现方法继承\" class=\"headerlink\" title=\"原型对象实现方法继承\"></a>原型对象实现方法继承</h2><p>我们先用这种方式实现方法的继承</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitDrag.prototype=Drag.prototype;</span><br></pre></td></tr></table></figure>\n<p>然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。</p>\n<p>解决这个问题有两种思路：</p>\n<ul>\n<li>把原型对象上的方法拷贝一份</li>\n<li>将子类的原型对象的<strong>proto</strong>属性指向父类原型对象</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方法一</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> Drag.prototype)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLimitDrag.prototype[i]=Drag.prototype[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitDrag.prototype.__proto__ = Drag.prototype</span><br><span class=\"line\">LimitDrag.prototype.constructor = LimitDrag;</span><br></pre></td></tr></table></figure>\n<p>其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。</p>\n<p>在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的<strong>proto</strong>属性的指向到另一个构造器的原型对象上，来实现继承的效果。</p>\n<p>所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitDrag.prototype.fnMove=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> l=oEvent.clientX-<span class=\"keyword\">this</span>.disX;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> t=oEvent.clientY-<span class=\"keyword\">this</span>.disY;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(l&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"built_in\">document</span>.documentElement.clientWidth-<span class=\"keyword\">this</span>.oDiv.offsetWidth)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"built_in\">document</span>.documentElement.clientWidth-<span class=\"keyword\">this</span>.oDiv.offsetWidth;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(t&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"built_in\">document</span>.documentElement.clientHeight-<span class=\"keyword\">this</span>.oDiv.offsetHeight)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"built_in\">document</span>.documentElement.clientHeight-<span class=\"keyword\">this</span>.oDiv.offsetHeight;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.left=l+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.top=t+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>js是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。</p>\n<p>继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。</p>\n","excerpt":"<p><img src=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1310394567,277925733&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>javascript本身不是静态语言，是一门动态语言，变量只有在运行的时候才知道是什么类型，严格上也没有像Java静态语言的类的概念((当然在ES6中提出了类的语法)，那么它是如何实现类的继承的呢？</p>\n</blockquote>","more":"<h1 id=\"什么是继承？\"><a href=\"#什么是继承？\" class=\"headerlink\" title=\"什么是继承？\"></a>什么是继承？</h1><p>继承就是在原类的基础上，略作修改，得到一个新的类，并且不影响原有类的功能。</p>\n<p>我们都知道js中对象的实现，是基于它定位原型链系统。类也是一种对象，只不过类比一般的对象更完备，具有自身的属性和方法。所以在js中，类的继承必然少不了原型对象的概念。</p>\n<p>而且类可以new出实例对象，通过构造函数的方式可以实现类的实例，也可以这样说，构造函数就是js的类。</p>\n<h1 id=\"继承的方式\"><a href=\"#继承的方式\" class=\"headerlink\" title=\"继承的方式\"></a>继承的方式</h1><h2 id=\"构造函数伪装继承属性\"><a href=\"#构造函数伪装继承属性\" class=\"headerlink\" title=\"构造函数伪装继承属性\"></a>构造函数伪装继承属性</h2><p>我们以实现一个拖拽的demo来说明类的继承。现有一个拖拽类，这个拖拽类可以在页面中移动，并且能移出屏幕。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Drag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disX=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disY=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv=<span class=\"built_in\">document</span>.getElementById(id);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.onmousedown=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t_this.fnDown(ev);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Drag.prototype.fnDown=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> _this=<span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disX=oEvent.clientX-<span class=\"keyword\">this</span>.oDiv.offsetLeft;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.disY=oEvent.clientY-<span class=\"keyword\">this</span>.oDiv.offsetTop;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmousemove=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t_this.fnMove(ev);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmouseup=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\">\t</span>&#123;</span><br><span class=\"line\">\t\t_this.fnUp();</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Drag.prototype.fnMove=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.left=oEvent.clientX-<span class=\"keyword\">this</span>.disX+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.top=oEvent.clientY-<span class=\"keyword\">this</span>.disY+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Drag.prototype.fnUp=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmousemove=<span class=\"literal\">null</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">document</span>.onmouseup=<span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>现在我们实现一个限制在窗口内的拖拽类，可以使用call来实现构造函数伪装。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">LimitDrag</span>(<span class=\"params\">id</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\tDrag.call(<span class=\"keyword\">this</span>, id); <span class=\"comment\">//(1)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>要清楚，函数只不过是在某一环境下执行的在代码，这个环境就是js中的上下文，call()可以改变函数执行的上下文，也就是可以改变函数中this的指向。这就相当于将Drag类构造函数的代码，放在limitDrag类中执行了一遍。这个方式叫做构造函数伪装，可以实现类属性的继承，想要覆盖它父类的属性，只需要在(1)下面写属于自己的属性即可。</p>\n<h2 id=\"原型对象实现方法继承\"><a href=\"#原型对象实现方法继承\" class=\"headerlink\" title=\"原型对象实现方法继承\"></a>原型对象实现方法继承</h2><p>我们先用这种方式实现方法的继承</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitDrag.prototype=Drag.prototype;</span><br></pre></td></tr></table></figure>\n<p>然后我们发现，LimitDrag实例可以使用Drag类的方法，但是要是我们先重构一个属于limitDrag类的fnMove()，发现Drag类的fnMove()也被覆盖了，这就影响了前面所说的，“并且不影响原有类的功能”。这个其实跟对象的引用类型有关，因为LimitDrag.prototype和Drag.prototype在内存中指向的是同一块堆内存。</p>\n<p>解决这个问题有两种思路：</p>\n<ul>\n<li>把原型对象上的方法拷贝一份</li>\n<li>将子类的原型对象的<strong>proto</strong>属性指向父类原型对象</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方法一</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> Drag.prototype)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tLimitDrag.prototype[i]=Drag.prototype[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitDrag.prototype.__proto__ = Drag.prototype</span><br><span class=\"line\">LimitDrag.prototype.constructor = LimitDrag;</span><br></pre></td></tr></table></figure>\n<p>其实方法二才算是js的继承，LimitDrag.prototype instranceof Drag为true，方法一只是使用拷贝实现了类的克隆，并没有通过原型链连接起来。</p>\n<p>在js中，一切对象都是通过克隆Object.prototype来克隆的，然后通过动态的设置对象的<strong>proto</strong>属性的指向到另一个构造器的原型对象上，来实现继承的效果。</p>\n<p>所以现在就可以改写LimitDrag类的fnMove()了，并且不会影响到Drag类了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitDrag.prototype.fnMove=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>)</span><br><span class=\"line\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> oEvent=ev||event;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> l=oEvent.clientX-<span class=\"keyword\">this</span>.disX;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> t=oEvent.clientY-<span class=\"keyword\">this</span>.disY;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(l&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(l&gt;<span class=\"built_in\">document</span>.documentElement.clientWidth-<span class=\"keyword\">this</span>.oDiv.offsetWidth)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tl=<span class=\"built_in\">document</span>.documentElement.clientWidth-<span class=\"keyword\">this</span>.oDiv.offsetWidth;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(t&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t&gt;<span class=\"built_in\">document</span>.documentElement.clientHeight-<span class=\"keyword\">this</span>.oDiv.offsetHeight)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tt=<span class=\"built_in\">document</span>.documentElement.clientHeight-<span class=\"keyword\">this</span>.oDiv.offsetHeight;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.left=l+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.oDiv.style.top=t+<span class=\"string\">'px'</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>js是静态语言，在实现类的继承可能没有动态语言严谨，但是增加了它的灵活性。通过构造函数伪装和原型对象继承两种方式可以实现js中类的继承。</p>\n<p>继承是编程一个重要的概念，可以适用很多场景，比如以上拖拽类的栗子中，假如项目已经大范围的使用了不限制的拖拽类，茂茂然的改原有的代码一定会非常的痛苦，所以利用继承的特性实现一个限制的拖拽类是一种很好的解决方案。</p>"},{"title":"腾讯外包面试经历总结","date":"2018-08-19T06:22:25.047Z","_content":"\n![我是图片](https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1534660249&di=be90597f4b2290b96a1689d2815aabb9&src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png)\n\n记一次在腾讯面外包岗的面试经历，想想都激动人心......\n\n<!--more-->\n\n其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋......\n\n腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。\n\n来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。\n\n到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。\n\n其他先不说，来点干货~\n先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  \n\n选择题：  \n1. 选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10\n2. 考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  \n3. http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。  \n(差不多都忘光，捂脸)\n\n填空题：  \n1. position的值包括absolute,fixed,relative,static,inherit  \n(基本都是基础)\n\n简答题：  \n1. 写出浏览器渲染页面的过程，以及针对这个过程的优化方案。  \n ![image](https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n> (1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。  \n(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。  \n(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。  \n(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。\n(5)浏览器根据render tree去plainting和display。\n\n2. 用js写出翻页的效果。\n> 考察的是swiper的原理\n\n笔试后是一面\n\n一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。\n\n爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去  \n说说阻塞和非阻塞，同步和异步的区别。  \nv-show和v-if的区别。  \n\n面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：\n> 前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。   \n面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。\n\n二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。\n\n等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！\n\n我也从这位师兄身上学到了两点很多用的经验：\n> 师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。  \n回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。\n\n> 大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。\n\n其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。\n\n\n\n\n\n\n","source":"_posts/腾讯外包面试经历总结.md","raw":"---\ntitle: 腾讯外包面试经历总结\ndate: \ntags: []\ncategories: [总结]\n---\n\n![我是图片](https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1534660249&di=be90597f4b2290b96a1689d2815aabb9&src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png)\n\n记一次在腾讯面外包岗的面试经历，想想都激动人心......\n\n<!--more-->\n\n其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋......\n\n腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。\n\n来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。\n\n到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。\n\n其他先不说，来点干货~\n先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  \n\n选择题：  \n1. 选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10\n2. 考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  \n3. http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。  \n(差不多都忘光，捂脸)\n\n填空题：  \n1. position的值包括absolute,fixed,relative,static,inherit  \n(基本都是基础)\n\n简答题：  \n1. 写出浏览器渲染页面的过程，以及针对这个过程的优化方案。  \n ![image](https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n> (1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。  \n(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。  \n(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。  \n(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。\n(5)浏览器根据render tree去plainting和display。\n\n2. 用js写出翻页的效果。\n> 考察的是swiper的原理\n\n笔试后是一面\n\n一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。\n\n爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去  \n说说阻塞和非阻塞，同步和异步的区别。  \nv-show和v-if的区别。  \n\n面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：\n> 前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。   \n面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。\n\n二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。\n\n等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！\n\n我也从这位师兄身上学到了两点很多用的经验：\n> 师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。  \n回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。\n\n> 大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。\n\n其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。\n\n\n\n\n\n\n","slug":"腾讯外包面试经历总结","published":1,"updated":"2018-08-19T06:31:32.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fco001aw8qz134rsiue","content":"<p><img src=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1534660249&amp;di=be90597f4b2290b96a1689d2815aabb9&amp;src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png\" alt=\"我是图片\"></p>\n<p>记一次在腾讯面外包岗的面试经历，想想都激动人心……</p>\n<a id=\"more\"></a>\n<p>其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋……</p>\n<p>腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。</p>\n<p>来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。</p>\n<p>到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。</p>\n<p>其他先不说，来点干货~<br>先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  </p>\n<p>选择题：  </p>\n<ol>\n<li>选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10</li>\n<li>考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  </li>\n<li>http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。<br>(差不多都忘光，捂脸)</li>\n</ol>\n<p>填空题：  </p>\n<ol>\n<li>position的值包括absolute,fixed,relative,static,inherit<br>(基本都是基础)</li>\n</ol>\n<p>简答题：  </p>\n<ol>\n<li><p>写出浏览器渲染页面的过程，以及针对这个过程的优化方案。<br><img src=\"https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"image\"></p>\n<blockquote>\n<p>(1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。<br>(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。<br>(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。<br>(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。<br>(5)浏览器根据render tree去plainting和display。</p>\n</blockquote>\n</li>\n<li><p>用js写出翻页的效果。</p>\n<blockquote>\n<p>考察的是swiper的原理</p>\n</blockquote>\n</li>\n</ol>\n<p>笔试后是一面</p>\n<p>一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。</p>\n<p>爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去<br>说说阻塞和非阻塞，同步和异步的区别。<br>v-show和v-if的区别。  </p>\n<p>面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：</p>\n<blockquote>\n<p>前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。<br>面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。</p>\n</blockquote>\n<p>二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。</p>\n<p>等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！</p>\n<p>我也从这位师兄身上学到了两点很多用的经验：</p>\n<blockquote>\n<p>师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。<br>回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。</p>\n<p>大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。</p>\n</blockquote>\n<p>其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。</p>\n","excerpt":"<p><img src=\"https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1534660249&amp;di=be90597f4b2290b96a1689d2815aabb9&amp;src=http://pic.90sjimg.com/design/00/59/79/86/5945d6977e2e7.png\" alt=\"我是图片\"></p>\n<p>记一次在腾讯面外包岗的面试经历，想想都激动人心……</p>","more":"<p>其实我自己也没想到在这个阶段（应届毕业生），有机会去腾讯面试，去之前的感受，现在还记忆犹新，激动，紧张，兴奋……</p>\n<p>腾讯其实分很多事业部，我是经过外包公司介绍过去的，地点在广州塔附近的TIT创意园，因为之前来过这里面试，所以这个地方还算是熟悉。</p>\n<p>来这边面试的人，都要去B4前台领访客条，贴在手臂上，说真拿了之后舍不得贴，想留再来珍藏着，现在它已当成了我的书签，在我看书的时候提醒我，要努力成为一名优秀的开发人员。</p>\n<p>到了等候面试阶段，跟两个和我一样是来面试的应聘者闲聊了两句，一个是有三年工作经验经朋友内推过来复面的，另一个则是跟我一样是应届毕业生，也是由软通外包过来面试的。其中一个人一眼就看出我是刚毕业不久，难道我的脸上充满了稚嫩？还是因为我的着装过于青涩？我觉得是有必要去学学搭配，换身装扮才行了，每个月抽出点钱来建设下个人形象。</p>\n<p>其他先不说，来点干货~<br>先是30分钟的笔试题，选择题填空题和简答题。总体上都是很基础的很考察原理性的题目，但不会像校招题那样包括了计算机基础，系统算法数据库的题目，都是关于web前端的题目。下面是记忆中部份题目。  </p>\n<p>选择题：  </p>\n<ol>\n<li>选择器的优先级，考察点就在于伪类选择器的权重，其实伪类选择器权重=class选择器=10</li>\n<li>考察伪类选择器的区别和使用，:last-child,:nth-of-type(even),:nth-child()  </li>\n<li>http request头和reponse头的字段，connection位于general header（both of request and response）,referer则只为与request header中。<br>(差不多都忘光，捂脸)</li>\n</ol>\n<p>填空题：  </p>\n<ol>\n<li>position的值包括absolute,fixed,relative,static,inherit<br>(基本都是基础)</li>\n</ol>\n<p>简答题：  </p>\n<ol>\n<li><p>写出浏览器渲染页面的过程，以及针对这个过程的优化方案。<br><img src=\"https://img-blog.csdn.net/20180125112320806?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHhzamg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"image\"></p>\n<blockquote>\n<p>(1) 浏览器器跟据html文档从上至下开始解析，html解析器将html解析构建dom树。<br>(2)遇到script标签时，html解析器会将控制权转移给js引擎，由其去下载和解析js执行，当js执行完毕后，才将控制权返还给html解析器继续解析构建dom树。<br>(3)当遇到style或link的css文件，浏览器会开启一个异步的线程去下载和解析css成css rule。该线程会阻塞js线程的执行，但不会阻塞html线程的解析。<br>(4)将dom树和css rules结合，并计算各节点的位置等，合成render tree，这个过程叫layout。<br>(5)浏览器根据render tree去plainting和display。</p>\n</blockquote>\n</li>\n<li><p>用js写出翻页的效果。</p>\n<blockquote>\n<p>考察的是swiper的原理</p>\n</blockquote>\n</li>\n</ol>\n<p>笔试后是一面</p>\n<p>一面的过程相对简单，因为面试官会根据你简历上写着的技能点逐一考察。所以面试前要确定简历上写到的都是清楚明白的，这个对于第一印象很是要命。</p>\n<p>爬完一坡又见一坡，接下来二面难度就加大了。一上来面试官就考说，写Array.prototype上写个数组去重的函数，接着写个在调用xmlHttpRequest对象的send()前打印一句话，在面试官前手写代码还是略带紧张的，除非特别熟悉的情况下。第二条编程题考的其实是面向切面编程和原型，思路是先把xmlHttpRequest.prototype.send保存起来，改写后在填回去<br>说说阻塞和非阻塞，同步和异步的区别。<br>v-show和v-if的区别。  </p>\n<p>面完后问了面试官对于现在前端圈的看法，面试官的回答挺耐人寻味的。大概的意思是：</p>\n<blockquote>\n<p>前端发展到现在已经到天花板了，指的应该是前端的知识深度，html、css、js、浏览器等，深度差不多就是这么深了，但是广度却是很宽阔，从node的兴起，js涉足后代，到现在前端可以写数据可视化，VR，AI，还有很多平台的大屏幕，可是css方向，偏前端的比如小游戏开发，动效开发，偏后的js工程师，node工程师。<br>面试官还特别强调一个词就是业务，业务驱动技术发展，把业务放在第一位，技术在另一个角度看，服务与业务，技术工程师也是服务型岗位。</p>\n</blockquote>\n<p>二面结束，面试官觉得我的基础还是挺好的，这样我很开心，也让我有了更大的信心来迎接下一面。</p>\n<p>等了差不多三十分钟，三面官还没来。三面官给我端了咖啡，看起来很年轻。另外疑惑的是三面官没有问技术呀，感觉是在了解我为人和基本情况。没想到这为三面官是我校友，师兄，前几天还参加了毕业十年的毕业聚会，我的天，我这么幸运的么！</p>\n<p>我也从这位师兄身上学到了两点很多用的经验：</p>\n<blockquote>\n<p>师兄大学挂了三科，对于Linux很感兴趣，很专，大学时看了很多关于Linux的书籍，当过网管，在面网易的校招时，笔试题做了满分，这个可以吹一辈子了。所以师兄的经历让我明白，互联网行业的招聘还是很看重专这个字的，对于某一个领域很专业，这能让面试官眼前一亮，不讨论专是否比广重要，我觉得不只是互联网行业，其他领域也一样，起码让人觉得你有一技之长，这某一领域你能提供专业的价值。互联网技术繁多复杂，某一个技术背后都是由庞大的技术体系来支撑的，所以我们在保证有该有的基础后，选定一个切入点来钻研。<br>回到自身，我是该选择偏前还是偏后呢？感觉我自己比较喜欢偏js的方向的，以后想往数据可视化和AI方向学习，但这个要求偏前的技术也很高，业务驱动技术发展，需要的就学呗。</p>\n<p>大公司跟注重人才的培养。其实一切都需要靠自己的把握，但大公司流程规范，工作起来会高效很多。我个人的经历告诉我，假如同时有两个offer，是平台大的公司但工资低，一个是平台小的公司工资高，我会选择哪个？就现阶段来说，我一个应届生，工资高的也不过一两k，小公司能给你这个高工资但肯定付出也很多，说不定是无止境的加班。目光不能太短浅，不能被一时之利所蒙蔽，选择大公司在刚出社会的大学生来说会更有帮助。</p>\n</blockquote>\n<p>其实写写字，跑跑步就是一个进步的过程，每天进步一点点，记录成长的点滴，现在才明白，厚积才能薄发，成功无非三个词：积累，等待，尝试。</p>"},{"title":"聊聊git的分支和rebase命令","date":"2018-04-02T12:46:00.000Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&fm=27&gp=0.jpg)\n\n# 前言\n进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。\n\n<!--more-->\n\n> 目录\n> * git简介\n> * 分支\n> * rebase的两个用法\n\n# git简介\n\ngit是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。\n\n具体参考廖雪峰老师的[git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/)和[git官网](https://git-scm.com/book/zh/v2/)\n\n# 分支\n为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。\n\n\n**快照**  \n\n其实要理解git的分支，首先要了解git是如何保存文件的  \ngit以文件快照的方式保存文件的更改情况，而不是cope每一份代码  \n那么如何理解文件快照的？  \n> 快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子\n\n\n**暂存**  \n\n在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交\n\n**提交**\n\ncommit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）  \n有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  \n\n![首次提交简介图](https://git-scm.com/book/en/v2/images/commit-and-tree.png)\n\n以上的是首次提交的情况，在第二次提交时  \n在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象  \n![再次提交简介图](https://git-scm.com/book/en/v2/images/commits-and-parents.png)\n现在情况就明了了，git是以单链表结构来追溯文件状态的\n\n**分支指针**\n\n\n既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？  \n所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？  \n没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。\n![分支简介图](https://git-scm.com/book/en/v2/images/branch-and-history.png)\n所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  \n\n但是冲突是如何产生的呢？  \n看个图就明白了\n![分支简介图](https://git-scm.com/book/en/v2/images/advance-master.png)\n其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  \n\n使用命令查看分支的指向情况，或者说项目的分叉情况\n```\ngit log --oneline --decorate --graph --all  \n```\n\n# rebase的两种用法\n**1. 合并commit**  \n\n > 你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版...\n \n 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了\n \n 所以需要将为同一个需求开发的这些commit合并成一个\n \n ```\n git rebase -i HAED~n<commitID>\n ```\n 上面的n代指数字，表示包括当前以前的几个commit  \n或者把HAED~n替换为n的commitID，效果一样\n\n这是会出现一个编辑界面\n```\npick 5e187c7dbe8    add center style indent  \npick 6d577eb3440    add center style  \npick f9b9508a3ab    add center style  \npick 111ab9cc261    update templates  \n# Rebase 150a643..2fad1ae onto 150a643  \n#  \n# Commands:  \n#  p, pick = use commit  \n#  r, reword = use commit, but edit the commit message  \n#  e, edit = use commit, but stop for amending  \n#  s, squash = use commit, but meld into previous commit  \n```\n把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit\n\n若出现冲突，解决冲突，应用最新的版本，使用\n```\ngit add . //提交索引\ngit rebase --continue //继续rebase操作\n```\n若在合并commit的过程中想放弃，可以使用命令\n```\ngit rebase --abort\n```\n此时会出现一个编辑窗口，保存退出就行\n\n最后把本地推上远程\n```\ngit push -f //必须带上-f，以本地覆盖远程\n或者指定远程和分支\ngit push (origin master) -f\n```\n因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程\n\n**2. 合并分支**  \n\n有如下分支图\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nmaster((master))-->C3\ndev((dev))-->C4\n```\n在master上合并dev我们一般用\n```\ngit merge dev\n```\n此时分支图就变为\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nC5-->C3\nC5-->C4\nmaster((master))-->C5\ndev((dev))-->C4\n```\n这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁  \n在最新的分支dev上\n```\ngit rebase master\n```\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\ndev上的C4会被cope成'C4'并且dev指向'C4',保存在rebase文件夹，然后'C4'指向C3，最后C4会当成垃圾清除，最后分支图就变为了\n```\ngraph LR\nC2-->C1\nC3-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\n若有冲突,解决后\n```\ngit add .\ngit rebase --continue\n```\n随时放弃\n```\ngit rebase --abort\n```\n\n**在拉去远程更新时也可以使用rebase**\n```\ngit pull --rebase\n或者指定远程和分支\ngit pull upstream master --rebase\n```\n\n> ps:  \n倘若通过git pull --rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用\n```\ngit reset --soft <commitID> //保留更改回退\n```\n再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）\n\n**回到最初**  \n\n解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。\n\n\n\n\n\n\n","source":"_posts/聊聊git的分支和rebase命令.md","raw":"---\ntitle: 聊聊git的分支和rebase命令\ndate: 2018-04-02 20:46:00\ntags: [git]\ncategories: [工具]\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&fm=27&gp=0.jpg)\n\n# 前言\n进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。\n\n<!--more-->\n\n> 目录\n> * git简介\n> * 分支\n> * rebase的两个用法\n\n# git简介\n\ngit是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。\n\n具体参考廖雪峰老师的[git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/)和[git官网](https://git-scm.com/book/zh/v2/)\n\n# 分支\n为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。\n\n\n**快照**  \n\n其实要理解git的分支，首先要了解git是如何保存文件的  \ngit以文件快照的方式保存文件的更改情况，而不是cope每一份代码  \n那么如何理解文件快照的？  \n> 快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子\n\n\n**暂存**  \n\n在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交\n\n**提交**\n\ncommit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）  \n有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  \n\n![首次提交简介图](https://git-scm.com/book/en/v2/images/commit-and-tree.png)\n\n以上的是首次提交的情况，在第二次提交时  \n在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象  \n![再次提交简介图](https://git-scm.com/book/en/v2/images/commits-and-parents.png)\n现在情况就明了了，git是以单链表结构来追溯文件状态的\n\n**分支指针**\n\n\n既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？  \n所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？  \n没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。\n![分支简介图](https://git-scm.com/book/en/v2/images/branch-and-history.png)\n所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  \n\n但是冲突是如何产生的呢？  \n看个图就明白了\n![分支简介图](https://git-scm.com/book/en/v2/images/advance-master.png)\n其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  \n\n使用命令查看分支的指向情况，或者说项目的分叉情况\n```\ngit log --oneline --decorate --graph --all  \n```\n\n# rebase的两种用法\n**1. 合并commit**  \n\n > 你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版...\n \n 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了\n \n 所以需要将为同一个需求开发的这些commit合并成一个\n \n ```\n git rebase -i HAED~n<commitID>\n ```\n 上面的n代指数字，表示包括当前以前的几个commit  \n或者把HAED~n替换为n的commitID，效果一样\n\n这是会出现一个编辑界面\n```\npick 5e187c7dbe8    add center style indent  \npick 6d577eb3440    add center style  \npick f9b9508a3ab    add center style  \npick 111ab9cc261    update templates  \n# Rebase 150a643..2fad1ae onto 150a643  \n#  \n# Commands:  \n#  p, pick = use commit  \n#  r, reword = use commit, but edit the commit message  \n#  e, edit = use commit, but stop for amending  \n#  s, squash = use commit, but meld into previous commit  \n```\n把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit\n\n若出现冲突，解决冲突，应用最新的版本，使用\n```\ngit add . //提交索引\ngit rebase --continue //继续rebase操作\n```\n若在合并commit的过程中想放弃，可以使用命令\n```\ngit rebase --abort\n```\n此时会出现一个编辑窗口，保存退出就行\n\n最后把本地推上远程\n```\ngit push -f //必须带上-f，以本地覆盖远程\n或者指定远程和分支\ngit push (origin master) -f\n```\n因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程\n\n**2. 合并分支**  \n\n有如下分支图\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nmaster((master))-->C3\ndev((dev))-->C4\n```\n在master上合并dev我们一般用\n```\ngit merge dev\n```\n此时分支图就变为\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\nC5-->C3\nC5-->C4\nmaster((master))-->C5\ndev((dev))-->C4\n```\n这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁  \n在最新的分支dev上\n```\ngit rebase master\n```\n```\ngraph LR\nC2-->C1\nC3-->C2\nC4-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\ndev上的C4会被cope成'C4'并且dev指向'C4',保存在rebase文件夹，然后'C4'指向C3，最后C4会当成垃圾清除，最后分支图就变为了\n```\ngraph LR\nC2-->C1\nC3-->C2\n'C4'-->C3\nmaster((master))-->C3\ndev((dev))-->'C4'\n```\n若有冲突,解决后\n```\ngit add .\ngit rebase --continue\n```\n随时放弃\n```\ngit rebase --abort\n```\n\n**在拉去远程更新时也可以使用rebase**\n```\ngit pull --rebase\n或者指定远程和分支\ngit pull upstream master --rebase\n```\n\n> ps:  \n倘若通过git pull --rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用\n```\ngit reset --soft <commitID> //保留更改回退\n```\n再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）\n\n**回到最初**  \n\n解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。\n\n\n\n\n\n\n","slug":"聊聊git的分支和rebase命令","published":1,"updated":"2018-04-24T11:39:31.483Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fcz001cw8qzbl4j9zsn","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>目录</p>\n<ul>\n<li>git简介</li>\n<li>分支</li>\n<li>rebase的两个用法</li>\n</ul>\n</blockquote>\n<h1 id=\"git简介\"><a href=\"#git简介\" class=\"headerlink\" title=\"git简介\"></a>git简介</h1><p>git是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。</p>\n<p>具体参考廖雪峰老师的<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/\" target=\"_blank\" rel=\"external\">git教程</a>和<a href=\"https://git-scm.com/book/zh/v2/\" target=\"_blank\" rel=\"external\">git官网</a></p>\n<h1 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h1><p>为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。</p>\n<p><strong>快照</strong>  </p>\n<p>其实要理解git的分支，首先要了解git是如何保存文件的<br>git以文件快照的方式保存文件的更改情况，而不是cope每一份代码<br>那么如何理解文件快照的？  </p>\n<blockquote>\n<p>快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子</p>\n</blockquote>\n<p><strong>暂存</strong>  </p>\n<p>在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交</p>\n<p><strong>提交</strong></p>\n<p>commit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）<br>有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  </p>\n<p><img src=\"https://git-scm.com/book/en/v2/images/commit-and-tree.png\" alt=\"首次提交简介图\"></p>\n<p>以上的是首次提交的情况，在第二次提交时<br>在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象<br><img src=\"https://git-scm.com/book/en/v2/images/commits-and-parents.png\" alt=\"再次提交简介图\"><br>现在情况就明了了，git是以单链表结构来追溯文件状态的</p>\n<p><strong>分支指针</strong></p>\n<p>既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？<br>所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？<br>没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。<br><img src=\"https://git-scm.com/book/en/v2/images/branch-and-history.png\" alt=\"分支简介图\"><br>所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  </p>\n<p>但是冲突是如何产生的呢？<br>看个图就明白了<br><img src=\"https://git-scm.com/book/en/v2/images/advance-master.png\" alt=\"分支简介图\"><br>其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  </p>\n<p>使用命令查看分支的指向情况，或者说项目的分叉情况<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">git</span> <span class=\"comment\">log</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">oneline</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">decorate</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">graph</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">all</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"rebase的两种用法\"><a href=\"#rebase的两种用法\" class=\"headerlink\" title=\"rebase的两种用法\"></a>rebase的两种用法</h1><p><strong>1. 合并commit</strong>  </p>\n<blockquote>\n<p>你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版…</p>\n</blockquote>\n<p> 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了</p>\n<p> 所以需要将为同一个需求开发的这些commit合并成一个</p>\n <figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase -<span class=\"selector-tag\">i</span> HAED~n&lt;commitID&gt;</span><br></pre></td></tr></table></figure>\n<p> 上面的n代指数字，表示包括当前以前的几个commit<br>或者把HAED~n替换为n的commitID，效果一样</p>\n<p>这是会出现一个编辑界面<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 5e187c7dbe8    <span class=\"keyword\">add</span> center style indent  </span><br><span class=\"line\">pick 6d577eb3440    <span class=\"keyword\">add</span> center style  </span><br><span class=\"line\">pick f9b9508a3ab    <span class=\"keyword\">add</span> center style  </span><br><span class=\"line\">pick 111ab9cc261    update templates  </span><br><span class=\"line\"><span class=\"comment\"># Rebase 150a643..2fad1ae onto 150a643  </span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># Commands:  </span></span><br><span class=\"line\"><span class=\"comment\">#  p, pick = use commit  </span></span><br><span class=\"line\"><span class=\"comment\">#  r, reword = use commit, but edit the commit message  </span></span><br><span class=\"line\"><span class=\"comment\">#  e, edit = use commit, but stop for amending  </span></span><br><span class=\"line\"><span class=\"comment\">#  s, squash = use commit, but meld into previous commit</span></span><br></pre></td></tr></table></figure></p>\n<p>把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit</p>\n<p>若出现冲突，解决冲突，应用最新的版本，使用<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . <span class=\"comment\">//提交索引</span></span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span> <span class=\"comment\">//继续rebase操作</span></span><br></pre></td></tr></table></figure></p>\n<p>若在合并commit的过程中想放弃，可以使用命令<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure></p>\n<p>此时会出现一个编辑窗口，保存退出就行</p>\n<p>最后把本地推上远程<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push <span class=\"_\">-f</span> //必须带上<span class=\"_\">-f</span>，以本地覆盖远程</span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git push (origin master) <span class=\"_\">-f</span></span><br></pre></td></tr></table></figure></p>\n<p>因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程</p>\n<p><strong>2. 合并分支</strong>  </p>\n<p>有如下分支图<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C4-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure></p>\n<p>在master上合并dev我们一般用<br><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">merge</span> dev</span><br></pre></td></tr></table></figure></p>\n<p>此时分支图就变为<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C4-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C5-<span class=\"function\">-&gt;</span>C3</span><br><span class=\"line\">C5-<span class=\"function\">-&gt;</span>C4</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C5</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure></p>\n<p>这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁<br>在最新的分支dev上<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"literal\">master</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C4-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\"><span class=\"string\">'C4'</span><span class=\"function\">--&gt;</span>C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">'C4'</span></span><br></pre></td></tr></table></figure>\n<p>dev上的C4会被cope成’C4’并且dev指向’C4’,保存在rebase文件夹，然后’C4’指向C3，最后C4会当成垃圾清除，最后分支图就变为了<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\"><span class=\"string\">'C4'</span><span class=\"function\">--&gt;</span>C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">'C4'</span></span><br></pre></td></tr></table></figure></p>\n<p>若有冲突,解决后<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure></p>\n<p>随时放弃<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>在拉去远程更新时也可以使用rebase</strong><br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase</span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git pull upstream <span class=\"keyword\">master</span> <span class=\"title\">--rebase</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>ps:<br>倘若通过git pull –rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --<span class=\"keyword\">soft</span> &lt;commitID&gt; <span class=\"comment\">//保留更改回退</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）</p>\n<p><strong>回到最初</strong>  </p>\n<p>解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。</p>\n","excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=246425395,1170785252&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>进入公司已经一周的时间，在项目的协作开发中，根据公司对代码提交的要求，对使用git所遇到的一些问题情况，做了一个简单的总结，以便帮助遇到同样问题的实习生，提高的解决问题效率，进而更快的适应公司的开发节奏。</p>","more":"<blockquote>\n<p>目录</p>\n<ul>\n<li>git简介</li>\n<li>分支</li>\n<li>rebase的两个用法</li>\n</ul>\n</blockquote>\n<h1 id=\"git简介\"><a href=\"#git简介\" class=\"headerlink\" title=\"git简介\"></a>git简介</h1><p>git是个分布式和渐进式的版本管理工具。分布式是指代码可以克隆很多份，不像svn（集中式版本管理工具）集中对一份代码进行版本管理，而git允许你将项目fork成自己一份。而渐进式是指git会智能的diff代码的改动情况，但不是记录文件的具体变化，而是保存一系列不同时刻的文件快照。</p>\n<p>具体参考廖雪峰老师的<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/\">git教程</a>和<a href=\"https://git-scm.com/book/zh/v2/\">git官网</a></p>\n<h1 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h1><p>为了更好的使用git去解决一些复杂的版本冲突问题，有必要先理解git的分支。</p>\n<p><strong>快照</strong>  </p>\n<p>其实要理解git的分支，首先要了解git是如何保存文件的<br>git以文件快照的方式保存文件的更改情况，而不是cope每一份代码<br>那么如何理解文件快照的？  </p>\n<blockquote>\n<p>快照，我们可以把它抽象为照片，可以想象一下用相机拍下桌子上物体，照片记录着每个时刻物体的位置和状态，git就是把这每个照片保存起来，等需要的时候指定一张照片来把物体摆设成这个样子</p>\n</blockquote>\n<p><strong>暂存</strong>  </p>\n<p>在暂存时，git把每个文件看成一个blob对象，把快照保存进blob对象里面，然后就加进暂存区域等待提交</p>\n<p><strong>提交</strong></p>\n<p>commit的时候，git会生成一个数对象来记录这个目录结构（包括子目录）和blob对象的索引，还会生成一个commit对象来保存一个指向这个树对象的指针和其他一些提交信息（msg，time，author，email）<br>有了这个指针，就可以方便追溯到这次commit的文件快照，来重现这个时刻的文件状态  </p>\n<p><img src=\"https://git-scm.com/book/en/v2/images/commit-and-tree.png\" alt=\"首次提交简介图\"></p>\n<p>以上的是首次提交的情况，在第二次提交时<br>在原有的情况下，git再生成一个指针去指向上一次的commit对象，我们称之为父对象<br><img src=\"https://git-scm.com/book/en/v2/images/commits-and-parents.png\" alt=\"再次提交简介图\"><br>现在情况就明了了，git是以单链表结构来追溯文件状态的</p>\n<p><strong>分支指针</strong></p>\n<p>既然git是通过指针去追溯文件快照的，那么是不是可以创建多几个指针去多拿几张照片，进而多重现几个状态呢？<br>所以分支就是所谓的指针，那么git又是怎么知道我在哪个分支上呢？<br>没错，再创建一个指针去指向这个分支指针，来表示我当前所在的分支。<br><img src=\"https://git-scm.com/book/en/v2/images/branch-and-history.png\" alt=\"分支简介图\"><br>所有的提交都是以单链表结构连接起来的，通过这个指针来追溯到所需的commit对象  </p>\n<p>但是冲突是如何产生的呢？<br>看个图就明白了<br><img src=\"https://git-scm.com/book/en/v2/images/advance-master.png\" alt=\"分支简介图\"><br>其实就是多个commit对象中指向父对象的指针指向了同一个父对象。而两个照片中物体在同一个时刻有两个状态，所以就产生了冲突。  </p>\n<p>使用命令查看分支的指向情况，或者说项目的分叉情况<br><figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">git</span> <span class=\"comment\">log</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">oneline</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">decorate</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">graph</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">all</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"rebase的两种用法\"><a href=\"#rebase的两种用法\" class=\"headerlink\" title=\"rebase的两种用法\"></a>rebase的两种用法</h1><p><strong>1. 合并commit</strong>  </p>\n<blockquote>\n<p>你肯定也试过这样的场景，leader交给你一个小需求，一个小时不到就解决了，提交一个commit，但过了一会，觉得代码还有可以改进的地方，作为一个努力上进的人，你肯定不会只求完成需求这么简单，所以再提了一版…</p>\n</blockquote>\n<p> 但这个几个commit都是为了同一个需求开发的，leader去review代码的时候，几个commit还好，但实际开发中有时是十几个commit，这样对于review代码和追踪版本时，就显的尤为困难了</p>\n<p> 所以需要将为同一个需求开发的这些commit合并成一个</p>\n <figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase -<span class=\"selector-tag\">i</span> HAED~n&lt;commitID&gt;</span><br></pre></td></tr></table></figure>\n<p> 上面的n代指数字，表示包括当前以前的几个commit<br>或者把HAED~n替换为n的commitID，效果一样</p>\n<p>这是会出现一个编辑界面<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pick 5e187c7dbe8    <span class=\"keyword\">add</span> center style indent  </span><br><span class=\"line\">pick 6d577eb3440    <span class=\"keyword\">add</span> center style  </span><br><span class=\"line\">pick f9b9508a3ab    <span class=\"keyword\">add</span> center style  </span><br><span class=\"line\">pick 111ab9cc261    update templates  </span><br><span class=\"line\"><span class=\"comment\"># Rebase 150a643..2fad1ae onto 150a643  </span></span><br><span class=\"line\"><span class=\"comment\">#  </span></span><br><span class=\"line\"><span class=\"comment\"># Commands:  </span></span><br><span class=\"line\"><span class=\"comment\">#  p, pick = use commit  </span></span><br><span class=\"line\"><span class=\"comment\">#  r, reword = use commit, but edit the commit message  </span></span><br><span class=\"line\"><span class=\"comment\">#  e, edit = use commit, but stop for amending  </span></span><br><span class=\"line\"><span class=\"comment\">#  s, squash = use commit, but meld into previous commit</span></span><br></pre></td></tr></table></figure></p>\n<p>把第二到四行的pick更改为s，就会使用这个commit，并且合并前个commit</p>\n<p>若出现冲突，解决冲突，应用最新的版本，使用<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add . <span class=\"comment\">//提交索引</span></span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span> <span class=\"comment\">//继续rebase操作</span></span><br></pre></td></tr></table></figure></p>\n<p>若在合并commit的过程中想放弃，可以使用命令<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure></p>\n<p>此时会出现一个编辑窗口，保存退出就行</p>\n<p>最后把本地推上远程<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push <span class=\"_\">-f</span> //必须带上<span class=\"_\">-f</span>，以本地覆盖远程</span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git push (origin master) <span class=\"_\">-f</span></span><br></pre></td></tr></table></figure></p>\n<p>因为本地的几个commit已经合并成了一个，而若远程还有这几个commit，需要以本地覆盖远程</p>\n<p><strong>2. 合并分支</strong>  </p>\n<p>有如下分支图<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C4-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure></p>\n<p>在master上合并dev我们一般用<br><figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">merge</span> dev</span><br></pre></td></tr></table></figure></p>\n<p>此时分支图就变为<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C4-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C5-<span class=\"function\">-&gt;</span>C3</span><br><span class=\"line\">C5-<span class=\"function\">-&gt;</span>C4</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C5</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span>C4</span><br></pre></td></tr></table></figure></p>\n<p>这样分支图就显的很乱，使用rebase能够让合并后的分支图变得简洁<br>在最新的分支dev上<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"literal\">master</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\">C4-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\"><span class=\"string\">'C4'</span><span class=\"function\">--&gt;</span>C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">'C4'</span></span><br></pre></td></tr></table></figure>\n<p>dev上的C4会被cope成’C4’并且dev指向’C4’,保存在rebase文件夹，然后’C4’指向C3，最后C4会当成垃圾清除，最后分支图就变为了<br><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">C2-<span class=\"function\">-&gt;</span>C1</span><br><span class=\"line\">C3-<span class=\"function\">-&gt;</span>C2</span><br><span class=\"line\"><span class=\"string\">'C4'</span><span class=\"function\">--&gt;</span>C3</span><br><span class=\"line\">master<span class=\"function\"><span class=\"params\">((master))</span>--&gt;</span>C3</span><br><span class=\"line\">dev<span class=\"function\"><span class=\"params\">((dev))</span>--&gt;</span><span class=\"string\">'C4'</span></span><br></pre></td></tr></table></figure></p>\n<p>若有冲突,解决后<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git rebase --<span class=\"keyword\">continue</span></span><br></pre></td></tr></table></figure></p>\n<p>随时放弃<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rebase <span class=\"comment\">--abort</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>在拉去远程更新时也可以使用rebase</strong><br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase</span><br><span class=\"line\">或者指定远程和分支</span><br><span class=\"line\">git pull upstream <span class=\"keyword\">master</span> <span class=\"title\">--rebase</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>ps:<br>倘若通过git pull –rebase导致在gitlab上发merge request时，出现了其他人的本已经提交了的commit信息，不妨用使用<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --<span class=\"keyword\">soft</span> &lt;commitID&gt; <span class=\"comment\">//保留更改回退</span></span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>再次commit，在gitlab再发merge request，应该就干净了（只是自己的提交信息）</p>\n<p><strong>回到最初</strong>  </p>\n<p>解决git复杂问题的前提还是得先看的明白git的分支图，清晰每条命令对git分支的影响。</p>"},{"title":"《代码整洁之道》读书笔记","date":"2018-04-20T12:20:01.000Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&fm=27&gp=0.jpg)\n\n## 前言\n我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论\n\n<!--more-->\n\n## 什么是整洁的代码\n在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。\n\n当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。\n\n那么是什么原因导致写出糟糕的代码呢。总结有一下几点：\n* 技术水平低\n* 项目紧迫时间不足\n* 缺少整洁代码的意识\n* 先上线后优化，但是没有列入工作任务中导致忘掉\n\n纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、\n\n那么整洁的代码给人是什么样的感觉呢？\n\n书中用了一个形容词非常形象的说明了这个问题：愉悦。\n\n书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：\n1. **优雅和高效**  \n\n   代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化\n\n2. **整洁的代码只做好一件事**  \n\n    整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。\n\n3. **整洁的代码简单直接**  \n\n    整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。\n\n## 整洁代码的重要性\n\n了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。\n\n那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。\n\n当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。\n\n有些人认为代码是写给机器执行的，我不那么认为。\n\n代码是写给人看的。\n\n先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。\n\n代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性--所以代码永存。\n\n所以整洁代码是势之所驱。\n\n下面我们就来讨论下写出整洁代码的方法论。\n\n## 写出整洁代码的小技巧\n写出整洁代码的首要原则，我觉得是态度。\n\n只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。\n\n我总结了几点小技巧：\n\n1. 贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事\n2. 提高表达力  \n\n    在必要的一些特殊说明的地方要写TODO注释，提醒下别人\n    \n3. 命名规范\n\n    最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的\n    \n4. 减少重复代码","source":"_posts/《代码整洁之道》读书笔记.md","raw":"---\ntitle: 《代码整洁之道》读书笔记\ndate: 2018-04-20 20:20:01\ntags: []\ncategories: []\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&fm=27&gp=0.jpg)\n\n## 前言\n我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论\n\n<!--more-->\n\n## 什么是整洁的代码\n在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。\n\n当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。\n\n那么是什么原因导致写出糟糕的代码呢。总结有一下几点：\n* 技术水平低\n* 项目紧迫时间不足\n* 缺少整洁代码的意识\n* 先上线后优化，但是没有列入工作任务中导致忘掉\n\n纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、\n\n那么整洁的代码给人是什么样的感觉呢？\n\n书中用了一个形容词非常形象的说明了这个问题：愉悦。\n\n书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：\n1. **优雅和高效**  \n\n   代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化\n\n2. **整洁的代码只做好一件事**  \n\n    整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。\n\n3. **整洁的代码简单直接**  \n\n    整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。\n\n## 整洁代码的重要性\n\n了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。\n\n那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。\n\n当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。\n\n有些人认为代码是写给机器执行的，我不那么认为。\n\n代码是写给人看的。\n\n先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。\n\n代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性--所以代码永存。\n\n所以整洁代码是势之所驱。\n\n下面我们就来讨论下写出整洁代码的方法论。\n\n## 写出整洁代码的小技巧\n写出整洁代码的首要原则，我觉得是态度。\n\n只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。\n\n我总结了几点小技巧：\n\n1. 贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事\n2. 提高表达力  \n\n    在必要的一些特殊说明的地方要写TODO注释，提醒下别人\n    \n3. 命名规范\n\n    最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的\n    \n4. 减少重复代码","slug":"《代码整洁之道》读书笔记","published":1,"updated":"2018-04-24T11:40:11.941Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fde001gw8qzh349227b","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论</p>\n<a id=\"more\"></a>\n<h2 id=\"什么是整洁的代码\"><a href=\"#什么是整洁的代码\" class=\"headerlink\" title=\"什么是整洁的代码\"></a>什么是整洁的代码</h2><p>在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。</p>\n<p>当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。</p>\n<p>那么是什么原因导致写出糟糕的代码呢。总结有一下几点：</p>\n<ul>\n<li>技术水平低</li>\n<li>项目紧迫时间不足</li>\n<li>缺少整洁代码的意识</li>\n<li>先上线后优化，但是没有列入工作任务中导致忘掉</li>\n</ul>\n<p>纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、</p>\n<p>那么整洁的代码给人是什么样的感觉呢？</p>\n<p>书中用了一个形容词非常形象的说明了这个问题：愉悦。</p>\n<p>书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：</p>\n<ol>\n<li><p><strong>优雅和高效</strong>  </p>\n<p>代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化</p>\n</li>\n<li><p><strong>整洁的代码只做好一件事</strong>  </p>\n<p> 整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。</p>\n</li>\n<li><p><strong>整洁的代码简单直接</strong>  </p>\n<p> 整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。</p>\n</li>\n</ol>\n<h2 id=\"整洁代码的重要性\"><a href=\"#整洁代码的重要性\" class=\"headerlink\" title=\"整洁代码的重要性\"></a>整洁代码的重要性</h2><p>了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。</p>\n<p>那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。</p>\n<p>当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。</p>\n<p>有些人认为代码是写给机器执行的，我不那么认为。</p>\n<p>代码是写给人看的。</p>\n<p>先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。</p>\n<p>代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性–所以代码永存。</p>\n<p>所以整洁代码是势之所驱。</p>\n<p>下面我们就来讨论下写出整洁代码的方法论。</p>\n<h2 id=\"写出整洁代码的小技巧\"><a href=\"#写出整洁代码的小技巧\" class=\"headerlink\" title=\"写出整洁代码的小技巧\"></a>写出整洁代码的小技巧</h2><p>写出整洁代码的首要原则，我觉得是态度。</p>\n<p>只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。</p>\n<p>我总结了几点小技巧：</p>\n<ol>\n<li>贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事</li>\n<li><p>提高表达力  </p>\n<p> 在必要的一些特殊说明的地方要写TODO注释，提醒下别人</p>\n</li>\n<li><p>命名规范</p>\n<p> 最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的</p>\n</li>\n<li><p>减少重复代码</p>\n</li>\n</ol>\n","excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=133076365,2636556812&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>我为什么会选择阅读这一本书呢？书中给出的原因简介明了：首先我是程序员，第二我想成为更好的程序员。从这两点我们可以看得出来，作者的对于程序的看法是，能写出“整洁”代码的程序员必定是个优秀的程序员，写出“整洁”代码在作者看来是一个程序员需要发展和具备的一项素质。至于什么是“整洁的代码”，将会在下文进行讨论</p>","more":"<h2 id=\"什么是整洁的代码\"><a href=\"#什么是整洁的代码\" class=\"headerlink\" title=\"什么是整洁的代码\"></a>什么是整洁的代码</h2><p>在理解什么是整洁代码的时候，有必要先了解什么是糟糕的代码，以及糟糕代码带来的危害性。</p>\n<p>当然，我并不会粘贴出那些写的很糟糕的代码，因为我觉得这样没有任何一点意义，因为糟糕的代码千差万别，因为每个程序员的代码风格不一样。糟糕代码给人的感觉都是一样的，可以用一个词来形容：沼泽。就像你躺过代码的水域，想穿过灌木密布、瀑布暗藏的沼泽地，但是最后越陷越深。书中的举了个例子，指出糟糕的代码会使生产力下降，严重可以毁掉一家公司。</p>\n<p>那么是什么原因导致写出糟糕的代码呢。总结有一下几点：</p>\n<ul>\n<li>技术水平低</li>\n<li>项目紧迫时间不足</li>\n<li>缺少整洁代码的意识</li>\n<li>先上线后优化，但是没有列入工作任务中导致忘掉</li>\n</ul>\n<p>纵观以上几点，可以看出即使是有经验的程序员也有可能写出糟糕的代码。、</p>\n<p>那么整洁的代码给人是什么样的感觉呢？</p>\n<p>书中用了一个形容词非常形象的说明了这个问题：愉悦。</p>\n<p>书中引用了很多名人的话语来说明了整洁代码所具备的几点特性：</p>\n<ol>\n<li><p><strong>优雅和高效</strong>  </p>\n<p>代码逻辑应当直截了当，叫缺陷难以隐藏；尽量减少依赖关系，使之便于维护；依据某种分层战略完善错误处理代码；性能调至最优，省得引诱别人做没规矩的优化</p>\n</li>\n<li><p><strong>整洁的代码只做好一件事</strong>  </p>\n<p> 整洁的代码力求集中。每个函数、每个类和每个模块都全神贯注于一事，完全不受四周细节的干扰和污染。</p>\n</li>\n<li><p><strong>整洁的代码简单直接</strong>  </p>\n<p> 整洁的代码如同优美的散文。整洁的代码从不隐藏设计者的意图，充满了干净利落的抽象和直截了当的控制语句。</p>\n</li>\n</ol>\n<h2 id=\"整洁代码的重要性\"><a href=\"#整洁代码的重要性\" class=\"headerlink\" title=\"整洁代码的重要性\"></a>整洁代码的重要性</h2><p>了解糟糕代码的严重性后，代码整洁的重要性其实也不言而喻了，那为什么我还要再次声明呢？不为别的，就是因为写出整洁的代码是在是太重要了。</p>\n<p>那我们实习生举例，刚进来公司的实习生，公司一般都是交付现有项目上的一些新需求，不会让一个实习生去从0到1的做一个项目，说白了就是要维护公司的项目。在我接触熊猫后台的这个月时间里，发现了项目中有些代码不容易维护，或者扩展，有些组件用起来感觉有依赖性。</p>\n<p>当然这个项目大部分都是容易维护的，我只是拿这个例子来显出代码整洁的重要性，因为我们大部分的时间都在维护代码，而不是去创造代码，先阶段写出的代码整洁与否，直接决定了项目维护成本的走向。</p>\n<p>有些人认为代码是写给机器执行的，我不那么认为。</p>\n<p>代码是写给人看的。</p>\n<p>先有人写出代码，机器才能执行，连代码看都看不懂，更别说写的出来了，写不出了就证明代码维护成本实在太高。我并不是在危言耸听，可能有个说法是以后人工智能和机器学习可以创造出代码，先不讨论研发出这一技术体系的时间，首先我们写业务要深入业务的各方各面，甚至整一条业务链，业务千千万万，变化也千千万万，而每一个业务都是有精确性的。</p>\n<p>代码确然是我们最终用来表达需求的某种语言。我们可以创造各种与需求接近的语言。我们可以创造帮助把需求解析和汇整为正式结构的各种工具。然而，我们永远无法抛弃必要的精确性–所以代码永存。</p>\n<p>所以整洁代码是势之所驱。</p>\n<p>下面我们就来讨论下写出整洁代码的方法论。</p>\n<h2 id=\"写出整洁代码的小技巧\"><a href=\"#写出整洁代码的小技巧\" class=\"headerlink\" title=\"写出整洁代码的小技巧\"></a>写出整洁代码的小技巧</h2><p>写出整洁代码的首要原则，我觉得是态度。</p>\n<p>只有在态度上明确要写出整洁的代码，自然会在编码过程中把写出整洁代码的小技巧给运用起来。</p>\n<p>我总结了几点小技巧：</p>\n<ol>\n<li>贯彻单一原则，把耦合的函数才分成最小的功能单元，函数只做一件事</li>\n<li><p>提高表达力  </p>\n<p> 在必要的一些特殊说明的地方要写TODO注释，提醒下别人</p>\n</li>\n<li><p>命名规范</p>\n<p> 最好的是对变量和函数的命名上下功夫，函数的首单词最好是个动词，读起来就知道是干嘛的</p>\n</li>\n<li><p>减少重复代码</p>\n</li>\n</ol>"},{"title":"踏平windows下安装fabric遇到的坑s","date":"2018-04-15T14:41:22.000Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&fm=27&gp=0.jpg)\n\n# 前言\n本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案\n\n<!--more-->\n\n# fabric\nfabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署\n\nfabric提供了几个简单的api来完成所有的部署  \n* local() 本地执行命令\n* run() 服务器运行命令\n* put() 把本地文件上传到服务器\n* with cd('/path/to/dir/') 指定服务器的目录\n\n在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本\n\n详细请参考廖雪峰老师的fabric介绍：[https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000](https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000)\n\n# 安装python\n所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）\n\npython下载地址：[https://www.python.org/getit/](https://www.python.org/getit/)  \n最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本\n\n# 安装pip\npip可以理解为python的一个包管理工具,用pip工具去安装fabric\n```\npip install fabric\n```\n\npip下载地址：[https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb](https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb)\n\n进入pip的安装目录，运行：\n```\npython setup.py build\npython setup.py install\n```\n若此时出现错误说，not found module 'setuptools',需要补装一下  \nsetuptools下载地址：[https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26](https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26)\n\n进入安装目录执行\n```\npython setup.py build\npython setup.py install\n```\n\n或者参考另一个方法：[https://blog.csdn.net/newjueqi/article/details/47446965](https://blog.csdn.net/newjueqi/article/details/47446965)\n\n此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)\n\n这时就可以用前面说的命令安装fabric了\n\n# 运行fabfile.py\n\n```\nfab test\n```\ntest是fabfile.py里定义的一个方法\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('make test')\n    remote_dir = '/home/lukou/app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % (os.getcwd() + '/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n这时候window上会报错，说make test这命令执行出错  \n\n前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具\n\n其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好\n\n在次运行fabfile脚本\n\n还是会出错，说没有rsync命令\n\n## 安装rsync工具\ncwrsync下载地址：[https://www.itefix.net/cwrsync](https://www.itefix.net/cwrsync)\n记得把安装目录添加到PATH\n\n再次运行fabfile脚本\n\n还是会出错，错误信息如下：\n```\ndup() in/out/err failed\nrsync: connection unexpectedly closed (0 bytes received so far) [sender]\nrsync error: unexplained error (code 255) at io.c(226) [sender=3.1.2]\n```\n百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  \n\n解决方案参考：[https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows](https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows)\n\n所以要把path里cwrsync的安装目录提前，像如下\n```\nλ where ssh\nE:\\ProgramFiles\\cwRsync_5.5.0_x86_Free\\bin\\ssh.exe\nC:\\Program Files (x86)\\Git\\usr\\bin\\ssh.exe\n```\n\n再次运行fab test\n\n也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了\n\n这次报的错误主要是语法错误\n```\nThe source and destination cannot both be remote.\nrsync error: syntax or usage error (code 1) at main.c(1274) [Receiver=3.1.2]\n```\n\n这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('npm run test')\n    remote_dir = 'app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % ('/cygdrive/E/work/lukou/mirror/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n\n最后运行，输入密码就成功了！！！\n\n![](http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg)\n\n\n\n\n\n\n\n\n","source":"_posts/踏平windows下安装fabric遇到的坑s.md","raw":"---\ntitle: 踏平windows下安装fabric遇到的坑s\ndate: 2018-04-15 22:41:22\ntags: [fabric]\ncategories: [工具]\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&fm=27&gp=0.jpg)\n\n# 前言\n本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案\n\n<!--more-->\n\n# fabric\nfabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署\n\nfabric提供了几个简单的api来完成所有的部署  \n* local() 本地执行命令\n* run() 服务器运行命令\n* put() 把本地文件上传到服务器\n* with cd('/path/to/dir/') 指定服务器的目录\n\n在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本\n\n详细请参考廖雪峰老师的fabric介绍：[https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000](https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000)\n\n# 安装python\n所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）\n\npython下载地址：[https://www.python.org/getit/](https://www.python.org/getit/)  \n最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本\n\n# 安装pip\npip可以理解为python的一个包管理工具,用pip工具去安装fabric\n```\npip install fabric\n```\n\npip下载地址：[https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb](https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb)\n\n进入pip的安装目录，运行：\n```\npython setup.py build\npython setup.py install\n```\n若此时出现错误说，not found module 'setuptools',需要补装一下  \nsetuptools下载地址：[https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26](https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26)\n\n进入安装目录执行\n```\npython setup.py build\npython setup.py install\n```\n\n或者参考另一个方法：[https://blog.csdn.net/newjueqi/article/details/47446965](https://blog.csdn.net/newjueqi/article/details/47446965)\n\n此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)\n\n这时就可以用前面说的命令安装fabric了\n\n# 运行fabfile.py\n\n```\nfab test\n```\ntest是fabfile.py里定义的一个方法\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('make test')\n    remote_dir = '/home/lukou/app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % (os.getcwd() + '/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n这时候window上会报错，说make test这命令执行出错  \n\n前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具\n\n其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好\n\n在次运行fabfile脚本\n\n还是会出错，说没有rsync命令\n\n## 安装rsync工具\ncwrsync下载地址：[https://www.itefix.net/cwrsync](https://www.itefix.net/cwrsync)\n记得把安装目录添加到PATH\n\n再次运行fabfile脚本\n\n还是会出错，错误信息如下：\n```\ndup() in/out/err failed\nrsync: connection unexpectedly closed (0 bytes received so far) [sender]\nrsync error: unexplained error (code 255) at io.c(226) [sender=3.1.2]\n```\n百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  \n\n解决方案参考：[https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows](https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows)\n\n所以要把path里cwrsync的安装目录提前，像如下\n```\nλ where ssh\nE:\\ProgramFiles\\cwRsync_5.5.0_x86_Free\\bin\\ssh.exe\nC:\\Program Files (x86)\\Git\\usr\\bin\\ssh.exe\n```\n\n再次运行fab test\n\n也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了\n\n这次报的错误主要是语法错误\n```\nThe source and destination cannot both be remote.\nrsync error: syntax or usage error (code 1) at main.c(1274) [Receiver=3.1.2]\n```\n\n这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：\n```\nfabfile.py\n\ndef test(remote='121.41.121.230', make=True):\n    print '开始同步代码...'\n    if make:\n        local('npm run test')\n    remote_dir = 'app/paidan/test2'\n    sync_str = 'rsync --delete-after -r %s %s@%s:%s'\n    local(sync_str % ('/cygdrive/E/work/lukou/mirror/dist/*', env.user, remote, remote_dir))\n    print '同步完毕'\n```\n\n最后运行，输入密码就成功了！！！\n\n![](http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg)\n\n\n\n\n\n\n\n\n","slug":"踏平windows下安装fabric遇到的坑s","published":1,"updated":"2018-04-24T11:41:35.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fdq001iw8qzrytkzt24","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案</p>\n<a id=\"more\"></a>\n<h1 id=\"fabric\"><a href=\"#fabric\" class=\"headerlink\" title=\"fabric\"></a>fabric</h1><p>fabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署</p>\n<p>fabric提供了几个简单的api来完成所有的部署  </p>\n<ul>\n<li>local() 本地执行命令</li>\n<li>run() 服务器运行命令</li>\n<li>put() 把本地文件上传到服务器</li>\n<li>with cd(‘/path/to/dir/‘) 指定服务器的目录</li>\n</ul>\n<p>在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本</p>\n<p>详细请参考廖雪峰老师的fabric介绍：<a href=\"https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000\" target=\"_blank\" rel=\"external\">https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000</a></p>\n<h1 id=\"安装python\"><a href=\"#安装python\" class=\"headerlink\" title=\"安装python\"></a>安装python</h1><p>所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）</p>\n<p>python下载地址：<a href=\"https://www.python.org/getit/\" target=\"_blank\" rel=\"external\">https://www.python.org/getit/</a><br>最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本</p>\n<h1 id=\"安装pip\"><a href=\"#安装pip\" class=\"headerlink\" title=\"安装pip\"></a>安装pip</h1><p>pip可以理解为python的一个包管理工具,用pip工具去安装fabric<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"keyword\">install</span> fabric</span><br></pre></td></tr></table></figure></p>\n<p>pip下载地址：<a href=\"https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb\" target=\"_blank\" rel=\"external\">https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb</a></p>\n<p>进入pip的安装目录，运行：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python setup<span class=\"selector-class\">.py</span> build</span><br><span class=\"line\">python setup<span class=\"selector-class\">.py</span> install</span><br></pre></td></tr></table></figure></p>\n<p>若此时出现错误说，not found module ‘setuptools’,需要补装一下<br>setuptools下载地址：<a href=\"https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26\" target=\"_blank\" rel=\"external\">https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26</a></p>\n<p>进入安装目录执行<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python setup<span class=\"selector-class\">.py</span> build</span><br><span class=\"line\">python setup<span class=\"selector-class\">.py</span> install</span><br></pre></td></tr></table></figure></p>\n<p>或者参考另一个方法：<a href=\"https://blog.csdn.net/newjueqi/article/details/47446965\" target=\"_blank\" rel=\"external\">https://blog.csdn.net/newjueqi/article/details/47446965</a></p>\n<p>此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)</p>\n<p>这时就可以用前面说的命令安装fabric了</p>\n<h1 id=\"运行fabfile-py\"><a href=\"#运行fabfile-py\" class=\"headerlink\" title=\"运行fabfile.py\"></a>运行fabfile.py</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>test是fabfile.py里定义的一个方法<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(remote=<span class=\"string\">'121.41.121.230'</span>, make=True)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'开始同步代码...'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">'make test'</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">'/home/lukou/app/paidan/test2'</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">'rsync --delete-after -r %s %s@%s:%s'</span></span><br><span class=\"line\">    local(sync_str % (os.getcwd() + <span class=\"string\">'/dist/*'</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'同步完毕'</span></span><br></pre></td></tr></table></figure></p>\n<p>这时候window上会报错，说make test这命令执行出错  </p>\n<p>前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具</p>\n<p>其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好</p>\n<p>在次运行fabfile脚本</p>\n<p>还是会出错，说没有rsync命令</p>\n<h2 id=\"安装rsync工具\"><a href=\"#安装rsync工具\" class=\"headerlink\" title=\"安装rsync工具\"></a>安装rsync工具</h2><p>cwrsync下载地址：<a href=\"https://www.itefix.net/cwrsync\" target=\"_blank\" rel=\"external\">https://www.itefix.net/cwrsync</a><br>记得把安装目录添加到PATH</p>\n<p>再次运行fabfile脚本</p>\n<p>还是会出错，错误信息如下：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dup() <span class=\"keyword\">in</span>/<span class=\"keyword\">out</span>/<span class=\"keyword\">err</span> failed</span><br><span class=\"line\">rsync: connection unexpectedly closed (0 bytes received <span class=\"keyword\">so</span> far) [sender]</span><br><span class=\"line\">rsync <span class=\"keyword\">error</span>: unexplained <span class=\"keyword\">error</span> (code 255) at io.c(226) [sender=3.1.2]</span><br></pre></td></tr></table></figure></p>\n<p>百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  </p>\n<p>解决方案参考：<a href=\"https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows\" target=\"_blank\" rel=\"external\">https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows</a></p>\n<p>所以要把path里cwrsync的安装目录提前，像如下<br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">λ where ssh</span><br><span class=\"line\">E:<span class=\"symbol\">\\P</span>rogramFiles<span class=\"symbol\">\\c</span>wRsync_5.5.0_x86_Free<span class=\"symbol\">\\b</span>in<span class=\"symbol\">\\s</span>sh.exe</span><br><span class=\"line\">C:<span class=\"symbol\">\\P</span>rogram Files (x86)<span class=\"symbol\">\\G</span>it<span class=\"symbol\">\\u</span>sr<span class=\"symbol\">\\b</span>in<span class=\"symbol\">\\s</span>sh.exe</span><br></pre></td></tr></table></figure></p>\n<p>再次运行fab test</p>\n<p>也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了</p>\n<p>这次报的错误主要是语法错误<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The source <span class=\"keyword\">and</span> destination cannot both be remote.</span><br><span class=\"line\">rsync <span class=\"keyword\">error</span>: syntax <span class=\"keyword\">or</span> usage <span class=\"keyword\">error</span> (code <span class=\"number\">1</span>) <span class=\"keyword\">at</span> main.c(<span class=\"number\">1274</span>) [Receiver=<span class=\"number\">3.1</span><span class=\"number\">.2</span>]</span><br></pre></td></tr></table></figure></p>\n<p>这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(remote=<span class=\"string\">'121.41.121.230'</span>, make=True)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'开始同步代码...'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">'npm run test'</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">'app/paidan/test2'</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">'rsync --delete-after -r %s %s@%s:%s'</span></span><br><span class=\"line\">    local(sync_str % (<span class=\"string\">'/cygdrive/E/work/lukou/mirror/dist/*'</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'同步完毕'</span></span><br></pre></td></tr></table></figure></p>\n<p>最后运行，输入密码就成功了！！！</p>\n<p><img src=\"http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg\" alt=\"\"></p>\n","excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2127917617,591166268&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文主要介绍python环境的文件上传部署工具，和在windows平台上安装fabric的过程遇到的坑和一些解决方案</p>","more":"<h1 id=\"fabric\"><a href=\"#fabric\" class=\"headerlink\" title=\"fabric\"></a>fabric</h1><p>fabric是一个用python开发的部署工具，最大的好处就是不用登陆服务器，在本地运行python脚本就可以轻松做到远程部署</p>\n<p>fabric提供了几个简单的api来完成所有的部署  </p>\n<ul>\n<li>local() 本地执行命令</li>\n<li>run() 服务器运行命令</li>\n<li>put() 把本地文件上传到服务器</li>\n<li>with cd(‘/path/to/dir/‘) 指定服务器的目录</li>\n</ul>\n<p>在项目根目录下增加fabfile.py文件，这个文件就是控制部署的脚本</p>\n<p>详细请参考廖雪峰老师的fabric介绍：<a href=\"https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000\">https://www.liaoxuefeng.com/article/001373892650475818672edc83c4c978a45195eab8dc753000</a></p>\n<h1 id=\"安装python\"><a href=\"#安装python\" class=\"headerlink\" title=\"安装python\"></a>安装python</h1><p>所以这个工具依赖python环境，在下是windows系统，需要装python环境（不得不吐槽windows，安装这些环境过程中会遇到很多坑，不想mac系统，可以跟liunx流畅的打交道）</p>\n<p>python下载地址：<a href=\"https://www.python.org/getit/\">https://www.python.org/getit/</a><br>最稳地还是建议安装2.7版本，因为后面安装的一些依赖包依赖2.7版本</p>\n<h1 id=\"安装pip\"><a href=\"#安装pip\" class=\"headerlink\" title=\"安装pip\"></a>安装pip</h1><p>pip可以理解为python的一个包管理工具,用pip工具去安装fabric<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip <span class=\"keyword\">install</span> fabric</span><br></pre></td></tr></table></figure></p>\n<p>pip下载地址：<a href=\"https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb\">https://pypi.python.org/packages/source/p/pip/pip-8.0.2.tar.gz#md5=3a73c4188f8dbad6a1e6f6d44d117eeb</a></p>\n<p>进入pip的安装目录，运行：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python setup<span class=\"selector-class\">.py</span> build</span><br><span class=\"line\">python setup<span class=\"selector-class\">.py</span> install</span><br></pre></td></tr></table></figure></p>\n<p>若此时出现错误说，not found module ‘setuptools’,需要补装一下<br>setuptools下载地址：<a href=\"https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26\">https://pypi.python.org/packages/source/s/setuptools/setuptools-19.6.tar.gz#md5=c607dd118eae682c44ed146367a17e26</a></p>\n<p>进入安装目录执行<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python setup<span class=\"selector-class\">.py</span> build</span><br><span class=\"line\">python setup<span class=\"selector-class\">.py</span> install</span><br></pre></td></tr></table></figure></p>\n<p>或者参考另一个方法：<a href=\"https://blog.csdn.net/newjueqi/article/details/47446965\">https://blog.csdn.net/newjueqi/article/details/47446965</a></p>\n<p>此时还有一步，就是把pip的安装目录添加进环境变量(windows就是有点麻烦，有钱还是买个macbook)</p>\n<p>这时就可以用前面说的命令安装fabric了</p>\n<h1 id=\"运行fabfile-py\"><a href=\"#运行fabfile-py\" class=\"headerlink\" title=\"运行fabfile.py\"></a>运行fabfile.py</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<p>test是fabfile.py里定义的一个方法<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(remote=<span class=\"string\">'121.41.121.230'</span>, make=True)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'开始同步代码...'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">'make test'</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">'/home/lukou/app/paidan/test2'</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">'rsync --delete-after -r %s %s@%s:%s'</span></span><br><span class=\"line\">    local(sync_str % (os.getcwd() + <span class=\"string\">'/dist/*'</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'同步完毕'</span></span><br></pre></td></tr></table></figure></p>\n<p>这时候window上会报错，说make test这命令执行出错  </p>\n<p>前面已经说了，local()是执行本地命令，那么问题就是windows没有make这个命令，所以要安装make命令的工具</p>\n<p>其实不安装也可以，make test就是运行package.json里面的test脚本，直接把它改为npm run test就好</p>\n<p>在次运行fabfile脚本</p>\n<p>还是会出错，说没有rsync命令</p>\n<h2 id=\"安装rsync工具\"><a href=\"#安装rsync工具\" class=\"headerlink\" title=\"安装rsync工具\"></a>安装rsync工具</h2><p>cwrsync下载地址：<a href=\"https://www.itefix.net/cwrsync\">https://www.itefix.net/cwrsync</a><br>记得把安装目录添加到PATH</p>\n<p>再次运行fabfile脚本</p>\n<p>还是会出错，错误信息如下：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dup() <span class=\"keyword\">in</span>/<span class=\"keyword\">out</span>/<span class=\"keyword\">err</span> failed</span><br><span class=\"line\">rsync: connection unexpectedly closed (0 bytes received <span class=\"keyword\">so</span> far) [sender]</span><br><span class=\"line\">rsync <span class=\"keyword\">error</span>: unexplained <span class=\"keyword\">error</span> (code 255) at io.c(226) [sender=3.1.2]</span><br></pre></td></tr></table></figure></p>\n<p>百度了一下，找个了一个解决方案，原因是本地有两个ssh，而正在使用的ssh不是cwrsync下的ssh.exe，在windows下环境变量是从前到后查找的，假如找到ssh就不会往后找  </p>\n<p>解决方案参考：<a href=\"https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows\">https://stackoverflow.com/questions/7261029/why-is-this-rsync-connection-unexpectedly-closed-on-windows</a></p>\n<p>所以要把path里cwrsync的安装目录提前，像如下<br><figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">λ where ssh</span><br><span class=\"line\">E:<span class=\"symbol\">\\P</span>rogramFiles<span class=\"symbol\">\\c</span>wRsync_5.5.0_x86_Free<span class=\"symbol\">\\b</span>in<span class=\"symbol\">\\s</span>sh.exe</span><br><span class=\"line\">C:<span class=\"symbol\">\\P</span>rogram Files (x86)<span class=\"symbol\">\\G</span>it<span class=\"symbol\">\\u</span>sr<span class=\"symbol\">\\b</span>in<span class=\"symbol\">\\s</span>sh.exe</span><br></pre></td></tr></table></figure></p>\n<p>再次运行fab test</p>\n<p>也还是会出错，就是这么皮。要不然这标题就不会在坑后面加s了</p>\n<p>这次报的错误主要是语法错误<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The source <span class=\"keyword\">and</span> destination cannot both be remote.</span><br><span class=\"line\">rsync <span class=\"keyword\">error</span>: syntax <span class=\"keyword\">or</span> usage <span class=\"keyword\">error</span> (code <span class=\"number\">1</span>) <span class=\"keyword\">at</span> main.c(<span class=\"number\">1274</span>) [Receiver=<span class=\"number\">3.1</span><span class=\"number\">.2</span>]</span><br></pre></td></tr></table></figure></p>\n<p>这下简单了，百度一下rsync命令在windows下的用法就行了，最后改成如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fabfile.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">(remote=<span class=\"string\">'121.41.121.230'</span>, make=True)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'开始同步代码...'</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> make:</span><br><span class=\"line\">        local(<span class=\"string\">'npm run test'</span>)</span><br><span class=\"line\">    remote_dir = <span class=\"string\">'app/paidan/test2'</span></span><br><span class=\"line\">    sync_str = <span class=\"string\">'rsync --delete-after -r %s %s@%s:%s'</span></span><br><span class=\"line\">    local(sync_str % (<span class=\"string\">'/cygdrive/E/work/lukou/mirror/dist/*'</span>, env.user, remote, remote_dir))</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'同步完毕'</span></span><br></pre></td></tr></table></figure></p>\n<p>最后运行，输入密码就成功了！！！</p>\n<p><img src=\"http://p2.so.qhimgs1.com/bdr/_240_/t01b985b931a308278e.jpg\" alt=\"\"></p>"},{"title":"调用定时器的正确姿势","date":"2017-06-21T15:23:04.686Z","_content":"\n\n## 定时器最怕的问题\n用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  \n\n最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  \n\n在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。\n\n而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。\n\n废话不多说，调用定时器的正确姿势如下图(code)：\n```js\n//进度计时\n\t\ttiming: function(speed) {\n\n\t\t\t//计时\n\t\t\tvar n = ++this.n;\n\t\t\tvar m = parseInt(n/60);\n\t\t\tvar s = parseInt(n%60);\n\t\t\tvar curr = this.toDub(m) + ':' + this.toDub(s);\n\t\t\tthis.currNode.innerHTML = curr;\n\n\t\t\t//progress\n\t\t\tthis.steps += speed;\n\t\t\tif(this.steps >= this.max*100) clearInterval(this.timer);\n\n\t\t\tthis.step.style.width = Math.min(this.steps/100, this.max) + 'px';\n\t\t\tthis.btn.style.left = Math.min(this.steps/100, this.max) + 'px';\n\t\n\t\t},\n\n\t\trunning: function() {\n\t\t\t\n\t\t\tvar that = this;\n\t\t\tvar speed = (that.max/that.sum).toFixed(2);\n\t\t\tspeed = parseFloat(speed) * 100;\n\n\t\t\t//播放时立即调用\n\t\t\tthis.timing(speed);\t\n\n\t\t\tclearInterval(this.timer);\n\t\t\t//必须返回出去，在外才能清除计时器\n\t\t\tthis.timer = setInterval(function() {\n\t\t\t\t\t//计时\n\t\t\t\t\tvar n = ++that.n;\n\t\t\t\t\tif(n > that.sum) {\n\t\t\t\t\t\tn = that.sum\n\t\t\t\t\t}\n\t\t\t\t\tvar m = parseInt(n/60);\n\t\t\t\t\tvar s = parseInt(n%60);\n\t\t\t\t\tvar curr = that.toDub(m) + ':' + that.toDub(s);\n\t\t\t\t\tthat.currNode.innerHTML = curr;\n\n\t\t\t\t\t//progress\n\t\t\t\t\tthat.steps += speed;\n\t\t\t\t\tif(that.steps >= that.max*100) clearInterval(that.timer);\n\n\t\t\t\t\tthat.step.style.width = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t\tthat.btn.style.left = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t}, 1000)\n\n\t\t\treturn this.timer\n\t\t},\n```\n想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：\n```js\nAudio.timer = progress.running;\n```\n这样清楚定时器也方便：\n·\n```\nclearInterval(Audio.timer);\n```","source":"_posts/调用定时器的正确姿势.md","raw":"---\ntitle: 调用定时器的正确姿势\ndate: \ntags: [js]\n---\n\n\n## 定时器最怕的问题\n用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  \n\n最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  \n\n在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。\n\n而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。\n\n废话不多说，调用定时器的正确姿势如下图(code)：\n```js\n//进度计时\n\t\ttiming: function(speed) {\n\n\t\t\t//计时\n\t\t\tvar n = ++this.n;\n\t\t\tvar m = parseInt(n/60);\n\t\t\tvar s = parseInt(n%60);\n\t\t\tvar curr = this.toDub(m) + ':' + this.toDub(s);\n\t\t\tthis.currNode.innerHTML = curr;\n\n\t\t\t//progress\n\t\t\tthis.steps += speed;\n\t\t\tif(this.steps >= this.max*100) clearInterval(this.timer);\n\n\t\t\tthis.step.style.width = Math.min(this.steps/100, this.max) + 'px';\n\t\t\tthis.btn.style.left = Math.min(this.steps/100, this.max) + 'px';\n\t\n\t\t},\n\n\t\trunning: function() {\n\t\t\t\n\t\t\tvar that = this;\n\t\t\tvar speed = (that.max/that.sum).toFixed(2);\n\t\t\tspeed = parseFloat(speed) * 100;\n\n\t\t\t//播放时立即调用\n\t\t\tthis.timing(speed);\t\n\n\t\t\tclearInterval(this.timer);\n\t\t\t//必须返回出去，在外才能清除计时器\n\t\t\tthis.timer = setInterval(function() {\n\t\t\t\t\t//计时\n\t\t\t\t\tvar n = ++that.n;\n\t\t\t\t\tif(n > that.sum) {\n\t\t\t\t\t\tn = that.sum\n\t\t\t\t\t}\n\t\t\t\t\tvar m = parseInt(n/60);\n\t\t\t\t\tvar s = parseInt(n%60);\n\t\t\t\t\tvar curr = that.toDub(m) + ':' + that.toDub(s);\n\t\t\t\t\tthat.currNode.innerHTML = curr;\n\n\t\t\t\t\t//progress\n\t\t\t\t\tthat.steps += speed;\n\t\t\t\t\tif(that.steps >= that.max*100) clearInterval(that.timer);\n\n\t\t\t\t\tthat.step.style.width = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t\tthat.btn.style.left = Math.min(that.steps/100, that.max) + 'px';\n\t\t\t\t}, 1000)\n\n\t\t\treturn this.timer\n\t\t},\n```\n想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：\n```js\nAudio.timer = progress.running;\n```\n这样清楚定时器也方便：\n·\n```\nclearInterval(Audio.timer);\n```","slug":"调用定时器的正确姿势","published":1,"updated":"2017-06-21T15:25:58.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fe7001nw8qzx2p8i8kp","content":"<h2 id=\"定时器最怕的问题\"><a href=\"#定时器最怕的问题\" class=\"headerlink\" title=\"定时器最怕的问题\"></a>定时器最怕的问题</h2><p>用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  </p>\n<p>最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  </p>\n<p>在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。</p>\n<p>而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。</p>\n<p>废话不多说，调用定时器的正确姿势如下图(code)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//进度计时</span></span><br><span class=\"line\">\t\ttiming: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">speed</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> n = ++<span class=\"keyword\">this</span>.n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> curr = <span class=\"keyword\">this</span>.toDub(m) + <span class=\"string\">':'</span> + <span class=\"keyword\">this</span>.toDub(s);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.currNode.innerHTML = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.steps += speed;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.steps &gt;= <span class=\"keyword\">this</span>.max*<span class=\"number\">100</span>) clearInterval(<span class=\"keyword\">this</span>.timer);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.step.style.width = <span class=\"built_in\">Math</span>.min(<span class=\"keyword\">this</span>.steps/<span class=\"number\">100</span>, <span class=\"keyword\">this</span>.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.btn.style.left = <span class=\"built_in\">Math</span>.min(<span class=\"keyword\">this</span>.steps/<span class=\"number\">100</span>, <span class=\"keyword\">this</span>.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\trunning: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> speed = (that.max/that.sum).toFixed(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\tspeed = <span class=\"built_in\">parseFloat</span>(speed) * <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//播放时立即调用</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.timing(speed);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tclearInterval(<span class=\"keyword\">this</span>.timer);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//必须返回出去，在外才能清除计时器</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.timer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> n = ++that.n;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(n &gt; that.sum) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tn = that.sum</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> curr = that.toDub(m) + <span class=\"string\">':'</span> + that.toDub(s);</span><br><span class=\"line\">\t\t\t\t\tthat.currNode.innerHTML = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t\t\tthat.steps += speed;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(that.steps &gt;= that.max*<span class=\"number\">100</span>) clearInterval(that.timer);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tthat.step.style.width = <span class=\"built_in\">Math</span>.min(that.steps/<span class=\"number\">100</span>, that.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t\tthat.btn.style.left = <span class=\"built_in\">Math</span>.min(that.steps/<span class=\"number\">100</span>, that.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.timer</span><br><span class=\"line\">\t\t&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Audio.timer = progress.running;</span><br></pre></td></tr></table></figure></p>\n<p>这样清楚定时器也方便：<br>·<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clearInterval(<span class=\"name\">Audio</span>.timer)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"定时器最怕的问题\"><a href=\"#定时器最怕的问题\" class=\"headerlink\" title=\"定时器最怕的问题\"></a>定时器最怕的问题</h2><p>用到定时器最多的运动效果和时钟，玩过的人都知道，当业务逻辑越来越复杂的时候，假如定时器调用频繁，最怕的是不知道内存里还有几个定时器没清除。  </p>\n<p>最近在做一个音乐播放，在进度条这块，为了让进度条跑动，在进度条对象的原型链上调用了定时器。  </p>\n<p>在调用的时候，犯了新手很容易犯的错误。在播放下一首的时候，又生成了另一个进度条对象，所以页面开了两个定时器，管理定时器很麻烦。</p>\n<p>而且这个定时器会在别的页面调用，就涉及到如何正确的把这个定时器导出去。另外，调用的时候，我要逻辑立即跑一次，就是让定时器立即执行，而不是等到规定的时间去执行，那就慢了一步。</p>\n<p>废话不多说，调用定时器的正确姿势如下图(code)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//进度计时</span></span><br><span class=\"line\">\t\ttiming: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">speed</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> n = ++<span class=\"keyword\">this</span>.n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> curr = <span class=\"keyword\">this</span>.toDub(m) + <span class=\"string\">':'</span> + <span class=\"keyword\">this</span>.toDub(s);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.currNode.innerHTML = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.steps += speed;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.steps &gt;= <span class=\"keyword\">this</span>.max*<span class=\"number\">100</span>) clearInterval(<span class=\"keyword\">this</span>.timer);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.step.style.width = <span class=\"built_in\">Math</span>.min(<span class=\"keyword\">this</span>.steps/<span class=\"number\">100</span>, <span class=\"keyword\">this</span>.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.btn.style.left = <span class=\"built_in\">Math</span>.min(<span class=\"keyword\">this</span>.steps/<span class=\"number\">100</span>, <span class=\"keyword\">this</span>.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t\trunning: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> speed = (that.max/that.sum).toFixed(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\tspeed = <span class=\"built_in\">parseFloat</span>(speed) * <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//播放时立即调用</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.timing(speed);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tclearInterval(<span class=\"keyword\">this</span>.timer);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//必须返回出去，在外才能清除计时器</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.timer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//计时</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> n = ++that.n;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(n &gt; that.sum) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tn = that.sum</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>(n/<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(n%<span class=\"number\">60</span>);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> curr = that.toDub(m) + <span class=\"string\">':'</span> + that.toDub(s);</span><br><span class=\"line\">\t\t\t\t\tthat.currNode.innerHTML = curr;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//progress</span></span><br><span class=\"line\">\t\t\t\t\tthat.steps += speed;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(that.steps &gt;= that.max*<span class=\"number\">100</span>) clearInterval(that.timer);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\tthat.step.style.width = <span class=\"built_in\">Math</span>.min(that.steps/<span class=\"number\">100</span>, that.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t\tthat.btn.style.left = <span class=\"built_in\">Math</span>.min(that.steps/<span class=\"number\">100</span>, that.max) + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">\t\t\t\t&#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.timer</span><br><span class=\"line\">\t\t&#125;,</span><br></pre></td></tr></table></figure></p>\n<p>想要在别的页面调用，那就要把定时器赋值给全局的变量。页面上只有一个全局对象Audio，可以这样做：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Audio.timer = progress.running;</span><br></pre></td></tr></table></figure></p>\n<p>这样清楚定时器也方便：<br>·<br><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clearInterval(<span class=\"name\">Audio</span>.timer)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"自定义的checkbox,radio样式","date":"2017-06-18T14:18:00.860Z","_content":"\n**雪碧图**\n\n雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。\n\n**自定义checkbox,radio样式**\n\nInput标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。\n在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。\n\n**思路：**\n\n1.用visibility：hidden将input标签隐藏\n2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分\n3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标\n\n**遇到的问题：**\n\n1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。\n2. 样式 .example2 input[type='checkbox']:checked + label{} 要在样式.example2 input[type='checkbox']:checked + label:after之前，否则不起作用。\n\n**雪碧图与伪元素方式对比：**\n1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。\n2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。\n\n**总结**\n这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。","source":"_posts/自定义的checkbox,radio样式.md","raw":"---\ntitle: 自定义的checkbox,radio样式 \ndate: \ntags: [html5]\n---\n\n**雪碧图**\n\n雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。\n\n**自定义checkbox,radio样式**\n\nInput标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。\n在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。\n\n**思路：**\n\n1.用visibility：hidden将input标签隐藏\n2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分\n3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标\n\n**遇到的问题：**\n\n1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。\n2. 样式 .example2 input[type='checkbox']:checked + label{} 要在样式.example2 input[type='checkbox']:checked + label:after之前，否则不起作用。\n\n**雪碧图与伪元素方式对比：**\n1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。\n2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。\n\n**总结**\n这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。","slug":"自定义的checkbox,radio样式","published":1,"updated":"2017-06-18T14:22:15.479Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7feh001pw8qzvxyh9la7","content":"<p><strong>雪碧图</strong></p>\n<p>雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。</p>\n<p><strong>自定义checkbox,radio样式</strong></p>\n<p>Input标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。<br>在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。</p>\n<p><strong>思路：</strong></p>\n<p>1.用visibility：hidden将input标签隐藏<br>2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分<br>3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标</p>\n<p><strong>遇到的问题：</strong></p>\n<p>1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。</p>\n<ol>\n<li>样式 .example2 input[type=’checkbox’]:checked + label{} 要在样式.example2 input[type=’checkbox’]:checked + label:after之前，否则不起作用。</li>\n</ol>\n<p><strong>雪碧图与伪元素方式对比：</strong><br>1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。<br>2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。</p>\n<p><strong>总结</strong><br>这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。</p>\n","excerpt":"","more":"<p><strong>雪碧图</strong></p>\n<p>雪碧图即CSS Sprite，是一种图像合并技术，将网站用到的小图标和背景图都合并在一张图片上，用background-image和background-position来显示需要的图片部份。</p>\n<p><strong>自定义checkbox,radio样式</strong></p>\n<p>Input标签后面跟一个label标签，然后input标签隐藏，通过label标签的for属性，来与input的id对应起来，这样点击label标签，对应的input标签就会被选中。<br>在该方法下，checkbox，radio的样式就可以通过设置label的背景图来控制，在结合雪碧图，各种各样的样式都可以弄出来。</p>\n<p><strong>思路：</strong></p>\n<p>1.用visibility：hidden将input标签隐藏<br>2.准备雪碧图，label的大小设置为图标的大小，通过定位显示需要的图片部分<br>3.使用：checked伪类选择器改变label的背景图定位，定位为选中的图标</p>\n<p><strong>遇到的问题：</strong></p>\n<p>1.使用伪元素方法时，：after伪类给元素添加content的时候，要给设置定位，：after的样式相对label定位，使两者置于不同的文本流，避免出现节点相拥挤的浮动问题。</p>\n<ol>\n<li>样式 .example2 input[type=’checkbox’]:checked + label{} 要在样式.example2 input[type=’checkbox’]:checked + label:after之前，否则不起作用。</li>\n</ol>\n<p><strong>雪碧图与伪元素方式对比：</strong><br>1.用雪碧图的的方式，虽然在减少网络请求优化性能方面有明显作用外，可是一个小图标的大小应该比几十行的伪元素代码大一点，对文件大小方面可能不利。优点可能就是使用图片可以做出很美观的效果。<br>2.使用伪类元素的方式就相对复杂一下，遇到的问题也会比较多。但结合css3可以做出很简洁美观的效果。</p>\n<p><strong>总结</strong><br>这两种方法各有优劣，采用哪种方式还是要按照项目的具体要求吧，不能一概而论。比如做移动端的话，个人感觉使用后者会计较好，因为请求一张雪碧图的流量会很大，消耗流量。而在pc端的网站，考虑前者也是一个不错的选择。</p>\n"},{"title":"MVVM框架双向数据绑定的实现原理","date":"2017-10-15T02:51:19.608Z","_content":"\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525175920&di=0a8226ac6efda720e6da74d056b697a3&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg)\n\n# 前言\n> 目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？\n\n<!--more-->\n\n# 什么是MVVM？\n\nMVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。\n\n在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。\n\n回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。\n那么Model数据更改是如何被ViewModel检测到的呢？\n\n# 数据变更检测\n\n在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。\n\n那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。\n\n下面介绍四种方式： \n* 手动触发绑定\n* 脏检测机制\n* 数据对象劫持\n* Proxy\n\n# 数据变更检测四种方式\n\n## 手动触发绑定\n\n这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之手动触发绑定</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图\n        */\n        //相当于view，通过节点数组获取节点\n        let elems = [document.getElementById(\"el\"), document.getElementById(\"input\")];\n\n        //数据对像\n        let data = {\n            value: 'hello'\n        };\n\n        //定义directive：操作逻辑定义\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text;\n            },\n            value: function(value) {\n                // this.setAttribute('value', value); setAttribute一般用于设置自定义属性\n                this.value = value;\n            }\n        };\n\n        //数据绑定监听 view ==> model\n        if(document.addEventListener) {\n            elems[1].addEventListener('keyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }else {\n            elems[1].attachEvent('onkeyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }\n\n        //开始扫描\n        scan();\n        //model ==> view\n        setTimeout(function() {\n            ViewModelSet('value', 'hello AlexL');\n        }, 1000)\n\n        function scan() {\n            //扫描带指令的节点属性\n            for(let elem of elems) {\n                elem.directive = [];\n                for(let attr of elem.attributes) {\n                    if(attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n\n        function ViewModelSet(key, value) {\n            data[key] =value;\n            scan();\n        }\n\n\n    </script>\n</body>\n</html>\n```\n\n## 脏检测机制\n\n脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之脏数据检测</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" qg-event=\"value\" qg-bind=\"value\">\n    <div>\n        <span id=\"el\" qg-event=\"text\" qg-bind=\"value\"></span>\n    </div>\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    //初始化扫描节点\n    scan(elems);\n    // $digest('value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'nice job!';\n        $digest('value');\n    }, 5000)\n\n    function scan() {\n        for(let elem of elems) {\n            elem.directive = [];\n        }\n    }\n\n    //数据劫持监听，只扫描绑定了这个数据（value）的元素\n    function $digest(value) {\n        let list = document.querySelectorAll('[qg-bind=' + value + ']');\n        // console.log(list)\n        digest(list); \n    }\n\n    //脏数据循环检测\n    function digest(elems) {\n        //扫描带指令的节点属性\n        for(let i=0, len=elems.length; i<len; i++) {\n            let elem = elems[i];\n            for(let j=0, len=elem.attributes.length; j<len; j++) {\n                let attr = elem.attributes[j];\n                if(attr.nodeName.indexOf('qg-event') > -1) {\n                    //调用属性指令\n                    let datakey = elem.getAttribute('qg-bind') || undefined;\n                    //判断数据是否发生变化，是则执行指令重新渲染，否则跳过\n                    if(elem.directive[attr.nodeValue] !== data[datakey]) {\n                        directive[attr.nodeValue].call(elem, data[datakey]);\n                        elem.directive[attr.nodeValue] = data[datakey];\n                    }\n                }\n            }\n        }\n    }\n\n</script>\n</body>\n</html>\n```\n\n## 数据对象劫持\n\n基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之对象劫持</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    let bValue;\n    scan();\n\n    //数据劫持监听\n    defineGetAndSet(data, 'value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'hello 木木夕';\n    }, 2000);\n\n    function scan() {\n        //扫描带指令的节点属性\n        for(let elem of elems) {\n            elem.directive = [];\n            for(let attr of elem.attributes) {\n                if(attr.nodeName.indexOf('q-') > -1) {\n                    //调用属性指令\n                    directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                    elem.directive.push(attr.nodeName.slice(2));\n                }\n            }\n        }\n    }\n\n    //定义对象属性并设置劫持\n    function defineGetAndSet(obj, propName) {\n        Object.defineProperty(obj, propName, {\n            get: function() {\n                return bValue;\n            },\n            set: function(newValue) {\n                bValue = newValue;\n                scan();\n            },\n            enumerable: true,\n            configurable: true\n        })\n    }\n\n\n\n</script>\n</body>\n</html>\n```\n\n## ES6 Proxy\n\nES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更之proxy对象劫持</title>\n</head>\n\n<body>\n    <label>请输入<input type=\"text\" q-value=\"value\" id=\"input\"></label>\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； \n         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描\n         */\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (str) {\n                this.innerHTML = str;\n            },\n            value: function (str) {\n                this.setAttribute('value', str);\n            }\n        };\n\n        //设置data的访问proxy\n        let data = new Proxy({\n            value: 'my name is AlexL'\n        }, {\n                get: function (target, key, receiver) {\n                    return target.value; //data对象中的value属性\n                },\n                set: function (target, key, value, receiver) {\n                    target.value = value;\n                    scan();\n                    return target.value;\n                }\n            });\n\n        // 初始化\n        // data['value'] = 'my name is laotuzhu';\n        scan();\n\n        //数据绑定监听\n        if (document.addEventListener) {\n            elems[1].addEventListener('keyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        } else {\n            elems[1].attachEvent('onkeyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        }\n\n        setTimeout(function () {\n            data.value = 'hello 木木夕';\n        }, 2000);\n\n        function scan() {\n            //扫描带指令的节点属性\n            for (let elem of elems) {\n                elem.directive = [];\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n\n</html>\n```\n\n# 结语\n> 实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。    \n> 但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV\\*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV\\*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。","source":"_posts/MVVM框架双向数据绑定的实现原理.md","raw":"---\ntitle: MVVM框架双向数据绑定的实现原理\ndate: \ntags: [MVVM]\ncategories: [前端框架]\n---\n\n![我是图片](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1525175920&di=0a8226ac6efda720e6da74d056b697a3&imgtype=jpg&er=1&src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg)\n\n# 前言\n> 目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？\n\n<!--more-->\n\n# 什么是MVVM？\n\nMVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。\n\n在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。\n\n回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。\n那么Model数据更改是如何被ViewModel检测到的呢？\n\n# 数据变更检测\n\n在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。\n\n那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。\n\n下面介绍四种方式： \n* 手动触发绑定\n* 脏检测机制\n* 数据对象劫持\n* Proxy\n\n# 数据变更检测四种方式\n\n## 手动触发绑定\n\n这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之手动触发绑定</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图\n        */\n        //相当于view，通过节点数组获取节点\n        let elems = [document.getElementById(\"el\"), document.getElementById(\"input\")];\n\n        //数据对像\n        let data = {\n            value: 'hello'\n        };\n\n        //定义directive：操作逻辑定义\n        let directive = {\n            text: function (text) {\n                this.innerHTML = text;\n            },\n            value: function(value) {\n                // this.setAttribute('value', value); setAttribute一般用于设置自定义属性\n                this.value = value;\n            }\n        };\n\n        //数据绑定监听 view ==> model\n        if(document.addEventListener) {\n            elems[1].addEventListener('keyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }else {\n            elems[1].attachEvent('onkeyup', function(e) {\n                ViewModelSet('value', e.target.value);\n            }, false);\n        }\n\n        //开始扫描\n        scan();\n        //model ==> view\n        setTimeout(function() {\n            ViewModelSet('value', 'hello AlexL');\n        }, 1000)\n\n        function scan() {\n            //扫描带指令的节点属性\n            for(let elem of elems) {\n                elem.directive = [];\n                for(let attr of elem.attributes) {\n                    if(attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n\n        function ViewModelSet(key, value) {\n            data[key] =value;\n            scan();\n        }\n\n\n    </script>\n</body>\n</html>\n```\n\n## 脏检测机制\n\n脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之脏数据检测</title>\n</head>\n<body>\n    <input type=\"text\" id=\"input\" qg-event=\"value\" qg-bind=\"value\">\n    <div>\n        <span id=\"el\" qg-event=\"text\" qg-bind=\"value\"></span>\n    </div>\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    //初始化扫描节点\n    scan(elems);\n    // $digest('value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n            $digest(e.target.getAttribute('qg-bind'));\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'nice job!';\n        $digest('value');\n    }, 5000)\n\n    function scan() {\n        for(let elem of elems) {\n            elem.directive = [];\n        }\n    }\n\n    //数据劫持监听，只扫描绑定了这个数据（value）的元素\n    function $digest(value) {\n        let list = document.querySelectorAll('[qg-bind=' + value + ']');\n        // console.log(list)\n        digest(list); \n    }\n\n    //脏数据循环检测\n    function digest(elems) {\n        //扫描带指令的节点属性\n        for(let i=0, len=elems.length; i<len; i++) {\n            let elem = elems[i];\n            for(let j=0, len=elem.attributes.length; j<len; j++) {\n                let attr = elem.attributes[j];\n                if(attr.nodeName.indexOf('qg-event') > -1) {\n                    //调用属性指令\n                    let datakey = elem.getAttribute('qg-bind') || undefined;\n                    //判断数据是否发生变化，是则执行指令重新渲染，否则跳过\n                    if(elem.directive[attr.nodeValue] !== data[datakey]) {\n                        directive[attr.nodeValue].call(elem, data[datakey]);\n                        elem.directive[attr.nodeValue] = data[datakey];\n                    }\n                }\n            }\n        }\n    }\n\n</script>\n</body>\n</html>\n```\n\n## 数据对象劫持\n\n基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更检测之对象劫持</title>\n</head>\n<body>\n    <input type=\"text\" q-value=\"value\" id=\"input\">\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n<script>\n    let elems = [document.getElementById('el'), document.getElementById('input')];\n    let data = {\n        value: 'hello'\n    };\n\n    let directive = {\n        text: function(str) {\n            this.innerHTML = str;\n        },\n        value: function(str) {\n            this.setAttribute('value', str);\n        }\n    };\n\n    let bValue;\n    scan();\n\n    //数据劫持监听\n    defineGetAndSet(data, 'value');\n\n    //数据绑定监听\n    if(document.addEventListener) {\n        elems[1].addEventListener('keyup',function(e) {\n            data.value = e.target.value;\n        }, false);\n    }else {\n        elems[1].attachEvent('onkeyup', function(e) {\n            data.value = e.target.value;\n        }, false);\n    }\n\n    setTimeout(function() {\n        data.value = 'hello 木木夕';\n    }, 2000);\n\n    function scan() {\n        //扫描带指令的节点属性\n        for(let elem of elems) {\n            elem.directive = [];\n            for(let attr of elem.attributes) {\n                if(attr.nodeName.indexOf('q-') > -1) {\n                    //调用属性指令\n                    directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                    elem.directive.push(attr.nodeName.slice(2));\n                }\n            }\n        }\n    }\n\n    //定义对象属性并设置劫持\n    function defineGetAndSet(obj, propName) {\n        Object.defineProperty(obj, propName, {\n            get: function() {\n                return bValue;\n            },\n            set: function(newValue) {\n                bValue = newValue;\n                scan();\n            },\n            enumerable: true,\n            configurable: true\n        })\n    }\n\n\n\n</script>\n</body>\n</html>\n```\n\n## ES6 Proxy\n\nES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>数据变更之proxy对象劫持</title>\n</head>\n\n<body>\n    <label>请输入<input type=\"text\" q-value=\"value\" id=\"input\"></label>\n    <div>\n        <span q-text=\"value\" id=\"el\"></span>\n    </div>\n\n    <script>\n        /**\n         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； \n         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描\n         */\n        let elems = [document.getElementById('el'), document.getElementById('input')];\n        let directive = {\n            text: function (str) {\n                this.innerHTML = str;\n            },\n            value: function (str) {\n                this.setAttribute('value', str);\n            }\n        };\n\n        //设置data的访问proxy\n        let data = new Proxy({\n            value: 'my name is AlexL'\n        }, {\n                get: function (target, key, receiver) {\n                    return target.value; //data对象中的value属性\n                },\n                set: function (target, key, value, receiver) {\n                    target.value = value;\n                    scan();\n                    return target.value;\n                }\n            });\n\n        // 初始化\n        // data['value'] = 'my name is laotuzhu';\n        scan();\n\n        //数据绑定监听\n        if (document.addEventListener) {\n            elems[1].addEventListener('keyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        } else {\n            elems[1].attachEvent('onkeyup', function (e) {\n                data.value = e.target.value;\n            }, false);\n        }\n\n        setTimeout(function () {\n            data.value = 'hello 木木夕';\n        }, 2000);\n\n        function scan() {\n            //扫描带指令的节点属性\n            for (let elem of elems) {\n                elem.directive = [];\n                for (let attr of elem.attributes) {\n                    if (attr.nodeName.indexOf('q-') > -1) {\n                        //调用属性指令\n                        directive[attr.nodeName.slice(2)].call(elem, data[attr.nodeValue]);\n                        elem.directive.push(attr.nodeName.slice(2));\n                    }\n                }\n            }\n        }\n    </script>\n</body>\n\n</html>\n```\n\n# 结语\n> 实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。    \n> 但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV\\*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV\\*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。","slug":"MVVM框架双向数据绑定的实现原理","published":1,"updated":"2018-04-24T11:58:11.559Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fq2003dw8qz8urxn4ov","content":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525175920&amp;di=0a8226ac6efda720e6da74d056b697a3&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"什么是MVVM？\"><a href=\"#什么是MVVM？\" class=\"headerlink\" title=\"什么是MVVM？\"></a>什么是MVVM？</h1><p>MVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。</p>\n<p>在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。</p>\n<p>回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。<br>那么Model数据更改是如何被ViewModel检测到的呢？</p>\n<h1 id=\"数据变更检测\"><a href=\"#数据变更检测\" class=\"headerlink\" title=\"数据变更检测\"></a>数据变更检测</h1><p>在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。</p>\n<p>那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。</p>\n<p>下面介绍四种方式： </p>\n<ul>\n<li>手动触发绑定</li>\n<li>脏检测机制</li>\n<li>数据对象劫持</li>\n<li>Proxy</li>\n</ul>\n<h1 id=\"数据变更检测四种方式\"><a href=\"#数据变更检测四种方式\" class=\"headerlink\" title=\"数据变更检测四种方式\"></a>数据变更检测四种方式</h1><h2 id=\"手动触发绑定\"><a href=\"#手动触发绑定\" class=\"headerlink\" title=\"手动触发绑定\"></a>手动触发绑定</h2><p>这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之手动触发绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">q-value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span><br><span class=\"line\">        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图</span><br><span class=\"line\">        */</span></span><br><span class=\"line\">        <span class=\"comment\">//相当于view，通过节点数组获取节点</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"el\"</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"input\"</span>)];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//数据对像</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">            value: <span class=\"string\">'hello'</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//定义directive：操作逻辑定义</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = text;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// this.setAttribute('value', value); setAttribute一般用于设置自定义属性</span></span><br><span class=\"line\">                <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//数据绑定监听 view ==&gt; model</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                ViewModelSet(<span class=\"string\">'value'</span>, e.target.value);</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                ViewModelSet(<span class=\"string\">'value'</span>, e.target.value);</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//开始扫描</span></span><br><span class=\"line\">        scan();</span><br><span class=\"line\">        <span class=\"comment\">//model ==&gt; view</span></span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            ViewModelSet(<span class=\"string\">'value'</span>, <span class=\"string\">'hello AlexL'</span>);</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                elem.directive = [];</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(attr.nodeName.indexOf(<span class=\"string\">'q-'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue]);</span><br><span class=\"line\">                        elem.directive.push(attr.nodeName.slice(<span class=\"number\">2</span>));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ViewModelSet</span>(<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">            data[key] =value;</span><br><span class=\"line\">            scan();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"脏检测机制\"><a href=\"#脏检测机制\" class=\"headerlink\" title=\"脏检测机制\"></a>脏检测机制</h2><p>脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之脏数据检测<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">        value: <span class=\"string\">'hello'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">        text: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.innerHTML = str;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        value: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, str);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//初始化扫描节点</span></span><br><span class=\"line\">    scan(elems);</span><br><span class=\"line\">    <span class=\"comment\">// $digest('value');</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据绑定监听</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">            $digest(e.target.getAttribute(<span class=\"string\">'qg-bind'</span>));</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">            $digest(e.target.getAttribute(<span class=\"string\">'qg-bind'</span>));</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        data.value = <span class=\"string\">'nice job!'</span>;</span><br><span class=\"line\">        $digest(<span class=\"string\">'value'</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">5000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">            elem.directive = [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据劫持监听，只扫描绑定了这个数据（value）的元素</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">$digest</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[qg-bind='</span> + value + <span class=\"string\">']'</span>);</span><br><span class=\"line\">        <span class=\"comment\">// console.log(list)</span></span><br><span class=\"line\">        digest(list); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//脏数据循环检测</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">digest</span>(<span class=\"params\">elems</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>, len=elems.length; i&lt;len; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> elem = elems[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>, len=elem.attributes.length; j&lt;len; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> attr = elem.attributes[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(attr.nodeName.indexOf(<span class=\"string\">'qg-event'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                    <span class=\"keyword\">let</span> datakey = elem.getAttribute(<span class=\"string\">'qg-bind'</span>) || <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">                    <span class=\"comment\">//判断数据是否发生变化，是则执行指令重新渲染，否则跳过</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(elem.directive[attr.nodeValue] !== data[datakey]) &#123;</span><br><span class=\"line\">                        directive[attr.nodeValue].call(elem, data[datakey]);</span><br><span class=\"line\">                        elem.directive[attr.nodeValue] = data[datakey];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数据对象劫持\"><a href=\"#数据对象劫持\" class=\"headerlink\" title=\"数据对象劫持\"></a>数据对象劫持</h2><p>基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">q-value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">        value: <span class=\"string\">'hello'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">        text: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.innerHTML = str;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        value: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, str);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> bValue;</span><br><span class=\"line\">    scan();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据劫持监听</span></span><br><span class=\"line\">    defineGetAndSet(data, <span class=\"string\">'value'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据绑定监听</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        data.value = <span class=\"string\">'hello 木木夕'</span>;</span><br><span class=\"line\">    &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">            elem.directive = [];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(attr.nodeName.indexOf(<span class=\"string\">'q-'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                    directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue]);</span><br><span class=\"line\">                    elem.directive.push(attr.nodeName.slice(<span class=\"number\">2</span>));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义对象属性并设置劫持</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineGetAndSet</span>(<span class=\"params\">obj, propName</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.defineProperty(obj, propName, &#123;</span><br><span class=\"line\">            get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bValue;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            set: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;</span><br><span class=\"line\">                bValue = newValue;</span><br><span class=\"line\">                scan();</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            configurable: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-Proxy\"><a href=\"#ES6-Proxy\" class=\"headerlink\" title=\"ES6 Proxy\"></a>ES6 Proxy</h2><p>ES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更之proxy对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>请输入<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">q-value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span><br><span class=\"line\">         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； </span><br><span class=\"line\">         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描</span><br><span class=\"line\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = str;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, str);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//设置data的访问proxy</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(&#123;</span><br><span class=\"line\">            value: <span class=\"string\">'my name is AlexL'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">                get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">target, key, receiver</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> target.value; <span class=\"comment\">//data对象中的value属性</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                set: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">target, key, value, receiver</span>) </span>&#123;</span><br><span class=\"line\">                    target.value = value;</span><br><span class=\"line\">                    scan();</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> target.value;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 初始化</span></span><br><span class=\"line\">        <span class=\"comment\">// data['value'] = 'my name is laotuzhu';</span></span><br><span class=\"line\">        scan();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//数据绑定监听</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                data.value = e.target.value;</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                data.value = e.target.value;</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            data.value = <span class=\"string\">'hello 木木夕'</span>;</span><br><span class=\"line\">        &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                elem.directive = [];</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'q-'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue]);</span><br><span class=\"line\">                        elem.directive.push(attr.nodeName.slice(<span class=\"number\">2</span>));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><blockquote>\n<p>实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。<br>但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。</p>\n</blockquote>\n","excerpt":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1525175920&amp;di=0a8226ac6efda720e6da74d056b697a3&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fwww.chinairn.com%2FUserFiles%2Fimage%2F20161106%2F20161106162224_9200.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>目前前端最火的几个框架vue，angular等都是基于MVVM框架思想，那么什么是MVVM框架，和它的双向数据绑定都是如何实现的呢？</p>\n</blockquote>","more":"<h1 id=\"什么是MVVM？\"><a href=\"#什么是MVVM？\" class=\"headerlink\" title=\"什么是MVVM？\"></a>什么是MVVM？</h1><p>MVVM是一种发开代码的组织和设计思想，说白了就是框架，它跟MVC是同一个物种，也可以说是从MVC演化到MVP，再在MVP的基础进化为MVVM。</p>\n<p>在了解MVVM之前，我们有必要了解它的祖先。MVC是指Model(数据模型)，View(视图)，Controller(控制器)，这些我们都很好理解，而MVP的P指的是Presenter。它跟Controlller有点相似，不同的是，它是用户触发View上的绑定的Dom事件后，View将修改通知给Presenter来完成后续的操作(更新数据或者视图)。而在MVC模式下，用户是直接操作Controller，以更改url上的hash发送请求的方式。所以很明显，Presenter跟View是双向绑定的。</p>\n<p>回到MVVM，VM指的是ViewModel。ViewModel是把Present拆分为多个小的指令步骤(directive)，它将View和Model双向绑定，用户操作修改View，ViewModel驱动Model进行更新，相同的，Model数据被更改，ViewModel检测到并驱动View更新。<br>那么Model数据更改是如何被ViewModel检测到的呢？</p>\n<h1 id=\"数据变更检测\"><a href=\"#数据变更检测\" class=\"headerlink\" title=\"数据变更检测\"></a>数据变更检测</h1><p>在MVVM模式下，在view→model的方向，用View层通过触发一些元素的事件，例如input的onchange事件，将修改通知给ViewModel，然后ViewModel再操作Model，这很容易理解。</p>\n<p>那么Model→view这个方向上的通知如何实现呢？那就需要数据变更检测机制，它能够检测到Model的变化，并通过ViewModel更新View层。它有很多实现形式，特别是ES6 新特性的出现，丰富了实现数据对象的变更检测的方式。</p>\n<p>下面介绍四种方式： </p>\n<ul>\n<li>手动触发绑定</li>\n<li>脏检测机制</li>\n<li>数据对象劫持</li>\n<li>Proxy</li>\n</ul>\n<h1 id=\"数据变更检测四种方式\"><a href=\"#数据变更检测四种方式\" class=\"headerlink\" title=\"数据变更检测四种方式\"></a>数据变更检测四种方式</h1><h2 id=\"手动触发绑定\"><a href=\"#手动触发绑定\" class=\"headerlink\" title=\"手动触发绑定\"></a>手动触发绑定</h2><p>这种方式比较直接，思路是通过在数据对象上定义get()和set()方法，改变数据后手动触发这两个方法来获取和设置。Angular正是通过这种方式进行view层操作更新的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之手动触发绑定<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">q-value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span><br><span class=\"line\">        原理：通过事件绑定，手动触发viewmodel更改数据和渲染视图</span><br><span class=\"line\">        */</span></span><br><span class=\"line\">        <span class=\"comment\">//相当于view，通过节点数组获取节点</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"el\"</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"input\"</span>)];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//数据对像</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">            value: <span class=\"string\">'hello'</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//定义directive：操作逻辑定义</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">text</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = text;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// this.setAttribute('value', value); setAttribute一般用于设置自定义属性</span></span><br><span class=\"line\">                <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//数据绑定监听 view ==&gt; model</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                ViewModelSet(<span class=\"string\">'value'</span>, e.target.value);</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                ViewModelSet(<span class=\"string\">'value'</span>, e.target.value);</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//开始扫描</span></span><br><span class=\"line\">        scan();</span><br><span class=\"line\">        <span class=\"comment\">//model ==&gt; view</span></span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            ViewModelSet(<span class=\"string\">'value'</span>, <span class=\"string\">'hello AlexL'</span>);</span><br><span class=\"line\">        &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                elem.directive = [];</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(attr.nodeName.indexOf(<span class=\"string\">'q-'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue]);</span><br><span class=\"line\">                        elem.directive.push(attr.nodeName.slice(<span class=\"number\">2</span>));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ViewModelSet</span>(<span class=\"params\">key, value</span>) </span>&#123;</span><br><span class=\"line\">            data[key] =value;</span><br><span class=\"line\">            scan();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"脏检测机制\"><a href=\"#脏检测机制\" class=\"headerlink\" title=\"脏检测机制\"></a>脏检测机制</h2><p>脏检测机制的基本原理是，在viewmodel对象的某个属性值发生变化时找到与这个属性值相关的所有元素，然后进行数据比较，如果变化就调用指令，重新扫描并渲染这个元素。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之脏数据检测<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span> <span class=\"attr\">qg-event</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">qg-bind</span>=<span class=\"string\">\"value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">        value: <span class=\"string\">'hello'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">        text: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.innerHTML = str;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        value: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, str);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//初始化扫描节点</span></span><br><span class=\"line\">    scan(elems);</span><br><span class=\"line\">    <span class=\"comment\">// $digest('value');</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据绑定监听</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">            $digest(e.target.getAttribute(<span class=\"string\">'qg-bind'</span>));</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">            $digest(e.target.getAttribute(<span class=\"string\">'qg-bind'</span>));</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        data.value = <span class=\"string\">'nice job!'</span>;</span><br><span class=\"line\">        $digest(<span class=\"string\">'value'</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">5000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">            elem.directive = [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据劫持监听，只扫描绑定了这个数据（value）的元素</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">$digest</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'[qg-bind='</span> + value + <span class=\"string\">']'</span>);</span><br><span class=\"line\">        <span class=\"comment\">// console.log(list)</span></span><br><span class=\"line\">        digest(list); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//脏数据循环检测</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">digest</span>(<span class=\"params\">elems</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>, len=elems.length; i&lt;len; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> elem = elems[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>, len=elem.attributes.length; j&lt;len; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">let</span> attr = elem.attributes[j];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(attr.nodeName.indexOf(<span class=\"string\">'qg-event'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                    <span class=\"keyword\">let</span> datakey = elem.getAttribute(<span class=\"string\">'qg-bind'</span>) || <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">                    <span class=\"comment\">//判断数据是否发生变化，是则执行指令重新渲染，否则跳过</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(elem.directive[attr.nodeValue] !== data[datakey]) &#123;</span><br><span class=\"line\">                        directive[attr.nodeValue].call(elem, data[datakey]);</span><br><span class=\"line\">                        elem.directive[attr.nodeValue] = data[datakey];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数据对象劫持\"><a href=\"#数据对象劫持\" class=\"headerlink\" title=\"数据对象劫持\"></a>数据对象劫持</h2><p>基本思路是使用Object.defineProperty和Object.defineProperies对viewmodel数据对象进行属性get()和set()的监听，当有数据读取和赋值操作的时候则扫面节点，运行指定对应节点的Directive指令，viewmodel通过等号赋值就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更检测之对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">q-value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">        value: <span class=\"string\">'hello'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">        text: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.innerHTML = str;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        value: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, str);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> bValue;</span><br><span class=\"line\">    scan();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据劫持监听</span></span><br><span class=\"line\">    defineGetAndSet(data, <span class=\"string\">'value'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//数据绑定监听</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">            data.value = e.target.value;</span><br><span class=\"line\">        &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        data.value = <span class=\"string\">'hello 木木夕'</span>;</span><br><span class=\"line\">    &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">            elem.directive = [];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(attr.nodeName.indexOf(<span class=\"string\">'q-'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                    directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue]);</span><br><span class=\"line\">                    elem.directive.push(attr.nodeName.slice(<span class=\"number\">2</span>));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义对象属性并设置劫持</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineGetAndSet</span>(<span class=\"params\">obj, propName</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">Object</span>.defineProperty(obj, propName, &#123;</span><br><span class=\"line\">            get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bValue;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            set: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;</span><br><span class=\"line\">                bValue = newValue;</span><br><span class=\"line\">                scan();</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            configurable: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-Proxy\"><a href=\"#ES6-Proxy\" class=\"headerlink\" title=\"ES6 Proxy\"></a>ES6 Proxy</h2><p>ES6的新特性Proxy，可以在已有对象的基础上重新定义一个对象，并重新定义对象原型上的方法，包括get()和set()。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>数据变更之proxy对象劫持<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>请输入<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">q-value</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"input\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">q-text</span>=<span class=\"string\">\"value\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"el\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span><br><span class=\"line\">         * 跟Object.defineProperty()差不多，都是自定义数据对象的get和set方法，达到对象劫持的目的； </span><br><span class=\"line\">         * 缺点在于，scan方法，假如组件中节点过多，扫描过程就会变长，从而拖慢了代码的执行速度，尤其要避免重复元素的扫描</span><br><span class=\"line\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> elems = [<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'el'</span>), <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'input'</span>)];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> directive = &#123;</span><br><span class=\"line\">            text: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.innerHTML = str;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.setAttribute(<span class=\"string\">'value'</span>, str);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//设置data的访问proxy</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> data = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(&#123;</span><br><span class=\"line\">            value: <span class=\"string\">'my name is AlexL'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">                get: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">target, key, receiver</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> target.value; <span class=\"comment\">//data对象中的value属性</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                set: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">target, key, value, receiver</span>) </span>&#123;</span><br><span class=\"line\">                    target.value = value;</span><br><span class=\"line\">                    scan();</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> target.value;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 初始化</span></span><br><span class=\"line\">        <span class=\"comment\">// data['value'] = 'my name is laotuzhu';</span></span><br><span class=\"line\">        scan();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//数据绑定监听</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].addEventListener(<span class=\"string\">'keyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                data.value = e.target.value;</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            elems[<span class=\"number\">1</span>].attachEvent(<span class=\"string\">'onkeyup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">                data.value = e.target.value;</span><br><span class=\"line\">            &#125;, <span class=\"literal\">false</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            data.value = <span class=\"string\">'hello 木木夕'</span>;</span><br><span class=\"line\">        &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">scan</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//扫描带指令的节点属性</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> elem <span class=\"keyword\">of</span> elems) &#123;</span><br><span class=\"line\">                elem.directive = [];</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> attr <span class=\"keyword\">of</span> elem.attributes) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (attr.nodeName.indexOf(<span class=\"string\">'q-'</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//调用属性指令</span></span><br><span class=\"line\">                        directive[attr.nodeName.slice(<span class=\"number\">2</span>)].call(elem, data[attr.nodeValue]);</span><br><span class=\"line\">                        elem.directive.push(attr.nodeName.slice(<span class=\"number\">2</span>));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><blockquote>\n<p>实现一个MVVC框架远远没这么简单，里面涉及很多性能优化等机制，在上诉的四种方法中，在数据变更时，都把整个Dom结构扫描了，在渲染Dom时连没变化的也重新渲染，这样是很耗性能的，在Angular，vue这样的框架中，用到了virtual dom来最小化的操作dom，这样就可以解决这个问题。<br>但是，也无可避免的操作了Dom，我们知道浏览器的Dom操作其实是很慢的，有没有在完全不操作dom的情况下，渲染视图呢？其实是有的，MNV*框架就可以办到，它适用于移动端的hybird app，通过定义的协议来调用原生方法来渲染视图，来达到跟原生体验非常接近的效果 。关于MNV*框架的讨论不在本章的范畴，有兴趣的同学可以去自行了解。</p>\n</blockquote>"},{"title":"js系列之DOM基础","date":"2016-04-23T05:55:00.000Z","_content":"\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n<!--more-->\n##DOM节点\n\n###childNodes，nodeType和children\n\n* childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。\n\n* nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。\n\n* children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。\n\n###练习代码：\n```javascript\n<script>\n\nwindow.onload= function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i=0;\n\nalert(oUl.childNodes.length)//无论在火狐或者ie，360，谷歌都显示11\n\n/* for(i=0; i<oUl.childNodes.length;i++)\n\n{\n\n//oUl.childNodes[i].style.background == 'red'\n\nif (oUl.childNodes[i].nodeType == 1)\n\n{\n\noUl.childNodes[i].style.background = 'red';\n\n};\n\n}\n\nalert(oUl.children.length) //children是childNodes的兼容版*/\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li>333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n\n</body>\n```\n\n\n###parentNode\n```javascript\n<script>\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\nvar aA = oUl.getElementsByTagName('a');\n\nfor(i=0;i< aA.length; i++){\n\naA[i].onclick = function(){\n\nthis.parentNode.style.display = 'none';\n\n}\n\n}\n\n};\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>jjjj<a href=\"javascript:;\">隐藏</a></li> <!--避免a链接点击立即刷新来不及显示效果-->\n\n<li>啊啊j<a href=\"javascript:\">隐藏</a></li>\n\n<li>的<a href=\"javascript:\">隐藏</a></li>\n\n<li>j得到j<a href=\"javascript:\">隐藏</a></li>\n\n</ul>\n\n</body>\n```\n###offsetParent\n\n\n* offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 \"none\"时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素\n\n```javascript\n<body>\n\n<div id=\"div1\" style=\"width:100px; height:100px;background:red; position:relative;margin:100px;\">\n\n<div id=\"div2\" onclick=\"alert(this.offsetParent.id)\" style=\"width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;\"></div></div>\n\n</body>\n```\n\n###firstChild与firstElementChild\n\n\n* firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild\n\n* 还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling\n\n```javascript\n<script type=\"text/javascript\">\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\n//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用\n\n//oUl.firstChild.style.background = 'red';\n\n//新一代firstElementChild兼容版\n\noUl.firstElementChild.style.background = 'red';\n\n//以前解决这一问题的方法\n\noFirst = oUl.firstElementChild || oUl.firstChild\n\noFirst.style.background = 'red'\n\n//同理也有lastChild 和 lastElementChild\n\n//兄弟节点\n\nvar oLi = document.getElementById('li1');\n\n//oLi.nextSibling.style.background = 'red';\n\noLi.nextElementSibling.style.background = 'red';\n\n//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li id=\"li1\">333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n```\n##DOM方法操作元素属性\n***\n```javascript   \n<script>\n\nwindow.onload = function(){\n\noTxt = document.getElementById('txt1');\n\n//1\n\n//oTxt.value = 'asdd';\n\n//2\n\n//oTxt['value'] = 'aswerr';\n\n//3\n\noTxt.setAttribute(\"value\", \"jhgf\");\n\nalert(oTxt.getAttribute('id'));\n\n}\n\n</script>\n\n<body>\n\n<input type=\"text\" id=\"txt1\">\n\n</body>\n```\n##DOM元素灵活查找\n\n###className\n\n* 通过class选取元素，一般分两步：\n\n1. 把所有的子元素选出来\n\n2. 用className作为条件筛选出来处理\n```javascript\n<script>\n\n//通过class来选元素\n\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aLi = oUl.getElementsByTagName('li');\n\nvar i;\n\nfor (var i = 0; i < aLi.length; i++) {\n\nif (aLi[i].className == 'double') {\n\naLi[i].style.background = 'green';\n\n};\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n**进一步改进**，写一个函数完成选class的功能\n```javacript\n//通过class来选元素的函数\n\nfunction getByClass(oParent, sClass){\n\nvar aEle =oParent.getElementsByTagName('*');\n\nvar aResult = new Array();\n\nfor (var i = 0; i < aEle.length; i++) {\n\nif (aEle[i].className == sClass) { //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了\n\naResult.push(aEle[i]);\n\n};\n\n};\n\nreturn aResult;\n\n};\n```\n引用如下：\n```javascript\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aDou = getByClass(oUl,'double');\n\nvar i;\n\nfor (i = 0; i < aDou.length; i++) {\n\naDou[i].style.background = 'yellow';\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n##创建、插入、和删除元素\n***\n###创建DOM元素\n\n* creatElement（标签名）  创建一个节点\n* appendChild（节点）\t\t追加一个节点\n\t-例子：为ul插入li\n\t\n###插入元素\n\n* insertBefore（节点，原有节点）\t\t在已有元素前插入\n\t-例子：倒序插入li\n\t\n###删除DOM元素\n\n* removeChild（节点）\t\t删除一个元素\n\t-例子删除li\n\t\n###练习代码：\n①创建插入li \n```javascript\n<script>\n\twindow.onload = function(){\n\t\toUl = document.getElementById('ul1');\n\t\toBtn = document.getElementById('btn1');\n\t\toTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oLi = document.createElement('li');\n\t\t\tvar aLi = oUl.getElementsByTagName('li');\n\n\t\t\toLi.innerHTML = oTxt.value;\n\t\t\tif (aLi.length == 0) {\n\t\t\t\toUl.appendChild(oLi);\n\t\t\t}else{\n\t\t\t\toUl.insertBefore(oLi, aLi[0]);\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<label for=\"txt1\"></label><input type=\"text\" id=\"txt1\">\n\t<button id=\"btn1\">插入</button>\n\n\t<ul id=\"ul1\"></ul>\n</body>\n```\n\n**注意**：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）\n\t\n②删除元素\n```javascript   \n<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\t\tvar aA = document.getElementsByTagName('a');\n\t\tvar i;\n\n\t\tfor (i = 0; i < aA.length; i++) {\n\t\t\taA[i].onclick = function (){\n\t\t\t\toUl.removeChild(this.parentNode);\n\t\t\t}\n\t\t};\n\t}\n</script>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>li1<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li2<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li3<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li4<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li5<a href=\"javascript:;\">删除</a></li>\n\t</ul>\n</body>\n```\n**注意**：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。\n\n>**小结**\n 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考[wschoolDOM参考手册](http://www.w3school.com.cn/htmldom/index.asp)或者阅读[JavaScript DOM编程艺术（第二版）](http://www.javascriptcn.com/read-42.html)一书\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>","source":"_posts/js系列之DOM基础.md","raw":"\n---\ntitle: js系列之DOM基础\ndate: 2016-04-23 13:55:00\ntags: [javacript,DOM]\n---\n\n本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。\n<!--more-->\n##DOM节点\n\n###childNodes，nodeType和children\n\n* childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。\n\n* nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。\n\n* children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。\n\n###练习代码：\n```javascript\n<script>\n\nwindow.onload= function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i=0;\n\nalert(oUl.childNodes.length)//无论在火狐或者ie，360，谷歌都显示11\n\n/* for(i=0; i<oUl.childNodes.length;i++)\n\n{\n\n//oUl.childNodes[i].style.background == 'red'\n\nif (oUl.childNodes[i].nodeType == 1)\n\n{\n\noUl.childNodes[i].style.background = 'red';\n\n};\n\n}\n\nalert(oUl.children.length) //children是childNodes的兼容版*/\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li>333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n\n</body>\n```\n\n\n###parentNode\n```javascript\n<script>\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\nvar aA = oUl.getElementsByTagName('a');\n\nfor(i=0;i< aA.length; i++){\n\naA[i].onclick = function(){\n\nthis.parentNode.style.display = 'none';\n\n}\n\n}\n\n};\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>jjjj<a href=\"javascript:;\">隐藏</a></li> <!--避免a链接点击立即刷新来不及显示效果-->\n\n<li>啊啊j<a href=\"javascript:\">隐藏</a></li>\n\n<li>的<a href=\"javascript:\">隐藏</a></li>\n\n<li>j得到j<a href=\"javascript:\">隐藏</a></li>\n\n</ul>\n\n</body>\n```\n###offsetParent\n\n\n* offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 \"none\"时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素\n\n```javascript\n<body>\n\n<div id=\"div1\" style=\"width:100px; height:100px;background:red; position:relative;margin:100px;\">\n\n<div id=\"div2\" onclick=\"alert(this.offsetParent.id)\" style=\"width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;\"></div></div>\n\n</body>\n```\n\n###firstChild与firstElementChild\n\n\n* firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild\n\n* 还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling\n\n```javascript\n<script type=\"text/javascript\">\n\nwindow.onload = function(){\n\nvar oUl = document.getElementById('ul1');\n\nvar i;\n\n//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用\n\n//oUl.firstChild.style.background = 'red';\n\n//新一代firstElementChild兼容版\n\noUl.firstElementChild.style.background = 'red';\n\n//以前解决这一问题的方法\n\noFirst = oUl.firstElementChild || oUl.firstChild\n\noFirst.style.background = 'red'\n\n//同理也有lastChild 和 lastElementChild\n\n//兄弟节点\n\nvar oLi = document.getElementById('li1');\n\n//oLi.nextSibling.style.background = 'red';\n\noLi.nextElementSibling.style.background = 'red';\n\n//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li>111</li>\n\n<li>222</li>\n\n<li id=\"li1\">333</li>\n\n<li>444</li>\n\n<li>555</li>\n\n</ul>\n```\n##DOM方法操作元素属性\n***\n```javascript   \n<script>\n\nwindow.onload = function(){\n\noTxt = document.getElementById('txt1');\n\n//1\n\n//oTxt.value = 'asdd';\n\n//2\n\n//oTxt['value'] = 'aswerr';\n\n//3\n\noTxt.setAttribute(\"value\", \"jhgf\");\n\nalert(oTxt.getAttribute('id'));\n\n}\n\n</script>\n\n<body>\n\n<input type=\"text\" id=\"txt1\">\n\n</body>\n```\n##DOM元素灵活查找\n\n###className\n\n* 通过class选取元素，一般分两步：\n\n1. 把所有的子元素选出来\n\n2. 用className作为条件筛选出来处理\n```javascript\n<script>\n\n//通过class来选元素\n\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aLi = oUl.getElementsByTagName('li');\n\nvar i;\n\nfor (var i = 0; i < aLi.length; i++) {\n\nif (aLi[i].className == 'double') {\n\naLi[i].style.background = 'green';\n\n};\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n**进一步改进**，写一个函数完成选class的功能\n```javacript\n//通过class来选元素的函数\n\nfunction getByClass(oParent, sClass){\n\nvar aEle =oParent.getElementsByTagName('*');\n\nvar aResult = new Array();\n\nfor (var i = 0; i < aEle.length; i++) {\n\nif (aEle[i].className == sClass) { //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了\n\naResult.push(aEle[i]);\n\n};\n\n};\n\nreturn aResult;\n\n};\n```\n引用如下：\n```javascript\nwindow.onload = function (){\n\nvar oUl = document.getElementById('ul1');\n\nvar aDou = getByClass(oUl,'double');\n\nvar i;\n\nfor (i = 0; i < aDou.length; i++) {\n\naDou[i].style.background = 'yellow';\n\n};\n\n}\n\n</script>\n\n<body>\n\n<ul id=\"ul1\">\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n<li></li>\n\n<li class=\"double\"></li>\n\n</ul>\n\n</body>\n```\n##创建、插入、和删除元素\n***\n###创建DOM元素\n\n* creatElement（标签名）  创建一个节点\n* appendChild（节点）\t\t追加一个节点\n\t-例子：为ul插入li\n\t\n###插入元素\n\n* insertBefore（节点，原有节点）\t\t在已有元素前插入\n\t-例子：倒序插入li\n\t\n###删除DOM元素\n\n* removeChild（节点）\t\t删除一个元素\n\t-例子删除li\n\t\n###练习代码：\n①创建插入li \n```javascript\n<script>\n\twindow.onload = function(){\n\t\toUl = document.getElementById('ul1');\n\t\toBtn = document.getElementById('btn1');\n\t\toTxt = document.getElementById('txt1');\n\n\t\toBtn.onclick = function(){\n\t\t\tvar oLi = document.createElement('li');\n\t\t\tvar aLi = oUl.getElementsByTagName('li');\n\n\t\t\toLi.innerHTML = oTxt.value;\n\t\t\tif (aLi.length == 0) {\n\t\t\t\toUl.appendChild(oLi);\n\t\t\t}else{\n\t\t\t\toUl.insertBefore(oLi, aLi[0]);\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t}\n</script>\n<body>\n\t<label for=\"txt1\"></label><input type=\"text\" id=\"txt1\">\n\t<button id=\"btn1\">插入</button>\n\n\t<ul id=\"ul1\"></ul>\n</body>\n```\n\n**注意**：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）\n\t\n②删除元素\n```javascript   \n<script>\n\twindow.onload = function(){\n\t\tvar oUl = document.getElementById('ul1');\n\t\tvar aA = document.getElementsByTagName('a');\n\t\tvar i;\n\n\t\tfor (i = 0; i < aA.length; i++) {\n\t\t\taA[i].onclick = function (){\n\t\t\t\toUl.removeChild(this.parentNode);\n\t\t\t}\n\t\t};\n\t}\n</script>\n<body>\n\t<ul id=\"ul1\">\n\t\t<li>li1<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li2<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li3<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li4<a href=\"javascript:;\">删除</a></li>\n\t\t<li>li5<a href=\"javascript:;\">删除</a></li>\n\t</ul>\n</body>\n```\n**注意**：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。\n\n>**小结**\n 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考[wschoolDOM参考手册](http://www.w3school.com.cn/htmldom/index.asp)或者阅读[JavaScript DOM编程艺术（第二版）](http://www.javascriptcn.com/read-42.html)一书\n\n\n><span style=\"font-size:12px\">本文标题: <a href=\"{{ permalink }}\">  { {title} }  </a>\n文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a>  \n许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span>","slug":"js系列之DOM基础","published":1,"updated":"2016-05-10T13:35:18.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fqc003ew8qzm28m1ahu","content":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。<br><a id=\"more\"></a></p>\n<p>##DOM节点</p>\n<p>###childNodes，nodeType和children</p>\n<ul>\n<li><p>childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。</p>\n</li>\n<li><p>nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。</p>\n</li>\n<li><p>children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。</p>\n</li>\n</ul>\n<p>###练习代码：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload= function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var i=0;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(oUl.childNodes.length)//无论在火狐或者ie，360，谷歌都显示11</span><br><span class=\"line\"></span><br><span class=\"line\">/* for(i=0; i&lt;oUl.childNodes.length;i++)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">//oUl.childNodes[i].style.background == 'red'</span><br><span class=\"line\"></span><br><span class=\"line\">if (oUl.childNodes[i].nodeType == 1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">oUl.childNodes[i].style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(oUl.children.length) //children是childNodes的兼容版*/</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;111&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;222&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;333&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;444&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;555&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p>###parentNode<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ul1'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aA = oUl.getElementsByTagName(<span class=\"string\">'a'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt; aA.length; i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aA[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">this</span>.parentNode.style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ul1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>jjjj<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span> <span class=\"comment\">&lt;!--避免a链接点击立即刷新来不及显示效果--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>啊啊j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>的<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>j得到j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/body&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>###offsetParent</p>\n<ul>\n<li>offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 “none”时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"div1\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100px; height:100px;background:red; position:relative;margin:100px;\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"div2\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"alert(this.offsetParent.id)\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/body&gt;</span></span><br></pre></td></tr></table></figure>\n<p>###firstChild与firstElementChild</p>\n<ul>\n<li><p>firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild</p>\n</li>\n<li><p>还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling</p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=\"text/javascript\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var i;</span><br><span class=\"line\"></span><br><span class=\"line\">//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用</span><br><span class=\"line\"></span><br><span class=\"line\">//oUl.firstChild.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">//新一代firstElementChild兼容版</span><br><span class=\"line\"></span><br><span class=\"line\">oUl.firstElementChild.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">//以前解决这一问题的方法</span><br><span class=\"line\"></span><br><span class=\"line\">oFirst = oUl.firstElementChild || oUl.firstChild</span><br><span class=\"line\"></span><br><span class=\"line\">oFirst.style.background = 'red'</span><br><span class=\"line\"></span><br><span class=\"line\">//同理也有lastChild 和 lastElementChild</span><br><span class=\"line\"></span><br><span class=\"line\">//兄弟节点</span><br><span class=\"line\"></span><br><span class=\"line\">var oLi = document.getElementById('li1');</span><br><span class=\"line\"></span><br><span class=\"line\">//oLi.nextSibling.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">oLi.nextElementSibling.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;111&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;222&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li id=\"li1\"&gt;333&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;444&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;555&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>##DOM方法操作元素属性</p>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">oTxt = document.getElementById('txt1');</span><br><span class=\"line\"></span><br><span class=\"line\">//1</span><br><span class=\"line\"></span><br><span class=\"line\">//oTxt.value = 'asdd';</span><br><span class=\"line\"></span><br><span class=\"line\">//2</span><br><span class=\"line\"></span><br><span class=\"line\">//oTxt['value'] = 'aswerr';</span><br><span class=\"line\"></span><br><span class=\"line\">//3</span><br><span class=\"line\"></span><br><span class=\"line\">oTxt.setAttribute(\"value\", \"jhgf\");</span><br><span class=\"line\"></span><br><span class=\"line\">alert(oTxt.getAttribute('id'));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;input type=\"text\" id=\"txt1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p>##DOM元素灵活查找</p>\n<p>###className</p>\n<ul>\n<li>通过class选取元素，一般分两步：</li>\n</ul>\n<ol>\n<li><p>把所有的子元素选出来</p>\n</li>\n<li><p>用className作为条件筛选出来处理</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//通过class来选元素</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function ()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var aLi = oUl.getElementsByTagName('li');</span><br><span class=\"line\"></span><br><span class=\"line\">var i;</span><br><span class=\"line\"></span><br><span class=\"line\">for (var i = 0; i &lt; aLi.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">if (aLi[i].className == 'double') &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aLi[i].style.background = 'green';</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>进一步改进</strong>，写一个函数完成选class的功能<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//通过class来选元素的函数</span><br><span class=\"line\"></span><br><span class=\"line\">function getByClass(oParent, sClass)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var aEle =oParent.getElementsByTagName(&apos;*&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">var aResult = new Array();</span><br><span class=\"line\"></span><br><span class=\"line\">for (var i = 0; i &lt; aEle.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">if (aEle[i].className == sClass) &#123; //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了</span><br><span class=\"line\"></span><br><span class=\"line\">aResult.push(aEle[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">return aResult;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>引用如下：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onload = function ()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var aDou = getByClass(oUl,'double');</span><br><span class=\"line\"></span><br><span class=\"line\">var i;</span><br><span class=\"line\"></span><br><span class=\"line\">for (i = 0; i &lt; aDou.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aDou[i].style.background = 'yellow';</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p>##创建、插入、和删除元素</p>\n<hr>\n<p>###创建DOM元素</p>\n<ul>\n<li>creatElement（标签名）  创建一个节点</li>\n<li>appendChild（节点）        追加一个节点<br>  -例子：为ul插入li</li>\n</ul>\n<p>###插入元素</p>\n<ul>\n<li>insertBefore（节点，原有节点）        在已有元素前插入<br>  -例子：倒序插入li</li>\n</ul>\n<p>###删除DOM元素</p>\n<ul>\n<li>removeChild（节点）        删除一个元素<br>  -例子删除li</li>\n</ul>\n<p>###练习代码：<br>①创建插入li<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\toUl = document.getElementById('ul1');</span><br><span class=\"line\">\t\toBtn = document.getElementById('btn1');</span><br><span class=\"line\">\t\toTxt = document.getElementById('txt1');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.onclick = function()&#123;</span><br><span class=\"line\">\t\t\tvar oLi = document.createElement('li');</span><br><span class=\"line\">\t\t\tvar aLi = oUl.getElementsByTagName('li');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toLi.innerHTML = oTxt.value;</span><br><span class=\"line\">\t\t\tif (aLi.length == 0) &#123;</span><br><span class=\"line\">\t\t\t\toUl.appendChild(oLi);</span><br><span class=\"line\">\t\t\t&#125;else&#123;</span><br><span class=\"line\">\t\t\t\toUl.insertBefore(oLi, aLi[0]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;label for=\"txt1\"&gt;&lt;/label&gt;&lt;input type=\"text\" id=\"txt1\"&gt;</span><br><span class=\"line\">\t&lt;button id=\"btn1\"&gt;插入&lt;/button&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;ul id=\"ul1\"&gt;&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）</p>\n<p>②删除元素<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oUl = document.getElementById('ul1');</span><br><span class=\"line\">\t\tvar aA = document.getElementsByTagName('a');</span><br><span class=\"line\">\t\tvar i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (i = 0; i &lt; aA.length; i++) &#123;</span><br><span class=\"line\">\t\t\taA[i].onclick = function ()&#123;</span><br><span class=\"line\">\t\t\t\toUl.removeChild(this.parentNode);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li1&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li2&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li3&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li4&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li5&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。</p>\n<blockquote>\n<p><strong>小结</strong><br> 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考<a href=\"http://www.w3school.com.cn/htmldom/index.asp\" target=\"_blank\" rel=\"external\">wschoolDOM参考手册</a>或者阅读<a href=\"http://www.javascriptcn.com/read-42.html\" target=\"_blank\" rel=\"external\">JavaScript DOM编程艺术（第二版）</a>一书</p>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/04/23/js系列之DOM基础/\">  { {title} }  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\" target=\"_blank\" rel=\"external\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\"><a rel=\"external\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>\n","excerpt":"<p>本文章是本人在学习js时候的知识总结，涉及到学习过程中的一些知识点，代码练习以及新手常犯的错误与解决方法，希望对js的爱好者有帮助。<br>","more":"</p>\n<p>##DOM节点</p>\n<p>###childNodes，nodeType和children</p>\n<ul>\n<li><p>childNodes子节点，只适合用于旧版的ie浏览器，用于火狐谷歌上会将文本节点（空格）包括进来。</p>\n</li>\n<li><p>nodeType节点类型，返回以一个数字。1表示元素节点，2指属性节点，3是文本节点。</p>\n</li>\n<li><p>children作用同于childNodes，但强于它，是它的兼容版，返回只包含元素节点的数据。</p>\n</li>\n</ul>\n<p>###练习代码：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload= function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var i=0;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(oUl.childNodes.length)//无论在火狐或者ie，360，谷歌都显示11</span><br><span class=\"line\"></span><br><span class=\"line\">/* for(i=0; i&lt;oUl.childNodes.length;i++)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">//oUl.childNodes[i].style.background == 'red'</span><br><span class=\"line\"></span><br><span class=\"line\">if (oUl.childNodes[i].nodeType == 1)</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">oUl.childNodes[i].style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(oUl.children.length) //children是childNodes的兼容版*/</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;111&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;222&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;333&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;444&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;555&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p>###parentNode<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ul1'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aA = oUl.getElementsByTagName(<span class=\"string\">'a'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt; aA.length; i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aA[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">this</span>.parentNode.style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ul1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>jjjj<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span> <span class=\"comment\">&lt;!--避免a链接点击立即刷新来不及显示效果--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>啊啊j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>的<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>j得到j<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:\"</span>&gt;</span>隐藏<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/body&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>###offsetParent</p>\n<ul>\n<li>offsetParent属性返回一个对象的引用，这个对象是距离调用offsetParent的元素最近的（在包含层次中最靠近的），并且是已进行过CSS定位的容器元素。 如果这个容器元素未进行CSS定位, 则offsetParent属性的取值为根元素(在标准兼容模式下为html元素；在怪异呈现模式下为body元素)的引用。 当容器元素的style.display 被设置为 “none”时（译注：IE和Opera除外），offsetParent属性 返回 null。一般返回设置了定位元素的父元素</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"div1\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100px; height:100px;background:red; position:relative;margin:100px;\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"div2\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"alert(this.offsetParent.id)\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100px; height:100px;background:yellow; position:absolute; top:100px;left:100px;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/body&gt;</span></span><br></pre></td></tr></table></figure>\n<p>###firstChild与firstElementChild</p>\n<ul>\n<li><p>firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用，现在获取首节点用firstElementChild，同理可延伸到lastChild和lastElementChild</p>\n</li>\n<li><p>还有兄弟节点，nextSibling与nextElementSibling 和previousSibling与previousElementSibling</p>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=\"text/javascript\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var i;</span><br><span class=\"line\"></span><br><span class=\"line\">//firstChild在火狐谷歌下面都是undefined，出错；以前firstChild只能在ie下有用</span><br><span class=\"line\"></span><br><span class=\"line\">//oUl.firstChild.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">//新一代firstElementChild兼容版</span><br><span class=\"line\"></span><br><span class=\"line\">oUl.firstElementChild.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">//以前解决这一问题的方法</span><br><span class=\"line\"></span><br><span class=\"line\">oFirst = oUl.firstElementChild || oUl.firstChild</span><br><span class=\"line\"></span><br><span class=\"line\">oFirst.style.background = 'red'</span><br><span class=\"line\"></span><br><span class=\"line\">//同理也有lastChild 和 lastElementChild</span><br><span class=\"line\"></span><br><span class=\"line\">//兄弟节点</span><br><span class=\"line\"></span><br><span class=\"line\">var oLi = document.getElementById('li1');</span><br><span class=\"line\"></span><br><span class=\"line\">//oLi.nextSibling.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">oLi.nextElementSibling.style.background = 'red';</span><br><span class=\"line\"></span><br><span class=\"line\">//同理nextSibling nextElementSibling和previousSibling previousElementSibling亦是同样的用法</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;111&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;222&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li id=\"li1\"&gt;333&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;444&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;555&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>##DOM方法操作元素属性</p>\n<hr>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">oTxt = document.getElementById('txt1');</span><br><span class=\"line\"></span><br><span class=\"line\">//1</span><br><span class=\"line\"></span><br><span class=\"line\">//oTxt.value = 'asdd';</span><br><span class=\"line\"></span><br><span class=\"line\">//2</span><br><span class=\"line\"></span><br><span class=\"line\">//oTxt['value'] = 'aswerr';</span><br><span class=\"line\"></span><br><span class=\"line\">//3</span><br><span class=\"line\"></span><br><span class=\"line\">oTxt.setAttribute(\"value\", \"jhgf\");</span><br><span class=\"line\"></span><br><span class=\"line\">alert(oTxt.getAttribute('id'));</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;input type=\"text\" id=\"txt1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p>##DOM元素灵活查找</p>\n<p>###className</p>\n<ul>\n<li>通过class选取元素，一般分两步：</li>\n</ul>\n<ol>\n<li><p>把所有的子元素选出来</p>\n</li>\n<li><p>用className作为条件筛选出来处理</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//通过class来选元素</span><br><span class=\"line\"></span><br><span class=\"line\">window.onload = function ()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var aLi = oUl.getElementsByTagName('li');</span><br><span class=\"line\"></span><br><span class=\"line\">var i;</span><br><span class=\"line\"></span><br><span class=\"line\">for (var i = 0; i &lt; aLi.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">if (aLi[i].className == 'double') &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aLi[i].style.background = 'green';</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>进一步改进</strong>，写一个函数完成选class的功能<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//通过class来选元素的函数</span><br><span class=\"line\"></span><br><span class=\"line\">function getByClass(oParent, sClass)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var aEle =oParent.getElementsByTagName(&apos;*&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">var aResult = new Array();</span><br><span class=\"line\"></span><br><span class=\"line\">for (var i = 0; i &lt; aEle.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">if (aEle[i].className == sClass) &#123; //注意千万不要写成‘sClass’，因为传过时就已经带有‘’了</span><br><span class=\"line\"></span><br><span class=\"line\">aResult.push(aEle[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">return aResult;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>引用如下：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.onload = function ()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">var oUl = document.getElementById('ul1');</span><br><span class=\"line\"></span><br><span class=\"line\">var aDou = getByClass(oUl,'double');</span><br><span class=\"line\"></span><br><span class=\"line\">var i;</span><br><span class=\"line\"></span><br><span class=\"line\">for (i = 0; i &lt; aDou.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">aDou[i].style.background = 'yellow';</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;li class=\"double\"&gt;&lt;/li&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p>##创建、插入、和删除元素</p>\n<hr>\n<p>###创建DOM元素</p>\n<ul>\n<li>creatElement（标签名）  创建一个节点</li>\n<li>appendChild（节点）        追加一个节点<br>  -例子：为ul插入li</li>\n</ul>\n<p>###插入元素</p>\n<ul>\n<li>insertBefore（节点，原有节点）        在已有元素前插入<br>  -例子：倒序插入li</li>\n</ul>\n<p>###删除DOM元素</p>\n<ul>\n<li>removeChild（节点）        删除一个元素<br>  -例子删除li</li>\n</ul>\n<p>###练习代码：<br>①创建插入li<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\toUl = document.getElementById('ul1');</span><br><span class=\"line\">\t\toBtn = document.getElementById('btn1');</span><br><span class=\"line\">\t\toTxt = document.getElementById('txt1');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\toBtn.onclick = function()&#123;</span><br><span class=\"line\">\t\t\tvar oLi = document.createElement('li');</span><br><span class=\"line\">\t\t\tvar aLi = oUl.getElementsByTagName('li');</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\toLi.innerHTML = oTxt.value;</span><br><span class=\"line\">\t\t\tif (aLi.length == 0) &#123;</span><br><span class=\"line\">\t\t\t\toUl.appendChild(oLi);</span><br><span class=\"line\">\t\t\t&#125;else&#123;</span><br><span class=\"line\">\t\t\t\toUl.insertBefore(oLi, aLi[0]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;label for=\"txt1\"&gt;&lt;/label&gt;&lt;input type=\"text\" id=\"txt1\"&gt;</span><br><span class=\"line\">\t&lt;button id=\"btn1\"&gt;插入&lt;/button&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;ul id=\"ul1\"&gt;&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>：appendchild(创建元素)，创建子节点；insertBefore（插入的对象，在哪里之前插入）</p>\n<p>②删除元素<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\twindow.onload = function()&#123;</span><br><span class=\"line\">\t\tvar oUl = document.getElementById('ul1');</span><br><span class=\"line\">\t\tvar aA = document.getElementsByTagName('a');</span><br><span class=\"line\">\t\tvar i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfor (i = 0; i &lt; aA.length; i++) &#123;</span><br><span class=\"line\">\t\t\taA[i].onclick = function ()&#123;</span><br><span class=\"line\">\t\t\t\toUl.removeChild(this.parentNode);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;ul id=\"ul1\"&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li1&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li2&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li3&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li4&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t\t&lt;li&gt;li5&lt;a href=\"javascript:;\"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">\t&lt;/ul&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>：a标签里href属性值为JavaScript：； 作用为取消默认行为，避免跳转刷新，相当一个js入口，不写的话js代码没有效果。</p>\n<blockquote>\n<p><strong>小结</strong><br> 以上是JavaScript中DOM（document object model）的一些基础，覆盖面不是很广，想了解更多的朋友可以参考<a href=\"http://www.w3school.com.cn/htmldom/index.asp\">wschoolDOM参考手册</a>或者阅读<a href=\"http://www.javascriptcn.com/read-42.html\">JavaScript DOM编程艺术（第二版）</a>一书</p>\n<p><span style=\"font-size:12px\">本文标题: <a href=\"/2016/04/23/js系列之DOM基础/\">  { {title} }  </a><br>文章作者: <a href=\"http://itxiehui.github.io/\">劳土铸</a><br>许可协议: <img alt=\"知识共享许可协议\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png\" /><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">?署名-非商用-相同方式共享 4.0</a></span></p>\n</blockquote>"},{"title":"使用javascript实现常见的排序算法","date":"2018-08-08T13:10:08.763Z","_content":"\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&fm=27&gp=0.jpg)\n\n# 前言\n算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。\n\n<!--more-->\n\n# 正文\n## 评述算法优劣的术语\n**稳定：** 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  **不稳定：** 就是在前者的基础上，a和b的位置交换了\n\n**内排序：** 所有的操作都在内存中完成； **外排序：** 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现\n\n**时间复杂度：** 一个算法运行完所需要时间的大小；**空间复杂度：** 一个算法运行需要的内存大小。\n\n## 排序算法\n**排序算法的对比**\n\n![image](https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n**图中名词解析:**  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存\n\n对了算法术语有了初步的了解后，我们来看看排序算法的实现\n\n### 1.冒泡算法\n**思路:**  \n(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素  \n(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样\n\n**javascript代码实现**\n```javascript\n// 构造排序算法类骨架\nfunction ArraySort() {\n    this.bubbleSort = function() {}\n    this.selectSort = function() {}\n    this.insertSort = function() {}\n    this.mergeSort = function() {}\n    this.quickSort = function() {}\n    this.heapSort = function() {}\n    \n    // 交换\n    function swap(array, i, j) {\n        [array[i], array[j]] = [array[j], array[i]]\n    }\n}\n\n// 实现\nthis.bubbleSort = function(array) {\n    let length = array.length\n\n    for(let i = 0; i < length; i++) {\n        for(let j = 0; j < length-1-i; j++) {\n            if(array[j] > array[j+1]) {\n                swap(array, j, j+1)\n            }\n        }\n    }\n}\n```\n\n### 2.选择排序\n**思路:**  \n(1)在一层遍历的时候，选择首元素认为是最小值\n(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素\n(3)二层遍历结束前，将这两个元素交换\n(4)重复123过程\n\n**javascript代码实现**\n```javascript\nthis.selectSort = function(array) {\n    let length = array.length,minIndex\n\n    for(let i = 0; i < length-1; i++) {\n        minIndex = i\n        for(let j = i+1; j < length; j++) {\n            if(array[minIndex] > array[j]) {\n                minIndex = j\n            }\n    }\n    if(minIndex != i) swap(array, i, minIndex)\n}\n```\n\n### 3.插入排序\n**思路：**  \n(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历\n(2)抽出元素，前一个元素与其对比，大的就往后插\n(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.insertSort = function(array) {\n    let length = array.length, temp, j\n\n    for(let i = 1; i < length; i++) {\n        j = i\n        temp = array[i]\n\n        while(j>0 && array[j-1] > temp) {\n            array[j] = array[j-1]\n            j--\n        }\n\n        array[j] = temp\n    }\n}\n```\n\n### 4.归并排序\n> 前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).\n\n**思路：**  \n(1)将数组对折分半  \n(2)递归对折到最小单元，比较两个数的大小，交换\n\n**javascript代码实现**\n```javascript\nthis.mergeSort = function(array) {\n    mergeRec(array)\n    \n    function mergeRec(array) {\n        if (array.length === 1) return array\n\n        let left, right, imid\n        imid = Math.floor(array.length/2)\n        left = array.slice(0, imid)\n        right = array.slice(imid)\n    \n        return merge(mergeRec(left), mergeRec(right))\n    }\n    \n    function merge(left, right) {\n        let result = [], il = 0, ir = 0\n        while (il < left.length && ir < right.length) {\n            if (left[il] < right[ir]) {\n                result.push(left[il++])\n            } else {\n                result.push(right[ir++])\n            }\n        }\n    \n        while (il < left.length) {\n            result.push(left[il++])\n        }\n    \n        while (ir < right.length) {\n            result.push(right[ir++])\n        }\n        \n        return result\n    }\n}\n```\n\n### 5.快速排序\n> 快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)\n\n**思路：**  \n(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标\n(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间\n(3)递归12过程\n\n**javascript代码实现**\n```javascript\nthis.quickSort = function() {\n    quick(array, 0, array.length-1)\n    \n    function quick(array, left, right) {\n        if (array.length < 2) return\n\n        let index = partition(array, left, right)\n    \n        if (left < index - 1) {\n            quick(array, left, index - 1)\n        } \n        if (index < right){\n            quick(array, index, right)\n        }\n    }\n    \n    function partition(array, left, right) {\n        let pivot = array[Math.floor((left + right) / 2)]\n    \n        while (array[left] < pivot) {\n            left++\n        }\n    \n        while (array[right] > pivot) {\n            right--\n        }\n    \n        if (left <= right) {\n            swap(array, left, right)\n        }\n    \n        return ++left\n    }\n}\n```\n\n### 6.堆排序\n> 堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。\n\n**思路：**  \n(1)构造一个满足array[parent(i)] >= array[i]的二叉树\n(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。\n(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.heapSort = function() {\n    let heapsize = array.length\n    if (heapsize < 2) return\n\n    // 构造堆，父节点总是大于子节点\n    for(let i = Math.floor(heapsize / 2); i >= 0; i--) {\n        heapify(array, heapsize, i)\n    }\n\n    while (heapsize > 0) {\n        heapsize--\n        swap(array, 0, heapsize)\n        heapify(array, heapsize, 0)\n    }\n    \n    function heapify(array, heapsize, i) {\n        let left, right, parenti\n        left = i*2+1\n        right = i*2+2\n        largest = i\n    \n        if (left < heapsize && array[left] > array[largest]) {\n            largest = left\n        }\n        if (right < heapsize && array[right] > array[largest]) {\n            largest = right\n        }\n        \n        if (largest !== i) {\n            swap(array, largest, i)\n            heapify(array, heapsize, largest)\n        } \n    }\n}\n```\n\n看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。\n\n写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。\n\n## Array.prototype.sort的实现\n在MDN上sort的定义  \n**语法**\n```javascript\narr.sort([compareFunction])\n```\n**参数**  \ncompareFunction 可选  \n用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。\n\n**返回值**\n排序后的数组。请注意，数组已原地排序，并且不进行复制。\n\n\n**javascript代码实现**\n```javascript\nthis.arraySortFn(array, cFn) {\n    let _cFn\n    if (cFn === undefined) {\n        _cFn = _compareStringUnicode\n    }else if (typeof cFn === 'function') {\n        _cFn = cFn\n    }else {\n        throw new Error('compareFn must be a function')\n    }\n\n    _selectSort(array, _cFn)\n    \n    // 改写选择排序，传入判断条件\n    function _selectSort(array, cFn) {\n        let l = array.length, selectIndex\n        for (let i = 0; i < l - 1; i++) {\n            // 假设的最值下标\n            selectIndex = i\n            for (let j = i + 1; j < l; j++) {\n                if (cFn(array[selectIndex], array[j]) > 0) selectIndex = j\n            }\n            if (selectIndex !== i) swap(array, i, selectIndex)\n        }\n    }\n    \n    // 默认比较字符串的Unicode编码\n    function _compareStringUnicode(a, b) {\n        if(\n            (typeof a !== 'string' && typeof a !== 'number' )||\n            (typeof b !== 'string' && typeof b !== 'number')\n        ) {\n            throw new Error(`${a} / ${b} must be number or string`)\n        }\n\n        a = String(a)\n        b = String(b)\n        let l = a.length > b.length ? b.length : a.length\n\n        for(let i=0; i<l; i++) {\n            if(a.charCodeAt(i) === b.charCodeAt(i)) continue\n\n            return a.charCodeAt(i) > b.charCodeAt(i)\n        }\n\n        return a.length > b.length ? true : false\n    }\n}\n```\n\n参考资料：  \n1.[十大经典排序算法总结（JavaScript描述）](https://juejin.im/post/57dcd394a22b9d00610c5ec8)  \n2.《学习javascript数据结构与算法》\n","source":"_posts/使用javascript实现常见的排序算法.md","raw":"---\ntitle: 使用javascript实现常见的排序算法\ndate: \ntags: [js, 算法]\ncategories: [js]\n---\n\n![我是图片](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&fm=27&gp=0.jpg)\n\n# 前言\n算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。\n\n<!--more-->\n\n# 正文\n## 评述算法优劣的术语\n**稳定：** 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  **不稳定：** 就是在前者的基础上，a和b的位置交换了\n\n**内排序：** 所有的操作都在内存中完成； **外排序：** 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现\n\n**时间复杂度：** 一个算法运行完所需要时间的大小；**空间复杂度：** 一个算法运行需要的内存大小。\n\n## 排序算法\n**排序算法的对比**\n\n![image](https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n**图中名词解析:**  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存\n\n对了算法术语有了初步的了解后，我们来看看排序算法的实现\n\n### 1.冒泡算法\n**思路:**  \n(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素  \n(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样\n\n**javascript代码实现**\n```javascript\n// 构造排序算法类骨架\nfunction ArraySort() {\n    this.bubbleSort = function() {}\n    this.selectSort = function() {}\n    this.insertSort = function() {}\n    this.mergeSort = function() {}\n    this.quickSort = function() {}\n    this.heapSort = function() {}\n    \n    // 交换\n    function swap(array, i, j) {\n        [array[i], array[j]] = [array[j], array[i]]\n    }\n}\n\n// 实现\nthis.bubbleSort = function(array) {\n    let length = array.length\n\n    for(let i = 0; i < length; i++) {\n        for(let j = 0; j < length-1-i; j++) {\n            if(array[j] > array[j+1]) {\n                swap(array, j, j+1)\n            }\n        }\n    }\n}\n```\n\n### 2.选择排序\n**思路:**  \n(1)在一层遍历的时候，选择首元素认为是最小值\n(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素\n(3)二层遍历结束前，将这两个元素交换\n(4)重复123过程\n\n**javascript代码实现**\n```javascript\nthis.selectSort = function(array) {\n    let length = array.length,minIndex\n\n    for(let i = 0; i < length-1; i++) {\n        minIndex = i\n        for(let j = i+1; j < length; j++) {\n            if(array[minIndex] > array[j]) {\n                minIndex = j\n            }\n    }\n    if(minIndex != i) swap(array, i, minIndex)\n}\n```\n\n### 3.插入排序\n**思路：**  \n(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历\n(2)抽出元素，前一个元素与其对比，大的就往后插\n(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.insertSort = function(array) {\n    let length = array.length, temp, j\n\n    for(let i = 1; i < length; i++) {\n        j = i\n        temp = array[i]\n\n        while(j>0 && array[j-1] > temp) {\n            array[j] = array[j-1]\n            j--\n        }\n\n        array[j] = temp\n    }\n}\n```\n\n### 4.归并排序\n> 前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).\n\n**思路：**  \n(1)将数组对折分半  \n(2)递归对折到最小单元，比较两个数的大小，交换\n\n**javascript代码实现**\n```javascript\nthis.mergeSort = function(array) {\n    mergeRec(array)\n    \n    function mergeRec(array) {\n        if (array.length === 1) return array\n\n        let left, right, imid\n        imid = Math.floor(array.length/2)\n        left = array.slice(0, imid)\n        right = array.slice(imid)\n    \n        return merge(mergeRec(left), mergeRec(right))\n    }\n    \n    function merge(left, right) {\n        let result = [], il = 0, ir = 0\n        while (il < left.length && ir < right.length) {\n            if (left[il] < right[ir]) {\n                result.push(left[il++])\n            } else {\n                result.push(right[ir++])\n            }\n        }\n    \n        while (il < left.length) {\n            result.push(left[il++])\n        }\n    \n        while (ir < right.length) {\n            result.push(right[ir++])\n        }\n        \n        return result\n    }\n}\n```\n\n### 5.快速排序\n> 快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)\n\n**思路：**  \n(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标\n(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间\n(3)递归12过程\n\n**javascript代码实现**\n```javascript\nthis.quickSort = function() {\n    quick(array, 0, array.length-1)\n    \n    function quick(array, left, right) {\n        if (array.length < 2) return\n\n        let index = partition(array, left, right)\n    \n        if (left < index - 1) {\n            quick(array, left, index - 1)\n        } \n        if (index < right){\n            quick(array, index, right)\n        }\n    }\n    \n    function partition(array, left, right) {\n        let pivot = array[Math.floor((left + right) / 2)]\n    \n        while (array[left] < pivot) {\n            left++\n        }\n    \n        while (array[right] > pivot) {\n            right--\n        }\n    \n        if (left <= right) {\n            swap(array, left, right)\n        }\n    \n        return ++left\n    }\n}\n```\n\n### 6.堆排序\n> 堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。\n\n**思路：**  \n(1)构造一个满足array[parent(i)] >= array[i]的二叉树\n(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。\n(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。\n(4)重复23\n\n**javascript代码实现**\n```javascript\nthis.heapSort = function() {\n    let heapsize = array.length\n    if (heapsize < 2) return\n\n    // 构造堆，父节点总是大于子节点\n    for(let i = Math.floor(heapsize / 2); i >= 0; i--) {\n        heapify(array, heapsize, i)\n    }\n\n    while (heapsize > 0) {\n        heapsize--\n        swap(array, 0, heapsize)\n        heapify(array, heapsize, 0)\n    }\n    \n    function heapify(array, heapsize, i) {\n        let left, right, parenti\n        left = i*2+1\n        right = i*2+2\n        largest = i\n    \n        if (left < heapsize && array[left] > array[largest]) {\n            largest = left\n        }\n        if (right < heapsize && array[right] > array[largest]) {\n            largest = right\n        }\n        \n        if (largest !== i) {\n            swap(array, largest, i)\n            heapify(array, heapsize, largest)\n        } \n    }\n}\n```\n\n看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。\n\n写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。\n\n## Array.prototype.sort的实现\n在MDN上sort的定义  \n**语法**\n```javascript\narr.sort([compareFunction])\n```\n**参数**  \ncompareFunction 可选  \n用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。\n\n**返回值**\n排序后的数组。请注意，数组已原地排序，并且不进行复制。\n\n\n**javascript代码实现**\n```javascript\nthis.arraySortFn(array, cFn) {\n    let _cFn\n    if (cFn === undefined) {\n        _cFn = _compareStringUnicode\n    }else if (typeof cFn === 'function') {\n        _cFn = cFn\n    }else {\n        throw new Error('compareFn must be a function')\n    }\n\n    _selectSort(array, _cFn)\n    \n    // 改写选择排序，传入判断条件\n    function _selectSort(array, cFn) {\n        let l = array.length, selectIndex\n        for (let i = 0; i < l - 1; i++) {\n            // 假设的最值下标\n            selectIndex = i\n            for (let j = i + 1; j < l; j++) {\n                if (cFn(array[selectIndex], array[j]) > 0) selectIndex = j\n            }\n            if (selectIndex !== i) swap(array, i, selectIndex)\n        }\n    }\n    \n    // 默认比较字符串的Unicode编码\n    function _compareStringUnicode(a, b) {\n        if(\n            (typeof a !== 'string' && typeof a !== 'number' )||\n            (typeof b !== 'string' && typeof b !== 'number')\n        ) {\n            throw new Error(`${a} / ${b} must be number or string`)\n        }\n\n        a = String(a)\n        b = String(b)\n        let l = a.length > b.length ? b.length : a.length\n\n        for(let i=0; i<l; i++) {\n            if(a.charCodeAt(i) === b.charCodeAt(i)) continue\n\n            return a.charCodeAt(i) > b.charCodeAt(i)\n        }\n\n        return a.length > b.length ? true : false\n    }\n}\n```\n\n参考资料：  \n1.[十大经典排序算法总结（JavaScript描述）](https://juejin.im/post/57dcd394a22b9d00610c5ec8)  \n2.《学习javascript数据结构与算法》\n","slug":"使用javascript实现常见的排序算法","published":1,"updated":"2018-08-19T06:37:40.793Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fqs003hw8qzezgis7vl","content":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。</p>\n<a id=\"more\"></a>\n<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"评述算法优劣的术语\"><a href=\"#评述算法优劣的术语\" class=\"headerlink\" title=\"评述算法优劣的术语\"></a>评述算法优劣的术语</h2><p><strong>稳定：</strong> 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  <strong>不稳定：</strong> 就是在前者的基础上，a和b的位置交换了</p>\n<p><strong>内排序：</strong> 所有的操作都在内存中完成； <strong>外排序：</strong> 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现</p>\n<p><strong>时间复杂度：</strong> 一个算法运行完所需要时间的大小；<strong>空间复杂度：</strong> 一个算法运行需要的内存大小。</p>\n<h2 id=\"排序算法\"><a href=\"#排序算法\" class=\"headerlink\" title=\"排序算法\"></a>排序算法</h2><p><strong>排序算法的对比</strong></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p><strong>图中名词解析:</strong>  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存</p>\n<p>对了算法术语有了初步的了解后，我们来看看排序算法的实现</p>\n<h3 id=\"1-冒泡算法\"><a href=\"#1-冒泡算法\" class=\"headerlink\" title=\"1.冒泡算法\"></a>1.冒泡算法</h3><p><strong>思路:</strong><br>(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素<br>(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造排序算法类骨架</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ArraySort</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bubbleSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.selectSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.insertSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.mergeSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.quickSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.heapSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 交换</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">swap</span>(<span class=\"params\">array, i, j</span>) </span>&#123;</span><br><span class=\"line\">        [array[i], array[j]] = [array[j], array[i]]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.bubbleSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; length<span class=\"number\">-1</span>-i; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[j] &gt; array[j+<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                swap(array, j, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-选择排序\"><a href=\"#2-选择排序\" class=\"headerlink\" title=\"2.选择排序\"></a>2.选择排序</h3><p><strong>思路:</strong><br>(1)在一层遍历的时候，选择首元素认为是最小值<br>(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素<br>(3)二层遍历结束前，将这两个元素交换<br>(4)重复123过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.selectSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.length,minIndex</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">        minIndex = i</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i+<span class=\"number\">1</span>; j &lt; length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[minIndex] &gt; array[j]) &#123;</span><br><span class=\"line\">                minIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minIndex != i) swap(array, i, minIndex)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-插入排序\"><a href=\"#3-插入排序\" class=\"headerlink\" title=\"3.插入排序\"></a>3.插入排序</h3><p><strong>思路：</strong><br>(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历<br>(2)抽出元素，前一个元素与其对比，大的就往后插<br>(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.insertSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.length, temp, j</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        j = i</span><br><span class=\"line\">        temp = array[i]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&gt;<span class=\"number\">0</span> &amp;&amp; array[j<span class=\"number\">-1</span>] &gt; temp) &#123;</span><br><span class=\"line\">            array[j] = array[j<span class=\"number\">-1</span>]</span><br><span class=\"line\">            j--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        array[j] = temp</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-归并排序\"><a href=\"#4-归并排序\" class=\"headerlink\" title=\"4.归并排序\"></a>4.归并排序</h3><blockquote>\n<p>前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)将数组对折分半<br>(2)递归对折到最小单元，比较两个数的大小，交换</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.mergeSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    mergeRec(array)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeRec</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.length === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> array</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, imid</span><br><span class=\"line\">        imid = <span class=\"built_in\">Math</span>.floor(array.length/<span class=\"number\">2</span>)</span><br><span class=\"line\">        left = array.slice(<span class=\"number\">0</span>, imid)</span><br><span class=\"line\">        right = array.slice(imid)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> merge(mergeRec(left), mergeRec(right))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">merge</span>(<span class=\"params\">left, right</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = [], il = <span class=\"number\">0</span>, ir = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.length &amp;&amp; ir &lt; right.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left[il] &lt; right[ir]) &#123;</span><br><span class=\"line\">                result.push(left[il++])</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                result.push(right[ir++])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.length) &#123;</span><br><span class=\"line\">            result.push(left[il++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (ir &lt; right.length) &#123;</span><br><span class=\"line\">            result.push(right[ir++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-快速排序\"><a href=\"#5-快速排序\" class=\"headerlink\" title=\"5.快速排序\"></a>5.快速排序</h3><blockquote>\n<p>快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标<br>(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间<br>(3)递归12过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.quickSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    quick(array, <span class=\"number\">0</span>, array.length<span class=\"number\">-1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quick</span>(<span class=\"params\">array, left, right</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.length &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = partition(array, left, right)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; index - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            quick(array, left, index - <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &lt; right)&#123;</span><br><span class=\"line\">            quick(array, index, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">partition</span>(<span class=\"params\">array, left, right</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pivot = array[<span class=\"built_in\">Math</span>.floor((left + right) / <span class=\"number\">2</span>)]</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[left] &lt; pivot) &#123;</span><br><span class=\"line\">            left++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[right] &gt; pivot) &#123;</span><br><span class=\"line\">            right--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt;= right) &#123;</span><br><span class=\"line\">            swap(array, left, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++left</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-堆排序\"><a href=\"#6-堆排序\" class=\"headerlink\" title=\"6.堆排序\"></a>6.堆排序</h3><blockquote>\n<p>堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)构造一个满足array[parent(i)] &gt;= array[i]的二叉树<br>(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。<br>(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.heapSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> heapsize = array.length</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (heapsize &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造堆，父节点总是大于子节点</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"built_in\">Math</span>.floor(heapsize / <span class=\"number\">2</span>); i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        heapify(array, heapsize, i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (heapsize &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        heapsize--</span><br><span class=\"line\">        swap(array, <span class=\"number\">0</span>, heapsize)</span><br><span class=\"line\">        heapify(array, heapsize, <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heapify</span>(<span class=\"params\">array, heapsize, i</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, parenti</span><br><span class=\"line\">        left = i*<span class=\"number\">2</span>+<span class=\"number\">1</span></span><br><span class=\"line\">        right = i*<span class=\"number\">2</span>+<span class=\"number\">2</span></span><br><span class=\"line\">        largest = i</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; heapsize &amp;&amp; array[left] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = left</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (right &lt; heapsize &amp;&amp; array[right] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = right</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (largest !== i) &#123;</span><br><span class=\"line\">            swap(array, largest, i)</span><br><span class=\"line\">            heapify(array, heapsize, largest)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。</p>\n<p>写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。</p>\n<h2 id=\"Array-prototype-sort的实现\"><a href=\"#Array-prototype-sort的实现\" class=\"headerlink\" title=\"Array.prototype.sort的实现\"></a>Array.prototype.sort的实现</h2><p>在MDN上sort的定义<br><strong>语法</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.sort([compareFunction])</span><br></pre></td></tr></table></figure></p>\n<p><strong>参数</strong><br>compareFunction 可选<br>用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。</p>\n<p><strong>返回值</strong><br>排序后的数组。请注意，数组已原地排序，并且不进行复制。</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.arraySortFn(array, cFn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _cFn</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cFn === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">        _cFn = _compareStringUnicode</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> cFn === <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        _cFn = cFn</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'compareFn must be a function'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _selectSort(array, _cFn)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 改写选择排序，传入判断条件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_selectSort</span>(<span class=\"params\">array, cFn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = array.length, selectIndex</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; l - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 假设的最值下标</span></span><br><span class=\"line\">            selectIndex = i</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; l; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cFn(array[selectIndex], array[j]) &gt; <span class=\"number\">0</span>) selectIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (selectIndex !== i) swap(array, i, selectIndex)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 默认比较字符串的Unicode编码</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_compareStringUnicode</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> a !== <span class=\"string\">'string'</span> &amp;&amp; <span class=\"keyword\">typeof</span> a !== <span class=\"string\">'number'</span> )||</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> b !== <span class=\"string\">'string'</span> &amp;&amp; <span class=\"keyword\">typeof</span> b !== <span class=\"string\">'number'</span>)</span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;a&#125;</span> / <span class=\"subst\">$&#123;b&#125;</span> must be number or string`</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        a = <span class=\"built_in\">String</span>(a)</span><br><span class=\"line\">        b = <span class=\"built_in\">String</span>(b)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = a.length &gt; b.length ? b.length : a.length</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;l; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.charCodeAt(i) === b.charCodeAt(i)) <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> a.charCodeAt(i) &gt; b.charCodeAt(i)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.length &gt; b.length ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>参考资料：<br>1.<a href=\"https://juejin.im/post/57dcd394a22b9d00610c5ec8\" target=\"_blank\" rel=\"external\">十大经典排序算法总结（JavaScript描述）</a><br>2.《学习javascript数据结构与算法》</p>\n","excerpt":"<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441434788,2689487159&amp;fm=27&amp;gp=0.jpg\" alt=\"我是图片\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>算法，一门老生常谈的学科，最近在复习算法的知识，随作为切图的我，在平常工作中很难用的上这些知识，但是加强自身功底还是很有必要的。写下笔记记录成长的点滴，往后回头也还可以复习复习。在学习之余也乐于分享，好在在进击的路上，与诸君共勉。</p>","more":"<h1 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h1><h2 id=\"评述算法优劣的术语\"><a href=\"#评述算法优劣的术语\" class=\"headerlink\" title=\"评述算法优劣的术语\"></a>评述算法优劣的术语</h2><p><strong>稳定：</strong> 如果在序列里面本来a位于b前面，当a === b时，不交换a和b的位置；  <strong>不稳定：</strong> 就是在前者的基础上，a和b的位置交换了</p>\n<p><strong>内排序：</strong> 所有的操作都在内存中完成； <strong>外排序：</strong> 由于数据量太大，把数据存放在磁盘上，而排序需要通过磁盘和内存的数据传输才能实现</p>\n<p><strong>时间复杂度：</strong> 一个算法运行完所需要时间的大小；<strong>空间复杂度：</strong> 一个算法运行需要的内存大小。</p>\n<h2 id=\"排序算法\"><a href=\"#排序算法\" class=\"headerlink\" title=\"排序算法\"></a>排序算法</h2><p><strong>排序算法的对比</strong></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2016/11/29/4abde1748817d7f35f2bf8b6a058aa40?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" alt=\"image\"></p>\n<p><strong>图中名词解析:</strong>  n: 数据规模; k:“桶”的个数;In-place: 占用常数内存，不占用额外内存; Out-place: 占用额外内存</p>\n<p>对了算法术语有了初步的了解后，我们来看看排序算法的实现</p>\n<h3 id=\"1-冒泡算法\"><a href=\"#1-冒泡算法\" class=\"headerlink\" title=\"1.冒泡算法\"></a>1.冒泡算法</h3><p><strong>思路:</strong><br>(1)从前向后遍历元素，对比相邻的两个元素，根据条件交换两个元素<br>(2)重复的对比相邻的两个数，把小的值移到前面，此过程就像冒泡一样</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造排序算法类骨架</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ArraySort</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bubbleSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.selectSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.insertSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.mergeSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.quickSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.heapSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 交换</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">swap</span>(<span class=\"params\">array, i, j</span>) </span>&#123;</span><br><span class=\"line\">        [array[i], array[j]] = [array[j], array[i]]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实现</span></span><br><span class=\"line\"><span class=\"keyword\">this</span>.bubbleSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; length<span class=\"number\">-1</span>-i; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[j] &gt; array[j+<span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                swap(array, j, j+<span class=\"number\">1</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-选择排序\"><a href=\"#2-选择排序\" class=\"headerlink\" title=\"2.选择排序\"></a>2.选择排序</h3><p><strong>思路:</strong><br>(1)在一层遍历的时候，选择首元素认为是最小值<br>(2)在二层遍历中，将每个元素跟这个伪最小值对比，选择出比其更小的元素<br>(3)二层遍历结束前，将这两个元素交换<br>(4)重复123过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.selectSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.length,minIndex</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length<span class=\"number\">-1</span>; i++) &#123;</span><br><span class=\"line\">        minIndex = i</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = i+<span class=\"number\">1</span>; j &lt; length; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[minIndex] &gt; array[j]) &#123;</span><br><span class=\"line\">                minIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minIndex != i) swap(array, i, minIndex)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-插入排序\"><a href=\"#3-插入排序\" class=\"headerlink\" title=\"3.插入排序\"></a>3.插入排序</h3><p><strong>思路：</strong><br>(1)类似拿到扑克牌后，将小牌插到前面那样。从下标1开始（递增），从后往前遍历<br>(2)抽出元素，前一个元素与其对比，大的就往后插<br>(3)元素往前移动，重复2，当元素不能往前移动了，就把抽出的元素插到空的的位置上<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.insertSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> length = array.length, temp, j</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        j = i</span><br><span class=\"line\">        temp = array[i]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j&gt;<span class=\"number\">0</span> &amp;&amp; array[j<span class=\"number\">-1</span>] &gt; temp) &#123;</span><br><span class=\"line\">            array[j] = array[j<span class=\"number\">-1</span>]</span><br><span class=\"line\">            j--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        array[j] = temp</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-归并排序\"><a href=\"#4-归并排序\" class=\"headerlink\" title=\"4.归并排序\"></a>4.归并排序</h3><blockquote>\n<p>前面三个排序的时间复杂度都是O(n^2)，归并排序采用了分治的思想，将复杂的问题分割成小单元，小单元在问题解决后再合并成解，利用了递归，算法复杂度为O(nlogn).</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)将数组对折分半<br>(2)递归对折到最小单元，比较两个数的大小，交换</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.mergeSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">    mergeRec(array)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeRec</span>(<span class=\"params\">array</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.length === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> array</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, imid</span><br><span class=\"line\">        imid = <span class=\"built_in\">Math</span>.floor(array.length/<span class=\"number\">2</span>)</span><br><span class=\"line\">        left = array.slice(<span class=\"number\">0</span>, imid)</span><br><span class=\"line\">        right = array.slice(imid)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> merge(mergeRec(left), mergeRec(right))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">merge</span>(<span class=\"params\">left, right</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = [], il = <span class=\"number\">0</span>, ir = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.length &amp;&amp; ir &lt; right.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left[il] &lt; right[ir]) &#123;</span><br><span class=\"line\">                result.push(left[il++])</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                result.push(right[ir++])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (il &lt; left.length) &#123;</span><br><span class=\"line\">            result.push(left[il++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (ir &lt; right.length) &#123;</span><br><span class=\"line\">            result.push(right[ir++])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"5-快速排序\"><a href=\"#5-快速排序\" class=\"headerlink\" title=\"5.快速排序\"></a>5.快速排序</h3><blockquote>\n<p>快排是使用最广泛的排序算法，跟归并一样也使用了分治思想，时间复杂度也为O(nlogn)</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)取数组中间的值作为参考值，从首尾向中间遍历，从中间值左边找到比其大的数，再从右边找到比其小的数，交换两者，直到左边游标大于右边的游标<br>(2)把下标0到左边游标-1作为一个区间，把左边游标到length-1作为一个区间<br>(3)递归12过程</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.quickSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    quick(array, <span class=\"number\">0</span>, array.length<span class=\"number\">-1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quick</span>(<span class=\"params\">array, left, right</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array.length &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = partition(array, left, right)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; index - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            quick(array, left, index - <span class=\"number\">1</span>)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &lt; right)&#123;</span><br><span class=\"line\">            quick(array, index, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">partition</span>(<span class=\"params\">array, left, right</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pivot = array[<span class=\"built_in\">Math</span>.floor((left + right) / <span class=\"number\">2</span>)]</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[left] &lt; pivot) &#123;</span><br><span class=\"line\">            left++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (array[right] &gt; pivot) &#123;</span><br><span class=\"line\">            right--</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt;= right) &#123;</span><br><span class=\"line\">            swap(array, left, right)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++left</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-堆排序\"><a href=\"#6-堆排序\" class=\"headerlink\" title=\"6.堆排序\"></a>6.堆排序</h3><blockquote>\n<p>堆排序把数组当作二叉树来管理，也属于属于高效的排序算法之一。堆结构符合一下原则：根节点为堆中最大的值，父节点总是大于子节点值。</p>\n</blockquote>\n<p><strong>思路：</strong><br>(1)构造一个满足array[parent(i)] &gt;= array[i]的二叉树<br>(2)交换堆中的第一个元素和最后一个元素，此时最大值已经排好位置，缩小堆大小。<br>(3)此时堆可能不符合原则了，需要转化堆，也就是将新堆中的最大值放置根节点。<br>(4)重复23</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.heapSort = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> heapsize = array.length</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (heapsize &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造堆，父节点总是大于子节点</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"built_in\">Math</span>.floor(heapsize / <span class=\"number\">2</span>); i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        heapify(array, heapsize, i)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (heapsize &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        heapsize--</span><br><span class=\"line\">        swap(array, <span class=\"number\">0</span>, heapsize)</span><br><span class=\"line\">        heapify(array, heapsize, <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">heapify</span>(<span class=\"params\">array, heapsize, i</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> left, right, parenti</span><br><span class=\"line\">        left = i*<span class=\"number\">2</span>+<span class=\"number\">1</span></span><br><span class=\"line\">        right = i*<span class=\"number\">2</span>+<span class=\"number\">2</span></span><br><span class=\"line\">        largest = i</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left &lt; heapsize &amp;&amp; array[left] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = left</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (right &lt; heapsize &amp;&amp; array[right] &gt; array[largest]) &#123;</span><br><span class=\"line\">            largest = right</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (largest !== i) &#123;</span><br><span class=\"line\">            swap(array, largest, i)</span><br><span class=\"line\">            heapify(array, heapsize, largest)</span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>看到这你可能会想，“兄dei Array原型上不是有sort()吗，何必自己写排序算法呀”。的确，在开发过程中我们很少情况下写排序算法，大部分情况前端拿到的数据是后端已经排后序的了，有时连sort也不用掉用，因为前端排序数据很花性能，我们还是花多点时间在用户体验上会比较划算。</p>\n<p>写这个常见的排序算法完全是自己加固技术功底的玩意，但是有趣的问题来了，sort的实现原理是啥呀？要不我们来实现一个。</p>\n<h2 id=\"Array-prototype-sort的实现\"><a href=\"#Array-prototype-sort的实现\" class=\"headerlink\" title=\"Array.prototype.sort的实现\"></a>Array.prototype.sort的实现</h2><p>在MDN上sort的定义<br><strong>语法</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.sort([compareFunction])</span><br></pre></td></tr></table></figure></p>\n<p><strong>参数</strong><br>compareFunction 可选<br>用来指定按某种顺序进行排列的函数。如果省略，元素按照转换为的字符串的各个字符的Unicode位点进行排序。</p>\n<p><strong>返回值</strong><br>排序后的数组。请注意，数组已原地排序，并且不进行复制。</p>\n<p><strong>javascript代码实现</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.arraySortFn(array, cFn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> _cFn</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cFn === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">        _cFn = _compareStringUnicode</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> cFn === <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        _cFn = cFn</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'compareFn must be a function'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _selectSort(array, _cFn)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 改写选择排序，传入判断条件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_selectSort</span>(<span class=\"params\">array, cFn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = array.length, selectIndex</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; l - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 假设的最值下标</span></span><br><span class=\"line\">            selectIndex = i</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = i + <span class=\"number\">1</span>; j &lt; l; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cFn(array[selectIndex], array[j]) &gt; <span class=\"number\">0</span>) selectIndex = j</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (selectIndex !== i) swap(array, i, selectIndex)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 默认比较字符串的Unicode编码</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_compareStringUnicode</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> a !== <span class=\"string\">'string'</span> &amp;&amp; <span class=\"keyword\">typeof</span> a !== <span class=\"string\">'number'</span> )||</span><br><span class=\"line\">            (<span class=\"keyword\">typeof</span> b !== <span class=\"string\">'string'</span> &amp;&amp; <span class=\"keyword\">typeof</span> b !== <span class=\"string\">'number'</span>)</span><br><span class=\"line\">        ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">`<span class=\"subst\">$&#123;a&#125;</span> / <span class=\"subst\">$&#123;b&#125;</span> must be number or string`</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        a = <span class=\"built_in\">String</span>(a)</span><br><span class=\"line\">        b = <span class=\"built_in\">String</span>(b)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = a.length &gt; b.length ? b.length : a.length</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;l; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.charCodeAt(i) === b.charCodeAt(i)) <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> a.charCodeAt(i) &gt; b.charCodeAt(i)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.length &gt; b.length ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>参考资料：<br>1.<a href=\"https://juejin.im/post/57dcd394a22b9d00610c5ec8\">十大经典排序算法总结（JavaScript描述）</a><br>2.《学习javascript数据结构与算法》</p>"},{"title":"基于Express4.0开发web","date":"2017-06-13T15:02:15.775Z","_content":"\n### 1.快速搭建\n在全局下安装express  \n```\nnpm install -g express  \n```\n执行  \n```\nexpress -v yourProject \t\n或者\ncd yourProject\nexpress\n```\n就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade\n\n\n### 2.express中间件\n```\nvar app = requrie('express')();\napp.use (function (req, res, next) {\n    ...\n    next()\n})  \n```\nnext()作用是交付控制权，前往下一个中间件\n可以利用这一点做验证功能\n\n### 3.MVC架构\n```\n/app\n    /controllers\n    /models\n    /schemas\n    /views\n/public\n    /libs\n    /css\n    /js\n/router\n    router.js\napp.js\npackage.json\n.bowerrc\nbower.json\ngruntfile.js\n.gitignore\n\n```\n以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。  \nbower模块用来安装项目依赖的前端框架。需要在全局安装bower\n```\nnpm install -g bower\n```\n安装bootstrap\n```\nbower init\nbower install bootstrap\n```\nbower init 生成bower.json\n然后安装bootstrap时，会根据.bowerrc文件\n```\n{\n    \"directory\": \"public/libs\"\n}\n```\n把依赖的框架安装在public/libs下\n\n### 4.项目管理工具grunt\ngruntfile.js\n```js\nmodule.exports = function(grunt) {\n\n    grunt.initConfig({\n        watch: {\n            jade: {\n                files: ['views/**'],\n                options: {\n                    livereload: true\n                }\n            },\n            js: {\n                files: ['public/js/**', 'app/**/*.js'],\n                //tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            uglify: {\n                files: ['public/**/*.js'],\n                tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            styles: {\n                files: ['public/**/*.less'],\n                tasks: ['less'],\n                options: {\n                    nospawn: true\n                }\n            }\n        },\n\n        nodemon: {\n            dev: {\n                script: 'bin/www',  //入口文件\n                options: {\n                    nodeArgs: ['--debug'], //开启开发模式\n                    args:　[],\n                    ignoredFiles: ['README.md', 'node_modules/**', 'public/libs/**', '.vscode'],\n                    watchedExtensions: ['js'],\n                    watchedFolders: ['./'], //监听定义的文件夹,根目录\n                    debug: true,\n                    delayTime: 1000,\n                    env: {\n                        PORT: 3000\n                    },\n                    cwd: __dirname\n                }\n            }\n        },\n\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc',\n                ignores: ['public/libs/**/*.js']\n            },\n            all: ['public/javascripts/*.js', 'test/**/*.js', 'app/**/*.js']\n        },\n\n        less: {\n            development: {\n                options: {\n                    compress: true,\n                    yuicompress: true,\n                    optimization: 2\n                },\n                files: {\n                    'public/build/index.css' : 'public/less/index.less'\n                }\n            }\n        },\n\n        uglify: {\n            development: {\n                files: {\n                'public/build/admin.min.js': 'public/javascripts/admin.js',\n                'public/build/detail.min.js': [\n                    'public/javascripts/detail.js'\n                ]\n                }\n            }\n        },\n\n        mochaTest: {\n            options: {\n                reporter: 'spec'\n            },\n            src: ['test/**/*.js']\n        },\n\n        concurrent: {\n            tasks: ['nodemon', 'watch', 'jshint', 'less', 'uglify'],\n            options: {\n                logConcurrentOutput: true\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-watch'); //监控定义好的静态文件变动\n    grunt.loadNpmTasks('grunt-nodemon'); //监控入口文件变动\n    grunt.loadNpmTasks('grunt-concurrent'); //优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch\n    grunt.loadNpmTasks('grunt-mocha-test');  //测试框架\n    grunt.loadNpmTasks('grunt-contrib-less');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n\n    grunt.option('force', true); //避免程序因语法错误而终止执行\n\n    grunt.registerTask('default', ['concurrent']);\n    grunt.registerTask('test', ['mochaTest']);\n}\n```\n前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。\n\n###  5.router模块\n这里有两种方法  \n第一种是将路由分类  \n```\napp.js\n//挂载路由表\napp.use('/', index);\napp.use('/admin', admin);\napp.use('/user', user)\n\nuser.js\nvar express = require('express');\nvar User = require('../models/user');\nvar router = express.Router();\n\n//用户注册\nrouter.post('/signup', function(req, res) {\n    ...\n}\nmodule.exports = router;\n```\n当url以/user开头时就会进入user.js文件。  \n第二种是路由全部写在一个文件  \n```\napp.js\nrequire('./config/routers')(app); //不能传入express.Router(),它只能作为中间件用,如上\n\nrouter.js\nvar Movie = require('../app/controllers/movie');\nvar Index = require('../app/controllers/index')\n\n\nmodule.exports = function(app) {\n\n    //Index\n    app.get('/', Index.index);\n\n    //Movie\n    app.get('/movie/:id', Movie.detail);\n    app.get('/admin/movie/list',User.signinRequired,User.adminRequired, Movie.list);\n    \n};\n\n```\n\n### 6.数据库模块mongose\n```js\napp.js\nvar mongoose = require('mongoose');\nvar dbURL = 'mongodb://localhost:27017/movieWeb';\n\n//连接数据库\nmongoose.Promise = global.Promise; //避免控制台输出Promise错误 \nmongoose.connect(dbURL) //数据库名为movieWeb\nmongoose.connection.on('connected', function () {    //绑定connected函数，连接成功时触发\n  console.log('Connection success!');\n});\n```\n模式schemas(表)\n```js\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\n\nvar MovieSchema = new mongoose.Schema({  //定义模式\n    doctor: String,\n    title: String,\n    language: String,\n    country: String,\n    summary: String,\n    flash: String,\n    poster: String,\n    year: String,\n    pv: {\n        type: Number,\n        default: 0\n    },\n    category: {\n        type: ObjectId,\n        ref: 'Category'\n    },\n    meta: {\n        createAt: {\n            type: Date,\n            default: Date.now()\n        },\n        updateAt: {\n            type: Date,\n            default: Date.now()\n        }\n    }\n})\n\n//每次存取数据之前，都调用save方法\nMovieSchema.pre('save', function(next){\n    if(this.isNew) {\n        this.meta.createAt = this.meta.updateAt = Date.now()\n    } else {\n        this.meta.updateAt = Date.now()  \n    }\n\n    next() //将流程走下去\n})\n\nMovieSchema.statics = {  //实例化以后就会具有以下方法，相当于构造函数的成员方法\n    fetch: function(cb) {\n        return this\n            .find({})\n            .sort('meta.updateAt')\n            .exec(cb)\n    },\n    fetchById: function(id, cb) {\n        return this\n            .findOne({_id: id})\n            .exec(cb)\n    }\n}\n\nmodule.exports = MovieSchema\n```\n模型models（模式跟模型对接）\n```js\nvar mongoose = require('mongoose')\nvar MovieSchema = require('../schemas/movie')\nvar Movie = mongoose.model('Movie', MovieSchema)  //模式和模型对接\n\nmodule.exports = Movie\n\n```\n值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误\n\n### 7.将session存放在mongodb里\nsession是会话支持，作为客户端的id，跟服务器交互\n```\n//使用mongodb来储存sesion信息\nvar cookieParser = require('cookie-parser');\nvar session = require(\"express-session\");\nvar MongoStore = require('connect-mongo')(session);\n\n//配置session\napp.use(cookieParser());\napp.use(session({\n  secret: 'imoocMovieWeb',\n  store: new MongoStore({\n    url: dbURL,\n    collection: 'sessions'\n  }),\n  resave: true,\n  saveUninitialized: true\n}))\n```\n其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件\nbodyParser是解析request请求的中间价\n```\n配置\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:true})); //extended为true则可以解析字符串和数组以外的数据\n```\n\n### 8.前后台传数据\n可以用res.render方法\n```js\ncontrollers/movie.js\n\n//获取后列表页\nexports.list = function(req, res, next) {\n  Movie.fetch(function(err, movies) {\n    if(err) {\n      console.log(err)\n    }\n\n    res.render('list', {\n      title: '后台列表页',\n      movies: movies\n    });\n  })\n};\n```\n还可以用res.locals，可以传递方法和变量\n```js\napp.js\n\n//前后台传递数据\napp.use(function(req, res, next) {\n  res.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n  \n  var _user = req.session.user;\n  res.locals.user = _user; //传递用户转态\n\n  next();\n})\n```\n\n### 8.各种用到的中间件\n* flash  \n```\nvar flash = require('connect-flash') //存储变量的中间件，相当全局变量\napp.use(flash())\n\n使用\nvar error = req.flash('error')\n```\n\n*  logger  \n```js\nvar logger = require('morgan'); //处理日志模块 \n\n//日志文件\nvar fs = require('fs');\nvar accessLogfile = fs.createWriteStream('access.log', {flags:'a'});\nvar errorLogfile = fs.createWriteStream('error.log', {flags:'a'});\n\napp.set('env', 'production');\napp.use(logger({stream: accessLogfile})); //访问日志\n\n//处理错误日志，处理错误的中间件一定要写在路由后面\nif ('production' == app.get('env')) {\n  app.use(function(err, req, res, next){\n    var meta = '[' + new Date() + '] ' + req.url + '\\n';\n    errorLogfile.write(meta + err.stack + '\\n');\n    next();\n  });\n}\n```\n\n* moment  \n```\napp.js\nvar moment = require('moment'); //处理时间格式\n在中间件里\nres.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n\njade模板文件\nmoment(item.meta.updateAt).format('MM/DD/YYYY') //item.meta.updateAt是后台传过来的时间数据new Date()\n```\n\n* bcrypt-nodejs 加盐模块\n```js\nvar bcrypt = require('bcrypt-nodejs');\nvar SALL_WORK_FACTOR = 10; //数值越大，破解越复杂\nbcrypt.genSalt(SALL_WORK_FACTOR, function(err, salt) {\n        if(err) return next(err);\n\n        bcrypt.hash(user.password, salt, null, function(err, hash) {\n            if(err) return next(err);\n\n            user.password = hash\n            next() //将流程走下去\n        })\n    })\n```\n\n* underscore （用到这模块的继承方法）  \n```\nvar _ = require('underscore');\n_movie = _.extend(movie, movieObj)\n```\n\n### 9.jade模板引擎\n```jade\nlayout.jade 公用的部份\n\ndoctype html\nhtml\n  head\n    meta(charset=\"utf-8\")\n    title #{title} - imoocMovie\n    include ./includes/head\n  body\n    include ./includes/header\n    block content\n    include ./includes/footer\n```\n引进用include  \nblock content是主体内容\n```jade\nextends ../layout  //-扩展layout\n\nblock content\n  .container\n    .row\n      each cat in categories\n        .panel.panel-default\n          .panel-heading\n            h3\n              a(href='/results?cat=#{cat._id}&p=0') #{cat.name}\n          .panel-body\n            if cat.movies && cat.movies.length > 0\n              each item in cat.movies\n                .col-md-2\n                  .thumbnail\n                    a(href=\"/movie/#{item._id}\")\n                      if item.poster.indexOf('http:') > -1\n                        img(src=\"#{item.poster}\", alt=\"#{item.title}\")\n                      else\n                        img(src=\"/upload/#{item.poster}\", alt=\"#{item.title}\")\n                    .caption\n                      h4 #{item.title}\n                      p: a.btn.btn-primary(href=\"/movie/#{item._id}\", role=\"button\") 观看预告片\n    script(src='/build/admin.min.js')\n```\n\n* request（发http请求）\n```\nvar request = require('request');\n\n//用法\nrequest({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });\n```\n\n\n\n\n\n\n","source":"_posts/基于Express4.0开发web.md","raw":"---\ntitle: 基于Express4.0开发web \ndate: \ntags: [nodejs,express,grunt,router,MVC,jade,mongoDB]\n---\n\n### 1.快速搭建\n在全局下安装express  \n```\nnpm install -g express  \n```\n执行  \n```\nexpress -v yourProject \t\n或者\ncd yourProject\nexpress\n```\n就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade\n\n\n### 2.express中间件\n```\nvar app = requrie('express')();\napp.use (function (req, res, next) {\n    ...\n    next()\n})  \n```\nnext()作用是交付控制权，前往下一个中间件\n可以利用这一点做验证功能\n\n### 3.MVC架构\n```\n/app\n    /controllers\n    /models\n    /schemas\n    /views\n/public\n    /libs\n    /css\n    /js\n/router\n    router.js\napp.js\npackage.json\n.bowerrc\nbower.json\ngruntfile.js\n.gitignore\n\n```\n以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。  \nbower模块用来安装项目依赖的前端框架。需要在全局安装bower\n```\nnpm install -g bower\n```\n安装bootstrap\n```\nbower init\nbower install bootstrap\n```\nbower init 生成bower.json\n然后安装bootstrap时，会根据.bowerrc文件\n```\n{\n    \"directory\": \"public/libs\"\n}\n```\n把依赖的框架安装在public/libs下\n\n### 4.项目管理工具grunt\ngruntfile.js\n```js\nmodule.exports = function(grunt) {\n\n    grunt.initConfig({\n        watch: {\n            jade: {\n                files: ['views/**'],\n                options: {\n                    livereload: true\n                }\n            },\n            js: {\n                files: ['public/js/**', 'app/**/*.js'],\n                //tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            uglify: {\n                files: ['public/**/*.js'],\n                tasks: ['jshint'],\n                options: {\n                    livereload: true\n                }\n            },\n            styles: {\n                files: ['public/**/*.less'],\n                tasks: ['less'],\n                options: {\n                    nospawn: true\n                }\n            }\n        },\n\n        nodemon: {\n            dev: {\n                script: 'bin/www',  //入口文件\n                options: {\n                    nodeArgs: ['--debug'], //开启开发模式\n                    args:　[],\n                    ignoredFiles: ['README.md', 'node_modules/**', 'public/libs/**', '.vscode'],\n                    watchedExtensions: ['js'],\n                    watchedFolders: ['./'], //监听定义的文件夹,根目录\n                    debug: true,\n                    delayTime: 1000,\n                    env: {\n                        PORT: 3000\n                    },\n                    cwd: __dirname\n                }\n            }\n        },\n\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc',\n                ignores: ['public/libs/**/*.js']\n            },\n            all: ['public/javascripts/*.js', 'test/**/*.js', 'app/**/*.js']\n        },\n\n        less: {\n            development: {\n                options: {\n                    compress: true,\n                    yuicompress: true,\n                    optimization: 2\n                },\n                files: {\n                    'public/build/index.css' : 'public/less/index.less'\n                }\n            }\n        },\n\n        uglify: {\n            development: {\n                files: {\n                'public/build/admin.min.js': 'public/javascripts/admin.js',\n                'public/build/detail.min.js': [\n                    'public/javascripts/detail.js'\n                ]\n                }\n            }\n        },\n\n        mochaTest: {\n            options: {\n                reporter: 'spec'\n            },\n            src: ['test/**/*.js']\n        },\n\n        concurrent: {\n            tasks: ['nodemon', 'watch', 'jshint', 'less', 'uglify'],\n            options: {\n                logConcurrentOutput: true\n            }\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-contrib-watch'); //监控定义好的静态文件变动\n    grunt.loadNpmTasks('grunt-nodemon'); //监控入口文件变动\n    grunt.loadNpmTasks('grunt-concurrent'); //优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch\n    grunt.loadNpmTasks('grunt-mocha-test');  //测试框架\n    grunt.loadNpmTasks('grunt-contrib-less');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n\n    grunt.option('force', true); //避免程序因语法错误而终止执行\n\n    grunt.registerTask('default', ['concurrent']);\n    grunt.registerTask('test', ['mochaTest']);\n}\n```\n前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。\n\n###  5.router模块\n这里有两种方法  \n第一种是将路由分类  \n```\napp.js\n//挂载路由表\napp.use('/', index);\napp.use('/admin', admin);\napp.use('/user', user)\n\nuser.js\nvar express = require('express');\nvar User = require('../models/user');\nvar router = express.Router();\n\n//用户注册\nrouter.post('/signup', function(req, res) {\n    ...\n}\nmodule.exports = router;\n```\n当url以/user开头时就会进入user.js文件。  \n第二种是路由全部写在一个文件  \n```\napp.js\nrequire('./config/routers')(app); //不能传入express.Router(),它只能作为中间件用,如上\n\nrouter.js\nvar Movie = require('../app/controllers/movie');\nvar Index = require('../app/controllers/index')\n\n\nmodule.exports = function(app) {\n\n    //Index\n    app.get('/', Index.index);\n\n    //Movie\n    app.get('/movie/:id', Movie.detail);\n    app.get('/admin/movie/list',User.signinRequired,User.adminRequired, Movie.list);\n    \n};\n\n```\n\n### 6.数据库模块mongose\n```js\napp.js\nvar mongoose = require('mongoose');\nvar dbURL = 'mongodb://localhost:27017/movieWeb';\n\n//连接数据库\nmongoose.Promise = global.Promise; //避免控制台输出Promise错误 \nmongoose.connect(dbURL) //数据库名为movieWeb\nmongoose.connection.on('connected', function () {    //绑定connected函数，连接成功时触发\n  console.log('Connection success!');\n});\n```\n模式schemas(表)\n```js\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nvar ObjectId = Schema.Types.ObjectId;\n\nvar MovieSchema = new mongoose.Schema({  //定义模式\n    doctor: String,\n    title: String,\n    language: String,\n    country: String,\n    summary: String,\n    flash: String,\n    poster: String,\n    year: String,\n    pv: {\n        type: Number,\n        default: 0\n    },\n    category: {\n        type: ObjectId,\n        ref: 'Category'\n    },\n    meta: {\n        createAt: {\n            type: Date,\n            default: Date.now()\n        },\n        updateAt: {\n            type: Date,\n            default: Date.now()\n        }\n    }\n})\n\n//每次存取数据之前，都调用save方法\nMovieSchema.pre('save', function(next){\n    if(this.isNew) {\n        this.meta.createAt = this.meta.updateAt = Date.now()\n    } else {\n        this.meta.updateAt = Date.now()  \n    }\n\n    next() //将流程走下去\n})\n\nMovieSchema.statics = {  //实例化以后就会具有以下方法，相当于构造函数的成员方法\n    fetch: function(cb) {\n        return this\n            .find({})\n            .sort('meta.updateAt')\n            .exec(cb)\n    },\n    fetchById: function(id, cb) {\n        return this\n            .findOne({_id: id})\n            .exec(cb)\n    }\n}\n\nmodule.exports = MovieSchema\n```\n模型models（模式跟模型对接）\n```js\nvar mongoose = require('mongoose')\nvar MovieSchema = require('../schemas/movie')\nvar Movie = mongoose.model('Movie', MovieSchema)  //模式和模型对接\n\nmodule.exports = Movie\n\n```\n值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误\n\n### 7.将session存放在mongodb里\nsession是会话支持，作为客户端的id，跟服务器交互\n```\n//使用mongodb来储存sesion信息\nvar cookieParser = require('cookie-parser');\nvar session = require(\"express-session\");\nvar MongoStore = require('connect-mongo')(session);\n\n//配置session\napp.use(cookieParser());\napp.use(session({\n  secret: 'imoocMovieWeb',\n  store: new MongoStore({\n    url: dbURL,\n    collection: 'sessions'\n  }),\n  resave: true,\n  saveUninitialized: true\n}))\n```\n其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件\nbodyParser是解析request请求的中间价\n```\n配置\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:true})); //extended为true则可以解析字符串和数组以外的数据\n```\n\n### 8.前后台传数据\n可以用res.render方法\n```js\ncontrollers/movie.js\n\n//获取后列表页\nexports.list = function(req, res, next) {\n  Movie.fetch(function(err, movies) {\n    if(err) {\n      console.log(err)\n    }\n\n    res.render('list', {\n      title: '后台列表页',\n      movies: movies\n    });\n  })\n};\n```\n还可以用res.locals，可以传递方法和变量\n```js\napp.js\n\n//前后台传递数据\napp.use(function(req, res, next) {\n  res.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n  \n  var _user = req.session.user;\n  res.locals.user = _user; //传递用户转态\n\n  next();\n})\n```\n\n### 8.各种用到的中间件\n* flash  \n```\nvar flash = require('connect-flash') //存储变量的中间件，相当全局变量\napp.use(flash())\n\n使用\nvar error = req.flash('error')\n```\n\n*  logger  \n```js\nvar logger = require('morgan'); //处理日志模块 \n\n//日志文件\nvar fs = require('fs');\nvar accessLogfile = fs.createWriteStream('access.log', {flags:'a'});\nvar errorLogfile = fs.createWriteStream('error.log', {flags:'a'});\n\napp.set('env', 'production');\napp.use(logger({stream: accessLogfile})); //访问日志\n\n//处理错误日志，处理错误的中间件一定要写在路由后面\nif ('production' == app.get('env')) {\n  app.use(function(err, req, res, next){\n    var meta = '[' + new Date() + '] ' + req.url + '\\n';\n    errorLogfile.write(meta + err.stack + '\\n');\n    next();\n  });\n}\n```\n\n* moment  \n```\napp.js\nvar moment = require('moment'); //处理时间格式\n在中间件里\nres.locals.moment = moment;  //向前台模板发送处理时间的moment方法\n\njade模板文件\nmoment(item.meta.updateAt).format('MM/DD/YYYY') //item.meta.updateAt是后台传过来的时间数据new Date()\n```\n\n* bcrypt-nodejs 加盐模块\n```js\nvar bcrypt = require('bcrypt-nodejs');\nvar SALL_WORK_FACTOR = 10; //数值越大，破解越复杂\nbcrypt.genSalt(SALL_WORK_FACTOR, function(err, salt) {\n        if(err) return next(err);\n\n        bcrypt.hash(user.password, salt, null, function(err, hash) {\n            if(err) return next(err);\n\n            user.password = hash\n            next() //将流程走下去\n        })\n    })\n```\n\n* underscore （用到这模块的继承方法）  \n```\nvar _ = require('underscore');\n_movie = _.extend(movie, movieObj)\n```\n\n### 9.jade模板引擎\n```jade\nlayout.jade 公用的部份\n\ndoctype html\nhtml\n  head\n    meta(charset=\"utf-8\")\n    title #{title} - imoocMovie\n    include ./includes/head\n  body\n    include ./includes/header\n    block content\n    include ./includes/footer\n```\n引进用include  \nblock content是主体内容\n```jade\nextends ../layout  //-扩展layout\n\nblock content\n  .container\n    .row\n      each cat in categories\n        .panel.panel-default\n          .panel-heading\n            h3\n              a(href='/results?cat=#{cat._id}&p=0') #{cat.name}\n          .panel-body\n            if cat.movies && cat.movies.length > 0\n              each item in cat.movies\n                .col-md-2\n                  .thumbnail\n                    a(href=\"/movie/#{item._id}\")\n                      if item.poster.indexOf('http:') > -1\n                        img(src=\"#{item.poster}\", alt=\"#{item.title}\")\n                      else\n                        img(src=\"/upload/#{item.poster}\", alt=\"#{item.title}\")\n                    .caption\n                      h4 #{item.title}\n                      p: a.btn.btn-primary(href=\"/movie/#{item._id}\", role=\"button\") 观看预告片\n    script(src='/build/admin.min.js')\n```\n\n* request（发http请求）\n```\nvar request = require('request');\n\n//用法\nrequest({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });\n```\n\n\n\n\n\n\n","slug":"基于Express4.0开发web","published":1,"updated":"2017-06-13T15:21:21.917Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7fqx003iw8qz2l0tjg9z","content":"<h3 id=\"1-快速搭建\"><a href=\"#1-快速搭建\" class=\"headerlink\" title=\"1.快速搭建\"></a>1.快速搭建</h3><p>在全局下安装express<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g express</span><br></pre></td></tr></table></figure></p>\n<p>执行<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">express</span> -v yourProject \t</span><br><span class=\"line\">或者</span><br><span class=\"line\">cd yourProject</span><br><span class=\"line\"><span class=\"built_in\">express</span></span><br></pre></td></tr></table></figure></p>\n<p>就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade</p>\n<h3 id=\"2-express中间件\"><a href=\"#2-express中间件\" class=\"headerlink\" title=\"2.express中间件\"></a>2.express中间件</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = requrie(<span class=\"string\">'express'</span>)();</span><br><span class=\"line\">app.<span class=\"keyword\">use</span> (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(req, res, next)</span> </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    next()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>next()作用是交付控制权，前往下一个中间件<br>可以利用这一点做验证功能</p>\n<h3 id=\"3-MVC架构\"><a href=\"#3-MVC架构\" class=\"headerlink\" title=\"3.MVC架构\"></a>3.MVC架构</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/app</span><br><span class=\"line\">    /controllers</span><br><span class=\"line\">    /models</span><br><span class=\"line\">    /schemas</span><br><span class=\"line\">    /views</span><br><span class=\"line\">/public</span><br><span class=\"line\">    /libs</span><br><span class=\"line\">    /css</span><br><span class=\"line\">    /js</span><br><span class=\"line\">/router</span><br><span class=\"line\">    router<span class=\"selector-class\">.js</span></span><br><span class=\"line\">app<span class=\"selector-class\">.js</span></span><br><span class=\"line\">package<span class=\"selector-class\">.json</span></span><br><span class=\"line\"><span class=\"selector-class\">.bowerrc</span></span><br><span class=\"line\">bower<span class=\"selector-class\">.json</span></span><br><span class=\"line\">gruntfile<span class=\"selector-class\">.js</span></span><br><span class=\"line\">.gitignore</span><br></pre></td></tr></table></figure>\n<p>以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。<br>bower模块用来安装项目依赖的前端框架。需要在全局安装bower<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g bower</span><br></pre></td></tr></table></figure></p>\n<p>安装bootstrap<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">bower </span>init</span><br><span class=\"line\"><span class=\"keyword\">bower </span><span class=\"keyword\">install </span><span class=\"keyword\">bootstrap</span></span><br></pre></td></tr></table></figure></p>\n<p>bower init 生成bower.json<br>然后安装bootstrap时，会根据.bowerrc文件<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"directory\"</span>: <span class=\"string\">\"public/libs\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>把依赖的框架安装在public/libs下</p>\n<h3 id=\"4-项目管理工具grunt\"><a href=\"#4-项目管理工具grunt\" class=\"headerlink\" title=\"4.项目管理工具grunt\"></a>4.项目管理工具grunt</h3><p>gruntfile.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.initConfig(&#123;</span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            jade: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'views/**'</span>],</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    livereload: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            js: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'public/js/**'</span>, <span class=\"string\">'app/**/*.js'</span>],</span><br><span class=\"line\">                <span class=\"comment\">//tasks: ['jshint'],</span></span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    livereload: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            uglify: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'public/**/*.js'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'jshint'</span>],</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    livereload: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            styles: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'public/**/*.less'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'less'</span>],</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    nospawn: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        nodemon: &#123;</span><br><span class=\"line\">            dev: &#123;</span><br><span class=\"line\">                script: <span class=\"string\">'bin/www'</span>,  <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    nodeArgs: [<span class=\"string\">'--debug'</span>], <span class=\"comment\">//开启开发模式</span></span><br><span class=\"line\">                    args:　[],</span><br><span class=\"line\">                    ignoredFiles: [<span class=\"string\">'README.md'</span>, <span class=\"string\">'node_modules/**'</span>, <span class=\"string\">'public/libs/**'</span>, <span class=\"string\">'.vscode'</span>],</span><br><span class=\"line\">                    watchedExtensions: [<span class=\"string\">'js'</span>],</span><br><span class=\"line\">                    watchedFolders: [<span class=\"string\">'./'</span>], <span class=\"comment\">//监听定义的文件夹,根目录</span></span><br><span class=\"line\">                    debug: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    delayTime: <span class=\"number\">1000</span>,</span><br><span class=\"line\">                    env: &#123;</span><br><span class=\"line\">                        PORT: <span class=\"number\">3000</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    cwd: __dirname</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        jshint: &#123;</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                jshintrc: <span class=\"string\">'.jshintrc'</span>,</span><br><span class=\"line\">                ignores: [<span class=\"string\">'public/libs/**/*.js'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            all: [<span class=\"string\">'public/javascripts/*.js'</span>, <span class=\"string\">'test/**/*.js'</span>, <span class=\"string\">'app/**/*.js'</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        less: &#123;</span><br><span class=\"line\">            development: &#123;</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    compress: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    yuicompress: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    optimization: <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'public/build/index.css'</span> : <span class=\"string\">'public/less/index.less'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        uglify: &#123;</span><br><span class=\"line\">            development: &#123;</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                <span class=\"string\">'public/build/admin.min.js'</span>: <span class=\"string\">'public/javascripts/admin.js'</span>,</span><br><span class=\"line\">                <span class=\"string\">'public/build/detail.min.js'</span>: [</span><br><span class=\"line\">                    <span class=\"string\">'public/javascripts/detail.js'</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        mochaTest: &#123;</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                reporter: <span class=\"string\">'spec'</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            src: [<span class=\"string\">'test/**/*.js'</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        concurrent: &#123;</span><br><span class=\"line\">            tasks: [<span class=\"string\">'nodemon'</span>, <span class=\"string\">'watch'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'less'</span>, <span class=\"string\">'uglify'</span>],</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                logConcurrentOutput: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-watch'</span>); <span class=\"comment\">//监控定义好的静态文件变动</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-nodemon'</span>); <span class=\"comment\">//监控入口文件变动</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-concurrent'</span>); <span class=\"comment\">//优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-mocha-test'</span>);  <span class=\"comment\">//测试框架</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-less'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-uglify'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-jshint'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.option(<span class=\"string\">'force'</span>, <span class=\"literal\">true</span>); <span class=\"comment\">//避免程序因语法错误而终止执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'default'</span>, [<span class=\"string\">'concurrent'</span>]);</span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'test'</span>, [<span class=\"string\">'mochaTest'</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。</p>\n<h3 id=\"5-router模块\"><a href=\"#5-router模块\" class=\"headerlink\" title=\"5.router模块\"></a>5.router模块</h3><p>这里有两种方法<br>第一种是将路由分类<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"comment\">//挂载路由表</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">'/'</span>, index);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">'/admin'</span>, admin);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">'/user'</span>, user)</span><br><span class=\"line\"></span><br><span class=\"line\">user.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"keyword\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> User = <span class=\"keyword\">require</span>(<span class=\"string\">'../models/user'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户注册</span></span><br><span class=\"line\">router.post(<span class=\"string\">'/signup'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(req, res)</span> </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">module.exports = router;</span><br></pre></td></tr></table></figure></p>\n<p>当url以/user开头时就会进入user.js文件。<br>第二种是路由全部写在一个文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'./config/routers'</span>)(app); <span class=\"comment\">//不能传入express.Router(),它只能作为中间件用,如上</span></span><br><span class=\"line\"></span><br><span class=\"line\">router.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> Movie = <span class=\"built_in\">require</span>(<span class=\"string\">'../app/controllers/movie'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> Index = <span class=\"built_in\">require</span>(<span class=\"string\">'../app/controllers/index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Index</span></span><br><span class=\"line\">    app.get(<span class=\"string\">'/'</span>, Index.index);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Movie</span></span><br><span class=\"line\">    app.get(<span class=\"string\">'/movie/:id'</span>, Movie.detail);</span><br><span class=\"line\">    app.get(<span class=\"string\">'/admin/movie/list'</span>,User.signinRequired,User.adminRequired, Movie.list);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-数据库模块mongose\"><a href=\"#6-数据库模块mongose\" class=\"headerlink\" title=\"6.数据库模块mongose\"></a>6.数据库模块mongose</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dbURL = <span class=\"string\">'mongodb://localhost:27017/movieWeb'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\">mongoose.Promise = global.Promise; <span class=\"comment\">//避免控制台输出Promise错误 </span></span><br><span class=\"line\">mongoose.connect(dbURL) <span class=\"comment\">//数据库名为movieWeb</span></span><br><span class=\"line\">mongoose.connection.on(<span class=\"string\">'connected'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;    <span class=\"comment\">//绑定connected函数，连接成功时触发</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Connection success!'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>模式schemas(表)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> Schema = mongoose.Schema;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ObjectId = Schema.Types.ObjectId;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> MovieSchema = <span class=\"keyword\">new</span> mongoose.Schema(&#123;  <span class=\"comment\">//定义模式</span></span><br><span class=\"line\">    doctor: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    title: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    language: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    country: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    summary: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    flash: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    poster: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    year: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    pv: &#123;</span><br><span class=\"line\">        type: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">        <span class=\"keyword\">default</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    category: &#123;</span><br><span class=\"line\">        type: ObjectId,</span><br><span class=\"line\">        ref: <span class=\"string\">'Category'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    meta: &#123;</span><br><span class=\"line\">        createAt: &#123;</span><br><span class=\"line\">            type: <span class=\"built_in\">Date</span>,</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        updateAt: &#123;</span><br><span class=\"line\">            type: <span class=\"built_in\">Date</span>,</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//每次存取数据之前，都调用save方法</span></span><br><span class=\"line\">MovieSchema.pre(<span class=\"string\">'save'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">next</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.isNew) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.meta.createAt = <span class=\"keyword\">this</span>.meta.updateAt = <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.meta.updateAt = <span class=\"built_in\">Date</span>.now()  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    next() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">MovieSchema.statics = &#123;  <span class=\"comment\">//实例化以后就会具有以下方法，相当于构造函数的成员方法</span></span><br><span class=\"line\">    fetch: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">            .find(&#123;&#125;)</span><br><span class=\"line\">            .sort(<span class=\"string\">'meta.updateAt'</span>)</span><br><span class=\"line\">            .exec(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fetchById: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id, cb</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">            .findOne(&#123;_id: id&#125;)</span><br><span class=\"line\">            .exec(cb)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = MovieSchema</span><br></pre></td></tr></table></figure></p>\n<p>模型models（模式跟模型对接）<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> MovieSchema = <span class=\"built_in\">require</span>(<span class=\"string\">'../schemas/movie'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> Movie = mongoose.model(<span class=\"string\">'Movie'</span>, MovieSchema)  <span class=\"comment\">//模式和模型对接</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Movie</span><br></pre></td></tr></table></figure></p>\n<p>值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误</p>\n<h3 id=\"7-将session存放在mongodb里\"><a href=\"#7-将session存放在mongodb里\" class=\"headerlink\" title=\"7.将session存放在mongodb里\"></a>7.将session存放在mongodb里</h3><p>session是会话支持，作为客户端的id，跟服务器交互<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用mongodb来储存sesion信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cookieParser = <span class=\"keyword\">require</span>(<span class=\"string\">'cookie-parser'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> session = <span class=\"keyword\">require</span>(<span class=\"string\">\"express-session\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> MongoStore = <span class=\"keyword\">require</span>(<span class=\"string\">'connect-mongo'</span>)(session);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//配置session</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(cookieParser());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(session(&#123;</span><br><span class=\"line\">  secret: <span class=\"string\">'imoocMovieWeb'</span>,</span><br><span class=\"line\">  store: <span class=\"keyword\">new</span> MongoStore(&#123;</span><br><span class=\"line\">    url: dbURL,</span><br><span class=\"line\">    collection: <span class=\"string\">'sessions'</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  resave: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"keyword\">true</span></span><br><span class=\"line\">&#125;))</span><br></pre></td></tr></table></figure></p>\n<p>其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件<br>bodyParser是解析request请求的中间价<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.json());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.urlencoded(&#123;<span class=\"symbol\">extended:</span><span class=\"keyword\">true</span>&#125;)); <span class=\"regexp\">//extended</span>为<span class=\"keyword\">true</span>则可以解析字符串和数组以外的数据</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-前后台传数据\"><a href=\"#8-前后台传数据\" class=\"headerlink\" title=\"8.前后台传数据\"></a>8.前后台传数据</h3><p>可以用res.render方法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">controllers/movie.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取后列表页</span></span><br><span class=\"line\">exports.list = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  Movie.fetch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, movies</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    res.render(<span class=\"string\">'list'</span>, &#123;</span><br><span class=\"line\">      title: <span class=\"string\">'后台列表页'</span>,</span><br><span class=\"line\">      movies: movies</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>还可以用res.locals，可以传递方法和变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//前后台传递数据</span></span><br><span class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  res.locals.moment = moment;  <span class=\"comment\">//向前台模板发送处理时间的moment方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> _user = req.session.user;</span><br><span class=\"line\">  res.locals.user = _user; <span class=\"comment\">//传递用户转态</span></span><br><span class=\"line\"></span><br><span class=\"line\">  next();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-各种用到的中间件\"><a href=\"#8-各种用到的中间件\" class=\"headerlink\" title=\"8.各种用到的中间件\"></a>8.各种用到的中间件</h3><ul>\n<li><p>flash  </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> flash = <span class=\"keyword\">require</span>(<span class=\"string\">'connect-flash'</span>) <span class=\"comment\">//存储变量的中间件，相当全局变量</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(flash())</span><br><span class=\"line\"></span><br><span class=\"line\">使用</span><br><span class=\"line\"><span class=\"keyword\">var</span> error = req.flash(<span class=\"string\">'error'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>logger  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">'morgan'</span>); <span class=\"comment\">//处理日志模块 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//日志文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> accessLogfile = fs.createWriteStream(<span class=\"string\">'access.log'</span>, &#123;flags:<span class=\"string\">'a'</span>&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> errorLogfile = fs.createWriteStream(<span class=\"string\">'error.log'</span>, &#123;flags:<span class=\"string\">'a'</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.set(<span class=\"string\">'env'</span>, <span class=\"string\">'production'</span>);</span><br><span class=\"line\">app.use(logger(&#123;stream: accessLogfile&#125;)); <span class=\"comment\">//访问日志</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//处理错误日志，处理错误的中间件一定要写在路由后面</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">'production'</span> == app.get(<span class=\"string\">'env'</span>)) &#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> meta = <span class=\"string\">'['</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() + <span class=\"string\">'] '</span> + req.url + <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    errorLogfile.write(meta + err.stack + <span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>moment  </p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\">var <span class=\"built_in\">moment</span> = require('<span class=\"built_in\">moment</span>'); <span class=\"comment\">//处理时间格式</span></span><br><span class=\"line\">在中间件里</span><br><span class=\"line\">res.locals.<span class=\"built_in\">moment</span> = <span class=\"built_in\">moment</span>;  <span class=\"comment\">//向前台模板发送处理时间的moment方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">jade模板文件</span><br><span class=\"line\"><span class=\"built_in\">moment</span>(item.meta.updateAt).<span class=\"keyword\">format</span>('MM/DD/YYYY') <span class=\"comment\">//item.meta.updateAt是后台传过来的时间数据new Date()</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>bcrypt-nodejs 加盐模块</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bcrypt = <span class=\"built_in\">require</span>(<span class=\"string\">'bcrypt-nodejs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> SALL_WORK_FACTOR = <span class=\"number\">10</span>; <span class=\"comment\">//数值越大，破解越复杂</span></span><br><span class=\"line\">bcrypt.genSalt(SALL_WORK_FACTOR, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, salt</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> next(err);</span><br><span class=\"line\"></span><br><span class=\"line\">        bcrypt.hash(user.password, salt, <span class=\"literal\">null</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, hash</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> next(err);</span><br><span class=\"line\"></span><br><span class=\"line\">            user.password = hash</span><br><span class=\"line\">            next() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>underscore （用到这模块的继承方法）  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> _ = <span class=\"built_in\">require</span>(<span class=\"string\">'underscore'</span>);</span><br><span class=\"line\">_movie = _.extend(movie, movieObj)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"9-jade模板引擎\"><a href=\"#9-jade模板引擎\" class=\"headerlink\" title=\"9.jade模板引擎\"></a>9.jade模板引擎</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layout.jade 公用的部份</span><br><span class=\"line\"></span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  head</span><br><span class=\"line\">    meta(charset=&quot;utf-8&quot;)</span><br><span class=\"line\">    title #&#123;title&#125; - imoocMovie</span><br><span class=\"line\">    include ./includes/head</span><br><span class=\"line\">  body</span><br><span class=\"line\">    include ./includes/header</span><br><span class=\"line\">    block content</span><br><span class=\"line\">    include ./includes/footer</span><br></pre></td></tr></table></figure>\n<p>引进用include<br>block content是主体内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends ../layout  //-扩展layout</span><br><span class=\"line\"></span><br><span class=\"line\">block content</span><br><span class=\"line\">  .container</span><br><span class=\"line\">    .row</span><br><span class=\"line\">      each cat in categories</span><br><span class=\"line\">        .panel.panel-default</span><br><span class=\"line\">          .panel-heading</span><br><span class=\"line\">            h3</span><br><span class=\"line\">              a(href=&apos;/results?cat=#&#123;cat._id&#125;&amp;p=0&apos;) #&#123;cat.name&#125;</span><br><span class=\"line\">          .panel-body</span><br><span class=\"line\">            if cat.movies &amp;&amp; cat.movies.length &gt; 0</span><br><span class=\"line\">              each item in cat.movies</span><br><span class=\"line\">                .col-md-2</span><br><span class=\"line\">                  .thumbnail</span><br><span class=\"line\">                    a(href=&quot;/movie/#&#123;item._id&#125;&quot;)</span><br><span class=\"line\">                      if item.poster.indexOf(&apos;http:&apos;) &gt; -1</span><br><span class=\"line\">                        img(src=&quot;#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                      else</span><br><span class=\"line\">                        img(src=&quot;/upload/#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                    .caption</span><br><span class=\"line\">                      h4 #&#123;item.title&#125;</span><br><span class=\"line\">                      p: a.btn.btn-primary(href=&quot;/movie/#&#123;item._id&#125;&quot;, role=&quot;button&quot;) 观看预告片</span><br><span class=\"line\">    script(src=&apos;/build/admin.min.js&apos;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>request（发http请求）<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> request = <span class=\"keyword\">require</span>(<span class=\"string\">'request'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用法</span></span><br><span class=\"line\">request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, function (error, response, body) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = body;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> now = (<span class=\"literal\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"built_in\">var</span> expires_in = now + (<span class=\"built_in\">data</span>.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                <span class=\"built_in\">data</span>.expires_in = expires_in;</span><br><span class=\"line\">                resolve(<span class=\"built_in\">data</span>);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">'can not get ticket'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"1-快速搭建\"><a href=\"#1-快速搭建\" class=\"headerlink\" title=\"1.快速搭建\"></a>1.快速搭建</h3><p>在全局下安装express<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g express</span><br></pre></td></tr></table></figure></p>\n<p>执行<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">express</span> -v yourProject \t</span><br><span class=\"line\">或者</span><br><span class=\"line\">cd yourProject</span><br><span class=\"line\"><span class=\"built_in\">express</span></span><br></pre></td></tr></table></figure></p>\n<p>就会快速在目录yourProject中搭建express，-v参数指定模板引擎，没写就默认为jade</p>\n<h3 id=\"2-express中间件\"><a href=\"#2-express中间件\" class=\"headerlink\" title=\"2.express中间件\"></a>2.express中间件</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = requrie(<span class=\"string\">'express'</span>)();</span><br><span class=\"line\">app.<span class=\"keyword\">use</span> (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(req, res, next)</span> </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    next()</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>next()作用是交付控制权，前往下一个中间件<br>可以利用这一点做验证功能</p>\n<h3 id=\"3-MVC架构\"><a href=\"#3-MVC架构\" class=\"headerlink\" title=\"3.MVC架构\"></a>3.MVC架构</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/app</span><br><span class=\"line\">    /controllers</span><br><span class=\"line\">    /models</span><br><span class=\"line\">    /schemas</span><br><span class=\"line\">    /views</span><br><span class=\"line\">/public</span><br><span class=\"line\">    /libs</span><br><span class=\"line\">    /css</span><br><span class=\"line\">    /js</span><br><span class=\"line\">/router</span><br><span class=\"line\">    router<span class=\"selector-class\">.js</span></span><br><span class=\"line\">app<span class=\"selector-class\">.js</span></span><br><span class=\"line\">package<span class=\"selector-class\">.json</span></span><br><span class=\"line\"><span class=\"selector-class\">.bowerrc</span></span><br><span class=\"line\">bower<span class=\"selector-class\">.json</span></span><br><span class=\"line\">gruntfile<span class=\"selector-class\">.js</span></span><br><span class=\"line\">.gitignore</span><br></pre></td></tr></table></figure>\n<p>以上就是项目的架构，按照MVC架构，后台代码都放在app下，schemas存放mongodb的模式，可以看作是一张张表，models放生成模型的文件，模型与模式对接起来。public存放静态文件，/libs存放前端框架如bootstrap。把router路由模块抽离放在router目录。<br>bower模块用来安装项目依赖的前端框架。需要在全局安装bower<br><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> -g bower</span><br></pre></td></tr></table></figure></p>\n<p>安装bootstrap<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">bower </span>init</span><br><span class=\"line\"><span class=\"keyword\">bower </span><span class=\"keyword\">install </span><span class=\"keyword\">bootstrap</span></span><br></pre></td></tr></table></figure></p>\n<p>bower init 生成bower.json<br>然后安装bootstrap时，会根据.bowerrc文件<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"directory\"</span>: <span class=\"string\">\"public/libs\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>把依赖的框架安装在public/libs下</p>\n<h3 id=\"4-项目管理工具grunt\"><a href=\"#4-项目管理工具grunt\" class=\"headerlink\" title=\"4.项目管理工具grunt\"></a>4.项目管理工具grunt</h3><p>gruntfile.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.initConfig(&#123;</span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            jade: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'views/**'</span>],</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    livereload: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            js: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'public/js/**'</span>, <span class=\"string\">'app/**/*.js'</span>],</span><br><span class=\"line\">                <span class=\"comment\">//tasks: ['jshint'],</span></span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    livereload: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            uglify: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'public/**/*.js'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'jshint'</span>],</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    livereload: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            styles: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'public/**/*.less'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'less'</span>],</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    nospawn: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        nodemon: &#123;</span><br><span class=\"line\">            dev: &#123;</span><br><span class=\"line\">                script: <span class=\"string\">'bin/www'</span>,  <span class=\"comment\">//入口文件</span></span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    nodeArgs: [<span class=\"string\">'--debug'</span>], <span class=\"comment\">//开启开发模式</span></span><br><span class=\"line\">                    args:　[],</span><br><span class=\"line\">                    ignoredFiles: [<span class=\"string\">'README.md'</span>, <span class=\"string\">'node_modules/**'</span>, <span class=\"string\">'public/libs/**'</span>, <span class=\"string\">'.vscode'</span>],</span><br><span class=\"line\">                    watchedExtensions: [<span class=\"string\">'js'</span>],</span><br><span class=\"line\">                    watchedFolders: [<span class=\"string\">'./'</span>], <span class=\"comment\">//监听定义的文件夹,根目录</span></span><br><span class=\"line\">                    debug: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    delayTime: <span class=\"number\">1000</span>,</span><br><span class=\"line\">                    env: &#123;</span><br><span class=\"line\">                        PORT: <span class=\"number\">3000</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    cwd: __dirname</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        jshint: &#123;</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                jshintrc: <span class=\"string\">'.jshintrc'</span>,</span><br><span class=\"line\">                ignores: [<span class=\"string\">'public/libs/**/*.js'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            all: [<span class=\"string\">'public/javascripts/*.js'</span>, <span class=\"string\">'test/**/*.js'</span>, <span class=\"string\">'app/**/*.js'</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        less: &#123;</span><br><span class=\"line\">            development: &#123;</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    compress: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    yuicompress: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                    optimization: <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'public/build/index.css'</span> : <span class=\"string\">'public/less/index.less'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        uglify: &#123;</span><br><span class=\"line\">            development: &#123;</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                <span class=\"string\">'public/build/admin.min.js'</span>: <span class=\"string\">'public/javascripts/admin.js'</span>,</span><br><span class=\"line\">                <span class=\"string\">'public/build/detail.min.js'</span>: [</span><br><span class=\"line\">                    <span class=\"string\">'public/javascripts/detail.js'</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        mochaTest: &#123;</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                reporter: <span class=\"string\">'spec'</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            src: [<span class=\"string\">'test/**/*.js'</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        concurrent: &#123;</span><br><span class=\"line\">            tasks: [<span class=\"string\">'nodemon'</span>, <span class=\"string\">'watch'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'less'</span>, <span class=\"string\">'uglify'</span>],</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                logConcurrentOutput: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-watch'</span>); <span class=\"comment\">//监控定义好的静态文件变动</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-nodemon'</span>); <span class=\"comment\">//监控入口文件变动</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-concurrent'</span>); <span class=\"comment\">//优化慢任务的构建时间，比如sass,less，并发执行多个阻塞的任务,比如nodemon和watch</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-mocha-test'</span>);  <span class=\"comment\">//测试框架</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-less'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-uglify'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-jshint'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.option(<span class=\"string\">'force'</span>, <span class=\"literal\">true</span>); <span class=\"comment\">//避免程序因语法错误而终止执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'default'</span>, [<span class=\"string\">'concurrent'</span>]);</span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'test'</span>, [<span class=\"string\">'mochaTest'</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>前期开发只需要前面三个模块包即watch,nodemon,concurrent就行。</p>\n<h3 id=\"5-router模块\"><a href=\"#5-router模块\" class=\"headerlink\" title=\"5.router模块\"></a>5.router模块</h3><p>这里有两种方法<br>第一种是将路由分类<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"comment\">//挂载路由表</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">'/'</span>, index);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">'/admin'</span>, admin);</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(<span class=\"string\">'/user'</span>, user)</span><br><span class=\"line\"></span><br><span class=\"line\">user.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"keyword\">require</span>(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> User = <span class=\"keyword\">require</span>(<span class=\"string\">'../models/user'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.Router();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户注册</span></span><br><span class=\"line\">router.post(<span class=\"string\">'/signup'</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(req, res)</span> </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">module.exports = router;</span><br></pre></td></tr></table></figure></p>\n<p>当url以/user开头时就会进入user.js文件。<br>第二种是路由全部写在一个文件<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'./config/routers'</span>)(app); <span class=\"comment\">//不能传入express.Router(),它只能作为中间件用,如上</span></span><br><span class=\"line\"></span><br><span class=\"line\">router.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> Movie = <span class=\"built_in\">require</span>(<span class=\"string\">'../app/controllers/movie'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> Index = <span class=\"built_in\">require</span>(<span class=\"string\">'../app/controllers/index'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Index</span></span><br><span class=\"line\">    app.get(<span class=\"string\">'/'</span>, Index.index);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Movie</span></span><br><span class=\"line\">    app.get(<span class=\"string\">'/movie/:id'</span>, Movie.detail);</span><br><span class=\"line\">    app.get(<span class=\"string\">'/admin/movie/list'</span>,User.signinRequired,User.adminRequired, Movie.list);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-数据库模块mongose\"><a href=\"#6-数据库模块mongose\" class=\"headerlink\" title=\"6.数据库模块mongose\"></a>6.数据库模块mongose</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dbURL = <span class=\"string\">'mongodb://localhost:27017/movieWeb'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\">mongoose.Promise = global.Promise; <span class=\"comment\">//避免控制台输出Promise错误 </span></span><br><span class=\"line\">mongoose.connect(dbURL) <span class=\"comment\">//数据库名为movieWeb</span></span><br><span class=\"line\">mongoose.connection.on(<span class=\"string\">'connected'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;    <span class=\"comment\">//绑定connected函数，连接成功时触发</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'Connection success!'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>模式schemas(表)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> Schema = mongoose.Schema;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ObjectId = Schema.Types.ObjectId;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> MovieSchema = <span class=\"keyword\">new</span> mongoose.Schema(&#123;  <span class=\"comment\">//定义模式</span></span><br><span class=\"line\">    doctor: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    title: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    language: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    country: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    summary: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    flash: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    poster: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    year: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    pv: &#123;</span><br><span class=\"line\">        type: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">        <span class=\"keyword\">default</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    category: &#123;</span><br><span class=\"line\">        type: ObjectId,</span><br><span class=\"line\">        ref: <span class=\"string\">'Category'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    meta: &#123;</span><br><span class=\"line\">        createAt: &#123;</span><br><span class=\"line\">            type: <span class=\"built_in\">Date</span>,</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        updateAt: &#123;</span><br><span class=\"line\">            type: <span class=\"built_in\">Date</span>,</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//每次存取数据之前，都调用save方法</span></span><br><span class=\"line\">MovieSchema.pre(<span class=\"string\">'save'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">next</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.isNew) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.meta.createAt = <span class=\"keyword\">this</span>.meta.updateAt = <span class=\"built_in\">Date</span>.now()</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.meta.updateAt = <span class=\"built_in\">Date</span>.now()  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    next() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">MovieSchema.statics = &#123;  <span class=\"comment\">//实例化以后就会具有以下方法，相当于构造函数的成员方法</span></span><br><span class=\"line\">    fetch: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">            .find(&#123;&#125;)</span><br><span class=\"line\">            .sort(<span class=\"string\">'meta.updateAt'</span>)</span><br><span class=\"line\">            .exec(cb)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fetchById: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id, cb</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">            .findOne(&#123;_id: id&#125;)</span><br><span class=\"line\">            .exec(cb)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = MovieSchema</span><br></pre></td></tr></table></figure></p>\n<p>模型models（模式跟模型对接）<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> MovieSchema = <span class=\"built_in\">require</span>(<span class=\"string\">'../schemas/movie'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> Movie = mongoose.model(<span class=\"string\">'Movie'</span>, MovieSchema)  <span class=\"comment\">//模式和模型对接</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Movie</span><br></pre></td></tr></table></figure></p>\n<p>值得注意的是，使用mongodb之前，需要在电脑上安装mongodb，并注册成一个服务，方便使用前开启，具体参考笔记：mongodb错误</p>\n<h3 id=\"7-将session存放在mongodb里\"><a href=\"#7-将session存放在mongodb里\" class=\"headerlink\" title=\"7.将session存放在mongodb里\"></a>7.将session存放在mongodb里</h3><p>session是会话支持，作为客户端的id，跟服务器交互<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用mongodb来储存sesion信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cookieParser = <span class=\"keyword\">require</span>(<span class=\"string\">'cookie-parser'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> session = <span class=\"keyword\">require</span>(<span class=\"string\">\"express-session\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> MongoStore = <span class=\"keyword\">require</span>(<span class=\"string\">'connect-mongo'</span>)(session);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//配置session</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(cookieParser());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(session(&#123;</span><br><span class=\"line\">  secret: <span class=\"string\">'imoocMovieWeb'</span>,</span><br><span class=\"line\">  store: <span class=\"keyword\">new</span> MongoStore(&#123;</span><br><span class=\"line\">    url: dbURL,</span><br><span class=\"line\">    collection: <span class=\"string\">'sessions'</span></span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  resave: <span class=\"keyword\">true</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"keyword\">true</span></span><br><span class=\"line\">&#125;))</span><br></pre></td></tr></table></figure></p>\n<p>其中呢，cookieParser()中间件是session和bodyParser的依赖的中间件<br>bodyParser是解析request请求的中间价<br><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.json());</span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(bodyParser.urlencoded(&#123;<span class=\"symbol\">extended:</span><span class=\"keyword\">true</span>&#125;)); <span class=\"regexp\">//extended</span>为<span class=\"keyword\">true</span>则可以解析字符串和数组以外的数据</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-前后台传数据\"><a href=\"#8-前后台传数据\" class=\"headerlink\" title=\"8.前后台传数据\"></a>8.前后台传数据</h3><p>可以用res.render方法<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">controllers/movie.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取后列表页</span></span><br><span class=\"line\">exports.list = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  Movie.fetch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, movies</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(err) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    res.render(<span class=\"string\">'list'</span>, &#123;</span><br><span class=\"line\">      title: <span class=\"string\">'后台列表页'</span>,</span><br><span class=\"line\">      movies: movies</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>还可以用res.locals，可以传递方法和变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//前后台传递数据</span></span><br><span class=\"line\">app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">  res.locals.moment = moment;  <span class=\"comment\">//向前台模板发送处理时间的moment方法</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> _user = req.session.user;</span><br><span class=\"line\">  res.locals.user = _user; <span class=\"comment\">//传递用户转态</span></span><br><span class=\"line\"></span><br><span class=\"line\">  next();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-各种用到的中间件\"><a href=\"#8-各种用到的中间件\" class=\"headerlink\" title=\"8.各种用到的中间件\"></a>8.各种用到的中间件</h3><ul>\n<li><p>flash  </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> flash = <span class=\"keyword\">require</span>(<span class=\"string\">'connect-flash'</span>) <span class=\"comment\">//存储变量的中间件，相当全局变量</span></span><br><span class=\"line\">app.<span class=\"keyword\">use</span>(flash())</span><br><span class=\"line\"></span><br><span class=\"line\">使用</span><br><span class=\"line\"><span class=\"keyword\">var</span> error = req.flash(<span class=\"string\">'error'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>logger  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">'morgan'</span>); <span class=\"comment\">//处理日志模块 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//日志文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> accessLogfile = fs.createWriteStream(<span class=\"string\">'access.log'</span>, &#123;flags:<span class=\"string\">'a'</span>&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> errorLogfile = fs.createWriteStream(<span class=\"string\">'error.log'</span>, &#123;flags:<span class=\"string\">'a'</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.set(<span class=\"string\">'env'</span>, <span class=\"string\">'production'</span>);</span><br><span class=\"line\">app.use(logger(&#123;stream: accessLogfile&#125;)); <span class=\"comment\">//访问日志</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//处理错误日志，处理错误的中间件一定要写在路由后面</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">'production'</span> == app.get(<span class=\"string\">'env'</span>)) &#123;</span><br><span class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, req, res, next</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> meta = <span class=\"string\">'['</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() + <span class=\"string\">'] '</span> + req.url + <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    errorLogfile.write(meta + err.stack + <span class=\"string\">'\\n'</span>);</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>moment  </p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.js</span><br><span class=\"line\">var <span class=\"built_in\">moment</span> = require('<span class=\"built_in\">moment</span>'); <span class=\"comment\">//处理时间格式</span></span><br><span class=\"line\">在中间件里</span><br><span class=\"line\">res.locals.<span class=\"built_in\">moment</span> = <span class=\"built_in\">moment</span>;  <span class=\"comment\">//向前台模板发送处理时间的moment方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">jade模板文件</span><br><span class=\"line\"><span class=\"built_in\">moment</span>(item.meta.updateAt).<span class=\"keyword\">format</span>('MM/DD/YYYY') <span class=\"comment\">//item.meta.updateAt是后台传过来的时间数据new Date()</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>bcrypt-nodejs 加盐模块</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bcrypt = <span class=\"built_in\">require</span>(<span class=\"string\">'bcrypt-nodejs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> SALL_WORK_FACTOR = <span class=\"number\">10</span>; <span class=\"comment\">//数值越大，破解越复杂</span></span><br><span class=\"line\">bcrypt.genSalt(SALL_WORK_FACTOR, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, salt</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> next(err);</span><br><span class=\"line\"></span><br><span class=\"line\">        bcrypt.hash(user.password, salt, <span class=\"literal\">null</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, hash</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(err) <span class=\"keyword\">return</span> next(err);</span><br><span class=\"line\"></span><br><span class=\"line\">            user.password = hash</span><br><span class=\"line\">            next() <span class=\"comment\">//将流程走下去</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>underscore （用到这模块的继承方法）  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> _ = <span class=\"built_in\">require</span>(<span class=\"string\">'underscore'</span>);</span><br><span class=\"line\">_movie = _.extend(movie, movieObj)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"9-jade模板引擎\"><a href=\"#9-jade模板引擎\" class=\"headerlink\" title=\"9.jade模板引擎\"></a>9.jade模板引擎</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">layout.jade 公用的部份</span><br><span class=\"line\"></span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">  head</span><br><span class=\"line\">    meta(charset=&quot;utf-8&quot;)</span><br><span class=\"line\">    title #&#123;title&#125; - imoocMovie</span><br><span class=\"line\">    include ./includes/head</span><br><span class=\"line\">  body</span><br><span class=\"line\">    include ./includes/header</span><br><span class=\"line\">    block content</span><br><span class=\"line\">    include ./includes/footer</span><br></pre></td></tr></table></figure>\n<p>引进用include<br>block content是主体内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends ../layout  //-扩展layout</span><br><span class=\"line\"></span><br><span class=\"line\">block content</span><br><span class=\"line\">  .container</span><br><span class=\"line\">    .row</span><br><span class=\"line\">      each cat in categories</span><br><span class=\"line\">        .panel.panel-default</span><br><span class=\"line\">          .panel-heading</span><br><span class=\"line\">            h3</span><br><span class=\"line\">              a(href=&apos;/results?cat=#&#123;cat._id&#125;&amp;p=0&apos;) #&#123;cat.name&#125;</span><br><span class=\"line\">          .panel-body</span><br><span class=\"line\">            if cat.movies &amp;&amp; cat.movies.length &gt; 0</span><br><span class=\"line\">              each item in cat.movies</span><br><span class=\"line\">                .col-md-2</span><br><span class=\"line\">                  .thumbnail</span><br><span class=\"line\">                    a(href=&quot;/movie/#&#123;item._id&#125;&quot;)</span><br><span class=\"line\">                      if item.poster.indexOf(&apos;http:&apos;) &gt; -1</span><br><span class=\"line\">                        img(src=&quot;#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                      else</span><br><span class=\"line\">                        img(src=&quot;/upload/#&#123;item.poster&#125;&quot;, alt=&quot;#&#123;item.title&#125;&quot;)</span><br><span class=\"line\">                    .caption</span><br><span class=\"line\">                      h4 #&#123;item.title&#125;</span><br><span class=\"line\">                      p: a.btn.btn-primary(href=&quot;/movie/#&#123;item._id&#125;&quot;, role=&quot;button&quot;) 观看预告片</span><br><span class=\"line\">    script(src=&apos;/build/admin.min.js&apos;)</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>request（发http请求）<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> request = <span class=\"keyword\">require</span>(<span class=\"string\">'request'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用法</span></span><br><span class=\"line\">request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, function (error, response, body) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = body;</span><br><span class=\"line\">                <span class=\"built_in\">var</span> now = (<span class=\"literal\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"built_in\">var</span> expires_in = now + (<span class=\"built_in\">data</span>.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                <span class=\"built_in\">data</span>.expires_in = expires_in;</span><br><span class=\"line\">                resolve(<span class=\"built_in\">data</span>);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">'can not get ticket'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"Web离线应用","date":"2017-06-12T16:00:00.000Z","_content":"\n## 前言\n\n编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。\n\n## Application cache\n\n如果要启用应用缓存，就需要在html标签加manifest属性\n```html\n<!DOCTPYE HTML>\n<html manifest=\"demo.appcache\">\n...\n</html>\n```\ndemo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  \n### manifest文件\n告知浏览器需要（或不需要）缓存的文件，包括三部分：  \n* **CACHE MANIFEST** 此标题下出现的文件将在首次下载后进行缓存\n* **NETWORK** 此标题下列出的文件需要在访问服务器，且不被缓存\n* **FALLBACK** 此标题下列出的文件是页面无法被访问时退回的页面\n\n第一行写CACHE MANIFEST是必须的，写法为\n```\nCACHE MANIFEST\n# 2017-06-10 v1.0.0\nindex.html \njqury.min.js\n```\n#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。**一般写修改不频繁的文件**\n\n```\nNETWORK:\n*\n```\n一般写星号，也就是其他的页面都要通过访问服务器\n\n```\nFALLBACK:\n/html/ /offline.html\n```\n如果无法建立因特网连接，则用 \"offline.html\" 替代 /html5/ 目录中的所有文件。\n\n### 更新缓存的情况\n* 用户清空浏览器缓存\n* manifest文件被修改\n* 由程序文件来更新应用缓存\n\n### 设置MIME-type\n需要给manifest文件设置MIME-type为text/cache-manifest\n* 在Apache服务器\n可以在根目录下添加.htaccess文件\n```\nAddType text/cache-manifest manifest\n```\n或者在manifest文件开头添加（前提是文件是php后缀名）\n```\n<?php\nheader(\"Content-Type: text/cache-manifest\");\n?>\n```\n==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==\n\n## localStorage/sessionStorage\n在浏览器上（本地）储存用户的浏览数据\n两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。\n\n两者的API都是相同的，主要有一下：\n* 保存数据：localStorage.setItem(key,value);\n* 读取数据：localStorage.getItem(key);\n* 删除单个数据：localStorage.removeItem(key);\n* 删除所有数据：localStorage.clear();\n* 得到某个索引的key：localStorage.key(index);\n保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value  \n**一般储存变更频繁的文件**\n\n\n## web SQL\n位于浏览器中的关系型数据库\n核心的方法就三个：\n* openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。\n\n* transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。\n\n* executeSql：这个方法用于执行真实的SQL查询。\n\n### 打开数据库\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n```\nopenDatebase方法接受五个参数，分别是：\n* 数据名称\n* 数据库版本（写死就行）\n* 数据库描述\n* 大小\n* 回调（可选）\n\n### 插入和读取数据\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n \ndb.transaction(function (tx) {\n   tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, \"菜鸟教程\")');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, \"www.runoob.com\")');\n});\n \ndb.transaction(function (tx) {\n   tx.executeSql('SELECT * FROM LOGS', [], function (tx, results) {\n      var len = results.rows.length, i;\n      msg = \"<p>查询记录条数: \" + len + \"</p>\";\n      document.querySelector('#status').innerHTML +=  msg;\n    \n      for (i = 0; i < len; i++){\n         alert(results.rows.item(i).log );\n      }\n    \n   }, null);\n});\n```\n\n## 采用MVC思想写js代码\n* applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用\n\n* articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面\n\n* article.js //article模型，调用更底层的database对象（对数据库操作的封装）\n\n* database.js //更底层的M层，封装对数据库的操作\n\n* templates.js //V层，插入html节点\n\n程序的入口就只有一个\n```\n//applicationController.js\n//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready\n    function start(resources, storeResources) {\n        APP.database.open(function() {\n            //监听hash的变化\n            $(window).bind(\"hashchange\", route);\n\n            //往DOM里添加CSS\n            $(\"head\").append('<style>' +　resources.css + '</style>');\n\n            //创造app应用名称节点\n            $('body').html(APP.templates.application());\n\n            //移除下载提示\n            $('#loading').remove();\n\n            route();\n        });\n\n        if(storeResources) {\n            localStorage.resources = JSON.stringify(resources);\n        }\n    }\n```\n在index.html调用\n```JavaScript\n$(document).ready(function() {\n            console.log('ready %o', new Date()); //%o代替javascript对象\n\n            var APP_START_FAILED = \"I'm sorry, the app can't start right now.\"\n\n            function startWithResources(resources, storeResources) {\n                //执行加载的js函数\n                try {\n                    //eval(resources.js)\n                    insertScript(resources.js);\n                    setTimeout(function() {\n                        APP.applicationController.start(resources, storeResources);  //程序入口\n                    }, 500); \n\n                } catch(e) {\n                    alert(APP_START_FAILED);\n                    console.log('%o', e);\n                } \n            }\n\n            function startWithOnlineResources(resources) {\n                startWithResources(resources, true);\n            }\n\n            function startWithOfflineResources() {\n                var resources;\n\n                //假如之前已经访问了并且js文件已经缓存进localStorage，执行以下\n                if(localStorage && localStorage.resources) {\n                    resources = JSON.parse(localStorage.resources);\n                    startWithResources(resources, false);\n\n                    //否则输出提醒信息\n                }else {\n                    alert(APP_START_FAILED);\n                }\n            }\n            \n            function insertScript(script) {\n                var node = document.createElement('script');\n                node.innerHTML = script;\n                document.head.appendChild(node);\n            }\n\n            //假如设备离线，则执行离线操作\n            if(navigator && navigator.onLine === false) {\n                startWithOfflineResources();\n\n                //否则，下载资源并执行，假如成功就把资源添加进local storage。\n            }else {\n                $.ajax({\n                    url: 'api/resources',\n                    success: startWithOnlineResources,\n                    error: startWithOfflineResources,\n                    dataType: 'json'\n                });\n            }\n\n            \n        })\n```\n程序的设计就类似于树形的结构：\n\n```\ngraph TD\n    A[程序入口]-->B[主控制器]\n    B-->C[各种次控制器]\n    C-->D[模型]\n    C-->E[视图]\n    B-->E\n```\n主控制器的第一步工作是打开数据库\n\n### 对象的封装\n全局就一个APP对象，为window的全局变量\n```\nwindow.APP = {};\n(function(APP){\n    APP.applicationController = (function(){\n        ...\n        \n        return {\n            start: start\n        }\n    }());\n    \n    APP.articleController = (funcion(){\n       ...\n       \n       return {\n            synchronizeWithServer:　synchronizeWithServer,\n            showArticle: showArticle,\n            showArticleList: showArticleList\n        }\n    }());\n    \n    \n    \n    APP.templates = (function(){}(\n        ...\n        \n        return {\n            application: application,\n            home: home,\n            articleList: articleList,\n            article: article,\n            articleLoading:　articleLoading\n        }\n        \n    )()};\n    \n    APP.database = (function(){}(\n        ...\n        \n        return {\n            open: open,\n            runQuery: runQuery\n        }\n    )()};\n    \n    APP.article = (function(){}(\n        ...\n        \n        return {\n            deleteArticles: deleteArticles,\n            insertArticles: insertArticles,\n            selectBasicArticles: selectBasicArticles,\n            selectFullArticle: selectFullArticle\n        }\n    )()};\n}(APP))\n```\n这里运用的JS的闭包思想，每一个(function(){...}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.\n \n\n\n\n\n\n","source":"_posts/web离线应用.md","raw":"---\ntitle: Web离线应用\ndate: 2017-06-13\ntags: [ApplicationCache,localStorage,webSQL,闭包]\n---\n\n## 前言\n\n编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。\n\n## Application cache\n\n如果要启用应用缓存，就需要在html标签加manifest属性\n```html\n<!DOCTPYE HTML>\n<html manifest=\"demo.appcache\">\n...\n</html>\n```\ndemo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  \n### manifest文件\n告知浏览器需要（或不需要）缓存的文件，包括三部分：  \n* **CACHE MANIFEST** 此标题下出现的文件将在首次下载后进行缓存\n* **NETWORK** 此标题下列出的文件需要在访问服务器，且不被缓存\n* **FALLBACK** 此标题下列出的文件是页面无法被访问时退回的页面\n\n第一行写CACHE MANIFEST是必须的，写法为\n```\nCACHE MANIFEST\n# 2017-06-10 v1.0.0\nindex.html \njqury.min.js\n```\n#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。**一般写修改不频繁的文件**\n\n```\nNETWORK:\n*\n```\n一般写星号，也就是其他的页面都要通过访问服务器\n\n```\nFALLBACK:\n/html/ /offline.html\n```\n如果无法建立因特网连接，则用 \"offline.html\" 替代 /html5/ 目录中的所有文件。\n\n### 更新缓存的情况\n* 用户清空浏览器缓存\n* manifest文件被修改\n* 由程序文件来更新应用缓存\n\n### 设置MIME-type\n需要给manifest文件设置MIME-type为text/cache-manifest\n* 在Apache服务器\n可以在根目录下添加.htaccess文件\n```\nAddType text/cache-manifest manifest\n```\n或者在manifest文件开头添加（前提是文件是php后缀名）\n```\n<?php\nheader(\"Content-Type: text/cache-manifest\");\n?>\n```\n==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==\n\n## localStorage/sessionStorage\n在浏览器上（本地）储存用户的浏览数据\n两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。\n\n两者的API都是相同的，主要有一下：\n* 保存数据：localStorage.setItem(key,value);\n* 读取数据：localStorage.getItem(key);\n* 删除单个数据：localStorage.removeItem(key);\n* 删除所有数据：localStorage.clear();\n* 得到某个索引的key：localStorage.key(index);\n保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value  \n**一般储存变更频繁的文件**\n\n\n## web SQL\n位于浏览器中的关系型数据库\n核心的方法就三个：\n* openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。\n\n* transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。\n\n* executeSql：这个方法用于执行真实的SQL查询。\n\n### 打开数据库\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n```\nopenDatebase方法接受五个参数，分别是：\n* 数据名称\n* 数据库版本（写死就行）\n* 数据库描述\n* 大小\n* 回调（可选）\n\n### 插入和读取数据\n```\nvar db = openDatabase('mydb', '1.0', 'Test DB', 2 * 1024 * 1024);\n \ndb.transaction(function (tx) {\n   tx.executeSql('CREATE TABLE IF NOT EXISTS LOGS (id unique, log)');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (1, \"菜鸟教程\")');\n   tx.executeSql('INSERT INTO LOGS (id, log) VALUES (2, \"www.runoob.com\")');\n});\n \ndb.transaction(function (tx) {\n   tx.executeSql('SELECT * FROM LOGS', [], function (tx, results) {\n      var len = results.rows.length, i;\n      msg = \"<p>查询记录条数: \" + len + \"</p>\";\n      document.querySelector('#status').innerHTML +=  msg;\n    \n      for (i = 0; i < len; i++){\n         alert(results.rows.item(i).log );\n      }\n    \n   }, null);\n});\n```\n\n## 采用MVC思想写js代码\n* applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用\n\n* articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面\n\n* article.js //article模型，调用更底层的database对象（对数据库操作的封装）\n\n* database.js //更底层的M层，封装对数据库的操作\n\n* templates.js //V层，插入html节点\n\n程序的入口就只有一个\n```\n//applicationController.js\n//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready\n    function start(resources, storeResources) {\n        APP.database.open(function() {\n            //监听hash的变化\n            $(window).bind(\"hashchange\", route);\n\n            //往DOM里添加CSS\n            $(\"head\").append('<style>' +　resources.css + '</style>');\n\n            //创造app应用名称节点\n            $('body').html(APP.templates.application());\n\n            //移除下载提示\n            $('#loading').remove();\n\n            route();\n        });\n\n        if(storeResources) {\n            localStorage.resources = JSON.stringify(resources);\n        }\n    }\n```\n在index.html调用\n```JavaScript\n$(document).ready(function() {\n            console.log('ready %o', new Date()); //%o代替javascript对象\n\n            var APP_START_FAILED = \"I'm sorry, the app can't start right now.\"\n\n            function startWithResources(resources, storeResources) {\n                //执行加载的js函数\n                try {\n                    //eval(resources.js)\n                    insertScript(resources.js);\n                    setTimeout(function() {\n                        APP.applicationController.start(resources, storeResources);  //程序入口\n                    }, 500); \n\n                } catch(e) {\n                    alert(APP_START_FAILED);\n                    console.log('%o', e);\n                } \n            }\n\n            function startWithOnlineResources(resources) {\n                startWithResources(resources, true);\n            }\n\n            function startWithOfflineResources() {\n                var resources;\n\n                //假如之前已经访问了并且js文件已经缓存进localStorage，执行以下\n                if(localStorage && localStorage.resources) {\n                    resources = JSON.parse(localStorage.resources);\n                    startWithResources(resources, false);\n\n                    //否则输出提醒信息\n                }else {\n                    alert(APP_START_FAILED);\n                }\n            }\n            \n            function insertScript(script) {\n                var node = document.createElement('script');\n                node.innerHTML = script;\n                document.head.appendChild(node);\n            }\n\n            //假如设备离线，则执行离线操作\n            if(navigator && navigator.onLine === false) {\n                startWithOfflineResources();\n\n                //否则，下载资源并执行，假如成功就把资源添加进local storage。\n            }else {\n                $.ajax({\n                    url: 'api/resources',\n                    success: startWithOnlineResources,\n                    error: startWithOfflineResources,\n                    dataType: 'json'\n                });\n            }\n\n            \n        })\n```\n程序的设计就类似于树形的结构：\n\n```\ngraph TD\n    A[程序入口]-->B[主控制器]\n    B-->C[各种次控制器]\n    C-->D[模型]\n    C-->E[视图]\n    B-->E\n```\n主控制器的第一步工作是打开数据库\n\n### 对象的封装\n全局就一个APP对象，为window的全局变量\n```\nwindow.APP = {};\n(function(APP){\n    APP.applicationController = (function(){\n        ...\n        \n        return {\n            start: start\n        }\n    }());\n    \n    APP.articleController = (funcion(){\n       ...\n       \n       return {\n            synchronizeWithServer:　synchronizeWithServer,\n            showArticle: showArticle,\n            showArticleList: showArticleList\n        }\n    }());\n    \n    \n    \n    APP.templates = (function(){}(\n        ...\n        \n        return {\n            application: application,\n            home: home,\n            articleList: articleList,\n            article: article,\n            articleLoading:　articleLoading\n        }\n        \n    )()};\n    \n    APP.database = (function(){}(\n        ...\n        \n        return {\n            open: open,\n            runQuery: runQuery\n        }\n    )()};\n    \n    APP.article = (function(){}(\n        ...\n        \n        return {\n            deleteArticles: deleteArticles,\n            insertArticles: insertArticles,\n            selectBasicArticles: selectBasicArticles,\n            selectFullArticle: selectFullArticle\n        }\n    )()};\n}(APP))\n```\n这里运用的JS的闭包思想，每一个(function(){...}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.\n \n\n\n\n\n\n","slug":"web离线应用","published":1,"updated":"2017-06-13T15:21:27.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7frb003kw8qz5er7umvg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。</p>\n<h2 id=\"Application-cache\"><a href=\"#Application-cache\" class=\"headerlink\" title=\"Application cache\"></a>Application cache</h2><p>如果要启用应用缓存，就需要在html标签加manifest属性<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">!DOCTPYE</span> <span class=\"attr\">HTML</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">manifest</span>=<span class=\"string\">\"demo.appcache\"</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>demo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  </p>\n<h3 id=\"manifest文件\"><a href=\"#manifest文件\" class=\"headerlink\" title=\"manifest文件\"></a>manifest文件</h3><p>告知浏览器需要（或不需要）缓存的文件，包括三部分：  </p>\n<ul>\n<li><strong>CACHE MANIFEST</strong> 此标题下出现的文件将在首次下载后进行缓存</li>\n<li><strong>NETWORK</strong> 此标题下列出的文件需要在访问服务器，且不被缓存</li>\n<li><strong>FALLBACK</strong> 此标题下列出的文件是页面无法被访问时退回的页面</li>\n</ul>\n<p>第一行写CACHE MANIFEST是必须的，写法为<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">CACHE</span> <span class=\"selector-tag\">MANIFEST</span></span><br><span class=\"line\"># 2017<span class=\"selector-tag\">-06-10</span> <span class=\"selector-tag\">v1</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span></span><br><span class=\"line\"><span class=\"selector-tag\">index</span><span class=\"selector-class\">.html</span> </span><br><span class=\"line\"><span class=\"selector-tag\">jqury</span><span class=\"selector-class\">.min</span><span class=\"selector-class\">.js</span></span><br></pre></td></tr></table></figure></p>\n<p>#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。<strong>一般写修改不频繁的文件</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">NETWORK:</span></span><br><span class=\"line\">*</span><br></pre></td></tr></table></figure>\n<p>一般写星号，也就是其他的页面都要通过访问服务器</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">FALLBACK:</span></span><br><span class=\"line\"><span class=\"meta-keyword\">/html/</span> /offline.html</span><br></pre></td></tr></table></figure>\n<p>如果无法建立因特网连接，则用 “offline.html” 替代 /html5/ 目录中的所有文件。</p>\n<h3 id=\"更新缓存的情况\"><a href=\"#更新缓存的情况\" class=\"headerlink\" title=\"更新缓存的情况\"></a>更新缓存的情况</h3><ul>\n<li>用户清空浏览器缓存</li>\n<li>manifest文件被修改</li>\n<li>由程序文件来更新应用缓存</li>\n</ul>\n<h3 id=\"设置MIME-type\"><a href=\"#设置MIME-type\" class=\"headerlink\" title=\"设置MIME-type\"></a>设置MIME-type</h3><p>需要给manifest文件设置MIME-type为text/cache-manifest</p>\n<ul>\n<li>在Apache服务器<br>可以在根目录下添加.htaccess文件<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddType <span class=\"built_in\">text</span>/cache-manifest manifest</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>或者在manifest文件开头添加（前提是文件是php后缀名）<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">\"Content-Type: text/cache-manifest\"</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==</p>\n<h2 id=\"localStorage-sessionStorage\"><a href=\"#localStorage-sessionStorage\" class=\"headerlink\" title=\"localStorage/sessionStorage\"></a>localStorage/sessionStorage</h2><p>在浏览器上（本地）储存用户的浏览数据<br>两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。</p>\n<p>两者的API都是相同的，主要有一下：</p>\n<ul>\n<li>保存数据：localStorage.setItem(key,value);</li>\n<li>读取数据：localStorage.getItem(key);</li>\n<li>删除单个数据：localStorage.removeItem(key);</li>\n<li>删除所有数据：localStorage.clear();</li>\n<li>得到某个索引的key：localStorage.key(index);<br>保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value<br><strong>一般储存变更频繁的文件</strong></li>\n</ul>\n<h2 id=\"web-SQL\"><a href=\"#web-SQL\" class=\"headerlink\" title=\"web SQL\"></a>web SQL</h2><p>位于浏览器中的关系型数据库<br>核心的方法就三个：</p>\n<ul>\n<li><p>openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。</p>\n</li>\n<li><p>transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。</p>\n</li>\n<li><p>executeSql：这个方法用于执行真实的SQL查询。</p>\n</li>\n</ul>\n<h3 id=\"打开数据库\"><a href=\"#打开数据库\" class=\"headerlink\" title=\"打开数据库\"></a>打开数据库</h3><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = openDatabase(<span class=\"string\">'mydb'</span>, <span class=\"string\">'1.0'</span>, <span class=\"string\">'Test DB'</span>, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br></pre></td></tr></table></figure>\n<p>openDatebase方法接受五个参数，分别是：</p>\n<ul>\n<li>数据名称</li>\n<li>数据库版本（写死就行）</li>\n<li>数据库描述</li>\n<li>大小</li>\n<li>回调（可选）</li>\n</ul>\n<h3 id=\"插入和读取数据\"><a href=\"#插入和读取数据\" class=\"headerlink\" title=\"插入和读取数据\"></a>插入和读取数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = openDatabase(<span class=\"string\">'mydb'</span>, <span class=\"string\">'1.0'</span>, <span class=\"string\">'Test DB'</span>, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) </span>&#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)'</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'INSERT INTO LOGS (id, log) VALUES (1, \"菜鸟教程\")'</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'INSERT INTO LOGS (id, log) VALUES (2, \"www.runoob.com\")'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) </span>&#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'SELECT * FROM LOGS'</span>, [], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">tx, results</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> len = results.rows.length, i;</span><br><span class=\"line\">      msg = <span class=\"string\">\"&lt;p&gt;查询记录条数: \"</span> + len + <span class=\"string\">\"&lt;/p&gt;\"</span>;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#status'</span>).innerHTML +=  msg;</span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">         alert(results.rows.item(i).log );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   &#125;, <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"采用MVC思想写js代码\"><a href=\"#采用MVC思想写js代码\" class=\"headerlink\" title=\"采用MVC思想写js代码\"></a>采用MVC思想写js代码</h2><ul>\n<li><p>applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用</p>\n</li>\n<li><p>articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面</p>\n</li>\n<li><p>article.js //article模型，调用更底层的database对象（对数据库操作的封装）</p>\n</li>\n<li><p>database.js //更底层的M层，封装对数据库的操作</p>\n</li>\n<li><p>templates.js //V层，插入html节点</p>\n</li>\n</ul>\n<p>程序的入口就只有一个<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//applicationController.js</span></span><br><span class=\"line\"><span class=\"comment\">//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\">resources, storeResources</span>) </span>&#123;</span><br><span class=\"line\">        APP.database.open(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//监听hash的变化</span></span><br><span class=\"line\">            $(<span class=\"built_in\">window</span>).bind(<span class=\"string\">\"hashchange\"</span>, route);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//往DOM里添加CSS</span></span><br><span class=\"line\">            $(<span class=\"string\">\"head\"</span>).append(<span class=\"string\">'&lt;style&gt;'</span> +　resources.css + <span class=\"string\">'&lt;/style&gt;'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//创造app应用名称节点</span></span><br><span class=\"line\">            $(<span class=\"string\">'body'</span>).html(APP.templates.application());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//移除下载提示</span></span><br><span class=\"line\">            $(<span class=\"string\">'#loading'</span>).remove();</span><br><span class=\"line\"></span><br><span class=\"line\">            route();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(storeResources) &#123;</span><br><span class=\"line\">            localStorage.resources = <span class=\"built_in\">JSON</span>.stringify(resources);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在index.html调用<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'ready %o'</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()); <span class=\"comment\">//%o代替javascript对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> APP_START_FAILED = <span class=\"string\">\"I'm sorry, the app can't start right now.\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startWithResources</span>(<span class=\"params\">resources, storeResources</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//执行加载的js函数</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//eval(resources.js)</span></span><br><span class=\"line\">                    insertScript(resources.js);</span><br><span class=\"line\">                    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                        APP.applicationController.start(resources, storeResources);  <span class=\"comment\">//程序入口</span></span><br><span class=\"line\">                    &#125;, <span class=\"number\">500</span>); </span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">                    alert(APP_START_FAILED);</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">'%o'</span>, e);</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startWithOnlineResources</span>(<span class=\"params\">resources</span>) </span>&#123;</span><br><span class=\"line\">                startWithResources(resources, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startWithOfflineResources</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> resources;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//假如之前已经访问了并且js文件已经缓存进localStorage，执行以下</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(localStorage &amp;&amp; localStorage.resources) &#123;</span><br><span class=\"line\">                    resources = <span class=\"built_in\">JSON</span>.parse(localStorage.resources);</span><br><span class=\"line\">                    startWithResources(resources, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//否则输出提醒信息</span></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    alert(APP_START_FAILED);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertScript</span>(<span class=\"params\">script</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> node = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">                node.innerHTML = script;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.head.appendChild(node);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//假如设备离线，则执行离线操作</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(navigator &amp;&amp; navigator.onLine === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                startWithOfflineResources();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//否则，下载资源并执行，假如成功就把资源添加进local storage。</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                $.ajax(&#123;</span><br><span class=\"line\">                    url: <span class=\"string\">'api/resources'</span>,</span><br><span class=\"line\">                    success: startWithOnlineResources,</span><br><span class=\"line\">                    error: startWithOfflineResources,</span><br><span class=\"line\">                    dataType: <span class=\"string\">'json'</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>程序的设计就类似于树形的结构：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">    A[程序入口]--&gt;B[主控制器]</span><br><span class=\"line\">    B--&gt;<span class=\"keyword\">C</span>[各种次控制器]</span><br><span class=\"line\">    <span class=\"keyword\">C</span>--&gt;<span class=\"keyword\">D</span>[模型]</span><br><span class=\"line\">    <span class=\"keyword\">C</span>--&gt;<span class=\"keyword\">E</span>[视图]</span><br><span class=\"line\">    B--&gt;<span class=\"keyword\">E</span></span><br></pre></td></tr></table></figure>\n<p>主控制器的第一步工作是打开数据库</p>\n<h3 id=\"对象的封装\"><a href=\"#对象的封装\" class=\"headerlink\" title=\"对象的封装\"></a>对象的封装</h3><p>全局就一个APP对象，为window的全局变量<br><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.APP = &#123;&#125;;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(APP)</span>&#123;</span></span><br><span class=\"line\">    APP.applicationController = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            start: start</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.articleController = (funcion()&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            synchronizeWithServer:　synchronizeWithServer,</span><br><span class=\"line\">            showArticle: showArticle,</span><br><span class=\"line\">            showArticleList: showArticleList</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.templates = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;&#125;<span class=\"params\">(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            application: application,</span><br><span class=\"line\">            home: home,</span><br><span class=\"line\">            articleList: articleList,</span><br><span class=\"line\">            article: article,</span><br><span class=\"line\">            articleLoading:　articleLoading</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    )</span><span class=\"params\">()</span>&#125;;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.database = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;&#125;<span class=\"params\">(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            open: open,</span><br><span class=\"line\">            runQuery: runQuery</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><span class=\"params\">()</span>&#125;;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.article = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;&#125;<span class=\"params\">(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            deleteArticles: deleteArticles,</span><br><span class=\"line\">            insertArticles: insertArticles,</span><br><span class=\"line\">            selectBasicArticles: selectBasicArticles,</span><br><span class=\"line\">            selectFullArticle: selectFullArticle</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><span class=\"params\">()</span>&#125;;</span></span><br><span class=\"line\">&#125;(APP))</span><br></pre></td></tr></table></figure></p>\n<p>这里运用的JS的闭包思想，每一个(function(){…}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.</p>\n","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>编写web离线应用，需要把应用文件和数据存在本地，也就是浏览器中。这主要用到了H5的三个重要的知识点，Application Cache(应用程序缓存), localStorage/sessionStorage(web存储), web SQL(web数据库)。</p>\n<h2 id=\"Application-cache\"><a href=\"#Application-cache\" class=\"headerlink\" title=\"Application cache\"></a>Application cache</h2><p>如果要启用应用缓存，就需要在html标签加manifest属性<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">!DOCTPYE</span> <span class=\"attr\">HTML</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">manifest</span>=<span class=\"string\">\"demo.appcache\"</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>demo.appcache就是写需要缓存页面信息的manifest文件，文件的后缀名可以任写，但建议统一为.appcache。  </p>\n<h3 id=\"manifest文件\"><a href=\"#manifest文件\" class=\"headerlink\" title=\"manifest文件\"></a>manifest文件</h3><p>告知浏览器需要（或不需要）缓存的文件，包括三部分：  </p>\n<ul>\n<li><strong>CACHE MANIFEST</strong> 此标题下出现的文件将在首次下载后进行缓存</li>\n<li><strong>NETWORK</strong> 此标题下列出的文件需要在访问服务器，且不被缓存</li>\n<li><strong>FALLBACK</strong> 此标题下列出的文件是页面无法被访问时退回的页面</li>\n</ul>\n<p>第一行写CACHE MANIFEST是必须的，写法为<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">CACHE</span> <span class=\"selector-tag\">MANIFEST</span></span><br><span class=\"line\"># 2017<span class=\"selector-tag\">-06-10</span> <span class=\"selector-tag\">v1</span><span class=\"selector-class\">.0</span><span class=\"selector-class\">.0</span></span><br><span class=\"line\"><span class=\"selector-tag\">index</span><span class=\"selector-class\">.html</span> </span><br><span class=\"line\"><span class=\"selector-tag\">jqury</span><span class=\"selector-class\">.min</span><span class=\"selector-class\">.js</span></span><br></pre></td></tr></table></figure></p>\n<p>#后面的是注释，写上日期和版本号，当index.html等页面有更新时，改日期或者版本号，浏览器会将页面进行更新和缓存，方便。其中能应用默访问的页面，也就是index.html是默认被缓存的，不写也可以。<strong>一般写修改不频繁的文件</strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">NETWORK:</span></span><br><span class=\"line\">*</span><br></pre></td></tr></table></figure>\n<p>一般写星号，也就是其他的页面都要通过访问服务器</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">FALLBACK:</span></span><br><span class=\"line\"><span class=\"meta-keyword\">/html/</span> /offline.html</span><br></pre></td></tr></table></figure>\n<p>如果无法建立因特网连接，则用 “offline.html” 替代 /html5/ 目录中的所有文件。</p>\n<h3 id=\"更新缓存的情况\"><a href=\"#更新缓存的情况\" class=\"headerlink\" title=\"更新缓存的情况\"></a>更新缓存的情况</h3><ul>\n<li>用户清空浏览器缓存</li>\n<li>manifest文件被修改</li>\n<li>由程序文件来更新应用缓存</li>\n</ul>\n<h3 id=\"设置MIME-type\"><a href=\"#设置MIME-type\" class=\"headerlink\" title=\"设置MIME-type\"></a>设置MIME-type</h3><p>需要给manifest文件设置MIME-type为text/cache-manifest</p>\n<ul>\n<li>在Apache服务器<br>可以在根目录下添加.htaccess文件<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddType <span class=\"built_in\">text</span>/cache-manifest manifest</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>或者在manifest文件开头添加（前提是文件是php后缀名）<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">header(<span class=\"string\">\"Content-Type: text/cache-manifest\"</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>==貌似使用nodejs做后台不用设置MIME-type也可以将程序文件写进缓存==</p>\n<h2 id=\"localStorage-sessionStorage\"><a href=\"#localStorage-sessionStorage\" class=\"headerlink\" title=\"localStorage/sessionStorage\"></a>localStorage/sessionStorage</h2><p>在浏览器上（本地）储存用户的浏览数据<br>两者的区别就在于，localStorage储存的数据没有时间的限制，sessionStorage储存的数据，当关闭浏览器时，数据就没了。</p>\n<p>两者的API都是相同的，主要有一下：</p>\n<ul>\n<li>保存数据：localStorage.setItem(key,value);</li>\n<li>读取数据：localStorage.getItem(key);</li>\n<li>删除单个数据：localStorage.removeItem(key);</li>\n<li>删除所有数据：localStorage.clear();</li>\n<li>得到某个索引的key：localStorage.key(index);<br>保存数据还可以直接定义localStorage的属性，比如localStorage.resource = value<br><strong>一般储存变更频繁的文件</strong></li>\n</ul>\n<h2 id=\"web-SQL\"><a href=\"#web-SQL\" class=\"headerlink\" title=\"web SQL\"></a>web SQL</h2><p>位于浏览器中的关系型数据库<br>核心的方法就三个：</p>\n<ul>\n<li><p>openDatabase：这个方法使用现有数据库或创建新数据库创建数据库对象。</p>\n</li>\n<li><p>transaction：这个方法允许我们根据情况控制事务提交或回滚，意思是可以划分事务。</p>\n</li>\n<li><p>executeSql：这个方法用于执行真实的SQL查询。</p>\n</li>\n</ul>\n<h3 id=\"打开数据库\"><a href=\"#打开数据库\" class=\"headerlink\" title=\"打开数据库\"></a>打开数据库</h3><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = openDatabase(<span class=\"string\">'mydb'</span>, <span class=\"string\">'1.0'</span>, <span class=\"string\">'Test DB'</span>, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br></pre></td></tr></table></figure>\n<p>openDatebase方法接受五个参数，分别是：</p>\n<ul>\n<li>数据名称</li>\n<li>数据库版本（写死就行）</li>\n<li>数据库描述</li>\n<li>大小</li>\n<li>回调（可选）</li>\n</ul>\n<h3 id=\"插入和读取数据\"><a href=\"#插入和读取数据\" class=\"headerlink\" title=\"插入和读取数据\"></a>插入和读取数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> db = openDatabase(<span class=\"string\">'mydb'</span>, <span class=\"string\">'1.0'</span>, <span class=\"string\">'Test DB'</span>, <span class=\"number\">2</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) </span>&#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)'</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'INSERT INTO LOGS (id, log) VALUES (1, \"菜鸟教程\")'</span>);</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'INSERT INTO LOGS (id, log) VALUES (2, \"www.runoob.com\")'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">db.transaction(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">tx</span>) </span>&#123;</span><br><span class=\"line\">   tx.executeSql(<span class=\"string\">'SELECT * FROM LOGS'</span>, [], <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">tx, results</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> len = results.rows.length, i;</span><br><span class=\"line\">      msg = <span class=\"string\">\"&lt;p&gt;查询记录条数: \"</span> + len + <span class=\"string\">\"&lt;/p&gt;\"</span>;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#status'</span>).innerHTML +=  msg;</span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++)&#123;</span><br><span class=\"line\">         alert(results.rows.item(i).log );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">   &#125;, <span class=\"literal\">null</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"采用MVC思想写js代码\"><a href=\"#采用MVC思想写js代码\" class=\"headerlink\" title=\"采用MVC思想写js代码\"></a>采用MVC思想写js代码</h2><ul>\n<li><p>applicationcontroller.js //程序的入口程序主控制器，向外暴露一个start方法，作为程序的入口。其他的私有函数都是对次控制器暴露出的方法的调用</p>\n</li>\n<li><p>articlescontroller.js //操作articles模型，调用article暴露出的方法实现增删改查以及调用template的方法渲染页面</p>\n</li>\n<li><p>article.js //article模型，调用更底层的database对象（对数据库操作的封装）</p>\n</li>\n<li><p>database.js //更底层的M层，封装对数据库的操作</p>\n</li>\n<li><p>templates.js //V层，插入html节点</p>\n</li>\n</ul>\n<p>程序的入口就只有一个<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//applicationController.js</span></span><br><span class=\"line\"><span class=\"comment\">//webapp的入口函数，类似C语言中的main，或者jq中的$(document).ready</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">start</span>(<span class=\"params\">resources, storeResources</span>) </span>&#123;</span><br><span class=\"line\">        APP.database.open(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//监听hash的变化</span></span><br><span class=\"line\">            $(<span class=\"built_in\">window</span>).bind(<span class=\"string\">\"hashchange\"</span>, route);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//往DOM里添加CSS</span></span><br><span class=\"line\">            $(<span class=\"string\">\"head\"</span>).append(<span class=\"string\">'&lt;style&gt;'</span> +　resources.css + <span class=\"string\">'&lt;/style&gt;'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//创造app应用名称节点</span></span><br><span class=\"line\">            $(<span class=\"string\">'body'</span>).html(APP.templates.application());</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//移除下载提示</span></span><br><span class=\"line\">            $(<span class=\"string\">'#loading'</span>).remove();</span><br><span class=\"line\"></span><br><span class=\"line\">            route();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(storeResources) &#123;</span><br><span class=\"line\">            localStorage.resources = <span class=\"built_in\">JSON</span>.stringify(resources);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在index.html调用<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'ready %o'</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()); <span class=\"comment\">//%o代替javascript对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> APP_START_FAILED = <span class=\"string\">\"I'm sorry, the app can't start right now.\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startWithResources</span>(<span class=\"params\">resources, storeResources</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//执行加载的js函数</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//eval(resources.js)</span></span><br><span class=\"line\">                    insertScript(resources.js);</span><br><span class=\"line\">                    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                        APP.applicationController.start(resources, storeResources);  <span class=\"comment\">//程序入口</span></span><br><span class=\"line\">                    &#125;, <span class=\"number\">500</span>); </span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span>(e) &#123;</span><br><span class=\"line\">                    alert(APP_START_FAILED);</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">'%o'</span>, e);</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startWithOnlineResources</span>(<span class=\"params\">resources</span>) </span>&#123;</span><br><span class=\"line\">                startWithResources(resources, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">startWithOfflineResources</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> resources;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//假如之前已经访问了并且js文件已经缓存进localStorage，执行以下</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(localStorage &amp;&amp; localStorage.resources) &#123;</span><br><span class=\"line\">                    resources = <span class=\"built_in\">JSON</span>.parse(localStorage.resources);</span><br><span class=\"line\">                    startWithResources(resources, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//否则输出提醒信息</span></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    alert(APP_START_FAILED);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertScript</span>(<span class=\"params\">script</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> node = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>);</span><br><span class=\"line\">                node.innerHTML = script;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.head.appendChild(node);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//假如设备离线，则执行离线操作</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(navigator &amp;&amp; navigator.onLine === <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                startWithOfflineResources();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//否则，下载资源并执行，假如成功就把资源添加进local storage。</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                $.ajax(&#123;</span><br><span class=\"line\">                    url: <span class=\"string\">'api/resources'</span>,</span><br><span class=\"line\">                    success: startWithOnlineResources,</span><br><span class=\"line\">                    error: startWithOfflineResources,</span><br><span class=\"line\">                    dataType: <span class=\"string\">'json'</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>程序的设计就类似于树形的结构：</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD</span><br><span class=\"line\">    A[程序入口]--&gt;B[主控制器]</span><br><span class=\"line\">    B--&gt;<span class=\"keyword\">C</span>[各种次控制器]</span><br><span class=\"line\">    <span class=\"keyword\">C</span>--&gt;<span class=\"keyword\">D</span>[模型]</span><br><span class=\"line\">    <span class=\"keyword\">C</span>--&gt;<span class=\"keyword\">E</span>[视图]</span><br><span class=\"line\">    B--&gt;<span class=\"keyword\">E</span></span><br></pre></td></tr></table></figure>\n<p>主控制器的第一步工作是打开数据库</p>\n<h3 id=\"对象的封装\"><a href=\"#对象的封装\" class=\"headerlink\" title=\"对象的封装\"></a>对象的封装</h3><p>全局就一个APP对象，为window的全局变量<br><figure class=\"highlight scilab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.APP = &#123;&#125;;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(APP)</span>&#123;</span></span><br><span class=\"line\">    APP.applicationController = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            start: start</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.articleController = (funcion()&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            synchronizeWithServer:　synchronizeWithServer,</span><br><span class=\"line\">            showArticle: showArticle,</span><br><span class=\"line\">            showArticleList: showArticleList</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;());</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.templates = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;&#125;<span class=\"params\">(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            application: application,</span><br><span class=\"line\">            home: home,</span><br><span class=\"line\">            articleList: articleList,</span><br><span class=\"line\">            article: article,</span><br><span class=\"line\">            articleLoading:　articleLoading</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    )</span><span class=\"params\">()</span>&#125;;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.database = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;&#125;<span class=\"params\">(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            open: open,</span><br><span class=\"line\">            runQuery: runQuery</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><span class=\"params\">()</span>&#125;;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    APP.article = (<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span>&#123;&#125;<span class=\"params\">(</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        </span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            deleteArticles: deleteArticles,</span><br><span class=\"line\">            insertArticles: insertArticles,</span><br><span class=\"line\">            selectBasicArticles: selectBasicArticles,</span><br><span class=\"line\">            selectFullArticle: selectFullArticle</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><span class=\"params\">()</span>&#125;;</span></span><br><span class=\"line\">&#125;(APP))</span><br></pre></td></tr></table></figure></p>\n<p>这里运用的JS的闭包思想，每一个(function(){…}()()};都是单独的作用域，代码不会被污染，全局就只有一个对象APP.</p>\n"},{"title":"音乐播放器WebApp有感","date":"2017-06-25T12:29:48.697Z","_content":"\n\n## 前言\n花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。\n\n在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。\n\n第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：\n* controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来\n* controller/playerController.js  播放器的控制器\n* view/pageStyle.js 页面样式的改变逻辑\n* view/scale.js  进度条对象\n* songs.js  全局的songs模型\n\n结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。\n\n下面就这个项目里一些零散的知识点做些记录，以便一下使用。\n\n## 圣杯布局\n圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。  \n```\n<div class=\"both\">\n    <div class=\"middle\">中间</div> //优先加载\n    <div class=\"left\">左边</div>\n    <div class=\"right\">右边</div>\n</div>\n\n<style>\n    .box{\n        padding-left: 250px;  //关键\n        padding-right: 250px;  //关键\n        line-height: 200px;\n        text-align: center;\n        color: #fff;\n    }\n    .box:before,.box:after{ //伪类清除浮动，父元素有高度\n        content: '.';\n        display: block;\n        clear:　both;\n        height: 0；\n        visibility: hidden; //元素不可见,但占据空间\n    }\n    .middle,.left,.right{\n        float: left;\n        height: 200px;\n    }\n    .middle{\n        width: 100%;\n        background-color: red;\n    }\n    .left{\n        width: 250px;\n        background-color: blue;\n        margin-left: -250px; //关键\n    }\n    .right{\n        width: 250px;\n        background-color: yellow;\n        margin-right: -250px; //关键\n    }\n</style>\n```\n三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。  \n另一种方法是利用定位：\n```\n  <style>\n   body{margin:0; padding:0;}\n   #left{float:left;width:150px;background:red;}\n   #right{float:right;width:200px;background:green;}\n   #middle{\n   position:absolute; //关键\n   left:150px;\n   right:200px;\n   word-wrap:break-word;  //让字体打断，不会超出div\n   background:blue;\n   }\n</style>\n\n<div id=\"middle\">\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n</div>\n<div id=\"left\">left</div>\n<div id=\"right\">right</div>\n```\n关于布局，还有很多种，请参考：\n[http://blog.csdn.net/andiqu/article/details/50045609](前端布局)\n关注弹性布局（flex），和rem\n\n## animition的播放和暂停\n```\n-webkit-animation-play-state: running | paused\n```\n```\nanimation-fill-mode: backwards | forwards | both; //播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用\nanimation-direction: reverse | alternate; //播放顺序，resverse反向\nanimation-iteration-count: num | infinite // 2 | 循环 \n```\n\n## 进度条的制作\n```\n<ul id=\"lanren\">\n\t<li class=\"curr\">00:00</li>\n\t<li class=\"progress\">\n\t\t<div class=\"scale\" id=\"bar\">\n\t\t\t<div></div>\n\t\t\t<span id=\"btn\"></span>\n\t\t</div>\n\t</li>\n\t<li class=\"total\">00:10</li>\n</ul>\n\n<style>\nbody{margin:0;padding:0;font-size:12px;}\nul#lanren{ margin:50px auto; overflow: hidden; padding: 0 50px 0 50px;}\n#lanren li{font-size:12px;line-height:24px; height:24px;list-style:none; position: relative; float: left;}\nli.progress{\n\twidth: 100%;\n}\nli.curr{\n\twidth: 50px;\n\tmargin-right: -50px;\n\tleft: -50px;\n\ttext-align: center;\n}\nli.total{\n\twidth: 50px;\n\tmargin-left: -50px;\n\tright: -50px;\n\ttext-align: center;\n}\n.scale{ background-color: #E4E4E4; border-left: 1px #83BBD9 solid;  width: 100%; height: 3px; position: relative; font-size: 0px; border-radius: 3px; top:11px;}\n\n.scale span{width:8px;height:8px;position:absolute;left:-2px;top:-2.5px;cursor:pointer; background-color: #000; display: inline-block; -webkit-border-radius: 50%;}\n\n.scale div{ background-color: #3BE3FF; width: 0px; position: absolute; height: 3px; width: 0; left: 0; bottom: 0; }\n</style>\n```\n\n## 播放按钮的制作和发光动画\n```\n<div class=\"playContainer\">\n\t<li class=\"rewindBtn\">  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t</li>\n\t<li class=\"playBtn BtnBig\">  \n\t    <a href=\"javascript:;\" title=\"start\">Start</a>  \n\t</li>\n\t<!--\n\t<li class=\"pauseBtn\">  \n\t    <a href=\"#\" title=\"pause\">Pause</a>  \n\t</li> \n\t--> \n\t \n\t<li class=\"forwardBtn playBtn\">  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t</li>  \n</div>\n\n<style>\n.playContainer li { \n\tposition: relative; \n\tfloat: left; \n\tborder: 50px solid #404040; \n\tborder-color: rgba(119, 119, 119, 0.3);\n\tcolor: transparent; \n\theight: 0; \n\twidth: 0; \n\t-webkit-border-radius: 100%; \n\t-moz-border-radius: 100%; \n\t-o-border-radius: 100%; \n\tborder-radius: 100%; \n\tmargin: 0 50px; \n}  \n.playContainer a { \n\tborder-style: solid; \n\ttext-indent: -9999px; \n\tposition: absolute; \n\ttop: -16px; \n\tleft: -6px;  \n}  \nli.BtnBig{\n\tborder-width: 70px;\n\tmargin-top: -15px;\n}\n.playBtn a { \n\tborder-color: transparent transparent transparent #fff;  \n\twidth: 0; \n\theight: 0; \n\tborder-width: 24px 0 24px 36px;\n\tleft: -10px;\n\ttop: -22px;\n}  \n.pauseBtn a { \n\tborder-color: transparent white;  \n\tborder-width: 0 14px;\n    height: 36px;\n    width: 12px;\n    left: -20px;\n}    \n.forwardBtn a { \n\tborder-left-width: 16px; \n\tleft: 2px;\n\tborder-width: 16px 0 16px 16px;\n\ttop: -15px;\n}  \n.forwardBtn a:first-child { \n\tmargin-left: -14px;  \n}  \n.rewindBtn a { \n\tborder-width: 16px 16px 16px 0; \n\tborder-color: transparent #fff transparent transparent; \n\twidth: 0; \n\theight: 0; \n}  \n.rewindBtn a:first-child { \n\tmargin-left: -14px; \n} \n\n//发光动画\n@-webkit-keyframes bs {\n  0% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #787776;\n  }\n\n  50% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 40px 0 #ffffff;\n  }\n\n  100% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #b2ff1a;\n }\n}\n</style>   \n\n\n```\n\n## URI编码\nurl里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。\n```\nencodeURI(\"春节\") //%DD%DD%DD\ndecodeURI(\"%DD%DD%DD\")  //解码：春节\n相同：\nescape()\nunescape()\n```\n\n## ajax跨域\n不涉及后台的跨域，直接用ajax发http请求：\n[https://bird.ioliu.cn/#interface](http://note.youdao.com/)\n其他的跨域都要设计到后台\n与jsonp有关\n\n## QQ音乐的API\n```\nsongsAPI = http://s.music.qq.com/fcgi-bin/music_search_new_platform?t=0&n=10&aggr=1&cr=1&loginUin=0&format=json&inCharset=GB2312&outCharset=utf-8&notice=0&platform=jqminiframe.json&needNewCode=0&p=1&catZhida=0&remoteplace=sizer.newclient.next_song&w={0}\n\nn= 10 ,搜索的数据条目\nw= content ,搜索内容\n返回的数据中有个f属性，\nDATA.data.song.list[i].f: xxx|xxx|xxx.....\n其中第一个是songID,第五个是imgID\n\n\nimgAPI = http://imgcache.qq.com/music/photo/album_500/imgID后面两个数/500_albumpic_imgID_0.jpg\n\n500是图片的大小，支持300和500\n\n\n\nsrcAPI = http://210.38.1.134:9999/ws.stream.qqmusic.qq.com/songID.m4a?fromtag=46\n```\n\n## 计时器\n当在页面要多次用到定时器时，可以考虑把它挂载到全局。  \n当用到多个计时器是可以把它放在一个数组里，方便管理。\n\n## 百度到的资源\n专门说进度条的网站：[https://usablica.github.io/progress.js/](https://usablica.github.io/progress.js/)  \njs,jq获取div高度：[http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html](http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html)  \n[获取div的margin，border，padding，content的宽高](http://blog.csdn.net/zy1281539626/article/details/61913770)  \njs控制audio标签：[http://blog.csdn.net/u014520745/article/details/52412427](http://blog.csdn.net/u014520745/article/details/52412427)","source":"_posts/音乐播放器WebApp.md","raw":"---\ntitle: 音乐播放器WebApp有感\ndate: \ntags: [layout,animation,clear,audio,进度条, 播放按钮, QQ音乐API]\n---\n\n\n## 前言\n花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。\n\n在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。\n\n第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：\n* controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来\n* controller/playerController.js  播放器的控制器\n* view/pageStyle.js 页面样式的改变逻辑\n* view/scale.js  进度条对象\n* songs.js  全局的songs模型\n\n结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。\n\n下面就这个项目里一些零散的知识点做些记录，以便一下使用。\n\n## 圣杯布局\n圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。  \n```\n<div class=\"both\">\n    <div class=\"middle\">中间</div> //优先加载\n    <div class=\"left\">左边</div>\n    <div class=\"right\">右边</div>\n</div>\n\n<style>\n    .box{\n        padding-left: 250px;  //关键\n        padding-right: 250px;  //关键\n        line-height: 200px;\n        text-align: center;\n        color: #fff;\n    }\n    .box:before,.box:after{ //伪类清除浮动，父元素有高度\n        content: '.';\n        display: block;\n        clear:　both;\n        height: 0；\n        visibility: hidden; //元素不可见,但占据空间\n    }\n    .middle,.left,.right{\n        float: left;\n        height: 200px;\n    }\n    .middle{\n        width: 100%;\n        background-color: red;\n    }\n    .left{\n        width: 250px;\n        background-color: blue;\n        margin-left: -250px; //关键\n    }\n    .right{\n        width: 250px;\n        background-color: yellow;\n        margin-right: -250px; //关键\n    }\n</style>\n```\n三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。  \n另一种方法是利用定位：\n```\n  <style>\n   body{margin:0; padding:0;}\n   #left{float:left;width:150px;background:red;}\n   #right{float:right;width:200px;background:green;}\n   #middle{\n   position:absolute; //关键\n   left:150px;\n   right:200px;\n   word-wrap:break-word;  //让字体打断，不会超出div\n   background:blue;\n   }\n</style>\n\n<div id=\"middle\">\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;\n</div>\n<div id=\"left\">left</div>\n<div id=\"right\">right</div>\n```\n关于布局，还有很多种，请参考：\n[http://blog.csdn.net/andiqu/article/details/50045609](前端布局)\n关注弹性布局（flex），和rem\n\n## animition的播放和暂停\n```\n-webkit-animation-play-state: running | paused\n```\n```\nanimation-fill-mode: backwards | forwards | both; //播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用\nanimation-direction: reverse | alternate; //播放顺序，resverse反向\nanimation-iteration-count: num | infinite // 2 | 循环 \n```\n\n## 进度条的制作\n```\n<ul id=\"lanren\">\n\t<li class=\"curr\">00:00</li>\n\t<li class=\"progress\">\n\t\t<div class=\"scale\" id=\"bar\">\n\t\t\t<div></div>\n\t\t\t<span id=\"btn\"></span>\n\t\t</div>\n\t</li>\n\t<li class=\"total\">00:10</li>\n</ul>\n\n<style>\nbody{margin:0;padding:0;font-size:12px;}\nul#lanren{ margin:50px auto; overflow: hidden; padding: 0 50px 0 50px;}\n#lanren li{font-size:12px;line-height:24px; height:24px;list-style:none; position: relative; float: left;}\nli.progress{\n\twidth: 100%;\n}\nli.curr{\n\twidth: 50px;\n\tmargin-right: -50px;\n\tleft: -50px;\n\ttext-align: center;\n}\nli.total{\n\twidth: 50px;\n\tmargin-left: -50px;\n\tright: -50px;\n\ttext-align: center;\n}\n.scale{ background-color: #E4E4E4; border-left: 1px #83BBD9 solid;  width: 100%; height: 3px; position: relative; font-size: 0px; border-radius: 3px; top:11px;}\n\n.scale span{width:8px;height:8px;position:absolute;left:-2px;top:-2.5px;cursor:pointer; background-color: #000; display: inline-block; -webkit-border-radius: 50%;}\n\n.scale div{ background-color: #3BE3FF; width: 0px; position: absolute; height: 3px; width: 0; left: 0; bottom: 0; }\n</style>\n```\n\n## 播放按钮的制作和发光动画\n```\n<div class=\"playContainer\">\n\t<li class=\"rewindBtn\">  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t    <a href=\"javascript:;\" title=\"rewind\">Rewind</a>  \n\t</li>\n\t<li class=\"playBtn BtnBig\">  \n\t    <a href=\"javascript:;\" title=\"start\">Start</a>  \n\t</li>\n\t<!--\n\t<li class=\"pauseBtn\">  \n\t    <a href=\"#\" title=\"pause\">Pause</a>  \n\t</li> \n\t--> \n\t \n\t<li class=\"forwardBtn playBtn\">  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t    <a href=\"javascript:;\" title=\"forward\">Forward</a>  \n\t</li>  \n</div>\n\n<style>\n.playContainer li { \n\tposition: relative; \n\tfloat: left; \n\tborder: 50px solid #404040; \n\tborder-color: rgba(119, 119, 119, 0.3);\n\tcolor: transparent; \n\theight: 0; \n\twidth: 0; \n\t-webkit-border-radius: 100%; \n\t-moz-border-radius: 100%; \n\t-o-border-radius: 100%; \n\tborder-radius: 100%; \n\tmargin: 0 50px; \n}  \n.playContainer a { \n\tborder-style: solid; \n\ttext-indent: -9999px; \n\tposition: absolute; \n\ttop: -16px; \n\tleft: -6px;  \n}  \nli.BtnBig{\n\tborder-width: 70px;\n\tmargin-top: -15px;\n}\n.playBtn a { \n\tborder-color: transparent transparent transparent #fff;  \n\twidth: 0; \n\theight: 0; \n\tborder-width: 24px 0 24px 36px;\n\tleft: -10px;\n\ttop: -22px;\n}  \n.pauseBtn a { \n\tborder-color: transparent white;  \n\tborder-width: 0 14px;\n    height: 36px;\n    width: 12px;\n    left: -20px;\n}    \n.forwardBtn a { \n\tborder-left-width: 16px; \n\tleft: 2px;\n\tborder-width: 16px 0 16px 16px;\n\ttop: -15px;\n}  \n.forwardBtn a:first-child { \n\tmargin-left: -14px;  \n}  \n.rewindBtn a { \n\tborder-width: 16px 16px 16px 0; \n\tborder-color: transparent #fff transparent transparent; \n\twidth: 0; \n\theight: 0; \n}  \n.rewindBtn a:first-child { \n\tmargin-left: -14px; \n} \n\n//发光动画\n@-webkit-keyframes bs {\n  0% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #787776;\n  }\n\n  50% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 40px 0 #ffffff;\n  }\n\n  100% {\n    box-shadow: inset -1px 1px 3px 2px #444444, inset 1px -1px 3px 2px #222222, 0 0 0px 0 #b2ff1a;\n }\n}\n</style>   \n\n\n```\n\n## URI编码\nurl里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。\n```\nencodeURI(\"春节\") //%DD%DD%DD\ndecodeURI(\"%DD%DD%DD\")  //解码：春节\n相同：\nescape()\nunescape()\n```\n\n## ajax跨域\n不涉及后台的跨域，直接用ajax发http请求：\n[https://bird.ioliu.cn/#interface](http://note.youdao.com/)\n其他的跨域都要设计到后台\n与jsonp有关\n\n## QQ音乐的API\n```\nsongsAPI = http://s.music.qq.com/fcgi-bin/music_search_new_platform?t=0&n=10&aggr=1&cr=1&loginUin=0&format=json&inCharset=GB2312&outCharset=utf-8&notice=0&platform=jqminiframe.json&needNewCode=0&p=1&catZhida=0&remoteplace=sizer.newclient.next_song&w={0}\n\nn= 10 ,搜索的数据条目\nw= content ,搜索内容\n返回的数据中有个f属性，\nDATA.data.song.list[i].f: xxx|xxx|xxx.....\n其中第一个是songID,第五个是imgID\n\n\nimgAPI = http://imgcache.qq.com/music/photo/album_500/imgID后面两个数/500_albumpic_imgID_0.jpg\n\n500是图片的大小，支持300和500\n\n\n\nsrcAPI = http://210.38.1.134:9999/ws.stream.qqmusic.qq.com/songID.m4a?fromtag=46\n```\n\n## 计时器\n当在页面要多次用到定时器时，可以考虑把它挂载到全局。  \n当用到多个计时器是可以把它放在一个数组里，方便管理。\n\n## 百度到的资源\n专门说进度条的网站：[https://usablica.github.io/progress.js/](https://usablica.github.io/progress.js/)  \njs,jq获取div高度：[http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html](http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html)  \n[获取div的margin，border，padding，content的宽高](http://blog.csdn.net/zy1281539626/article/details/61913770)  \njs控制audio标签：[http://blog.csdn.net/u014520745/article/details/52412427](http://blog.csdn.net/u014520745/article/details/52412427)","slug":"音乐播放器WebApp","published":1,"updated":"2017-06-25T13:11:41.016Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7frn003nw8qz4l0hibmd","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。</p>\n<p>在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。</p>\n<p>第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：</p>\n<ul>\n<li>controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来</li>\n<li>controller/playerController.js  播放器的控制器</li>\n<li>view/pageStyle.js 页面样式的改变逻辑</li>\n<li>view/scale.js  进度条对象</li>\n<li>songs.js  全局的songs模型</li>\n</ul>\n<p>结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。</p>\n<p>下面就这个项目里一些零散的知识点做些记录，以便一下使用。</p>\n<h2 id=\"圣杯布局\"><a href=\"#圣杯布局\" class=\"headerlink\" title=\"圣杯布局\"></a>圣杯布局</h2><p>圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"both\"</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"middle\"</span>&gt;中间&lt;/div&gt; <span class=\"comment\">//优先加载</span></span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"left\"</span>&gt;左边&lt;/div&gt;</span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"right\"</span>&gt;右边&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    .box&#123;</span><br><span class=\"line\">        <span class=\"attribute\">padding-left</span>: <span class=\"number\">250px</span>;  <span class=\"comment\">//关键</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-right</span>: <span class=\"number\">250px</span>;  <span class=\"comment\">//关键</span></span><br><span class=\"line\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.box</span>:before,<span class=\"selector-class\">.box</span>:after&#123; <span class=\"comment\">//伪类清除浮动，父元素有高度</span></span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">'.'</span>;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>:　both;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>；</span><br><span class=\"line\">        <span class=\"attribute\">visibility</span>: hidden; <span class=\"comment\">//元素不可见,但占据空间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.middle</span>,<span class=\"selector-class\">.left</span>,.<span class=\"attribute\">right</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .middle&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .<span class=\"attribute\">left</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">250px</span>; <span class=\"comment\">//关键</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .<span class=\"attribute\">right</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: -<span class=\"number\">250px</span>; <span class=\"comment\">//关键</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<p>三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。<br>另一种方法是利用定位：<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"params\">&lt;style&gt;</span></span><br><span class=\"line\">   body&#123;margin:<span class=\"number\">0</span>; padding:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">   <span class=\"meta\">#left&#123;float:left;width:150px;background:red;&#125;</span></span><br><span class=\"line\">   <span class=\"meta\">#right&#123;float:right;width:200px;background:green;&#125;</span></span><br><span class=\"line\">   <span class=\"meta\">#middle&#123;</span></span><br><span class=\"line\"><span class=\"symbol\">   position:</span>absolute; <span class=\"comment\">//关键</span></span><br><span class=\"line\"><span class=\"symbol\">   left:</span><span class=\"number\">150</span>px;</span><br><span class=\"line\"><span class=\"symbol\">   right:</span><span class=\"number\">200</span>px;</span><br><span class=\"line\">   word-wrap:break-word;  <span class=\"comment\">//让字体打断，不会超出div</span></span><br><span class=\"line\"><span class=\"symbol\">   background:</span>blue;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"params\">&lt;/style&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"params\">&lt;div id=\"middle\"&gt;</span></span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\"><span class=\"params\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"params\">&lt;div id=\"left\"&gt;</span>left<span class=\"params\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"params\">&lt;div id=\"right\"&gt;</span>right<span class=\"params\">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>关于布局，还有很多种，请参考：<br><a href=\"前端布局\">http://blog.csdn.net/andiqu/article/details/50045609</a><br>关注弹性布局（flex），和rem</p>\n<h2 id=\"animition的播放和暂停\"><a href=\"#animition的播放和暂停\" class=\"headerlink\" title=\"animition的播放和暂停\"></a>animition的播放和暂停</h2><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-animation-play-state: running <span class=\"string\">| paused</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">animation-fill-mode</span>: backwards | forwards | both; <span class=\"comment\">//播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用</span></span><br><span class=\"line\"><span class=\"attribute\">animation-direction</span>: reverse | alternate; <span class=\"comment\">//播放顺序，resverse反向</span></span><br><span class=\"line\"><span class=\"attribute\">animation-iteration-count</span>: num | infinite // <span class=\"number\">2</span> | 循环</span><br></pre></td></tr></table></figure>\n<h2 id=\"进度条的制作\"><a href=\"#进度条的制作\" class=\"headerlink\" title=\"进度条的制作\"></a>进度条的制作</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"lanren\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"curr\"</span>&gt;</span>00:00<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"progress\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scale\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bar\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"total\"</span>&gt;</span>00:10<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#lanren</span>&#123; <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto; <span class=\"attribute\">overflow</span>: hidden; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">50px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#lanren</span> <span class=\"selector-tag\">li</span>&#123;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;<span class=\"attribute\">line-height</span>:<span class=\"number\">24px</span>; <span class=\"attribute\">height</span>:<span class=\"number\">24px</span>;<span class=\"attribute\">list-style</span>:none; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">float</span>: left;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.progress</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.curr</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-right</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.total</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">right</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.scale</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#E4E4E4</span>; <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> <span class=\"number\">#83BBD9</span> solid;  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">font-size</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">top</span>:<span class=\"number\">11px</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">span</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">height</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">left</span>:-<span class=\"number\">2px</span>;<span class=\"attribute\">top</span>:-<span class=\"number\">2.5px</span>;<span class=\"attribute\">cursor</span>:pointer; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>; <span class=\"attribute\">display</span>: inline-block; <span class=\"attribute\">-webkit-border-radius</span>: <span class=\"number\">50%</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#3BE3FF</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"播放按钮的制作和发光动画\"><a href=\"#播放按钮的制作和发光动画\" class=\"headerlink\" title=\"播放按钮的制作和发光动画\"></a>播放按钮的制作和发光动画</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"playContainer\"</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"rewindBtn\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"rewind\"</span>&gt;Rewind&lt;/a&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"rewind\"</span>&gt;Rewind&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt;</span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"playBtn BtnBig\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"start\"</span>&gt;Start&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt;</span><br><span class=\"line\">\t&lt;!--</span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"pauseBtn\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"#\"</span> title=<span class=\"string\">\"pause\"</span>&gt;Pause&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt; </span><br><span class=\"line\">\t--&gt; </span><br><span class=\"line\">\t </span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"forwardBtn playBtn\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"forward\"</span>&gt;Forward&lt;/a&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"forward\"</span>&gt;Forward&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt;  </span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">li</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: relative; </span><br><span class=\"line\">\t<span class=\"attribute\">float</span>: left; </span><br><span class=\"line\">\t<span class=\"attribute\">border</span>: <span class=\"number\">50px</span> solid <span class=\"number\">#404040</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: rgba(<span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: transparent; </span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t-moz-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t-o-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span>; </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-style</span>: solid; </span><br><span class=\"line\">\t<span class=\"attribute\">text-indent</span>: -<span class=\"number\">9999px</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute; </span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">16px</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">6px</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-tag\">li</span>.BtnBig&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.playBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: transparent transparent transparent <span class=\"number\">#fff</span>;  </span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">24px</span> <span class=\"number\">0</span> <span class=\"number\">24px</span> <span class=\"number\">36px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">22px</span>;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.pauseBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: transparent white;  </span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">0</span> <span class=\"number\">14px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;    </span><br><span class=\"line\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-left-width</span>: <span class=\"number\">16px</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">0</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span>:first-child &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#fff</span> transparent transparent; </span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span>:first-child &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//发光动画</span></span><br><span class=\"line\">@-webkit-keyframes bs &#123;</span><br><span class=\"line\">  <span class=\"number\">0%</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#787776</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">50%</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">40px</span> <span class=\"number\">0</span> <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#b2ff1a</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"URI编码\"><a href=\"#URI编码\" class=\"headerlink\" title=\"URI编码\"></a>URI编码</h2><p>url里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">encodeURI</span><span class=\"params\">(<span class=\"string\">\"春节\"</span>)</span></span> <span class=\"comment\">//%DD%DD%DD</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">decodeURI</span><span class=\"params\">(<span class=\"string\">\"%DD%DD%DD\"</span>)</span></span>  <span class=\"comment\">//解码：春节</span></span><br><span class=\"line\">相同：</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">escape</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">unescape</span><span class=\"params\">()</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ajax跨域\"><a href=\"#ajax跨域\" class=\"headerlink\" title=\"ajax跨域\"></a>ajax跨域</h2><p>不涉及后台的跨域，直接用ajax发http请求：<br><a href=\"http://note.youdao.com/\" target=\"_blank\" rel=\"external\">https://bird.ioliu.cn/#interface</a><br>其他的跨域都要设计到后台<br>与jsonp有关</p>\n<h2 id=\"QQ音乐的API\"><a href=\"#QQ音乐的API\" class=\"headerlink\" title=\"QQ音乐的API\"></a>QQ音乐的API</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">songsAPI = <span class=\"string\">http:</span><span class=\"comment\">//s.music.qq.com/fcgi-bin/music_search_new_platform?t=0&amp;n=10&amp;aggr=1&amp;cr=1&amp;loginUin=0&amp;format=json&amp;inCharset=GB2312&amp;outCharset=utf-8&amp;notice=0&amp;platform=jqminiframe.json&amp;needNewCode=0&amp;p=1&amp;catZhida=0&amp;remoteplace=sizer.newclient.next_song&amp;w=&#123;0&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">n= <span class=\"number\">10</span> ,搜索的数据条目</span><br><span class=\"line\">w= content ,搜索内容</span><br><span class=\"line\">返回的数据中有个f属性，</span><br><span class=\"line\">DATA.data.song.list[i].<span class=\"string\">f:</span> xxx|xxx|xxx.....</span><br><span class=\"line\">其中第一个是songID,第五个是imgID</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">imgAPI = <span class=\"string\">http:</span><span class=\"comment\">//imgcache.qq.com/music/photo/album_500/imgID后面两个数/500_albumpic_imgID_0.jpg</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">500</span>是图片的大小，支持<span class=\"number\">300</span>和<span class=\"number\">500</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">srcAPI = <span class=\"string\">http:</span><span class=\"comment\">//210.38.1.134:9999/ws.stream.qqmusic.qq.com/songID.m4a?fromtag=46</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"计时器\"><a href=\"#计时器\" class=\"headerlink\" title=\"计时器\"></a>计时器</h2><p>当在页面要多次用到定时器时，可以考虑把它挂载到全局。<br>当用到多个计时器是可以把它放在一个数组里，方便管理。</p>\n<h2 id=\"百度到的资源\"><a href=\"#百度到的资源\" class=\"headerlink\" title=\"百度到的资源\"></a>百度到的资源</h2><p>专门说进度条的网站：<a href=\"https://usablica.github.io/progress.js/\" target=\"_blank\" rel=\"external\">https://usablica.github.io/progress.js/</a><br>js,jq获取div高度：<a href=\"http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html</a><br><a href=\"http://blog.csdn.net/zy1281539626/article/details/61913770\" target=\"_blank\" rel=\"external\">获取div的margin，border，padding，content的宽高</a><br>js控制audio标签：<a href=\"http://blog.csdn.net/u014520745/article/details/52412427\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u014520745/article/details/52412427</a></p>\n","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>花了差不多一周的时间，用html5的新标签audio制作了一个音乐播放器，感觉最多坑的地方在于前期的布局，逻辑代码的规划也很重要。</p>\n<p>在布局上填了很多坑，比如资源税浮动父元素没了高度，用clear也解决不了，不得不利用js设置父的高度等之类的，发现布局也有大学问，这一点要注重。</p>\n<p>第二点就是代码规划，因为刚学了前端js的MVC框架（将控制逻辑，模型，视图的js划分开），所以想尝试，在项目里我的mvc框架为：</p>\n<ul>\n<li>controller/appController.js   控制器总开关，程序的入   口，将controllers连接起来</li>\n<li>controller/playerController.js  播放器的控制器</li>\n<li>view/pageStyle.js 页面样式的改变逻辑</li>\n<li>view/scale.js  进度条对象</li>\n<li>songs.js  全局的songs模型</li>\n</ul>\n<p>结合面向对象的方法，我在点击播放器按钮的时候，进度条，图片旋转和audio同时开始工作，所以把他们捆绑起来会比较好。</p>\n<p>下面就这个项目里一些零散的知识点做些记录，以便一下使用。</p>\n<h2 id=\"圣杯布局\"><a href=\"#圣杯布局\" class=\"headerlink\" title=\"圣杯布局\"></a>圣杯布局</h2><p>圣杯布局是三栏布局的经典布局方式，两侧固定宽度中间自适应。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"both\"</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"middle\"</span>&gt;中间&lt;/div&gt; <span class=\"comment\">//优先加载</span></span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"left\"</span>&gt;左边&lt;/div&gt;</span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"right\"</span>&gt;右边&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    .box&#123;</span><br><span class=\"line\">        <span class=\"attribute\">padding-left</span>: <span class=\"number\">250px</span>;  <span class=\"comment\">//关键</span></span><br><span class=\"line\">        <span class=\"attribute\">padding-right</span>: <span class=\"number\">250px</span>;  <span class=\"comment\">//关键</span></span><br><span class=\"line\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.box</span>:before,<span class=\"selector-class\">.box</span>:after&#123; <span class=\"comment\">//伪类清除浮动，父元素有高度</span></span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">'.'</span>;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>:　both;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">0</span>；</span><br><span class=\"line\">        <span class=\"attribute\">visibility</span>: hidden; <span class=\"comment\">//元素不可见,但占据空间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.middle</span>,<span class=\"selector-class\">.left</span>,.<span class=\"attribute\">right</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .middle&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .<span class=\"attribute\">left</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">        <span class=\"attribute\">margin-left</span>: -<span class=\"number\">250px</span>; <span class=\"comment\">//关键</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .<span class=\"attribute\">right</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">        <span class=\"attribute\">margin-right</span>: -<span class=\"number\">250px</span>; <span class=\"comment\">//关键</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<p>三栏布局的另一经典是双飞翼布局，原理是middlediv下内嵌类为inner的div，利用inner的margin-left和margin-right。左右侧栏div分别float左右。<br>另一种方法是利用定位：<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"params\">&lt;style&gt;</span></span><br><span class=\"line\">   body&#123;margin:<span class=\"number\">0</span>; padding:<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">   <span class=\"meta\">#left&#123;float:left;width:150px;background:red;&#125;</span></span><br><span class=\"line\">   <span class=\"meta\">#right&#123;float:right;width:200px;background:green;&#125;</span></span><br><span class=\"line\">   <span class=\"meta\">#middle&#123;</span></span><br><span class=\"line\"><span class=\"symbol\">   position:</span>absolute; <span class=\"comment\">//关键</span></span><br><span class=\"line\"><span class=\"symbol\">   left:</span><span class=\"number\">150</span>px;</span><br><span class=\"line\"><span class=\"symbol\">   right:</span><span class=\"number\">200</span>px;</span><br><span class=\"line\">   word-wrap:break-word;  <span class=\"comment\">//让字体打断，不会超出div</span></span><br><span class=\"line\"><span class=\"symbol\">   background:</span>blue;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"params\">&lt;/style&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"params\">&lt;div id=\"middle\"&gt;</span></span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\">        middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;middle;</span><br><span class=\"line\"><span class=\"params\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"params\">&lt;div id=\"left\"&gt;</span>left<span class=\"params\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"params\">&lt;div id=\"right\"&gt;</span>right<span class=\"params\">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>关于布局，还有很多种，请参考：<br><a href=\"前端布局\">http://blog.csdn.net/andiqu/article/details/50045609</a><br>关注弹性布局（flex），和rem</p>\n<h2 id=\"animition的播放和暂停\"><a href=\"#animition的播放和暂停\" class=\"headerlink\" title=\"animition的播放和暂停\"></a>animition的播放和暂停</h2><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-animation-play-state: running <span class=\"string\">| paused</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">animation-fill-mode</span>: backwards | forwards | both; <span class=\"comment\">//播放前显示动画第一帧，播放完显示动画的最后一帧，向前和向后模式都被应用</span></span><br><span class=\"line\"><span class=\"attribute\">animation-direction</span>: reverse | alternate; <span class=\"comment\">//播放顺序，resverse反向</span></span><br><span class=\"line\"><span class=\"attribute\">animation-iteration-count</span>: num | infinite // <span class=\"number\">2</span> | 循环</span><br></pre></td></tr></table></figure>\n<h2 id=\"进度条的制作\"><a href=\"#进度条的制作\" class=\"headerlink\" title=\"进度条的制作\"></a>进度条的制作</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"lanren\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"curr\"</span>&gt;</span>00:00<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"progress\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scale\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bar\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"total\"</span>&gt;</span>00:10<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;<span class=\"attribute\">margin</span>:<span class=\"number\">0</span>;<span class=\"attribute\">padding</span>:<span class=\"number\">0</span>;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-id\">#lanren</span>&#123; <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto; <span class=\"attribute\">overflow</span>: hidden; <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">50px</span>;&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#lanren</span> <span class=\"selector-tag\">li</span>&#123;<span class=\"attribute\">font-size</span>:<span class=\"number\">12px</span>;<span class=\"attribute\">line-height</span>:<span class=\"number\">24px</span>; <span class=\"attribute\">height</span>:<span class=\"number\">24px</span>;<span class=\"attribute\">list-style</span>:none; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">float</span>: left;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.progress</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.curr</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-right</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.total</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">right</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.scale</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#E4E4E4</span>; <span class=\"attribute\">border-left</span>: <span class=\"number\">1px</span> <span class=\"number\">#83BBD9</span> solid;  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">font-size</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">top</span>:<span class=\"number\">11px</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">span</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">height</span>:<span class=\"number\">8px</span>;<span class=\"attribute\">position</span>:absolute;<span class=\"attribute\">left</span>:-<span class=\"number\">2px</span>;<span class=\"attribute\">top</span>:-<span class=\"number\">2.5px</span>;<span class=\"attribute\">cursor</span>:pointer; <span class=\"attribute\">background-color</span>: <span class=\"number\">#000</span>; <span class=\"attribute\">display</span>: inline-block; <span class=\"attribute\">-webkit-border-radius</span>: <span class=\"number\">50%</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.scale</span> <span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#3BE3FF</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">left</span>: <span class=\"number\">0</span>; <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"播放按钮的制作和发光动画\"><a href=\"#播放按钮的制作和发光动画\" class=\"headerlink\" title=\"播放按钮的制作和发光动画\"></a>播放按钮的制作和发光动画</h2><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">div</span> class=<span class=\"string\">\"playContainer\"</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"rewindBtn\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"rewind\"</span>&gt;Rewind&lt;/a&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"rewind\"</span>&gt;Rewind&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt;</span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"playBtn BtnBig\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"start\"</span>&gt;Start&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt;</span><br><span class=\"line\">\t&lt;!--</span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"pauseBtn\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"#\"</span> title=<span class=\"string\">\"pause\"</span>&gt;Pause&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt; </span><br><span class=\"line\">\t--&gt; </span><br><span class=\"line\">\t </span><br><span class=\"line\">\t&lt;<span class=\"selector-tag\">li</span> class=<span class=\"string\">\"forwardBtn playBtn\"</span>&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"forward\"</span>&gt;Forward&lt;/a&gt;  </span><br><span class=\"line\">\t    &lt;<span class=\"selector-tag\">a</span> href=<span class=\"string\">\"javascript:;\"</span> title=<span class=\"string\">\"forward\"</span>&gt;Forward&lt;/a&gt;  </span><br><span class=\"line\">\t&lt;/li&gt;  </span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">li</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: relative; </span><br><span class=\"line\">\t<span class=\"attribute\">float</span>: left; </span><br><span class=\"line\">\t<span class=\"attribute\">border</span>: <span class=\"number\">50px</span> solid <span class=\"number\">#404040</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: rgba(<span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">119</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: transparent; </span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t-webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t-moz-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t-o-<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span>; </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.playContainer</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-style</span>: solid; </span><br><span class=\"line\">\t<span class=\"attribute\">text-indent</span>: -<span class=\"number\">9999px</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute; </span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">16px</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">6px</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-tag\">li</span>.BtnBig&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin-top</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.playBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: transparent transparent transparent <span class=\"number\">#fff</span>;  </span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">24px</span> <span class=\"number\">0</span> <span class=\"number\">24px</span> <span class=\"number\">36px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">22px</span>;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.pauseBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: transparent white;  </span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">0</span> <span class=\"number\">14px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;    </span><br><span class=\"line\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-left-width</span>: <span class=\"number\">16px</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">0</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.forwardBtn</span> <span class=\"selector-tag\">a</span>:first-child &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span> &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border-width</span>: <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">16px</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">border-color</span>: transparent <span class=\"number\">#fff</span> transparent transparent; </span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.rewindBtn</span> <span class=\"selector-tag\">a</span>:first-child &#123; </span><br><span class=\"line\">\t<span class=\"attribute\">margin-left</span>: -<span class=\"number\">14px</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//发光动画</span></span><br><span class=\"line\">@-webkit-keyframes bs &#123;</span><br><span class=\"line\">  <span class=\"number\">0%</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#787776</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">50%</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">40px</span> <span class=\"number\">0</span> <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">100%</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: inset -<span class=\"number\">1px</span> <span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#444444</span>, inset <span class=\"number\">1px</span> -<span class=\"number\">1px</span> <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">#222222</span>, <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0px</span> <span class=\"number\">0</span> <span class=\"number\">#b2ff1a</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"URI编码\"><a href=\"#URI编码\" class=\"headerlink\" title=\"URI编码\"></a>URI编码</h2><p>url里的中文服务器是识别不了的，要经过URI编码成Unicode编码，统一资源标识符，浏览器才能准确的找到资源。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">encodeURI</span><span class=\"params\">(<span class=\"string\">\"春节\"</span>)</span></span> <span class=\"comment\">//%DD%DD%DD</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">decodeURI</span><span class=\"params\">(<span class=\"string\">\"%DD%DD%DD\"</span>)</span></span>  <span class=\"comment\">//解码：春节</span></span><br><span class=\"line\">相同：</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">escape</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">unescape</span><span class=\"params\">()</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"ajax跨域\"><a href=\"#ajax跨域\" class=\"headerlink\" title=\"ajax跨域\"></a>ajax跨域</h2><p>不涉及后台的跨域，直接用ajax发http请求：<br><a href=\"http://note.youdao.com/\">https://bird.ioliu.cn/#interface</a><br>其他的跨域都要设计到后台<br>与jsonp有关</p>\n<h2 id=\"QQ音乐的API\"><a href=\"#QQ音乐的API\" class=\"headerlink\" title=\"QQ音乐的API\"></a>QQ音乐的API</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">songsAPI = <span class=\"string\">http:</span><span class=\"comment\">//s.music.qq.com/fcgi-bin/music_search_new_platform?t=0&amp;n=10&amp;aggr=1&amp;cr=1&amp;loginUin=0&amp;format=json&amp;inCharset=GB2312&amp;outCharset=utf-8&amp;notice=0&amp;platform=jqminiframe.json&amp;needNewCode=0&amp;p=1&amp;catZhida=0&amp;remoteplace=sizer.newclient.next_song&amp;w=&#123;0&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">n= <span class=\"number\">10</span> ,搜索的数据条目</span><br><span class=\"line\">w= content ,搜索内容</span><br><span class=\"line\">返回的数据中有个f属性，</span><br><span class=\"line\">DATA.data.song.list[i].<span class=\"string\">f:</span> xxx|xxx|xxx.....</span><br><span class=\"line\">其中第一个是songID,第五个是imgID</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">imgAPI = <span class=\"string\">http:</span><span class=\"comment\">//imgcache.qq.com/music/photo/album_500/imgID后面两个数/500_albumpic_imgID_0.jpg</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">500</span>是图片的大小，支持<span class=\"number\">300</span>和<span class=\"number\">500</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">srcAPI = <span class=\"string\">http:</span><span class=\"comment\">//210.38.1.134:9999/ws.stream.qqmusic.qq.com/songID.m4a?fromtag=46</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"计时器\"><a href=\"#计时器\" class=\"headerlink\" title=\"计时器\"></a>计时器</h2><p>当在页面要多次用到定时器时，可以考虑把它挂载到全局。<br>当用到多个计时器是可以把它放在一个数组里，方便管理。</p>\n<h2 id=\"百度到的资源\"><a href=\"#百度到的资源\" class=\"headerlink\" title=\"百度到的资源\"></a>百度到的资源</h2><p>专门说进度条的网站：<a href=\"https://usablica.github.io/progress.js/\">https://usablica.github.io/progress.js/</a><br>js,jq获取div高度：<a href=\"http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html\">http://www.cnblogs.com/xiaopin/archive/2012/03/26/2418152.html</a><br><a href=\"http://blog.csdn.net/zy1281539626/article/details/61913770\">获取div的margin，border，padding，content的宽高</a><br>js控制audio标签：<a href=\"http://blog.csdn.net/u014520745/article/details/52412427\">http://blog.csdn.net/u014520745/article/details/52412427</a></p>\n"},{"title":"node开发微信公众号","date":"2017-06-12T16:00:00.000Z","_content":"\n\n## 开发第一步\n\n不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。\n\n开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  \n\n开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  \n\n## 开始开发\n我们使用koa框架。  \napp.js\n```js\n'use strict'\n\nvar Koa = require('koa')\nvar wechat = require('./wechat/g')  //可以看作是程序的第二个流程，实现验证 以及调用回复功能\nvar config = require('./config') //公众号的配置配置信息\nvar reply = require('./wx/reply')  //处理客户发过来的消息，回复逻辑\nvar Wechat = require('./wechat/wechat') //回复各种消息类型获取的api，封装在Wechat对象中\n\nvar app = new Koa()\n\napp.use(wechat(config.wechat, reply.reply))\n\napp.listen(1234)\nconsole.log(\"listening at port 1234...\")\n```\n\nwechat/g.js\n```js\n'use strict'\n\nvar sha1 = require('sha1')\nvar getRawBody = require('raw-body')\nvar Wechat = require('./wechat')\nvar util = require('./util')\n\nmodule.exports = function(opts, handler) {\n    var wechat = new Wechat(opts)\n\n    return function *(next){\n\n                var token = opts.token\n                var signature = this.query.signature\n                var nonce = this.query.nonce\n                var timestamp = this.query.timestamp\n                var echostr = this.query.echostr\n                var str = [token, timestamp, nonce].sort().join('')\n                var sha = sha1(str)\n\n                if(this.method == 'GET'){\n                    if(sha === signature){\n                        this.body = echostr + ''\n                    }\n                    else{\n                        this.body = 'wrong'\n                    }\n                }\n                else if(this.method == 'POST'){\n                    console.log(this.method)\n                    if(sha !== signature){\n                        this.body = 'wrong'\n\n                        return false\n                    }\n\n                    var data = yield getRawBody(this.req, { //xml格式的数据\n                        length: this.length,\n                        limit: '1mb',\n                        encoding: this.charset\n                    })\n\n                    //console.log(data.toString())\n                    var content = yield util.parseXMLAsync(data) //转化为json格式的数据\n                    //console.log(content)\n                    var message = util.formatMessage(content.xml)\n                    //console.log(message)\n\n                   this.weixin = message\n\n                   yield handler.call(this, next)\n\n                   wechat.reply.call(this)   //数据转化为最终的xml格式，客户端只能解析xml格式数据\n                }\n                \n            }\n}\n```\n\nwechat/wechat.js\n```js\n'use strict'\n\nvar Promise = require('bluebird')\nvar request = require('request')\nvar util = require('./util')\nvar fs = require('fs')\nvar _ = require('lodash')\n\nvar prefix = 'https://api.weixin.qq.com/cgi-bin/'\nvar api = {\n    accessToken : prefix + 'token?grant_type=client_credential',\n    temporary: {\n        upload : prefix + 'media/upload?',\n        fetch: prefix + 'media/get?'\n    },\n    permanent: {\n        upload: prefix + 'material/add_material?',\n        fetch: prefix + 'material/get_material?',\n        uploadNews: prefix + 'material/add_news?',\n        uploadNewsPic:prefix + 'material/uploadimg?',\n        del: prefix + 'material/del_material?',\n        update: prefix + 'material/update_news?',\n        count: prefix + 'material/get_materialcount?',\n        batch: prefix + 'material/batchget_material?'\n    },\n    group: {\n        create: prefix + 'groups/create?',\n        fetch: prefix + 'groups/get?',\n        check: prefix + 'groups/getid?',\n        update:prefix + 'groups/update?',\n        move: prefix + 'groups/members/update?',\n        batchupdata: prefix + 'groups/members/batchupdate?',\n        del: prefix + 'groups/delete?'\n    },\n    user: {\n        remark: prefix +　'user/info/updateremark?',\n        fetch: prefix +　'user/info?',\n        batchFetch: prefix + 'user/info/batchget?',\n        list: prefix +　'user/get?'\n    },\n    mass: {\n        group: prefix + 'message/mass/sendall?',\n        openId: prefix + 'message/mass/send?',\n        del: prefix + 'message/mass/delete?',\n        preview: prefix + 'message/mass/preview?',\n        check: prefix + 'message/mass/get?'\n    },\n    menu: {\n        create: prefix + 'menu/create?',\n        get:　prefix +　'menu/get?',\n        del: prefix + 'menu/delete?',\n        current: prefix + 'get_current_selfmenu_info?'\n    },   \n    semantic: 'https://api.weixin.qq.com/semantic/semproxy/search?',\n    ticket: {\n        get : prefix +　'ticket/getticket?'\n    }\n    \n}\n\nfunction Wechat(opts){\n    var that = this\n\n    this.appID = opts.appID\n    this.appSecret = opts.appSecret\n    this.getAccessToken = opts.getAccessToken\n    this.saveAccessToken = opts.saveAccessToken\n    this.getTicket = opts.getTicket\n    this.saveTicket = opts.saveTicket\n\n    this.fetchAccessToken()\n}\n\n//获取ticket\nWechat.prototype.fetchTicket = function(access_token){\n    var that = this\n\n    return this.getTicket()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateTicket(access_token)\n            }\n            \n            if(that.isValidTicket(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateTicket(access_token)\n            }\n        })\n        .then(function(data){\n            that.saveTicket(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.updateTicket = function(access_token){\n\n   var url = api.ticket.get + '&access_token=' + access_token + '&type=jsapi'\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.isValidTicket = function(data){\n    if(!data || !data.ticket || !data.expires_in){\n        return false\n    }\n\n    var ticket = data.ticket\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(ticket && now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\n//获取access_token\nWechat.prototype.fetchAccessToken = function(data){\n    var that = this\n\n    if(this.access_token && this.expires_in){\n        if(this.isValidAccessToken(this)){\n            return Promise.resolve(this)\n        }\n    }\n\n    return this.getAccessToken()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateAccessToken()\n            }\n            \n            if(that.isValidAccessToken(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateAccessToken()\n            }\n        })\n        .then(function(data){\n            that.access_token = data.access_token\n            that.expires_in = data.expires_in\n\n            that.saveAccessToken(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.isValidAccessToken = function(data){\n    if(!data || !data.access_token || !data.expires_in){\n        return false\n    }\n\n    var access_token = data.access_token\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\nWechat.prototype.updateAccessToken = function(){\n   var appID = this.appID\n   var appSecret = this.appSecret\n   var url = api.accessToken + '&appid=' + appID + '&secret=' + appSecret\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get access_token')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.uploadMaterial = function(type, material, permanent){\n    var that = this\n    var form = {}\n    var uploadUrl = api.temporary.upload\n\n    if(permanent){\n        uploadUrl = api.permanent.upload\n\n        _.extend(form, permanent)\n    }\n\n    if(type === 'pic'){\n        uploadUrl = api.permanent.uploadNewsPic\n    }\n\n    if(type === 'news'){\n        uploadUrl = api.permanent.uploadNews\n        form = material\n    }\n    else{\n        form.media = fs.createReadStream(material)\n    }\n   \n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = uploadUrl + 'access_token=' + data.access_token \n\n                if(!permanent) {\n                    url += '&type=' + type\n                }\n                else{\n                    form.access_token = data.access_token\n                }\n\n                var options = {\n                    method: 'POST',\n                    url: url,\n                    json: true\n                }\n\n                if(type === 'news'){\n                    options.body = form\n                }\n                else{\n                    options.formData = form\n                }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        //console.log(_data);\n                    } else {\n                        throw new Error('upload material fails')\n                    }\n                }) \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.fetchMaterial = function(mediaId, type, permanent){\n    var that = this\n    var fetchUrl = api.temporary.fetch\n\n    if(permanent){\n        fetchUrl = api.permanent.fetch\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = fetchUrl + 'access_token=' + data.access_token \n                var form = {}\n                var options = {method:'POST', url: url, json: true}\n\n                if(permanent){\n                    form.media_id = mediaId\n                    form.access_token = data.access_token\n                    options.body = form\n                }\n                else{\n                    if(type === 'video'){\n                        url = url.replace('https://', 'http://')\n                    }\n                    url += '&media_id=' + mediaId\n                }\n\n               if(type === 'news' || type === 'video'){\n                   request(options, function (error, response, body) {\n                        if (!error && response.statusCode === 200) {\n                            var _data = body;\n                            \n                            if(_data){\n                                resolve(_data);\n                            }                     \n                        \n                        } else {\n                            throw new Error('delete material fails')\n                        }\n                    })\n               }\n               else{\n                   resolve(url)\n               }\n\n                \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.deleteMaterial = function(mediaId){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.del + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateMaterial = function(mediaId, news){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n\n    _.extend(form, news)\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.update + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.countMaterial = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.count + 'access_token=' + data.access_token\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('count material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.batchMaterial = function(options){\n    var that = this\n\n    options.type = options.type || 'image'\n    options.offset = options.offset || 0\n    options.count = options.count || 1\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.batch + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:options, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('batch material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//用户分组\nWechat.prototype.createGroup = function(name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.create + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('create group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchGroup = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.fetch + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkGroup = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.check + 'access_token=' + data.access_token\n                var form = {\n                    openid : openId\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('check group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateGroup = function(id, name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.update + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id,\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('update group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.moveGroup = function(openIds, to_groupid){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var url\n               var form = {\n                   to_groupid : to_groupid\n               }\n\n               if(_.isArray(openIds)){\n                   url = api.group.batchupdata + 'access_token=' + data.access_token\n                   form.openid_list = openIds\n               }\n               else{\n                   url = api.group.move + 'access_token=' + data.access_token\n                   form.openid = openIds\n               }  \n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('move group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteGroup = function(id){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.del + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//获取用户信息\nWechat.prototype.remarkUser = function(openId, remark){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.remark + 'access_token=' + data.access_token\n                var form = {\n                    openid:　openId,\n                    remark: remark\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('remark user fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchUser = function(openIds, lang){\n    var that = this\n    \n    var lang = lang || 'zh_CN'\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var options　= {\n                   json: true\n               }\n\n               if(_.isArray(openIds)){\n                   options.url = api.user.batchFetch + 'access_token=' + data.access_token\n                   options.method = 'POST'\n                   options.body = {\n                       user_list : openIds\n                   }\n               }\n               else{\n                   options.url = api.user.fetch + 'access_token=' + data.access_token + '&openid=' + openIds + '&lang=' + lang\n               }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch users fails')\n                    }\n                }) \n           })         \n    })  \n}\n\nWechat.prototype.listUsers = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.list + 'access_token=' + data.access_token\n                \n                if(openId){\n                    url += '&next_openid=' + openId\n                }\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('list users fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByGroup = function(type, message, groupId){\n    var that = this\n    var msg = {\n        filter:{},\n        msgtype:type\n    }\n    msg[type] = message\n    if(!groupId){\n        msg.filter.is_to_all = true\n    }else{\n        msg.filter.is_to_all = false\n        msg.filter.group_id = groupId\n    }\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.group + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('sell by group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByOpenId = function(type, message, openIds){\n    var that = this\n\n    var msg = {\n        touser:openIds,\n        msgtype:type\n    }\n\n   msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.openId + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('sell by openid fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMass = function(msgId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.del + 'access_token=' + data.access_token\n                var form = {\n                    msg_id : msgId\n                }\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete Mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.previewMass = function(type, message, openId){\n    var that = this\n    var msg = {\n        touser:openId,\n        msgtype:type\n    }\n    msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.preview + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('preview mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkMass = function(msgId){\n    var that = this\n    var form = {\n        msg_id : msgId\n    }\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.check + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('check mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.createMenu = function(menu){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.menu.create + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:menu, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('create menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.getMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.get + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.del + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.currentSelfMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.current + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get current selfmenu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.semantic = function(semanticData){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.semantic + 'access_token=' + data.access_token\n                semanticData.appid = data.appID\n\n                request({method:'POST', url: url,body:semanticData, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('semantic data fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.reply = function(){  //实现完整的回复逻辑，放回给客户端xml格式数据\n    var content = this.body   //此时的this.body是json数据格式\n    var message = this.weixin\n    var xml = util.tpl(content, message)  //将content与message中的内容提出整合，此时已经变成了xml格式\n    //console.log('xml:'+ xml)\n\n    this.status = 200\n    this.type = 'application/xml'\n    this.body = xml\n\n}\n\nmodule.exports = Wechat\n```\n\nwx/reply.js  处理客户端消息\n```js\n'use strict'\n\nvar config = require('../config')\nvar Wechat = require('../wechat/wechat')\nvar wechatApi = new Wechat(config.wechat)\nvar menu = require('./menu')\n\n/*wechatApi.deleteMenu().then(function(){\n    return wechatApi.createMenu(menu)\n}).then(function(msg){\n    console.log(msg)\n})*/\n\nexports.reply = function *(next){\n \n    var message = this.weixin\n\n    if(message.MsgType === 'event'){\n        if(message.Event === 'subscribe'){\n            if(message.EventKey) {\n                console.log('扫二维码进来：'+ message.EventKey +' '+ message.ticket)\n            }\n            this.body =  '么么哒'\n        }\n        else if(message.Event === 'unsubscribe'){\n            console.log('无情取关！')\n            this.body = ' '\n        }\n        else if(message.Event === 'LOCATION'){\n            this.body = '您上报的位置是：' + message.Latitude + '/' + message.Longitude + '-' +message.Precision\n        }\n        else if(message.Event === 'CLICK'){\n            this.body = '您点击了菜单：'+ message.EventKey\n        }\n        else if(message.Event === 'SCAN'){\n            console.log('关注后扫二维码'+ message.EventKey + ' '+ message.Ticket)\n            this.body = '您扫了二维码哦'\n        }\n        else if(message.Event === 'VIEW'){\n            this.body = '您点击了菜单中的连接：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_push'){\n            console.log(message.ScanCodeInfo.ScanType)\n            console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_waitmsg'){\n             console.log(message.ScanCodeInfo.ScanType)\n             console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_sysphoto'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_photo_or_album'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_weixin'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'location_select'){\n             console.log(message.SendLocationInfo.Location_X)\n             console.log(message.SendLocationInfo.Location_Y)\n             console.log(message.SendLocationInfo.Scale)\n             console.log(message.SendLocationInfo.Label)\n             console.log(message.SendLocationInfo.Poiname)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n    }\n    else if(message.MsgType === 'text'){\n        var content = message.Content\n        var reply = '你说的“' + message.Content + '” 我们没有这样的服务'\n\n        if(content === '1'){\n            reply = '天下第一'\n        }\n        else if(content === '2'){\n            reply = '天下第二'\n        }\n        else if(content === '3'){\n            reply = '天下第三'\n        }\n        else if(content === '4'){\n            reply = [{\n                title: 'nodejs开发微信',\n                description: 'nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么',\n                picUrl: 'http://www.aseoe.com/images/aseoe_nodejs_txal.jpg',\n                url: 'https://nodejs.org'\n            },{\n                title: '前端三大框架',\n                description: 'vue.js React.js angular.js是目前前端最火的三大框架',\n                picUrl: 'http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png',\n                url: 'https://cn.vuejs.org/'\n            }\n            ]\n        }\n        else if(content === '5'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n            console.log(data.media_id)\n        }\n        else if(content === '6'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4')\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '7'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'music',\n                title: '《李白》--李荣浩',\n                description: '轻松时刻',\n                musicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                hqMusicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                thumbMediaId: data.media_id\n            }\n        }\n        else if(content === '8'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{type:'image'})\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '9'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4',{type:'video', description:'{\"title\":\"VIDEO_TITLE\",\"introduction\":\"INTRODUCTION\"}'})\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '10'){\n            var picData  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{})\n\n            var media = {\n                articles:[{\n                    title:'angularjs入门',\n                    thumb_media_id:picData.media_id,\n                    show_cover_pic:1,\n                    author:'Leo',\n                    digest:'关于angularjs摘要',\n                    content:'augular是目前前端最火框架之一',\n                    content_source_url:'https://docs.angularjs.org/'\n                    }\n                ]\n                \n            }\n\n           var  data = yield wechatApi.uploadMaterial('news', media, {})\n           console.log('我要的mediaId：'+ data.media_id)\n           data = yield wechatApi.fetchMaterial(data.media_id, 'news', {})\n\n           console.log(data)\n\n           var items = data.news_item\n           var news = []\n\n           items.forEach(function(item){\n               news.push({\n                   title: item.title,\n                   description: item.digest,\n                   picUrl: picData.url,\n                   url: item.url\n               })\n           })\n\n           reply = news\n\n        }\n        else if(content === '11'){\n            var counts  = yield wechatApi.countMaterial()\n\n            console.log(JSON.stringify(counts))\n\n            var results = yield [\n                wechatApi.batchMaterial({\n                    type: 'image',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'video',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'vioce',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'news',\n                    offset: 0,\n                    count: 10\n                })\n            ]\n\n            console.log(JSON.stringify(results))\n\n            reply = 'ok'\n        }\n        else if(content === '12'){\n           /* var group1 = yield wechatApi.createGroup('wechat1')\n            console.log('新分组wechat1:')\n            console.log(group1)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('加了wechat1的分组:')\n            console.log(groups)\n\n            var group2 = yield wechatApi.checkGroup(message.FromUserName)\n            console.log('查看自己的分组:')\n            console.log(group2)\n\n            var group3 = yield wechatApi.updateGroup(100, 'wechat_update')\n            console.log('把wechat1分组改为wechat_update')\n            console.log(group3)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把wechat1分组改为wechat_update后的分组:')\n            console.log(groups)\n\n            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)\n            console.log('把我移动到2组')\n            console.log(group4)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把我移动到2组后的分组:')\n            console.log(groups)\n\n            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)\n            console.log('批量移动 把我移动到0组')\n            console.log(group5)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('查看 批量移动 把我移动到0组后的分组:')\n            console.log(groups)\n*/          \n            var groups = yield wechatApi.fetchGroup()\n            console.log(groups)\n            var group_delete = yield wechatApi.deleteGroup(101)\n            console.log('删除101')\n            console.log(group_delete)\n            groups = yield wechatApi.fetchGroup()\n            console.log('删除101后的分组')\n            console.log(groups)\n\n            reply = 'Groups done'\n\n        }\n        else if(content === '13'){\n          /* var remark = yield wechatApi.remarkUser(message.FromUserName, '超级大帅哥')\n            console.log(remark)\n            */\n            var user = yield wechatApi.fetchUser(message.FromUserName)\n            console.log(user)\n\n           /* var openIds = [{\n                openid : message.FromUserName, \n                lang:'zh_CN'\n            }]\n            var users = yield wechatApi.fetchUser(openIds)\n            console.log(users)\n            */\n            reply = JSON.stringify(user)\n\n        }\n        else if(content === '14'){\n            var list = yield wechatApi.listUsers()\n            console.log(list)\n\n            reply = list.total\n        }\n        else if(content === '15'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n\n            var text = {\n                content: '天要下雨了'\n            }\n\n            var msgData = yield wechatApi.sendByGroup('text', text, 0)\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n        else if(content === '16'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n          \n           /* var text = {\n                content: '天一直在打雷还没下雨'\n            }\n  */\n            var msgData = yield wechatApi.previewMass('mpnews', mpnews, 'okFRawx2UAkxdtKG1i9QNGzgXLA4')\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n         else if(content === '17'){\n             var msgData = yield wechatApi.checkMass('1000000010')\n             console.log(msgData)\n             reply = 'done'\n         }\n         else if(content === '18'){\n            \n                wechatApi.createMenu(menu).then(function(msg){\n                console.log('菜单生成状态：'+ JSON.stringify(msg))\n            })\n             /*var createMenu = yield wechatApi.createMenu(menu)\n             console.log(createMenu)\n             */\n             reply = 'done'\n         }\n         else if(content === '19'){\n            var semanticData = {\n                query:\"查一下明天从北京到上海的南航机票\",\n                city:\"北京\",\n                category: \"flight,hotel\",\n                uid: message.FromUserName\n            }\n\n            var _semantic = yield wechatApi.semantic(semanticData)\n            console.log(_semantic)\n             reply = JSON.stringify(_semantic)\n         }\n\n        this.body = reply\n    }\n    \n\n    yield next\n}\n```\n\n\n### 在koa中使用ejs模板 与 heredoc模块\nheredoc模块是作用是封装模板  \n比如：\n```\n'use strict'\n\nvar ejs = require('ejs')\nvar heredoc = require('heredoc')\n\nvar tpl = heredoc(function(){/*\n    <xml> \n        <ToUserName><![CDATA[<%= toUserName %>]]></ToUserName>\n        <FromUserName><![CDATA[<%= fromUserName %>]]></FromUserName> \n        <CreateTime> <%= createTime %> </CreateTime>\n        <MsgType><![CDATA[<%= msgType%>]]></MsgType>\n        <% if (msgType === 'text') {%>\n            <Content><![CDATA[<%= content%>]]></Content>\n        <% } else if(msgType === 'image') { %>\n            <Image>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Image>\n         <% } else if(msgType === 'video') { %>\n             <Video>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n            </Video> \n         <% } else if(msgType === 'voice') { %>\n             <Voice>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Voice>\n        <% } else if(msgType === 'music') { %>\n            <Music>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n                <MusicUrl><![CDATA[<%= content.musicUrl %>]]></MusicUrl>\n                <HQMusicUrl><![CDATA[<%= content.hqMusicUrl%>]]></HQMusicUrl>\n                <ThumbMediaId><![CDATA[<%= content.thumbMediaId %>]]></ThumbMediaId>\n            </Music> \n        <% } else if(msgType === 'news') { %>\n            <ArticleCount><%= content.length %></ArticleCount>           \n            <Articles>\n            <% content.forEach(function(item){ %>\n                <item>\n                    <Title><![CDATA[<%= item.title %>]]></Title> \n                    <Description><![CDATA[<%= item.description %>]]></Description>\n                    <PicUrl><![CDATA[<%= item.picUrl %>]]></PicUrl>\n                    <Url><![CDATA[<%= item.url %>]]></Url>\n                </item>\n            <% }) %>\n            </Articles>\n        <% } %>\n    </xml>\n\n*/})\n\nvar compiled = ejs.compile(tpl)\n\nexports = module.exports = {\n    compiled : compiled\n}\n```\n\n以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据  \n结合json数据\n```\nvar tpl = require('以上文件路径')\n\nvar data = {\n    msgType : 'text',\n    content : 'hello world'\n}\n\nvar xml = tpl.compiled(data)\n```\n或者可以使用render方法将模板和数据一并结合\n```\nvar xml = ejs.render(tpl, data)\n```\n\n******\n这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  \n\n其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  \n\n思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。\n\n这篇笔记就写到这吧，全部代码放在github上。\n\n\n\n","source":"_posts/node开发微信公众号.md","raw":"---\ntitle: node开发微信公众号 \ndate: 2017-06-13\ntags: [nodejs,微信公众号]\n---\n\n\n## 开发第一步\n\n不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。\n\n开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  \n\n开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  \n\n## 开始开发\n我们使用koa框架。  \napp.js\n```js\n'use strict'\n\nvar Koa = require('koa')\nvar wechat = require('./wechat/g')  //可以看作是程序的第二个流程，实现验证 以及调用回复功能\nvar config = require('./config') //公众号的配置配置信息\nvar reply = require('./wx/reply')  //处理客户发过来的消息，回复逻辑\nvar Wechat = require('./wechat/wechat') //回复各种消息类型获取的api，封装在Wechat对象中\n\nvar app = new Koa()\n\napp.use(wechat(config.wechat, reply.reply))\n\napp.listen(1234)\nconsole.log(\"listening at port 1234...\")\n```\n\nwechat/g.js\n```js\n'use strict'\n\nvar sha1 = require('sha1')\nvar getRawBody = require('raw-body')\nvar Wechat = require('./wechat')\nvar util = require('./util')\n\nmodule.exports = function(opts, handler) {\n    var wechat = new Wechat(opts)\n\n    return function *(next){\n\n                var token = opts.token\n                var signature = this.query.signature\n                var nonce = this.query.nonce\n                var timestamp = this.query.timestamp\n                var echostr = this.query.echostr\n                var str = [token, timestamp, nonce].sort().join('')\n                var sha = sha1(str)\n\n                if(this.method == 'GET'){\n                    if(sha === signature){\n                        this.body = echostr + ''\n                    }\n                    else{\n                        this.body = 'wrong'\n                    }\n                }\n                else if(this.method == 'POST'){\n                    console.log(this.method)\n                    if(sha !== signature){\n                        this.body = 'wrong'\n\n                        return false\n                    }\n\n                    var data = yield getRawBody(this.req, { //xml格式的数据\n                        length: this.length,\n                        limit: '1mb',\n                        encoding: this.charset\n                    })\n\n                    //console.log(data.toString())\n                    var content = yield util.parseXMLAsync(data) //转化为json格式的数据\n                    //console.log(content)\n                    var message = util.formatMessage(content.xml)\n                    //console.log(message)\n\n                   this.weixin = message\n\n                   yield handler.call(this, next)\n\n                   wechat.reply.call(this)   //数据转化为最终的xml格式，客户端只能解析xml格式数据\n                }\n                \n            }\n}\n```\n\nwechat/wechat.js\n```js\n'use strict'\n\nvar Promise = require('bluebird')\nvar request = require('request')\nvar util = require('./util')\nvar fs = require('fs')\nvar _ = require('lodash')\n\nvar prefix = 'https://api.weixin.qq.com/cgi-bin/'\nvar api = {\n    accessToken : prefix + 'token?grant_type=client_credential',\n    temporary: {\n        upload : prefix + 'media/upload?',\n        fetch: prefix + 'media/get?'\n    },\n    permanent: {\n        upload: prefix + 'material/add_material?',\n        fetch: prefix + 'material/get_material?',\n        uploadNews: prefix + 'material/add_news?',\n        uploadNewsPic:prefix + 'material/uploadimg?',\n        del: prefix + 'material/del_material?',\n        update: prefix + 'material/update_news?',\n        count: prefix + 'material/get_materialcount?',\n        batch: prefix + 'material/batchget_material?'\n    },\n    group: {\n        create: prefix + 'groups/create?',\n        fetch: prefix + 'groups/get?',\n        check: prefix + 'groups/getid?',\n        update:prefix + 'groups/update?',\n        move: prefix + 'groups/members/update?',\n        batchupdata: prefix + 'groups/members/batchupdate?',\n        del: prefix + 'groups/delete?'\n    },\n    user: {\n        remark: prefix +　'user/info/updateremark?',\n        fetch: prefix +　'user/info?',\n        batchFetch: prefix + 'user/info/batchget?',\n        list: prefix +　'user/get?'\n    },\n    mass: {\n        group: prefix + 'message/mass/sendall?',\n        openId: prefix + 'message/mass/send?',\n        del: prefix + 'message/mass/delete?',\n        preview: prefix + 'message/mass/preview?',\n        check: prefix + 'message/mass/get?'\n    },\n    menu: {\n        create: prefix + 'menu/create?',\n        get:　prefix +　'menu/get?',\n        del: prefix + 'menu/delete?',\n        current: prefix + 'get_current_selfmenu_info?'\n    },   \n    semantic: 'https://api.weixin.qq.com/semantic/semproxy/search?',\n    ticket: {\n        get : prefix +　'ticket/getticket?'\n    }\n    \n}\n\nfunction Wechat(opts){\n    var that = this\n\n    this.appID = opts.appID\n    this.appSecret = opts.appSecret\n    this.getAccessToken = opts.getAccessToken\n    this.saveAccessToken = opts.saveAccessToken\n    this.getTicket = opts.getTicket\n    this.saveTicket = opts.saveTicket\n\n    this.fetchAccessToken()\n}\n\n//获取ticket\nWechat.prototype.fetchTicket = function(access_token){\n    var that = this\n\n    return this.getTicket()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateTicket(access_token)\n            }\n            \n            if(that.isValidTicket(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateTicket(access_token)\n            }\n        })\n        .then(function(data){\n            that.saveTicket(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.updateTicket = function(access_token){\n\n   var url = api.ticket.get + '&access_token=' + access_token + '&type=jsapi'\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get ticket')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.isValidTicket = function(data){\n    if(!data || !data.ticket || !data.expires_in){\n        return false\n    }\n\n    var ticket = data.ticket\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(ticket && now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\n//获取access_token\nWechat.prototype.fetchAccessToken = function(data){\n    var that = this\n\n    if(this.access_token && this.expires_in){\n        if(this.isValidAccessToken(this)){\n            return Promise.resolve(this)\n        }\n    }\n\n    return this.getAccessToken()\n        .then(function(data){\n            try{\n                data = JSON.parse(data)\n            }\n            catch(e){\n                return that.updateAccessToken()\n            }\n            \n            if(that.isValidAccessToken(data)){\n                return Promise.resolve(data)\n            }\n            else{\n                return that.updateAccessToken()\n            }\n        })\n        .then(function(data){\n            that.access_token = data.access_token\n            that.expires_in = data.expires_in\n\n            that.saveAccessToken(data)\n\n            return Promise.resolve(data)\n        })\n}\n\nWechat.prototype.isValidAccessToken = function(data){\n    if(!data || !data.access_token || !data.expires_in){\n        return false\n    }\n\n    var access_token = data.access_token\n    var expires_in = data.expires_in\n    var now = (new Date().getTime())\n\n    if(now < expires_in){\n        return true\n    }\n    else{\n        return false\n    }\n}\n\nWechat.prototype.updateAccessToken = function(){\n   var appID = this.appID\n   var appSecret = this.appSecret\n   var url = api.accessToken + '&appid=' + appID + '&secret=' + appSecret\n\n   return new Promise(function(resolve, reject){\n       request({url: url, json: true}, function (error, response, body) {\n            if (!error && response.statusCode === 200) {\n                var data = body;\n                var now = (new Date().getTime());\n                var expires_in = now + (data.expires_in - 20) * 1000;\n                data.expires_in = expires_in;\n                resolve(data);\n                //console.log(data);\n            } else {\n                reject('can not get access_token')\n            }\n        });     \n   })\n   \n}\n\nWechat.prototype.uploadMaterial = function(type, material, permanent){\n    var that = this\n    var form = {}\n    var uploadUrl = api.temporary.upload\n\n    if(permanent){\n        uploadUrl = api.permanent.upload\n\n        _.extend(form, permanent)\n    }\n\n    if(type === 'pic'){\n        uploadUrl = api.permanent.uploadNewsPic\n    }\n\n    if(type === 'news'){\n        uploadUrl = api.permanent.uploadNews\n        form = material\n    }\n    else{\n        form.media = fs.createReadStream(material)\n    }\n   \n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = uploadUrl + 'access_token=' + data.access_token \n\n                if(!permanent) {\n                    url += '&type=' + type\n                }\n                else{\n                    form.access_token = data.access_token\n                }\n\n                var options = {\n                    method: 'POST',\n                    url: url,\n                    json: true\n                }\n\n                if(type === 'news'){\n                    options.body = form\n                }\n                else{\n                    options.formData = form\n                }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        //console.log(_data);\n                    } else {\n                        throw new Error('upload material fails')\n                    }\n                }) \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.fetchMaterial = function(mediaId, type, permanent){\n    var that = this\n    var fetchUrl = api.temporary.fetch\n\n    if(permanent){\n        fetchUrl = api.permanent.fetch\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = fetchUrl + 'access_token=' + data.access_token \n                var form = {}\n                var options = {method:'POST', url: url, json: true}\n\n                if(permanent){\n                    form.media_id = mediaId\n                    form.access_token = data.access_token\n                    options.body = form\n                }\n                else{\n                    if(type === 'video'){\n                        url = url.replace('https://', 'http://')\n                    }\n                    url += '&media_id=' + mediaId\n                }\n\n               if(type === 'news' || type === 'video'){\n                   request(options, function (error, response, body) {\n                        if (!error && response.statusCode === 200) {\n                            var _data = body;\n                            \n                            if(_data){\n                                resolve(_data);\n                            }                     \n                        \n                        } else {\n                            throw new Error('delete material fails')\n                        }\n                    })\n               }\n               else{\n                   resolve(url)\n               }\n\n                \n\n           })\n\n          \n   })\n   \n}\n\nWechat.prototype.deleteMaterial = function(mediaId){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.del + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateMaterial = function(mediaId, news){\n    var that = this\n    var form = {\n        media_id:mediaId\n    }\n\n    _.extend(form, news)\n   \n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.update + 'access_token=' + data.access_token + '&media_id=' + mediaId\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.countMaterial = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.count + 'access_token=' + data.access_token\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('count material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.batchMaterial = function(options){\n    var that = this\n\n    options.type = options.type || 'image'\n    options.offset = options.offset || 0\n    options.count = options.count || 1\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.permanent.batch + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:options, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('batch material fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//用户分组\nWechat.prototype.createGroup = function(name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.create + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('create group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchGroup = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.fetch + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkGroup = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.check + 'access_token=' + data.access_token\n                var form = {\n                    openid : openId\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('check group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.updateGroup = function(id, name){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.update + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id,\n                        name: name\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('update group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.moveGroup = function(openIds, to_groupid){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var url\n               var form = {\n                   to_groupid : to_groupid\n               }\n\n               if(_.isArray(openIds)){\n                   url = api.group.batchupdata + 'access_token=' + data.access_token\n                   form.openid_list = openIds\n               }\n               else{\n                   url = api.group.move + 'access_token=' + data.access_token\n                   form.openid = openIds\n               }  \n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('move group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteGroup = function(id){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.group.del + 'access_token=' + data.access_token\n                var form = {\n                    group: {\n                        id: id\n                    }\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('delete group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\n//获取用户信息\nWechat.prototype.remarkUser = function(openId, remark){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.remark + 'access_token=' + data.access_token\n                var form = {\n                    openid:　openId,\n                    remark: remark\n                }\n\n                request({method:'POST', url: url, body: form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('remark user fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.fetchUser = function(openIds, lang){\n    var that = this\n    \n    var lang = lang || 'zh_CN'\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n               var options　= {\n                   json: true\n               }\n\n               if(_.isArray(openIds)){\n                   options.url = api.user.batchFetch + 'access_token=' + data.access_token\n                   options.method = 'POST'\n                   options.body = {\n                       user_list : openIds\n                   }\n               }\n               else{\n                   options.url = api.user.fetch + 'access_token=' + data.access_token + '&openid=' + openIds + '&lang=' + lang\n               }\n\n                request(options, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('fetch users fails')\n                    }\n                }) \n           })         \n    })  \n}\n\nWechat.prototype.listUsers = function(openId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.user.list + 'access_token=' + data.access_token\n                \n                if(openId){\n                    url += '&next_openid=' + openId\n                }\n\n                request({method:'GET', url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('list users fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByGroup = function(type, message, groupId){\n    var that = this\n    var msg = {\n        filter:{},\n        msgtype:type\n    }\n    msg[type] = message\n    if(!groupId){\n        msg.filter.is_to_all = true\n    }else{\n        msg.filter.is_to_all = false\n        msg.filter.group_id = groupId\n    }\n\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.group + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                       \n                    } else {\n                        throw new Error('sell by group fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.sendByOpenId = function(type, message, openIds){\n    var that = this\n\n    var msg = {\n        touser:openIds,\n        msgtype:type\n    }\n\n   msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.openId + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url, body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('sell by openid fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMass = function(msgId){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.del + 'access_token=' + data.access_token\n                var form = {\n                    msg_id : msgId\n                }\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete Mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.previewMass = function(type, message, openId){\n    var that = this\n    var msg = {\n        touser:openId,\n        msgtype:type\n    }\n    msg[type] = message\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.preview + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:msg, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('preview mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.checkMass = function(msgId){\n    var that = this\n    var form = {\n        msg_id : msgId\n    }\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.mass.check + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:form, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('check mass fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.createMenu = function(menu){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.menu.create + 'access_token=' + data.access_token\n\n                request({method:'POST', url: url,body:menu, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('create menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.getMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.get + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.deleteMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.del + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('delete menu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.currentSelfMenu = function(){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){\n                var url = api.menu.current + 'access_token=' + data.access_token\n\n                request({url: url, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('get current selfmenu fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.semantic = function(semanticData){\n    var that = this\n\n   return new Promise(function(resolve, reject){\n       that\n           .fetchAccessToken()\n           .then(function(data){  \n                var url = api.semantic + 'access_token=' + data.access_token\n                semanticData.appid = data.appID\n\n                request({method:'POST', url: url,body:semanticData, json: true}, function (error, response, body) {\n                    if (!error && response.statusCode === 200) {\n                        var _data = body;\n                        \n                        if(_data){\n                            resolve(_data);\n                        }                     \n                        \n                    } else {\n                        throw new Error('semantic data fails')\n                    }\n                }) \n           })         \n   })  \n}\n\nWechat.prototype.reply = function(){  //实现完整的回复逻辑，放回给客户端xml格式数据\n    var content = this.body   //此时的this.body是json数据格式\n    var message = this.weixin\n    var xml = util.tpl(content, message)  //将content与message中的内容提出整合，此时已经变成了xml格式\n    //console.log('xml:'+ xml)\n\n    this.status = 200\n    this.type = 'application/xml'\n    this.body = xml\n\n}\n\nmodule.exports = Wechat\n```\n\nwx/reply.js  处理客户端消息\n```js\n'use strict'\n\nvar config = require('../config')\nvar Wechat = require('../wechat/wechat')\nvar wechatApi = new Wechat(config.wechat)\nvar menu = require('./menu')\n\n/*wechatApi.deleteMenu().then(function(){\n    return wechatApi.createMenu(menu)\n}).then(function(msg){\n    console.log(msg)\n})*/\n\nexports.reply = function *(next){\n \n    var message = this.weixin\n\n    if(message.MsgType === 'event'){\n        if(message.Event === 'subscribe'){\n            if(message.EventKey) {\n                console.log('扫二维码进来：'+ message.EventKey +' '+ message.ticket)\n            }\n            this.body =  '么么哒'\n        }\n        else if(message.Event === 'unsubscribe'){\n            console.log('无情取关！')\n            this.body = ' '\n        }\n        else if(message.Event === 'LOCATION'){\n            this.body = '您上报的位置是：' + message.Latitude + '/' + message.Longitude + '-' +message.Precision\n        }\n        else if(message.Event === 'CLICK'){\n            this.body = '您点击了菜单：'+ message.EventKey\n        }\n        else if(message.Event === 'SCAN'){\n            console.log('关注后扫二维码'+ message.EventKey + ' '+ message.Ticket)\n            this.body = '您扫了二维码哦'\n        }\n        else if(message.Event === 'VIEW'){\n            this.body = '您点击了菜单中的连接：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_push'){\n            console.log(message.ScanCodeInfo.ScanType)\n            console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'scancode_waitmsg'){\n             console.log(message.ScanCodeInfo.ScanType)\n             console.log(message.ScanCodeInfo.ScanResult)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_sysphoto'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_photo_or_album'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'pic_weixin'){\n             console.log(message.SendPicsInfo.Count)\n             console.log(message.SendPicsInfo.PicList)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n        else if(message.Event === 'location_select'){\n             console.log(message.SendLocationInfo.Location_X)\n             console.log(message.SendLocationInfo.Location_Y)\n             console.log(message.SendLocationInfo.Scale)\n             console.log(message.SendLocationInfo.Label)\n             console.log(message.SendLocationInfo.Poiname)\n             this.body = '您点击了菜单中的：'+ message.EventKey\n        }\n    }\n    else if(message.MsgType === 'text'){\n        var content = message.Content\n        var reply = '你说的“' + message.Content + '” 我们没有这样的服务'\n\n        if(content === '1'){\n            reply = '天下第一'\n        }\n        else if(content === '2'){\n            reply = '天下第二'\n        }\n        else if(content === '3'){\n            reply = '天下第三'\n        }\n        else if(content === '4'){\n            reply = [{\n                title: 'nodejs开发微信',\n                description: 'nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么',\n                picUrl: 'http://www.aseoe.com/images/aseoe_nodejs_txal.jpg',\n                url: 'https://nodejs.org'\n            },{\n                title: '前端三大框架',\n                description: 'vue.js React.js angular.js是目前前端最火的三大框架',\n                picUrl: 'http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png',\n                url: 'https://cn.vuejs.org/'\n            }\n            ]\n        }\n        else if(content === '5'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n            console.log(data.media_id)\n        }\n        else if(content === '6'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4')\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '7'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg')\n\n            reply = {\n                type:'music',\n                title: '《李白》--李荣浩',\n                description: '轻松时刻',\n                musicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                hqMusicUrl: 'http://link.hhtjim.com/163/27678655.mp3',\n                thumbMediaId: data.media_id\n            }\n        }\n        else if(content === '8'){\n            var data  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{type:'image'})\n\n            reply = {\n                type:'image',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '9'){\n            var data  = yield wechatApi.uploadMaterial('video', __dirname + '/6.mp4',{type:'video', description:'{\"title\":\"VIDEO_TITLE\",\"introduction\":\"INTRODUCTION\"}'})\n\n            reply = {\n                type:'video',\n                title: '跪着唱征服',\n                description: '试试这是个怎样的感觉',\n                mediaId: data.media_id\n            }\n        }\n        else if(content === '10'){\n            var picData  = yield wechatApi.uploadMaterial('image', __dirname + '/2.jpg',{})\n\n            var media = {\n                articles:[{\n                    title:'angularjs入门',\n                    thumb_media_id:picData.media_id,\n                    show_cover_pic:1,\n                    author:'Leo',\n                    digest:'关于angularjs摘要',\n                    content:'augular是目前前端最火框架之一',\n                    content_source_url:'https://docs.angularjs.org/'\n                    }\n                ]\n                \n            }\n\n           var  data = yield wechatApi.uploadMaterial('news', media, {})\n           console.log('我要的mediaId：'+ data.media_id)\n           data = yield wechatApi.fetchMaterial(data.media_id, 'news', {})\n\n           console.log(data)\n\n           var items = data.news_item\n           var news = []\n\n           items.forEach(function(item){\n               news.push({\n                   title: item.title,\n                   description: item.digest,\n                   picUrl: picData.url,\n                   url: item.url\n               })\n           })\n\n           reply = news\n\n        }\n        else if(content === '11'){\n            var counts  = yield wechatApi.countMaterial()\n\n            console.log(JSON.stringify(counts))\n\n            var results = yield [\n                wechatApi.batchMaterial({\n                    type: 'image',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'video',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'vioce',\n                    offset: 0,\n                    count: 10\n                }),\n                wechatApi.batchMaterial({\n                    type: 'news',\n                    offset: 0,\n                    count: 10\n                })\n            ]\n\n            console.log(JSON.stringify(results))\n\n            reply = 'ok'\n        }\n        else if(content === '12'){\n           /* var group1 = yield wechatApi.createGroup('wechat1')\n            console.log('新分组wechat1:')\n            console.log(group1)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('加了wechat1的分组:')\n            console.log(groups)\n\n            var group2 = yield wechatApi.checkGroup(message.FromUserName)\n            console.log('查看自己的分组:')\n            console.log(group2)\n\n            var group3 = yield wechatApi.updateGroup(100, 'wechat_update')\n            console.log('把wechat1分组改为wechat_update')\n            console.log(group3)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把wechat1分组改为wechat_update后的分组:')\n            console.log(groups)\n\n            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)\n            console.log('把我移动到2组')\n            console.log(group4)\n\n            groups = yield wechatApi.fetchGroup()\n            console.log('查看把我移动到2组后的分组:')\n            console.log(groups)\n\n            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)\n            console.log('批量移动 把我移动到0组')\n            console.log(group5)\n\n            var groups = yield wechatApi.fetchGroup()\n            console.log('查看 批量移动 把我移动到0组后的分组:')\n            console.log(groups)\n*/          \n            var groups = yield wechatApi.fetchGroup()\n            console.log(groups)\n            var group_delete = yield wechatApi.deleteGroup(101)\n            console.log('删除101')\n            console.log(group_delete)\n            groups = yield wechatApi.fetchGroup()\n            console.log('删除101后的分组')\n            console.log(groups)\n\n            reply = 'Groups done'\n\n        }\n        else if(content === '13'){\n          /* var remark = yield wechatApi.remarkUser(message.FromUserName, '超级大帅哥')\n            console.log(remark)\n            */\n            var user = yield wechatApi.fetchUser(message.FromUserName)\n            console.log(user)\n\n           /* var openIds = [{\n                openid : message.FromUserName, \n                lang:'zh_CN'\n            }]\n            var users = yield wechatApi.fetchUser(openIds)\n            console.log(users)\n            */\n            reply = JSON.stringify(user)\n\n        }\n        else if(content === '14'){\n            var list = yield wechatApi.listUsers()\n            console.log(list)\n\n            reply = list.total\n        }\n        else if(content === '15'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n\n            var text = {\n                content: '天要下雨了'\n            }\n\n            var msgData = yield wechatApi.sendByGroup('text', text, 0)\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n        else if(content === '16'){\n            var mpnews = {\n                media_id : 'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'\n            }\n          \n           /* var text = {\n                content: '天一直在打雷还没下雨'\n            }\n  */\n            var msgData = yield wechatApi.previewMass('mpnews', mpnews, 'okFRawx2UAkxdtKG1i9QNGzgXLA4')\n\n            console.log(msgData)\n            reply = '内容如下'\n        }\n         else if(content === '17'){\n             var msgData = yield wechatApi.checkMass('1000000010')\n             console.log(msgData)\n             reply = 'done'\n         }\n         else if(content === '18'){\n            \n                wechatApi.createMenu(menu).then(function(msg){\n                console.log('菜单生成状态：'+ JSON.stringify(msg))\n            })\n             /*var createMenu = yield wechatApi.createMenu(menu)\n             console.log(createMenu)\n             */\n             reply = 'done'\n         }\n         else if(content === '19'){\n            var semanticData = {\n                query:\"查一下明天从北京到上海的南航机票\",\n                city:\"北京\",\n                category: \"flight,hotel\",\n                uid: message.FromUserName\n            }\n\n            var _semantic = yield wechatApi.semantic(semanticData)\n            console.log(_semantic)\n             reply = JSON.stringify(_semantic)\n         }\n\n        this.body = reply\n    }\n    \n\n    yield next\n}\n```\n\n\n### 在koa中使用ejs模板 与 heredoc模块\nheredoc模块是作用是封装模板  \n比如：\n```\n'use strict'\n\nvar ejs = require('ejs')\nvar heredoc = require('heredoc')\n\nvar tpl = heredoc(function(){/*\n    <xml> \n        <ToUserName><![CDATA[<%= toUserName %>]]></ToUserName>\n        <FromUserName><![CDATA[<%= fromUserName %>]]></FromUserName> \n        <CreateTime> <%= createTime %> </CreateTime>\n        <MsgType><![CDATA[<%= msgType%>]]></MsgType>\n        <% if (msgType === 'text') {%>\n            <Content><![CDATA[<%= content%>]]></Content>\n        <% } else if(msgType === 'image') { %>\n            <Image>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Image>\n         <% } else if(msgType === 'video') { %>\n             <Video>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n            </Video> \n         <% } else if(msgType === 'voice') { %>\n             <Voice>\n                <MediaId><![CDATA[<%= content.mediaId %>]]></MediaId>\n            </Voice>\n        <% } else if(msgType === 'music') { %>\n            <Music>\n                <Title><![CDATA[<%= content.title %>]]></Title>\n                <Description><![CDATA[<%= content.description %>]]></Description>\n                <MusicUrl><![CDATA[<%= content.musicUrl %>]]></MusicUrl>\n                <HQMusicUrl><![CDATA[<%= content.hqMusicUrl%>]]></HQMusicUrl>\n                <ThumbMediaId><![CDATA[<%= content.thumbMediaId %>]]></ThumbMediaId>\n            </Music> \n        <% } else if(msgType === 'news') { %>\n            <ArticleCount><%= content.length %></ArticleCount>           \n            <Articles>\n            <% content.forEach(function(item){ %>\n                <item>\n                    <Title><![CDATA[<%= item.title %>]]></Title> \n                    <Description><![CDATA[<%= item.description %>]]></Description>\n                    <PicUrl><![CDATA[<%= item.picUrl %>]]></PicUrl>\n                    <Url><![CDATA[<%= item.url %>]]></Url>\n                </item>\n            <% }) %>\n            </Articles>\n        <% } %>\n    </xml>\n\n*/})\n\nvar compiled = ejs.compile(tpl)\n\nexports = module.exports = {\n    compiled : compiled\n}\n```\n\n以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据  \n结合json数据\n```\nvar tpl = require('以上文件路径')\n\nvar data = {\n    msgType : 'text',\n    content : 'hello world'\n}\n\nvar xml = tpl.compiled(data)\n```\n或者可以使用render方法将模板和数据一并结合\n```\nvar xml = ejs.render(tpl, data)\n```\n\n******\n这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  \n\n其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  \n\n思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。\n\n这篇笔记就写到这吧，全部代码放在github上。\n\n\n\n","slug":"node开发微信公众号","published":1,"updated":"2017-06-13T15:21:30.838Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzzp7gqh004rw8qz6p8odi5d","content":"<h2 id=\"开发第一步\"><a href=\"#开发第一步\" class=\"headerlink\" title=\"开发第一步\"></a>开发第一步</h2><p>不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。</p>\n<p>开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  </p>\n<p>开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  </p>\n<h2 id=\"开始开发\"><a href=\"#开始开发\" class=\"headerlink\" title=\"开始开发\"></a>开始开发</h2><p>我们使用koa框架。<br>app.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Koa = <span class=\"built_in\">require</span>(<span class=\"string\">'koa'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./wechat/g'</span>)  <span class=\"comment\">//可以看作是程序的第二个流程，实现验证 以及调用回复功能</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'./config'</span>) <span class=\"comment\">//公众号的配置配置信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reply = <span class=\"built_in\">require</span>(<span class=\"string\">'./wx/reply'</span>)  <span class=\"comment\">//处理客户发过来的消息，回复逻辑</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./wechat/wechat'</span>) <span class=\"comment\">//回复各种消息类型获取的api，封装在Wechat对象中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Koa()</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(wechat(config.wechat, reply.reply))</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(<span class=\"number\">1234</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"listening at port 1234...\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>wechat/g.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sha1 = <span class=\"built_in\">require</span>(<span class=\"string\">'sha1'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> getRawBody = <span class=\"built_in\">require</span>(<span class=\"string\">'raw-body'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> Wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./wechat'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">'./util'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">opts, handler</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wechat = <span class=\"keyword\">new</span> Wechat(opts)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> *(<span class=\"params\">next</span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> token = opts.token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> signature = <span class=\"keyword\">this</span>.query.signature</span><br><span class=\"line\">                <span class=\"keyword\">var</span> nonce = <span class=\"keyword\">this</span>.query.nonce</span><br><span class=\"line\">                <span class=\"keyword\">var</span> timestamp = <span class=\"keyword\">this</span>.query.timestamp</span><br><span class=\"line\">                <span class=\"keyword\">var</span> echostr = <span class=\"keyword\">this</span>.query.echostr</span><br><span class=\"line\">                <span class=\"keyword\">var</span> str = [token, timestamp, nonce].sort().join(<span class=\"string\">''</span>)</span><br><span class=\"line\">                <span class=\"keyword\">var</span> sha = sha1(str)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.method == <span class=\"string\">'GET'</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha === signature)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.body = echostr + <span class=\"string\">''</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.body = <span class=\"string\">'wrong'</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.method == <span class=\"string\">'POST'</span>)&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.method)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha !== signature)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.body = <span class=\"string\">'wrong'</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> data = <span class=\"keyword\">yield</span> getRawBody(<span class=\"keyword\">this</span>.req, &#123; <span class=\"comment\">//xml格式的数据</span></span><br><span class=\"line\">                        length: <span class=\"keyword\">this</span>.length,</span><br><span class=\"line\">                        limit: <span class=\"string\">'1mb'</span>,</span><br><span class=\"line\">                        encoding: <span class=\"keyword\">this</span>.charset</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(data.toString())</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> content = <span class=\"keyword\">yield</span> util.parseXMLAsync(data) <span class=\"comment\">//转化为json格式的数据</span></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(content)</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> message = util.formatMessage(content.xml)</span><br><span class=\"line\">                    <span class=\"comment\">//console.log(message)</span></span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">this</span>.weixin = message</span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">yield</span> handler.call(<span class=\"keyword\">this</span>, next)</span><br><span class=\"line\"></span><br><span class=\"line\">                   wechat.reply.call(<span class=\"keyword\">this</span>)   <span class=\"comment\">//数据转化为最终的xml格式，客户端只能解析xml格式数据</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>wechat/wechat.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">Promise</span> = <span class=\"built_in\">require</span>(<span class=\"string\">'bluebird'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'request'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">'./util'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> _ = <span class=\"built_in\">require</span>(<span class=\"string\">'lodash'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> prefix = <span class=\"string\">'https://api.weixin.qq.com/cgi-bin/'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> api = &#123;</span><br><span class=\"line\">    accessToken : prefix + <span class=\"string\">'token?grant_type=client_credential'</span>,</span><br><span class=\"line\">    temporary: &#123;</span><br><span class=\"line\">        upload : prefix + <span class=\"string\">'media/upload?'</span>,</span><br><span class=\"line\">        fetch: prefix + <span class=\"string\">'media/get?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    permanent: &#123;</span><br><span class=\"line\">        upload: prefix + <span class=\"string\">'material/add_material?'</span>,</span><br><span class=\"line\">        fetch: prefix + <span class=\"string\">'material/get_material?'</span>,</span><br><span class=\"line\">        uploadNews: prefix + <span class=\"string\">'material/add_news?'</span>,</span><br><span class=\"line\">        uploadNewsPic:prefix + <span class=\"string\">'material/uploadimg?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'material/del_material?'</span>,</span><br><span class=\"line\">        update: prefix + <span class=\"string\">'material/update_news?'</span>,</span><br><span class=\"line\">        count: prefix + <span class=\"string\">'material/get_materialcount?'</span>,</span><br><span class=\"line\">        batch: prefix + <span class=\"string\">'material/batchget_material?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    group: &#123;</span><br><span class=\"line\">        create: prefix + <span class=\"string\">'groups/create?'</span>,</span><br><span class=\"line\">        fetch: prefix + <span class=\"string\">'groups/get?'</span>,</span><br><span class=\"line\">        check: prefix + <span class=\"string\">'groups/getid?'</span>,</span><br><span class=\"line\">        update:prefix + <span class=\"string\">'groups/update?'</span>,</span><br><span class=\"line\">        move: prefix + <span class=\"string\">'groups/members/update?'</span>,</span><br><span class=\"line\">        batchupdata: prefix + <span class=\"string\">'groups/members/batchupdate?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'groups/delete?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    user: &#123;</span><br><span class=\"line\">        remark: prefix +　<span class=\"string\">'user/info/updateremark?'</span>,</span><br><span class=\"line\">        fetch: prefix +　<span class=\"string\">'user/info?'</span>,</span><br><span class=\"line\">        batchFetch: prefix + <span class=\"string\">'user/info/batchget?'</span>,</span><br><span class=\"line\">        list: prefix +　<span class=\"string\">'user/get?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mass: &#123;</span><br><span class=\"line\">        group: prefix + <span class=\"string\">'message/mass/sendall?'</span>,</span><br><span class=\"line\">        openId: prefix + <span class=\"string\">'message/mass/send?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'message/mass/delete?'</span>,</span><br><span class=\"line\">        preview: prefix + <span class=\"string\">'message/mass/preview?'</span>,</span><br><span class=\"line\">        check: prefix + <span class=\"string\">'message/mass/get?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    menu: &#123;</span><br><span class=\"line\">        create: prefix + <span class=\"string\">'menu/create?'</span>,</span><br><span class=\"line\">        get:　prefix +　<span class=\"string\">'menu/get?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'menu/delete?'</span>,</span><br><span class=\"line\">        current: prefix + <span class=\"string\">'get_current_selfmenu_info?'</span></span><br><span class=\"line\">    &#125;,   </span><br><span class=\"line\">    semantic: <span class=\"string\">'https://api.weixin.qq.com/semantic/semproxy/search?'</span>,</span><br><span class=\"line\">    ticket: &#123;</span><br><span class=\"line\">        get : prefix +　<span class=\"string\">'ticket/getticket?'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Wechat</span>(<span class=\"params\">opts</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.appID = opts.appID</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.appSecret = opts.appSecret</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getAccessToken = opts.getAccessToken</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.saveAccessToken = opts.saveAccessToken</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getTicket = opts.getTicket</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.saveTicket = opts.saveTicket</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fetchAccessToken()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取ticket</span></span><br><span class=\"line\">Wechat.prototype.fetchTicket = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getTicket()</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"built_in\">JSON</span>.parse(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateTicket(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.isValidTicket(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateTicket(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            that.saveTicket(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateTicket = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.ticket.get + <span class=\"string\">'&amp;access_token='</span> + access_token + <span class=\"string\">'&amp;type=jsapi'</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">'can not get ticket'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.isValidTicket = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.ticket || !data.expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ticket = data.ticket</span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.expires_in</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ticket &amp;&amp; now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取access_token</span></span><br><span class=\"line\">Wechat.prototype.fetchAccessToken = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.access_token &amp;&amp; <span class=\"keyword\">this</span>.expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.isValidAccessToken(<span class=\"keyword\">this</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getAccessToken()</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"built_in\">JSON</span>.parse(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateAccessToken()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.isValidAccessToken(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateAccessToken()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            that.access_token = data.access_token</span><br><span class=\"line\">            that.expires_in = data.expires_in</span><br><span class=\"line\"></span><br><span class=\"line\">            that.saveAccessToken(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.isValidAccessToken = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.access_token || !data.expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> access_token = data.access_token</span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.expires_in</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateAccessToken = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> appID = <span class=\"keyword\">this</span>.appID</span><br><span class=\"line\">   <span class=\"keyword\">var</span> appSecret = <span class=\"keyword\">this</span>.appSecret</span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.accessToken + <span class=\"string\">'&amp;appid='</span> + appID + <span class=\"string\">'&amp;secret='</span> + appSecret</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">'can not get access_token'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.uploadMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, material, permanent</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadUrl = api.temporary.upload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        uploadUrl = api.permanent.upload</span><br><span class=\"line\"></span><br><span class=\"line\">        _.extend(form, permanent)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">'pic'</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.permanent.uploadNewsPic</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">'news'</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.permanent.uploadNews</span><br><span class=\"line\">        form = material</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        form.media = fs.createReadStream(material)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = uploadUrl + <span class=\"string\">'access_token='</span> + data.access_token </span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!permanent) &#123;</span><br><span class=\"line\">                    url += <span class=\"string\">'&amp;type='</span> + type</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    form.access_token = data.access_token</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">                    method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">                    url: url,</span><br><span class=\"line\">                    json: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(type === <span class=\"string\">'news'</span>)&#123;</span><br><span class=\"line\">                    options.body = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    options.formData = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        <span class=\"comment\">//console.log(_data);</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'upload material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.fetchMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mediaId, type, permanent</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fetchUrl = api.temporary.fetch</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        fetchUrl = api.permanent.fetch</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = fetchUrl + <span class=\"string\">'access_token='</span> + data.access_token </span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;method:<span class=\"string\">'POST'</span>, url: url, json: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">                    form.media_id = mediaId</span><br><span class=\"line\">                    form.access_token = data.access_token</span><br><span class=\"line\">                    options.body = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(type === <span class=\"string\">'video'</span>)&#123;</span><br><span class=\"line\">                        url = url.replace(<span class=\"string\">'https://'</span>, <span class=\"string\">'http://'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    url += <span class=\"string\">'&amp;media_id='</span> + mediaId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(type === <span class=\"string\">'news'</span> || type === <span class=\"string\">'video'</span>)&#123;</span><br><span class=\"line\">                   request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                            <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                                resolve(_data);</span><br><span class=\"line\">                            &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete material fails'</span>)</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   resolve(url)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mediaId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        media_id:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.del + <span class=\"string\">'access_token='</span> + data.access_token + <span class=\"string\">'&amp;media_id='</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mediaId, news</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        media_id:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _.extend(form, news)</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.update + <span class=\"string\">'access_token='</span> + data.access_token + <span class=\"string\">'&amp;media_id='</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.countMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.count + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'GET'</span>, url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'count material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.batchMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    options.type = options.type || <span class=\"string\">'image'</span></span><br><span class=\"line\">    options.offset = options.offset || <span class=\"number\">0</span></span><br><span class=\"line\">    options.count = options.count || <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.batch + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:options, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'batch material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户分组</span></span><br><span class=\"line\">Wechat.prototype.createGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.create + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    group: &#123;</span><br><span class=\"line\">                        name: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'create group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.fetchGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.fetch + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'fetch group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.checkGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.check + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    openid : openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'check group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id, name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.update + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    group: &#123;</span><br><span class=\"line\">                        id: id,</span><br><span class=\"line\">                        name: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'update group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.moveGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openIds, to_groupid</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> url</span><br><span class=\"line\">               <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                   to_groupid : to_groupid</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.isArray(openIds))&#123;</span><br><span class=\"line\">                   url = api.group.batchupdata + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                   form.openid_list = openIds</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   url = api.group.move + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                   form.openid = openIds</span><br><span class=\"line\">               &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'move group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.del + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    group: &#123;</span><br><span class=\"line\">                        id: id</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取用户信息</span></span><br><span class=\"line\">Wechat.prototype.remarkUser = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openId, remark</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.user.remark + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    openid:　openId,</span><br><span class=\"line\">                    remark: remark</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'remark user fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.fetchUser = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openIds, lang</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> lang = lang || <span class=\"string\">'zh_CN'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> options　= &#123;</span><br><span class=\"line\">                   json: <span class=\"literal\">true</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.isArray(openIds))&#123;</span><br><span class=\"line\">                   options.url = api.user.batchFetch + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                   options.method = <span class=\"string\">'POST'</span></span><br><span class=\"line\">                   options.body = &#123;</span><br><span class=\"line\">                       user_list : openIds</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   options.url = api.user.fetch + <span class=\"string\">'access_token='</span> + data.access_token + <span class=\"string\">'&amp;openid='</span> + openIds + <span class=\"string\">'&amp;lang='</span> + lang</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'fetch users fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">    &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.listUsers = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.user.list + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span>(openId)&#123;</span><br><span class=\"line\">                    url += <span class=\"string\">'&amp;next_openid='</span> + openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'GET'</span>, url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'list users fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.sendByGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, message, groupId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        filter:&#123;&#125;,</span><br><span class=\"line\">        msgtype:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!groupId)&#123;</span><br><span class=\"line\">        msg.filter.is_to_all = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        msg.filter.is_to_all = <span class=\"literal\">false</span></span><br><span class=\"line\">        msg.filter.group_id = groupId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.group + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:msg, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'sell by group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.sendByOpenId = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, message, openIds</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        touser:openIds,</span><br><span class=\"line\">        msgtype:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.openId + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:msg, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'sell by openid fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteMass = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.del + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    msg_id : msgId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete Mass fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.previewMass = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, message, openId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        touser:openId,</span><br><span class=\"line\">        msgtype:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.preview + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:msg, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'preview mass fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.checkMass = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        msg_id : msgId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.check + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'check mass fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.createMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">menu</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.create + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:menu, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'create menu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.getMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.get + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'get menu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.del + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete menu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.currentSelfMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.current + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'get current selfmenu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.semantic = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">semanticData</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.semantic + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                semanticData.appid = data.appID</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:semanticData, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'semantic data fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.reply = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;  <span class=\"comment\">//实现完整的回复逻辑，放回给客户端xml格式数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> content = <span class=\"keyword\">this</span>.body   <span class=\"comment\">//此时的this.body是json数据格式</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"keyword\">this</span>.weixin</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xml = util.tpl(content, message)  <span class=\"comment\">//将content与message中的内容提出整合，此时已经变成了xml格式</span></span><br><span class=\"line\">    <span class=\"comment\">//console.log('xml:'+ xml)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.type = <span class=\"string\">'application/xml'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.body = xml</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Wechat</span><br></pre></td></tr></table></figure></p>\n<p>wx/reply.js  处理客户端消息<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> Wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'../wechat/wechat'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechatApi = <span class=\"keyword\">new</span> Wechat(config.wechat)</span><br><span class=\"line\"><span class=\"keyword\">var</span> menu = <span class=\"built_in\">require</span>(<span class=\"string\">'./menu'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*wechatApi.deleteMenu().then(function()&#123;</span><br><span class=\"line\">    return wechatApi.createMenu(menu)</span><br><span class=\"line\">&#125;).then(function(msg)&#123;</span><br><span class=\"line\">    console.log(msg)</span><br><span class=\"line\">&#125;)*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">exports.reply = <span class=\"function\"><span class=\"keyword\">function</span> *(<span class=\"params\">next</span>)</span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"keyword\">this</span>.weixin</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(message.MsgType === <span class=\"string\">'event'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'subscribe'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(message.EventKey) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">'扫二维码进来：'</span>+ message.EventKey +<span class=\"string\">' '</span>+ message.ticket)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body =  <span class=\"string\">'么么哒'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'unsubscribe'</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'无情取关！'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">' '</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'LOCATION'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您上报的位置是：'</span> + message.Latitude + <span class=\"string\">'/'</span> + message.Longitude + <span class=\"string\">'-'</span> +message.Precision</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'CLICK'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'SCAN'</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'关注后扫二维码'</span>+ message.EventKey + <span class=\"string\">' '</span>+ message.Ticket)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您扫了二维码哦'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'VIEW'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的连接：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'scancode_push'</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanType)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanResult)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'scancode_waitmsg'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanType)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanResult)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'pic_sysphoto'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.Count)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.PicList)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'pic_photo_or_album'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.Count)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.PicList)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'pic_weixin'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.Count)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.PicList)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'location_select'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Location_X)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Location_Y)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Scale)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Label)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Poiname)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.MsgType === <span class=\"string\">'text'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> content = message.Content</span><br><span class=\"line\">        <span class=\"keyword\">var</span> reply = <span class=\"string\">'你说的“'</span> + message.Content + <span class=\"string\">'” 我们没有这样的服务'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(content === <span class=\"string\">'1'</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">'天下第一'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'2'</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">'天下第二'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'3'</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">'天下第三'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'4'</span>)&#123;</span><br><span class=\"line\">            reply = [&#123;</span><br><span class=\"line\">                title: <span class=\"string\">'nodejs开发微信'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么'</span>,</span><br><span class=\"line\">                picUrl: <span class=\"string\">'http://www.aseoe.com/images/aseoe_nodejs_txal.jpg'</span>,</span><br><span class=\"line\">                url: <span class=\"string\">'https://nodejs.org'</span></span><br><span class=\"line\">            &#125;,&#123;</span><br><span class=\"line\">                title: <span class=\"string\">'前端三大框架'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'vue.js React.js angular.js是目前前端最火的三大框架'</span>,</span><br><span class=\"line\">                picUrl: <span class=\"string\">'http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png'</span>,</span><br><span class=\"line\">                url: <span class=\"string\">'https://cn.vuejs.org/'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'5'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'image'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(data.media_id)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'6'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'video'</span>, __dirname + <span class=\"string\">'/6.mp4'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'video'</span>,</span><br><span class=\"line\">                title: <span class=\"string\">'跪着唱征服'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'试试这是个怎样的感觉'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'7'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'music'</span>,</span><br><span class=\"line\">                title: <span class=\"string\">'《李白》--李荣浩'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'轻松时刻'</span>,</span><br><span class=\"line\">                musicUrl: <span class=\"string\">'http://link.hhtjim.com/163/27678655.mp3'</span>,</span><br><span class=\"line\">                hqMusicUrl: <span class=\"string\">'http://link.hhtjim.com/163/27678655.mp3'</span>,</span><br><span class=\"line\">                thumbMediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'8'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>,&#123;type:<span class=\"string\">'image'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'image'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'video'</span>, __dirname + <span class=\"string\">'/6.mp4'</span>,&#123;type:<span class=\"string\">'video'</span>, description:<span class=\"string\">'&#123;\"title\":\"VIDEO_TITLE\",\"introduction\":\"INTRODUCTION\"&#125;'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'video'</span>,</span><br><span class=\"line\">                title: <span class=\"string\">'跪着唱征服'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'试试这是个怎样的感觉'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'10'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> picData  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>,&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> media = &#123;</span><br><span class=\"line\">                articles:[&#123;</span><br><span class=\"line\">                    title:<span class=\"string\">'angularjs入门'</span>,</span><br><span class=\"line\">                    thumb_media_id:picData.media_id,</span><br><span class=\"line\">                    show_cover_pic:<span class=\"number\">1</span>,</span><br><span class=\"line\">                    author:<span class=\"string\">'Leo'</span>,</span><br><span class=\"line\">                    digest:<span class=\"string\">'关于angularjs摘要'</span>,</span><br><span class=\"line\">                    content:<span class=\"string\">'augular是目前前端最火框架之一'</span>,</span><br><span class=\"line\">                    content_source_url:<span class=\"string\">'https://docs.angularjs.org/'</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span>  data = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'news'</span>, media, &#123;&#125;)</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">'我要的mediaId：'</span>+ data.media_id)</span><br><span class=\"line\">           data = <span class=\"keyword\">yield</span> wechatApi.fetchMaterial(data.media_id, <span class=\"string\">'news'</span>, &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(data)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span> items = data.news_item</span><br><span class=\"line\">           <span class=\"keyword\">var</span> news = []</span><br><span class=\"line\"></span><br><span class=\"line\">           items.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">               news.push(&#123;</span><br><span class=\"line\">                   title: item.title,</span><br><span class=\"line\">                   description: item.digest,</span><br><span class=\"line\">                   picUrl: picData.url,</span><br><span class=\"line\">                   url: item.url</span><br><span class=\"line\">               &#125;)</span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           reply = news</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'11'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> counts  = <span class=\"keyword\">yield</span> wechatApi.countMaterial()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(counts))</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> results = <span class=\"keyword\">yield</span> [</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'image'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'video'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'vioce'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'news'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            ]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(results))</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">'ok'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'12'</span>)&#123;</span><br><span class=\"line\">           <span class=\"comment\">/* var group1 = yield wechatApi.createGroup('wechat1')</span><br><span class=\"line\">            console.log('新分组wechat1:')</span><br><span class=\"line\">            console.log(group1)</span><br><span class=\"line\"></span><br><span class=\"line\">            var groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('加了wechat1的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group2 = yield wechatApi.checkGroup(message.FromUserName)</span><br><span class=\"line\">            console.log('查看自己的分组:')</span><br><span class=\"line\">            console.log(group2)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group3 = yield wechatApi.updateGroup(100, 'wechat_update')</span><br><span class=\"line\">            console.log('把wechat1分组改为wechat_update')</span><br><span class=\"line\">            console.log(group3)</span><br><span class=\"line\"></span><br><span class=\"line\">            groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('查看把wechat1分组改为wechat_update后的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)</span><br><span class=\"line\">            console.log('把我移动到2组')</span><br><span class=\"line\">            console.log(group4)</span><br><span class=\"line\"></span><br><span class=\"line\">            groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('查看把我移动到2组后的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)</span><br><span class=\"line\">            console.log('批量移动 把我移动到0组')</span><br><span class=\"line\">            console.log(group5)</span><br><span class=\"line\"></span><br><span class=\"line\">            var groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('查看 批量移动 把我移动到0组后的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\">*/</span>          </span><br><span class=\"line\">            <span class=\"keyword\">var</span> groups = <span class=\"keyword\">yield</span> wechatApi.fetchGroup()</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(groups)</span><br><span class=\"line\">            <span class=\"keyword\">var</span> group_delete = <span class=\"keyword\">yield</span> wechatApi.deleteGroup(<span class=\"number\">101</span>)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除101'</span>)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(group_delete)</span><br><span class=\"line\">            groups = <span class=\"keyword\">yield</span> wechatApi.fetchGroup()</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除101后的分组'</span>)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">'Groups done'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'13'</span>)&#123;</span><br><span class=\"line\">          <span class=\"comment\">/* var remark = yield wechatApi.remarkUser(message.FromUserName, '超级大帅哥')</span><br><span class=\"line\">            console.log(remark)</span><br><span class=\"line\">            */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> user = <span class=\"keyword\">yield</span> wechatApi.fetchUser(message.FromUserName)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(user)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">/* var openIds = [&#123;</span><br><span class=\"line\">                openid : message.FromUserName, </span><br><span class=\"line\">                lang:'zh_CN'</span><br><span class=\"line\">            &#125;]</span><br><span class=\"line\">            var users = yield wechatApi.fetchUser(openIds)</span><br><span class=\"line\">            console.log(users)</span><br><span class=\"line\">            */</span></span><br><span class=\"line\">            reply = <span class=\"built_in\">JSON</span>.stringify(user)</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'14'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> list = <span class=\"keyword\">yield</span> wechatApi.listUsers()</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(list)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = list.total</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'15'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> text = &#123;</span><br><span class=\"line\">                content: <span class=\"string\">'天要下雨了'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.sendByGroup(<span class=\"string\">'text'</span>, text, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">'内容如下'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'16'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">           <span class=\"comment\">/* var text = &#123;</span><br><span class=\"line\">                content: '天一直在打雷还没下雨'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">  */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.previewMass(<span class=\"string\">'mpnews'</span>, mpnews, <span class=\"string\">'okFRawx2UAkxdtKG1i9QNGzgXLA4'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">'内容如下'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'17'</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.checkMass(<span class=\"string\">'1000000010'</span>)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(msgData)</span><br><span class=\"line\">             reply = <span class=\"string\">'done'</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'18'</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">                wechatApi.createMenu(menu).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">'菜单生成状态：'</span>+ <span class=\"built_in\">JSON</span>.stringify(msg))</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">             <span class=\"comment\">/*var createMenu = yield wechatApi.createMenu(menu)</span><br><span class=\"line\">             console.log(createMenu)</span><br><span class=\"line\">             */</span></span><br><span class=\"line\">             reply = <span class=\"string\">'done'</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'19'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> semanticData = &#123;</span><br><span class=\"line\">                query:<span class=\"string\">\"查一下明天从北京到上海的南航机票\"</span>,</span><br><span class=\"line\">                city:<span class=\"string\">\"北京\"</span>,</span><br><span class=\"line\">                category: <span class=\"string\">\"flight,hotel\"</span>,</span><br><span class=\"line\">                uid: message.FromUserName</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> _semantic = <span class=\"keyword\">yield</span> wechatApi.semantic(semanticData)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(_semantic)</span><br><span class=\"line\">             reply = <span class=\"built_in\">JSON</span>.stringify(_semantic)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.body = reply</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> next</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"在koa中使用ejs模板-与-heredoc模块\"><a href=\"#在koa中使用ejs模板-与-heredoc模块\" class=\"headerlink\" title=\"在koa中使用ejs模板 与 heredoc模块\"></a>在koa中使用ejs模板 与 heredoc模块</h3><p>heredoc模块是作用是封装模板<br>比如：<br><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">'use strict'</span><br><span class=\"line\"></span><br><span class=\"line\">var ejs = require('ejs')</span><br><span class=\"line\">var heredoc = require('heredoc')</span><br><span class=\"line\"></span><br><span class=\"line\">var tpl = heredoc(function()&#123;/*</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xml</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ToUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> toUserName </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ToUserName</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">FromUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> fromUserName </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">FromUserName</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">CreateTime</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> createTime </span><span class=\"xml\"><span class=\"tag\">%&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">CreateTime</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">MsgType</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> msgType</span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MsgType</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> <span class=\"keyword\">if</span> (msgType === <span class=\"string\">'text'</span>) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Content</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content</span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Content</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'image'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Image</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.mediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Image</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'video'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">Video</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.mediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.title </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.description </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Video</span>&gt;</span> </span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'voice'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">Voice</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.mediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Voice</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'music'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Music</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.title </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.description </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.musicUrl </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MusicUrl</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">HQMusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.hqMusicUrl</span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">HQMusicUrl</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ThumbMediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.thumbMediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ThumbMediaId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Music</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'news'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ArticleCount</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> content.length </span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ArticleCount</span>&gt;</span>           </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Articles</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> content.forEach(function(item)&#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.title </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span> </span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.description </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">PicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.picUrl </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">PicUrl</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">Url</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.url </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Url</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125;) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Articles</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xml</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">*/&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">var compiled = ejs.compile(tpl)</span><br><span class=\"line\"></span><br><span class=\"line\">exports = module.exports = &#123;</span><br><span class=\"line\">    compiled : compiled</span><br><span class=\"line\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据<br>结合json数据<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> tpl = <span class=\"keyword\">require</span>(<span class=\"string\">'以上文件路径'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = &#123;</span><br><span class=\"line\">    msgType : <span class=\"string\">'text'</span>,</span><br><span class=\"line\">    content : <span class=\"string\">'hello world'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">xml</span> = tpl.compiled(<span class=\"built_in\">data</span>)</span><br></pre></td></tr></table></figure></p>\n<p>或者可以使用render方法将模板和数据一并结合<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"keyword\">xml</span> <span class=\"title\">= ejs</span>.render(tpl, data)</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  </p>\n<p>其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  </p>\n<p>思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。</p>\n<p>这篇笔记就写到这吧，全部代码放在github上。</p>\n","excerpt":"","more":"<h2 id=\"开发第一步\"><a href=\"#开发第一步\" class=\"headerlink\" title=\"开发第一步\"></a>开发第一步</h2><p>不是埋头就是实现各种逻辑，而是，划分好逻辑模块，思考各个模块的位置（目录位置），因为总不能将所有代码都放在app.js里，进而构成了整个项目的架构。</p>\n<p>开发微信公众号，理解整个交互的流程。客户端 《 == 》微信服务器 《 == 》项目服务器  </p>\n<p>开发前的准备工作请详细看微信开发者文档，这里只讨论代码实现。  </p>\n<h2 id=\"开始开发\"><a href=\"#开始开发\" class=\"headerlink\" title=\"开始开发\"></a>开始开发</h2><p>我们使用koa框架。<br>app.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Koa = <span class=\"built_in\">require</span>(<span class=\"string\">'koa'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./wechat/g'</span>)  <span class=\"comment\">//可以看作是程序的第二个流程，实现验证 以及调用回复功能</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'./config'</span>) <span class=\"comment\">//公众号的配置配置信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reply = <span class=\"built_in\">require</span>(<span class=\"string\">'./wx/reply'</span>)  <span class=\"comment\">//处理客户发过来的消息，回复逻辑</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./wechat/wechat'</span>) <span class=\"comment\">//回复各种消息类型获取的api，封装在Wechat对象中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Koa()</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(wechat(config.wechat, reply.reply))</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(<span class=\"number\">1234</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"listening at port 1234...\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>wechat/g.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> sha1 = <span class=\"built_in\">require</span>(<span class=\"string\">'sha1'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> getRawBody = <span class=\"built_in\">require</span>(<span class=\"string\">'raw-body'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> Wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'./wechat'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">'./util'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">opts, handler</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> wechat = <span class=\"keyword\">new</span> Wechat(opts)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> *(<span class=\"params\">next</span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> token = opts.token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> signature = <span class=\"keyword\">this</span>.query.signature</span><br><span class=\"line\">                <span class=\"keyword\">var</span> nonce = <span class=\"keyword\">this</span>.query.nonce</span><br><span class=\"line\">                <span class=\"keyword\">var</span> timestamp = <span class=\"keyword\">this</span>.query.timestamp</span><br><span class=\"line\">                <span class=\"keyword\">var</span> echostr = <span class=\"keyword\">this</span>.query.echostr</span><br><span class=\"line\">                <span class=\"keyword\">var</span> str = [token, timestamp, nonce].sort().join(<span class=\"string\">''</span>)</span><br><span class=\"line\">                <span class=\"keyword\">var</span> sha = sha1(str)</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.method == <span class=\"string\">'GET'</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha === signature)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.body = echostr + <span class=\"string\">''</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.body = <span class=\"string\">'wrong'</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.method == <span class=\"string\">'POST'</span>)&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.method)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(sha !== signature)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.body = <span class=\"string\">'wrong'</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> data = <span class=\"keyword\">yield</span> getRawBody(<span class=\"keyword\">this</span>.req, &#123; <span class=\"comment\">//xml格式的数据</span></span><br><span class=\"line\">                        length: <span class=\"keyword\">this</span>.length,</span><br><span class=\"line\">                        limit: <span class=\"string\">'1mb'</span>,</span><br><span class=\"line\">                        encoding: <span class=\"keyword\">this</span>.charset</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(data.toString())</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> content = <span class=\"keyword\">yield</span> util.parseXMLAsync(data) <span class=\"comment\">//转化为json格式的数据</span></span><br><span class=\"line\">                    <span class=\"comment\">//console.log(content)</span></span><br><span class=\"line\">                    <span class=\"keyword\">var</span> message = util.formatMessage(content.xml)</span><br><span class=\"line\">                    <span class=\"comment\">//console.log(message)</span></span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">this</span>.weixin = message</span><br><span class=\"line\"></span><br><span class=\"line\">                   <span class=\"keyword\">yield</span> handler.call(<span class=\"keyword\">this</span>, next)</span><br><span class=\"line\"></span><br><span class=\"line\">                   wechat.reply.call(<span class=\"keyword\">this</span>)   <span class=\"comment\">//数据转化为最终的xml格式，客户端只能解析xml格式数据</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>wechat/wechat.js<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br><span class=\"line\">1002</span><br><span class=\"line\">1003</span><br><span class=\"line\">1004</span><br><span class=\"line\">1005</span><br><span class=\"line\">1006</span><br><span class=\"line\">1007</span><br><span class=\"line\">1008</span><br><span class=\"line\">1009</span><br><span class=\"line\">1010</span><br><span class=\"line\">1011</span><br><span class=\"line\">1012</span><br><span class=\"line\">1013</span><br><span class=\"line\">1014</span><br><span class=\"line\">1015</span><br><span class=\"line\">1016</span><br><span class=\"line\">1017</span><br><span class=\"line\">1018</span><br><span class=\"line\">1019</span><br><span class=\"line\">1020</span><br><span class=\"line\">1021</span><br><span class=\"line\">1022</span><br><span class=\"line\">1023</span><br><span class=\"line\">1024</span><br><span class=\"line\">1025</span><br><span class=\"line\">1026</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">Promise</span> = <span class=\"built_in\">require</span>(<span class=\"string\">'bluebird'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'request'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> util = <span class=\"built_in\">require</span>(<span class=\"string\">'./util'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> _ = <span class=\"built_in\">require</span>(<span class=\"string\">'lodash'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> prefix = <span class=\"string\">'https://api.weixin.qq.com/cgi-bin/'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> api = &#123;</span><br><span class=\"line\">    accessToken : prefix + <span class=\"string\">'token?grant_type=client_credential'</span>,</span><br><span class=\"line\">    temporary: &#123;</span><br><span class=\"line\">        upload : prefix + <span class=\"string\">'media/upload?'</span>,</span><br><span class=\"line\">        fetch: prefix + <span class=\"string\">'media/get?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    permanent: &#123;</span><br><span class=\"line\">        upload: prefix + <span class=\"string\">'material/add_material?'</span>,</span><br><span class=\"line\">        fetch: prefix + <span class=\"string\">'material/get_material?'</span>,</span><br><span class=\"line\">        uploadNews: prefix + <span class=\"string\">'material/add_news?'</span>,</span><br><span class=\"line\">        uploadNewsPic:prefix + <span class=\"string\">'material/uploadimg?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'material/del_material?'</span>,</span><br><span class=\"line\">        update: prefix + <span class=\"string\">'material/update_news?'</span>,</span><br><span class=\"line\">        count: prefix + <span class=\"string\">'material/get_materialcount?'</span>,</span><br><span class=\"line\">        batch: prefix + <span class=\"string\">'material/batchget_material?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    group: &#123;</span><br><span class=\"line\">        create: prefix + <span class=\"string\">'groups/create?'</span>,</span><br><span class=\"line\">        fetch: prefix + <span class=\"string\">'groups/get?'</span>,</span><br><span class=\"line\">        check: prefix + <span class=\"string\">'groups/getid?'</span>,</span><br><span class=\"line\">        update:prefix + <span class=\"string\">'groups/update?'</span>,</span><br><span class=\"line\">        move: prefix + <span class=\"string\">'groups/members/update?'</span>,</span><br><span class=\"line\">        batchupdata: prefix + <span class=\"string\">'groups/members/batchupdate?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'groups/delete?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    user: &#123;</span><br><span class=\"line\">        remark: prefix +　<span class=\"string\">'user/info/updateremark?'</span>,</span><br><span class=\"line\">        fetch: prefix +　<span class=\"string\">'user/info?'</span>,</span><br><span class=\"line\">        batchFetch: prefix + <span class=\"string\">'user/info/batchget?'</span>,</span><br><span class=\"line\">        list: prefix +　<span class=\"string\">'user/get?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    mass: &#123;</span><br><span class=\"line\">        group: prefix + <span class=\"string\">'message/mass/sendall?'</span>,</span><br><span class=\"line\">        openId: prefix + <span class=\"string\">'message/mass/send?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'message/mass/delete?'</span>,</span><br><span class=\"line\">        preview: prefix + <span class=\"string\">'message/mass/preview?'</span>,</span><br><span class=\"line\">        check: prefix + <span class=\"string\">'message/mass/get?'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    menu: &#123;</span><br><span class=\"line\">        create: prefix + <span class=\"string\">'menu/create?'</span>,</span><br><span class=\"line\">        get:　prefix +　<span class=\"string\">'menu/get?'</span>,</span><br><span class=\"line\">        del: prefix + <span class=\"string\">'menu/delete?'</span>,</span><br><span class=\"line\">        current: prefix + <span class=\"string\">'get_current_selfmenu_info?'</span></span><br><span class=\"line\">    &#125;,   </span><br><span class=\"line\">    semantic: <span class=\"string\">'https://api.weixin.qq.com/semantic/semproxy/search?'</span>,</span><br><span class=\"line\">    ticket: &#123;</span><br><span class=\"line\">        get : prefix +　<span class=\"string\">'ticket/getticket?'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Wechat</span>(<span class=\"params\">opts</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.appID = opts.appID</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.appSecret = opts.appSecret</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getAccessToken = opts.getAccessToken</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.saveAccessToken = opts.saveAccessToken</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getTicket = opts.getTicket</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.saveTicket = opts.saveTicket</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fetchAccessToken()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取ticket</span></span><br><span class=\"line\">Wechat.prototype.fetchTicket = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getTicket()</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"built_in\">JSON</span>.parse(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateTicket(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.isValidTicket(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateTicket(access_token)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            that.saveTicket(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateTicket = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">access_token</span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.ticket.get + <span class=\"string\">'&amp;access_token='</span> + access_token + <span class=\"string\">'&amp;type=jsapi'</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">'can not get ticket'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.isValidTicket = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.ticket || !data.expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ticket = data.ticket</span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.expires_in</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ticket &amp;&amp; now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取access_token</span></span><br><span class=\"line\">Wechat.prototype.fetchAccessToken = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.access_token &amp;&amp; <span class=\"keyword\">this</span>.expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.isValidAccessToken(<span class=\"keyword\">this</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.getAccessToken()</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">                data = <span class=\"built_in\">JSON</span>.parse(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateAccessToken()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.isValidAccessToken(data))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> that.updateAccessToken()</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">            that.access_token = data.access_token</span><br><span class=\"line\">            that.expires_in = data.expires_in</span><br><span class=\"line\"></span><br><span class=\"line\">            that.saveAccessToken(data)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(data)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.isValidAccessToken = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!data || !data.access_token || !data.expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> access_token = data.access_token</span><br><span class=\"line\">    <span class=\"keyword\">var</span> expires_in = data.expires_in</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(now &lt; expires_in)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateAccessToken = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> appID = <span class=\"keyword\">this</span>.appID</span><br><span class=\"line\">   <span class=\"keyword\">var</span> appSecret = <span class=\"keyword\">this</span>.appSecret</span><br><span class=\"line\">   <span class=\"keyword\">var</span> url = api.accessToken + <span class=\"string\">'&amp;appid='</span> + appID + <span class=\"string\">'&amp;secret='</span> + appSecret</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> data = body;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> now = (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime());</span><br><span class=\"line\">                <span class=\"keyword\">var</span> expires_in = now + (data.expires_in - <span class=\"number\">20</span>) * <span class=\"number\">1000</span>;</span><br><span class=\"line\">                data.expires_in = expires_in;</span><br><span class=\"line\">                resolve(data);</span><br><span class=\"line\">                <span class=\"comment\">//console.log(data);</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                reject(<span class=\"string\">'can not get access_token'</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);     </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.uploadMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, material, permanent</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> uploadUrl = api.temporary.upload</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        uploadUrl = api.permanent.upload</span><br><span class=\"line\"></span><br><span class=\"line\">        _.extend(form, permanent)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">'pic'</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.permanent.uploadNewsPic</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(type === <span class=\"string\">'news'</span>)&#123;</span><br><span class=\"line\">        uploadUrl = api.permanent.uploadNews</span><br><span class=\"line\">        form = material</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        form.media = fs.createReadStream(material)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = uploadUrl + <span class=\"string\">'access_token='</span> + data.access_token </span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!permanent) &#123;</span><br><span class=\"line\">                    url += <span class=\"string\">'&amp;type='</span> + type</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    form.access_token = data.access_token</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;</span><br><span class=\"line\">                    method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">                    url: url,</span><br><span class=\"line\">                    json: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(type === <span class=\"string\">'news'</span>)&#123;</span><br><span class=\"line\">                    options.body = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    options.formData = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        <span class=\"comment\">//console.log(_data);</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'upload material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.fetchMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mediaId, type, permanent</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fetchUrl = api.temporary.fetch</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">        fetchUrl = api.permanent.fetch</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = fetchUrl + <span class=\"string\">'access_token='</span> + data.access_token </span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> options = &#123;method:<span class=\"string\">'POST'</span>, url: url, json: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(permanent)&#123;</span><br><span class=\"line\">                    form.media_id = mediaId</span><br><span class=\"line\">                    form.access_token = data.access_token</span><br><span class=\"line\">                    options.body = form</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(type === <span class=\"string\">'video'</span>)&#123;</span><br><span class=\"line\">                        url = url.replace(<span class=\"string\">'https://'</span>, <span class=\"string\">'http://'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    url += <span class=\"string\">'&amp;media_id='</span> + mediaId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(type === <span class=\"string\">'news'</span> || type === <span class=\"string\">'video'</span>)&#123;</span><br><span class=\"line\">                   request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                            <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                                resolve(_data);</span><br><span class=\"line\">                            &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete material fails'</span>)</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   resolve(url)</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                </span><br><span class=\"line\"></span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">          </span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mediaId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        media_id:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.del + <span class=\"string\">'access_token='</span> + data.access_token + <span class=\"string\">'&amp;media_id='</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mediaId, news</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        media_id:mediaId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    _.extend(form, news)</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.update + <span class=\"string\">'access_token='</span> + data.access_token + <span class=\"string\">'&amp;media_id='</span> + mediaId</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.countMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.count + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'GET'</span>, url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'count material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.batchMaterial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    options.type = options.type || <span class=\"string\">'image'</span></span><br><span class=\"line\">    options.offset = options.offset || <span class=\"number\">0</span></span><br><span class=\"line\">    options.count = options.count || <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.permanent.batch + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:options, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'batch material fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用户分组</span></span><br><span class=\"line\">Wechat.prototype.createGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.create + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    group: &#123;</span><br><span class=\"line\">                        name: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'create group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.fetchGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.fetch + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'fetch group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.checkGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.check + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    openid : openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'check group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.updateGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id, name</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.update + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    group: &#123;</span><br><span class=\"line\">                        id: id,</span><br><span class=\"line\">                        name: name</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'update group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.moveGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openIds, to_groupid</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> url</span><br><span class=\"line\">               <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                   to_groupid : to_groupid</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.isArray(openIds))&#123;</span><br><span class=\"line\">                   url = api.group.batchupdata + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                   form.openid_list = openIds</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   url = api.group.move + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                   form.openid = openIds</span><br><span class=\"line\">               &#125;  </span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'move group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.group.del + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    group: &#123;</span><br><span class=\"line\">                        id: id</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取用户信息</span></span><br><span class=\"line\">Wechat.prototype.remarkUser = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openId, remark</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.user.remark + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    openid:　openId,</span><br><span class=\"line\">                    remark: remark</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body: form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'remark user fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.fetchUser = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openIds, lang</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">var</span> lang = lang || <span class=\"string\">'zh_CN'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">var</span> options　= &#123;</span><br><span class=\"line\">                   json: <span class=\"literal\">true</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">               <span class=\"keyword\">if</span>(_.isArray(openIds))&#123;</span><br><span class=\"line\">                   options.url = api.user.batchFetch + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                   options.method = <span class=\"string\">'POST'</span></span><br><span class=\"line\">                   options.body = &#123;</span><br><span class=\"line\">                       user_list : openIds</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                   options.url = api.user.fetch + <span class=\"string\">'access_token='</span> + data.access_token + <span class=\"string\">'&amp;openid='</span> + openIds + <span class=\"string\">'&amp;lang='</span> + lang</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(options, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'fetch users fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">    &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.listUsers = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">openId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.user.list + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">if</span>(openId)&#123;</span><br><span class=\"line\">                    url += <span class=\"string\">'&amp;next_openid='</span> + openId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'GET'</span>, url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'list users fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.sendByGroup = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, message, groupId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        filter:&#123;&#125;,</span><br><span class=\"line\">        msgtype:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!groupId)&#123;</span><br><span class=\"line\">        msg.filter.is_to_all = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        msg.filter.is_to_all = <span class=\"literal\">false</span></span><br><span class=\"line\">        msg.filter.group_id = groupId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.group + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:msg, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                       </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'sell by group fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.sendByOpenId = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, message, openIds</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        touser:openIds,</span><br><span class=\"line\">        msgtype:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.openId + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url, body:msg, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'sell by openid fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteMass = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.del + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">                    msg_id : msgId</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete Mass fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.previewMass = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">type, message, openId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> msg = &#123;</span><br><span class=\"line\">        touser:openId,</span><br><span class=\"line\">        msgtype:type</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    msg[type] = message</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.preview + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:msg, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'preview mass fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.checkMass = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msgId</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> form = &#123;</span><br><span class=\"line\">        msg_id : msgId</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.mass.check + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:form, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'check mass fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.createMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">menu</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.create + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:menu, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'create menu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.getMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.get + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'get menu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.deleteMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.del + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'delete menu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.currentSelfMenu = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.menu.current + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;url: url, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'get current selfmenu fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.semantic = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">semanticData</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</span><br><span class=\"line\">       that</span><br><span class=\"line\">           .fetchAccessToken()</span><br><span class=\"line\">           .then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;  </span><br><span class=\"line\">                <span class=\"keyword\">var</span> url = api.semantic + <span class=\"string\">'access_token='</span> + data.access_token</span><br><span class=\"line\">                semanticData.appid = data.appID</span><br><span class=\"line\"></span><br><span class=\"line\">                request(&#123;method:<span class=\"string\">'POST'</span>, url: url,body:semanticData, json: <span class=\"literal\">true</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error, response, body</span>) </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!error &amp;&amp; response.statusCode === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> _data = body;</span><br><span class=\"line\">                        </span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(_data)&#123;</span><br><span class=\"line\">                            resolve(_data);</span><br><span class=\"line\">                        &#125;                     </span><br><span class=\"line\">                        </span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'semantic data fails'</span>)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;) </span><br><span class=\"line\">           &#125;)         </span><br><span class=\"line\">   &#125;)  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Wechat.prototype.reply = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;  <span class=\"comment\">//实现完整的回复逻辑，放回给客户端xml格式数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> content = <span class=\"keyword\">this</span>.body   <span class=\"comment\">//此时的this.body是json数据格式</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"keyword\">this</span>.weixin</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xml = util.tpl(content, message)  <span class=\"comment\">//将content与message中的内容提出整合，此时已经变成了xml格式</span></span><br><span class=\"line\">    <span class=\"comment\">//console.log('xml:'+ xml)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.type = <span class=\"string\">'application/xml'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.body = xml</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Wechat</span><br></pre></td></tr></table></figure></p>\n<p>wx/reply.js  处理客户端消息<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> Wechat = <span class=\"built_in\">require</span>(<span class=\"string\">'../wechat/wechat'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> wechatApi = <span class=\"keyword\">new</span> Wechat(config.wechat)</span><br><span class=\"line\"><span class=\"keyword\">var</span> menu = <span class=\"built_in\">require</span>(<span class=\"string\">'./menu'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*wechatApi.deleteMenu().then(function()&#123;</span><br><span class=\"line\">    return wechatApi.createMenu(menu)</span><br><span class=\"line\">&#125;).then(function(msg)&#123;</span><br><span class=\"line\">    console.log(msg)</span><br><span class=\"line\">&#125;)*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">exports.reply = <span class=\"function\"><span class=\"keyword\">function</span> *(<span class=\"params\">next</span>)</span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> message = <span class=\"keyword\">this</span>.weixin</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(message.MsgType === <span class=\"string\">'event'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'subscribe'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(message.EventKey) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">'扫二维码进来：'</span>+ message.EventKey +<span class=\"string\">' '</span>+ message.ticket)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body =  <span class=\"string\">'么么哒'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'unsubscribe'</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'无情取关！'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">' '</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'LOCATION'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您上报的位置是：'</span> + message.Latitude + <span class=\"string\">'/'</span> + message.Longitude + <span class=\"string\">'-'</span> +message.Precision</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'CLICK'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'SCAN'</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'关注后扫二维码'</span>+ message.EventKey + <span class=\"string\">' '</span>+ message.Ticket)</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您扫了二维码哦'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'VIEW'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的连接：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'scancode_push'</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanType)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanResult)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'scancode_waitmsg'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanType)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.ScanCodeInfo.ScanResult)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'pic_sysphoto'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.Count)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.PicList)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'pic_photo_or_album'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.Count)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.PicList)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'pic_weixin'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.Count)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendPicsInfo.PicList)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.Event === <span class=\"string\">'location_select'</span>)&#123;</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Location_X)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Location_Y)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Scale)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Label)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(message.SendLocationInfo.Poiname)</span><br><span class=\"line\">             <span class=\"keyword\">this</span>.body = <span class=\"string\">'您点击了菜单中的：'</span>+ message.EventKey</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(message.MsgType === <span class=\"string\">'text'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> content = message.Content</span><br><span class=\"line\">        <span class=\"keyword\">var</span> reply = <span class=\"string\">'你说的“'</span> + message.Content + <span class=\"string\">'” 我们没有这样的服务'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(content === <span class=\"string\">'1'</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">'天下第一'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'2'</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">'天下第二'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'3'</span>)&#123;</span><br><span class=\"line\">            reply = <span class=\"string\">'天下第三'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'4'</span>)&#123;</span><br><span class=\"line\">            reply = [&#123;</span><br><span class=\"line\">                title: <span class=\"string\">'nodejs开发微信'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'nodejs是服务器端的js脚本语言，用最火的技术开发微信公众号，你还等什么'</span>,</span><br><span class=\"line\">                picUrl: <span class=\"string\">'http://www.aseoe.com/images/aseoe_nodejs_txal.jpg'</span>,</span><br><span class=\"line\">                url: <span class=\"string\">'https://nodejs.org'</span></span><br><span class=\"line\">            &#125;,&#123;</span><br><span class=\"line\">                title: <span class=\"string\">'前端三大框架'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'vue.js React.js angular.js是目前前端最火的三大框架'</span>,</span><br><span class=\"line\">                picUrl: <span class=\"string\">'http://5xruby.tw/uploads/course/image/57/thumb_5x_VueJs-1024x768_5x.png'</span>,</span><br><span class=\"line\">                url: <span class=\"string\">'https://cn.vuejs.org/'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'5'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'image'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(data.media_id)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'6'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'video'</span>, __dirname + <span class=\"string\">'/6.mp4'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'video'</span>,</span><br><span class=\"line\">                title: <span class=\"string\">'跪着唱征服'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'试试这是个怎样的感觉'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'7'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'music'</span>,</span><br><span class=\"line\">                title: <span class=\"string\">'《李白》--李荣浩'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'轻松时刻'</span>,</span><br><span class=\"line\">                musicUrl: <span class=\"string\">'http://link.hhtjim.com/163/27678655.mp3'</span>,</span><br><span class=\"line\">                hqMusicUrl: <span class=\"string\">'http://link.hhtjim.com/163/27678655.mp3'</span>,</span><br><span class=\"line\">                thumbMediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'8'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>,&#123;type:<span class=\"string\">'image'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'image'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> data  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'video'</span>, __dirname + <span class=\"string\">'/6.mp4'</span>,&#123;type:<span class=\"string\">'video'</span>, description:<span class=\"string\">'&#123;\"title\":\"VIDEO_TITLE\",\"introduction\":\"INTRODUCTION\"&#125;'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = &#123;</span><br><span class=\"line\">                type:<span class=\"string\">'video'</span>,</span><br><span class=\"line\">                title: <span class=\"string\">'跪着唱征服'</span>,</span><br><span class=\"line\">                description: <span class=\"string\">'试试这是个怎样的感觉'</span>,</span><br><span class=\"line\">                mediaId: data.media_id</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'10'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> picData  = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'image'</span>, __dirname + <span class=\"string\">'/2.jpg'</span>,&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> media = &#123;</span><br><span class=\"line\">                articles:[&#123;</span><br><span class=\"line\">                    title:<span class=\"string\">'angularjs入门'</span>,</span><br><span class=\"line\">                    thumb_media_id:picData.media_id,</span><br><span class=\"line\">                    show_cover_pic:<span class=\"number\">1</span>,</span><br><span class=\"line\">                    author:<span class=\"string\">'Leo'</span>,</span><br><span class=\"line\">                    digest:<span class=\"string\">'关于angularjs摘要'</span>,</span><br><span class=\"line\">                    content:<span class=\"string\">'augular是目前前端最火框架之一'</span>,</span><br><span class=\"line\">                    content_source_url:<span class=\"string\">'https://docs.angularjs.org/'</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span>  data = <span class=\"keyword\">yield</span> wechatApi.uploadMaterial(<span class=\"string\">'news'</span>, media, &#123;&#125;)</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">'我要的mediaId：'</span>+ data.media_id)</span><br><span class=\"line\">           data = <span class=\"keyword\">yield</span> wechatApi.fetchMaterial(data.media_id, <span class=\"string\">'news'</span>, &#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(data)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"keyword\">var</span> items = data.news_item</span><br><span class=\"line\">           <span class=\"keyword\">var</span> news = []</span><br><span class=\"line\"></span><br><span class=\"line\">           items.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">               news.push(&#123;</span><br><span class=\"line\">                   title: item.title,</span><br><span class=\"line\">                   description: item.digest,</span><br><span class=\"line\">                   picUrl: picData.url,</span><br><span class=\"line\">                   url: item.url</span><br><span class=\"line\">               &#125;)</span><br><span class=\"line\">           &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">           reply = news</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'11'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> counts  = <span class=\"keyword\">yield</span> wechatApi.countMaterial()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(counts))</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> results = <span class=\"keyword\">yield</span> [</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'image'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'video'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'vioce'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;),</span><br><span class=\"line\">                wechatApi.batchMaterial(&#123;</span><br><span class=\"line\">                    type: <span class=\"string\">'news'</span>,</span><br><span class=\"line\">                    offset: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    count: <span class=\"number\">10</span></span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            ]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(results))</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">'ok'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'12'</span>)&#123;</span><br><span class=\"line\">           <span class=\"comment\">/* var group1 = yield wechatApi.createGroup('wechat1')</span><br><span class=\"line\">            console.log('新分组wechat1:')</span><br><span class=\"line\">            console.log(group1)</span><br><span class=\"line\"></span><br><span class=\"line\">            var groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('加了wechat1的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group2 = yield wechatApi.checkGroup(message.FromUserName)</span><br><span class=\"line\">            console.log('查看自己的分组:')</span><br><span class=\"line\">            console.log(group2)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group3 = yield wechatApi.updateGroup(100, 'wechat_update')</span><br><span class=\"line\">            console.log('把wechat1分组改为wechat_update')</span><br><span class=\"line\">            console.log(group3)</span><br><span class=\"line\"></span><br><span class=\"line\">            groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('查看把wechat1分组改为wechat_update后的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group4 = yield wechatApi.moveGroup(message.FromUserName, 2)</span><br><span class=\"line\">            console.log('把我移动到2组')</span><br><span class=\"line\">            console.log(group4)</span><br><span class=\"line\"></span><br><span class=\"line\">            groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('查看把我移动到2组后的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            var group5 = yield wechatApi.moveGroup([message.FromUserName], 0)</span><br><span class=\"line\">            console.log('批量移动 把我移动到0组')</span><br><span class=\"line\">            console.log(group5)</span><br><span class=\"line\"></span><br><span class=\"line\">            var groups = yield wechatApi.fetchGroup()</span><br><span class=\"line\">            console.log('查看 批量移动 把我移动到0组后的分组:')</span><br><span class=\"line\">            console.log(groups)</span><br><span class=\"line\">*/</span>          </span><br><span class=\"line\">            <span class=\"keyword\">var</span> groups = <span class=\"keyword\">yield</span> wechatApi.fetchGroup()</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(groups)</span><br><span class=\"line\">            <span class=\"keyword\">var</span> group_delete = <span class=\"keyword\">yield</span> wechatApi.deleteGroup(<span class=\"number\">101</span>)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除101'</span>)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(group_delete)</span><br><span class=\"line\">            groups = <span class=\"keyword\">yield</span> wechatApi.fetchGroup()</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除101后的分组'</span>)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(groups)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = <span class=\"string\">'Groups done'</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'13'</span>)&#123;</span><br><span class=\"line\">          <span class=\"comment\">/* var remark = yield wechatApi.remarkUser(message.FromUserName, '超级大帅哥')</span><br><span class=\"line\">            console.log(remark)</span><br><span class=\"line\">            */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> user = <span class=\"keyword\">yield</span> wechatApi.fetchUser(message.FromUserName)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(user)</span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"comment\">/* var openIds = [&#123;</span><br><span class=\"line\">                openid : message.FromUserName, </span><br><span class=\"line\">                lang:'zh_CN'</span><br><span class=\"line\">            &#125;]</span><br><span class=\"line\">            var users = yield wechatApi.fetchUser(openIds)</span><br><span class=\"line\">            console.log(users)</span><br><span class=\"line\">            */</span></span><br><span class=\"line\">            reply = <span class=\"built_in\">JSON</span>.stringify(user)</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'14'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> list = <span class=\"keyword\">yield</span> wechatApi.listUsers()</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(list)</span><br><span class=\"line\"></span><br><span class=\"line\">            reply = list.total</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'15'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> text = &#123;</span><br><span class=\"line\">                content: <span class=\"string\">'天要下雨了'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.sendByGroup(<span class=\"string\">'text'</span>, text, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">'内容如下'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'16'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> mpnews = &#123;</span><br><span class=\"line\">                media_id : <span class=\"string\">'fTn2AjmZW41YaIc0iw-86l9rCE_Ex4LNtT_SXvISNFQ'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">           <span class=\"comment\">/* var text = &#123;</span><br><span class=\"line\">                content: '天一直在打雷还没下雨'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">  */</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.previewMass(<span class=\"string\">'mpnews'</span>, mpnews, <span class=\"string\">'okFRawx2UAkxdtKG1i9QNGzgXLA4'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(msgData)</span><br><span class=\"line\">            reply = <span class=\"string\">'内容如下'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'17'</span>)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">var</span> msgData = <span class=\"keyword\">yield</span> wechatApi.checkMass(<span class=\"string\">'1000000010'</span>)</span><br><span class=\"line\">             <span class=\"built_in\">console</span>.log(msgData)</span><br><span class=\"line\">             reply = <span class=\"string\">'done'</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'18'</span>)&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">                wechatApi.createMenu(menu).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">msg</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">'菜单生成状态：'</span>+ <span class=\"built_in\">JSON</span>.stringify(msg))</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">             <span class=\"comment\">/*var createMenu = yield wechatApi.createMenu(menu)</span><br><span class=\"line\">             console.log(createMenu)</span><br><span class=\"line\">             */</span></span><br><span class=\"line\">             reply = <span class=\"string\">'done'</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(content === <span class=\"string\">'19'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> semanticData = &#123;</span><br><span class=\"line\">                query:<span class=\"string\">\"查一下明天从北京到上海的南航机票\"</span>,</span><br><span class=\"line\">                city:<span class=\"string\">\"北京\"</span>,</span><br><span class=\"line\">                category: <span class=\"string\">\"flight,hotel\"</span>,</span><br><span class=\"line\">                uid: message.FromUserName</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> _semantic = <span class=\"keyword\">yield</span> wechatApi.semantic(semanticData)</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(_semantic)</span><br><span class=\"line\">             reply = <span class=\"built_in\">JSON</span>.stringify(_semantic)</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.body = reply</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> next</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"在koa中使用ejs模板-与-heredoc模块\"><a href=\"#在koa中使用ejs模板-与-heredoc模块\" class=\"headerlink\" title=\"在koa中使用ejs模板 与 heredoc模块\"></a>在koa中使用ejs模板 与 heredoc模块</h3><p>heredoc模块是作用是封装模板<br>比如：<br><figure class=\"highlight erb\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">'use strict'</span><br><span class=\"line\"></span><br><span class=\"line\">var ejs = require('ejs')</span><br><span class=\"line\">var heredoc = require('heredoc')</span><br><span class=\"line\"></span><br><span class=\"line\">var tpl = heredoc(function()&#123;/*</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">xml</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ToUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> toUserName </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ToUserName</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">FromUserName</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> fromUserName </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">FromUserName</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">CreateTime</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> createTime </span><span class=\"xml\"><span class=\"tag\">%&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">CreateTime</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">MsgType</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> msgType</span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MsgType</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> <span class=\"keyword\">if</span> (msgType === <span class=\"string\">'text'</span>) &#123;</span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Content</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content</span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Content</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'image'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Image</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.mediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Image</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'video'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">Video</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.mediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.title </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.description </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Video</span>&gt;</span> </span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'voice'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">Voice</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.mediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MediaId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Voice</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'music'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Music</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.title </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.description </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">MusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.musicUrl </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">MusicUrl</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">HQMusicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.hqMusicUrl</span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">HQMusicUrl</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ThumbMediaId</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> content.thumbMediaId </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">ThumbMediaId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Music</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msgType === <span class=\"string\">'news'</span>) &#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ArticleCount</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span></span></span><span class=\"ruby\"> content.length </span><span class=\"xml\"><span class=\"tag\">%&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ArticleCount</span>&gt;</span>           </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Articles</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> content.forEach(function(item)&#123; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">Title</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.title </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Title</span>&gt;</span> </span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">Description</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.description </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Description</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">PicUrl</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.picUrl </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">PicUrl</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">Url</span>&gt;</span>&lt;![CDATA[&lt;%=</span><span class=\"ruby\"> item.url </span><span class=\"xml\">%&gt;]]&gt;<span class=\"tag\">&lt;/<span class=\"name\">Url</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125;) </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Articles</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span></span></span><span class=\"ruby\"> &#125; </span><span class=\"xml\"><span class=\"tag\">%&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">xml</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">*/&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">var compiled = ejs.compile(tpl)</span><br><span class=\"line\"></span><br><span class=\"line\">exports = module.exports = &#123;</span><br><span class=\"line\">    compiled : compiled</span><br><span class=\"line\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>以上暴露了compiled方法，但只是做好了封装模板而已，还缺少json格式数据<br>结合json数据<br><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> tpl = <span class=\"keyword\">require</span>(<span class=\"string\">'以上文件路径'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">data</span> = &#123;</span><br><span class=\"line\">    msgType : <span class=\"string\">'text'</span>,</span><br><span class=\"line\">    content : <span class=\"string\">'hello world'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> <span class=\"built_in\">xml</span> = tpl.compiled(<span class=\"built_in\">data</span>)</span><br></pre></td></tr></table></figure></p>\n<p>或者可以使用render方法将模板和数据一并结合<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"keyword\">xml</span> <span class=\"title\">= ejs</span>.render(tpl, data)</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>这篇文档算不上很好的教程，只是将开发过程的关键代码展示了出来，还有介绍了，heredoc封装xml模板，理解了用法。  </p>\n<p>其实做好的教程是，渐进式的从头到尾开发微信公众号，使流程变得清晰杳然，能学到更多。但是鉴于个人微信公众号无法认证，缺失了很有接口权限，申请的测试公众号配置时常出问题，开发困难，时间成本开销很大。所以只展示了关键代码。  </p>\n<p>思考了一下，项目的关键点可以写个渐进式的教程，展示开发的优化过程，让自己更深入理解知识点。</p>\n<p>这篇笔记就写到这吧，全部代码放在github上。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjzzp7f9r000mw8qzyoi1fuxe","category_id":"cjzzp7fa5000pw8qzotsdhu24","_id":"cjzzp7fbi000yw8qz8at1darp"},{"post_id":"cjzzp7f9y000nw8qz5aydsnp0","category_id":"cjzzp7fa5000pw8qzotsdhu24","_id":"cjzzp7fc50015w8qzy0jhsxpp"},{"post_id":"cjzzp7fa8000qw8qzersfvtay","category_id":"cjzzp7fbs0011w8qzct4thxnl","_id":"cjzzp7fd3001dw8qz0qew7cur"},{"post_id":"cjzzp7fas000sw8qzzb7hl2kw","category_id":"cjzzp7fbs0011w8qzct4thxnl","_id":"cjzzp7fdv001jw8qzea8k3skt"},{"post_id":"cjzzp7fcz001cw8qzbl4j9zsn","category_id":"cjzzp7fa5000pw8qzotsdhu24","_id":"cjzzp7feb001ow8qzwup2fczq"},{"post_id":"cjzzp7faz000vw8qziyfjtibt","category_id":"cjzzp7fd5001ew8qzwrvfmzx7","_id":"cjzzp7fel001qw8qz1n8n6k70"},{"post_id":"cjzzp7fdq001iw8qzrytkzt24","category_id":"cjzzp7fa5000pw8qzotsdhu24","_id":"cjzzp7fex001uw8qzskrd4bnu"},{"post_id":"cjzzp7fb8000xw8qzgjh8i69w","category_id":"cjzzp7fbs0011w8qzct4thxnl","_id":"cjzzp7ff3001ww8qzhxnc9ufa"},{"post_id":"cjzzp7fbn0010w8qzfesqt4ww","category_id":"cjzzp7fbs0011w8qzct4thxnl","_id":"cjzzp7ffh0021w8qzo3xkaxe1"},{"post_id":"cjzzp7fc60016w8qzlmt2bwt6","category_id":"cjzzp7ff7001zw8qzz7rty6dn","_id":"cjzzp7ffs0024w8qzi1abso11"},{"post_id":"cjzzp7fco001aw8qz134rsiue","category_id":"cjzzp7fd5001ew8qzwrvfmzx7","_id":"cjzzp7ffx0028w8qz5bazgm5n"},{"post_id":"cjzzp7fqs003hw8qzezgis7vl","category_id":"cjzzp7ff7001zw8qzz7rty6dn","_id":"cjzzp7frk003mw8qzh2ybay07"},{"post_id":"cjzzp7fq2003dw8qz8urxn4ov","category_id":"cjzzp7fqr003gw8qztngumtsh","_id":"cjzzp7frv003ow8qz6u4fk5r5"}],"PostTag":[{"post_id":"cjzzp7f5h0000w8qzi8x2hwyw","tag_id":"cjzzp7f710004w8qz5fpkxs8u","_id":"cjzzp7f8x000dw8qz350r62qp"},{"post_id":"cjzzp7f5h0000w8qzi8x2hwyw","tag_id":"cjzzp7f8e0008w8qz784hm9al","_id":"cjzzp7f92000fw8qzr6l2wauj"},{"post_id":"cjzzp7f6n0002w8qzcfpll5hr","tag_id":"cjzzp7f8u000cw8qz1bjhse5j","_id":"cjzzp7f9j000jw8qzju4rxs4z"},{"post_id":"cjzzp7f780005w8qz6jce6j73","tag_id":"cjzzp7f710004w8qz5fpkxs8u","_id":"cjzzp7faq000rw8qzr2q2jc0v"},{"post_id":"cjzzp7f780005w8qz6jce6j73","tag_id":"cjzzp7f8e0008w8qz784hm9al","_id":"cjzzp7fau000tw8qzmr3fl7ck"},{"post_id":"cjzzp7f7d0007w8qzi7n8rnh9","tag_id":"cjzzp7fa2000ow8qzi0n2awtz","_id":"cjzzp7fby0012w8qzyfeglrge"},{"post_id":"cjzzp7f7d0007w8qzi7n8rnh9","tag_id":"cjzzp7fax000uw8qz5vpskwvu","_id":"cjzzp7fc40014w8qzp4kxrvce"},{"post_id":"cjzzp7fc00013w8qzow8qrd9n","tag_id":"cjzzp7f710004w8qz5fpkxs8u","_id":"cjzzp7fcm0019w8qzs13zl894"},{"post_id":"cjzzp7fc00013w8qzow8qrd9n","tag_id":"cjzzp7f8e0008w8qz784hm9al","_id":"cjzzp7fcx001bw8qzp5ffb3ar"},{"post_id":"cjzzp7f8f0009w8qzdb4i3adu","tag_id":"cjzzp7fbk000zw8qz9tqg3gse","_id":"cjzzp7fdh001hw8qzbyhdwsrs"},{"post_id":"cjzzp7f8f0009w8qzdb4i3adu","tag_id":"cjzzp7fca0017w8qzw7nokap2","_id":"cjzzp7fdw001kw8qzdf2uc99j"},{"post_id":"cjzzp7fe7001nw8qzx2p8i8kp","tag_id":"cjzzp7f8u000cw8qz1bjhse5j","_id":"cjzzp7fep001sw8qzs7vl9ucy"},{"post_id":"cjzzp7f8m000aw8qzel1hw5g6","tag_id":"cjzzp7fa2000ow8qzi0n2awtz","_id":"cjzzp7fez001vw8qz1j5nkfny"},{"post_id":"cjzzp7f8m000aw8qzel1hw5g6","tag_id":"cjzzp7fax000uw8qz5vpskwvu","_id":"cjzzp7ff6001yw8qz7y11l3fd"},{"post_id":"cjzzp7feh001pw8qzvxyh9la7","tag_id":"cjzzp7f710004w8qz5fpkxs8u","_id":"cjzzp7ffe0020w8qzyns5xtwm"},{"post_id":"cjzzp7f8s000bw8qzyuomgl3q","tag_id":"cjzzp7fa2000ow8qzi0n2awtz","_id":"cjzzp7ffv0026w8qzzqwh5bqf"},{"post_id":"cjzzp7f8s000bw8qzyuomgl3q","tag_id":"cjzzp7fax000uw8qz5vpskwvu","_id":"cjzzp7ffx0027w8qzqciwcl0w"},{"post_id":"cjzzp7f8s000bw8qzyuomgl3q","tag_id":"cjzzp7ffi0022w8qzf0s209ts","_id":"cjzzp7fg2002aw8qz1idt0tg5"},{"post_id":"cjzzp7f8z000ew8qzh6h65liv","tag_id":"cjzzp7fa2000ow8qzi0n2awtz","_id":"cjzzp7fg6002cw8qzf8g4s2e8"},{"post_id":"cjzzp7f8z000ew8qzh6h65liv","tag_id":"cjzzp7fax000uw8qz5vpskwvu","_id":"cjzzp7fg8002dw8qz0x46gwgq"},{"post_id":"cjzzp7f93000gw8qztuofls8j","tag_id":"cjzzp7fg4002bw8qzr0kf6pub","_id":"cjzzp7fga002fw8qz7sdqq2xc"},{"post_id":"cjzzp7f9c000iw8qzlzadv5lc","tag_id":"cjzzp7fg9002ew8qzfxg67818","_id":"cjzzp7fgi002iw8qzlyk2invz"},{"post_id":"cjzzp7f9c000iw8qzlzadv5lc","tag_id":"cjzzp7fgc002gw8qz1a3l6mqg","_id":"cjzzp7fgl002jw8qz8j4ak9k8"},{"post_id":"cjzzp7f9m000kw8qzvq0cqofm","tag_id":"cjzzp7f8u000cw8qz1bjhse5j","_id":"cjzzp7fgq002mw8qz1wipbhwa"},{"post_id":"cjzzp7f9m000kw8qzvq0cqofm","tag_id":"cjzzp7fgf002hw8qzykc2jbuo","_id":"cjzzp7fgq002nw8qzhjf3jmv7"},{"post_id":"cjzzp7f9m000kw8qzvq0cqofm","tag_id":"cjzzp7fgm002kw8qzhs59hw0r","_id":"cjzzp7fgs002pw8qzqs6lq1g5"},{"post_id":"cjzzp7f9r000mw8qzyoi1fuxe","tag_id":"cjzzp7fgo002lw8qz2ed2nul9","_id":"cjzzp7fgv002rw8qzeffxxcq0"},{"post_id":"cjzzp7f9r000mw8qzyoi1fuxe","tag_id":"cjzzp7fgr002ow8qzasozg3aj","_id":"cjzzp7fgx002sw8qzk6ag2pkw"},{"post_id":"cjzzp7f9y000nw8qz5aydsnp0","tag_id":"cjzzp7fgo002lw8qz2ed2nul9","_id":"cjzzp7fh1002vw8qz0jvcokni"},{"post_id":"cjzzp7f9y000nw8qz5aydsnp0","tag_id":"cjzzp7fgy002tw8qzmjzduspf","_id":"cjzzp7fh2002ww8qzmfo0acgd"},{"post_id":"cjzzp7fa8000qw8qzersfvtay","tag_id":"cjzzp7fh0002uw8qzyplka7qo","_id":"cjzzp7fh5002yw8qzpyvh74ke"},{"post_id":"cjzzp7fas000sw8qzzb7hl2kw","tag_id":"cjzzp7fh0002uw8qzyplka7qo","_id":"cjzzp7fh70030w8qziql997ua"},{"post_id":"cjzzp7faz000vw8qziyfjtibt","tag_id":"cjzzp7fh5002zw8qz9bow680y","_id":"cjzzp7fh90032w8qzjzx6ijg1"},{"post_id":"cjzzp7fb8000xw8qzgjh8i69w","tag_id":"cjzzp7fh80031w8qzci7aebzp","_id":"cjzzp7fhe0034w8qz76xr6zhl"},{"post_id":"cjzzp7fbn0010w8qzfesqt4ww","tag_id":"cjzzp7fha0033w8qzctd2r0ov","_id":"cjzzp7fhh0036w8qzcqxh4vpy"},{"post_id":"cjzzp7fc60016w8qzlmt2bwt6","tag_id":"cjzzp7f8u000cw8qz1bjhse5j","_id":"cjzzp7fhk0038w8qz7slv6xa9"},{"post_id":"cjzzp7fc60016w8qzlmt2bwt6","tag_id":"cjzzp7fhf0035w8qzvkci41mx","_id":"cjzzp7fhk0039w8qz81kxwvme"},{"post_id":"cjzzp7fcz001cw8qzbl4j9zsn","tag_id":"cjzzp7fhi0037w8qz7wnnmlyb","_id":"cjzzp7fhm003bw8qz04d40gbo"},{"post_id":"cjzzp7fdq001iw8qzrytkzt24","tag_id":"cjzzp7fhl003aw8qz0728jtet","_id":"cjzzp7fho003cw8qzophq4s9c"},{"post_id":"cjzzp7fq2003dw8qz8urxn4ov","tag_id":"cjzzp7fqp003fw8qz2dvh18u6","_id":"cjzzp7frj003lw8qzhpjh2d2n"},{"post_id":"cjzzp7fqc003ew8qzm28m1ahu","tag_id":"cjzzp7fax000uw8qz5vpskwvu","_id":"cjzzp7fs5003qw8qzrpbd69dn"},{"post_id":"cjzzp7fqc003ew8qzm28m1ahu","tag_id":"cjzzp7fr9003jw8qzk74u0wqq","_id":"cjzzp7fs8003rw8qz0gwclami"},{"post_id":"cjzzp7fqs003hw8qzezgis7vl","tag_id":"cjzzp7f8u000cw8qz1bjhse5j","_id":"cjzzp7fsd003tw8qzyrt8ej7j"},{"post_id":"cjzzp7fqs003hw8qzezgis7vl","tag_id":"cjzzp7fs0003pw8qzzeo7zcli","_id":"cjzzp7fsf003uw8qzau40dsxr"},{"post_id":"cjzzp7fqx003iw8qz2l0tjg9z","tag_id":"cjzzp7fg9002ew8qzfxg67818","_id":"cjzzp7ft10040w8qzvqqs9hhp"},{"post_id":"cjzzp7fqx003iw8qz2l0tjg9z","tag_id":"cjzzp7fsa003sw8qz2e4c5xei","_id":"cjzzp7ft10041w8qz8cqx4v28"},{"post_id":"cjzzp7fqx003iw8qz2l0tjg9z","tag_id":"cjzzp7fsg003vw8qzh103n6bf","_id":"cjzzp7ft40043w8qzlcc3ptmg"},{"post_id":"cjzzp7fqx003iw8qz2l0tjg9z","tag_id":"cjzzp7fsk003ww8qz4mndoyut","_id":"cjzzp7ft50044w8qz9pkxjis4"},{"post_id":"cjzzp7fqx003iw8qz2l0tjg9z","tag_id":"cjzzp7fsr003xw8qz1pgj7hfn","_id":"cjzzp7ft60046w8qz5ns9jnk7"},{"post_id":"cjzzp7fqx003iw8qz2l0tjg9z","tag_id":"cjzzp7fsw003yw8qz5pev9frd","_id":"cjzzp7ft70047w8qzjrscxnja"},{"post_id":"cjzzp7fqx003iw8qz2l0tjg9z","tag_id":"cjzzp7fg4002bw8qzr0kf6pub","_id":"cjzzp7ft80049w8qzxyoafb4v"},{"post_id":"cjzzp7frb003kw8qz5er7umvg","tag_id":"cjzzp7fsx003zw8qz973wq1pk","_id":"cjzzp7fth004bw8qz8n04nzty"},{"post_id":"cjzzp7frb003kw8qz5er7umvg","tag_id":"cjzzp7ft20042w8qz7wf1w0v6","_id":"cjzzp7ftj004cw8qz8pq28rnr"},{"post_id":"cjzzp7frb003kw8qz5er7umvg","tag_id":"cjzzp7ft50045w8qzybiavwx2","_id":"cjzzp7fto004ew8qziwevmpkd"},{"post_id":"cjzzp7frb003kw8qz5er7umvg","tag_id":"cjzzp7ft80048w8qzkkw07j55","_id":"cjzzp7ftp004fw8qzguz2xrtp"},{"post_id":"cjzzp7frn003nw8qz4l0hibmd","tag_id":"cjzzp7ftb004aw8qz9ny7xf3q","_id":"cjzzp7fu1004kw8qzsqo7198c"},{"post_id":"cjzzp7frn003nw8qz4l0hibmd","tag_id":"cjzzp7fgm002kw8qzhs59hw0r","_id":"cjzzp7fu3004lw8qzptbnrvgo"},{"post_id":"cjzzp7frn003nw8qz4l0hibmd","tag_id":"cjzzp7ftj004dw8qzn66dfglq","_id":"cjzzp7fu3004mw8qz4v5520yk"},{"post_id":"cjzzp7frn003nw8qz4l0hibmd","tag_id":"cjzzp7ftr004gw8qziuoonw8z","_id":"cjzzp7fu4004nw8qzrf4pl0rj"},{"post_id":"cjzzp7frn003nw8qz4l0hibmd","tag_id":"cjzzp7ftt004hw8qzyzaecw8b","_id":"cjzzp7fu5004ow8qzaqh1ruyh"},{"post_id":"cjzzp7frn003nw8qz4l0hibmd","tag_id":"cjzzp7ftv004iw8qzch4urs5b","_id":"cjzzp7fu5004pw8qz77iufteo"},{"post_id":"cjzzp7frn003nw8qz4l0hibmd","tag_id":"cjzzp7ftw004jw8qzw30vxgx5","_id":"cjzzp7fu6004qw8qztuhjt5lz"},{"post_id":"cjzzp7gqh004rw8qz6p8odi5d","tag_id":"cjzzp7fg9002ew8qzfxg67818","_id":"cjzzp7gqs004tw8qz5ex573ph"},{"post_id":"cjzzp7gqh004rw8qz6p8odi5d","tag_id":"cjzzp7gqn004sw8qzorj72ign","_id":"cjzzp7gqs004uw8qz3108ox3m"}],"Tag":[{"name":"html5","_id":"cjzzp7f710004w8qz5fpkxs8u"},{"name":"css3","_id":"cjzzp7f8e0008w8qz784hm9al"},{"name":"js","_id":"cjzzp7f8u000cw8qz1bjhse5j"},{"name":"编程","_id":"cjzzp7fa2000ow8qzi0n2awtz"},{"name":"javacript","_id":"cjzzp7fax000uw8qz5vpskwvu"},{"name":"github","_id":"cjzzp7fbk000zw8qz9tqg3gse"},{"name":"基础","_id":"cjzzp7fca0017w8qzw7nokap2"},{"name":"BOM","_id":"cjzzp7ffi0022w8qzf0s209ts"},{"name":"mongoDB","_id":"cjzzp7fg4002bw8qzr0kf6pub"},{"name":"nodejs","_id":"cjzzp7fg9002ew8qzfxg67818"},{"name":"bug","_id":"cjzzp7fgc002gw8qz1a3l6mqg"},{"name":"css","_id":"cjzzp7fgf002hw8qzykc2jbuo"},{"name":"animation","_id":"cjzzp7fgm002kw8qzhs59hw0r"},{"name":"webpack","_id":"cjzzp7fgo002lw8qz2ed2nul9"},{"name":"sourceMap","_id":"cjzzp7fgr002ow8qzasozg3aj"},{"name":"eslint","_id":"cjzzp7fgy002tw8qzmjzduspf"},{"name":"vue","_id":"cjzzp7fh0002uw8qzyplka7qo"},{"name":"总结","_id":"cjzzp7fh5002zw8qz9bow680y"},{"name":"测试","_id":"cjzzp7fh80031w8qzci7aebzp"},{"name":"规范","_id":"cjzzp7fha0033w8qzctd2r0ov"},{"name":"继承","_id":"cjzzp7fhf0035w8qzvkci41mx"},{"name":"git","_id":"cjzzp7fhi0037w8qz7wnnmlyb"},{"name":"fabric","_id":"cjzzp7fhl003aw8qz0728jtet"},{"name":"MVVM","_id":"cjzzp7fqp003fw8qz2dvh18u6"},{"name":"DOM","_id":"cjzzp7fr9003jw8qzk74u0wqq"},{"name":"算法","_id":"cjzzp7fs0003pw8qzzeo7zcli"},{"name":"express","_id":"cjzzp7fsa003sw8qz2e4c5xei"},{"name":"grunt","_id":"cjzzp7fsg003vw8qzh103n6bf"},{"name":"router","_id":"cjzzp7fsk003ww8qz4mndoyut"},{"name":"MVC","_id":"cjzzp7fsr003xw8qz1pgj7hfn"},{"name":"jade","_id":"cjzzp7fsw003yw8qz5pev9frd"},{"name":"ApplicationCache","_id":"cjzzp7fsx003zw8qz973wq1pk"},{"name":"localStorage","_id":"cjzzp7ft20042w8qz7wf1w0v6"},{"name":"webSQL","_id":"cjzzp7ft50045w8qzybiavwx2"},{"name":"闭包","_id":"cjzzp7ft80048w8qzkkw07j55"},{"name":"layout","_id":"cjzzp7ftb004aw8qz9ny7xf3q"},{"name":"clear","_id":"cjzzp7ftj004dw8qzn66dfglq"},{"name":"audio","_id":"cjzzp7ftr004gw8qziuoonw8z"},{"name":"进度条","_id":"cjzzp7ftt004hw8qzyzaecw8b"},{"name":"播放按钮","_id":"cjzzp7ftv004iw8qzch4urs5b"},{"name":"QQ音乐API","_id":"cjzzp7ftw004jw8qzw30vxgx5"},{"name":"微信公众号","_id":"cjzzp7gqn004sw8qzorj72ign"}]}}